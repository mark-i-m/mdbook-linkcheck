var N = null;var searchIndex = {};
searchIndex["adler32"]={"doc":"A minimal implementation of Adler32 for Rust.","items":[[3,"RollingAdler32","adler32","A rolling version of the Adler32 hash, which can 'forget'…",N,N],[5,"adler32","","Consume a Read object and returns the Adler32 hash.",N,[[["r"]],["result",["u32"]]]],[11,"new","","Creates an empty Adler32 context (with hash 1).",0,[[],["rollingadler32"]]],[11,"from_value","","Creates an Adler32 context with the given initial value.",0,[[["u32"]],["rollingadler32"]]],[11,"from_buffer","","Convenience function initializing a context from the hash…",0,N],[11,"hash","","Returns the current hash.",0,[[["self"]],["u32"]]],[11,"remove","","Removes the given `byte` that was fed to the algorithm…",0,[[["self"],["usize"],["u8"]]]],[11,"update","","Feeds a new `byte` to the algorithm to update the hash.",0,[[["self"],["u8"]]]],[11,"update_buffer","","Feeds a vector of bytes to the algorithm to update the hash.",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[3,"RollingAdler32"]]};
searchIndex["aho_corasick"]={"doc":"An implementation of the Aho-Corasick string search…","items":[[3,"Match","aho_corasick","Records a match in the search text.",N,N],[12,"pati","","The pattern index.",0,N],[12,"start","","The starting byte offset of the match in the search text.",0,N],[12,"end","","The ending byte offset of the match in the search text.",0,N],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",N,N],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",N,N],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",N,N],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",N,N],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",N,N],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",N,N],[3,"Dense","","State transitions that can be stored either sparsely or…",N,N],[3,"Sparse","","State transitions that are always sparse.",N,N],[11,"new","","Build a new expanded Aho-Corasick automaton from an…",1,[[["acautomaton"]],["fullacautomaton"]]],[6,"StateIdx","","The integer type used for the state index.",N,N],[8,"Automaton","","An abstraction over automatons and their corresponding…",N,N],[10,"next_state","","Return the next state given the current state and next…",2,[[["self"],["stateidx"],["u8"]],["stateidx"]]],[10,"has_match","","Return true if and only if the given state and current…",2,[[["self"],["stateidx"],["usize"]],["bool"]]],[10,"get_match","","Build a match given the current state, pattern index and…",2,[[["self"],["stateidx"],["usize"],["usize"]],["match"]]],[10,"start_bytes","","Return the set of bytes that have transitions in the root…",2,N],[10,"patterns","","Returns all of the patterns matched by this automaton.",2,N],[10,"pattern","","Returns the pattern indexed at `i`.",2,[[["self"],["usize"]],["p"]]],[11,"len","","Return the number of patterns in the automaton.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the automaton has no patterns.",2,[[["self"]],["bool"]]],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",2,[[["self"],["q"]],["matches"]]],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",2,[[["self"],["q"]],["matchesoverlapping"]]],[11,"stream_find","","Returns an iterator of non-overlapping matches in the…",2,[[["self"],["r"]],["streammatches"]]],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given…",2,[[["self"],["r"]],["streammatchesoverlapping"]]],[8,"Transitions","","An abstraction over state transition strategies.",N,N],[10,"new","","Return a new state at the given depth.",3,[[["u32"]],["self"]]],[10,"goto","","Return the next state index given the next character.",3,[[["self"],["u8"]],["stateidx"]]],[10,"set_goto","","Set the next state index for the character given.",3,[[["self"],["u8"],["stateidx"]]]],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of…",3,[[["self"]],["usize"]]],[11,"for_each_transition","","Iterates over each state",3,[[["self"],["f"]]]],[11,"for_each_ok_transition","","Iterates over each non-fail state",3,[[["self"],["f"]]]],[11,"new","","Create a new automaton from an iterator of patterns.",4,[[["i"]],["acautomaton",["dense"]]]],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",4,[[["i"]],["acautomaton"]]],[11,"into_full","","Build out the entire automaton into a single matrix.",4,[[["self"]],["fullacautomaton"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"next_state","","",1,[[["self"],["stateidx"],["u8"]],["stateidx"]]],[11,"get_match","","",1,[[["self"],["stateidx"],["usize"],["usize"]],["match"]]],[11,"has_match","","",1,[[["self"],["stateidx"],["usize"]],["bool"]]],[11,"start_bytes","","",1,N],[11,"patterns","","",1,N],[11,"pattern","","",1,[[["self"],["usize"]],["p"]]],[11,"next_state","","",4,[[["self"],["stateidx"],["u8"]],["stateidx"]]],[11,"get_match","","",4,[[["self"],["stateidx"],["usize"],["usize"]],["match"]]],[11,"has_match","","",4,[[["self"],["stateidx"],["usize"]],["bool"]]],[11,"start_bytes","","",4,N],[11,"patterns","","",4,N],[11,"pattern","","",4,[[["self"],["usize"]],["p"]]],[11,"new","","",9,[[["u32"]],["dense"]]],[11,"goto","","",9,[[["self"],["u8"]],["stateidx"]]],[11,"set_goto","","",9,[[["self"],["u8"],["stateidx"]]]],[11,"heap_bytes","","",9,[[["self"]],["usize"]]],[11,"for_each_transition","","",9,[[["self"],["f"]]]],[11,"for_each_ok_transition","","",9,[[["self"],["f"]]]],[11,"new","","",10,[[["u32"]],["sparse"]]],[11,"goto","","",10,[[["self"],["u8"]],["stateidx"]]],[11,"set_goto","","",10,[[["self"],["u8"],["stateidx"]]]],[11,"heap_bytes","","",10,[[["self"]],["usize"]]],[11,"next","","",5,[[["self"]],["option",["match"]]]],[11,"next","","",7,[[["self"]],["option",["result"]]]],[11,"next","","",6,[[["self"]],["option",["match"]]]],[11,"next","","",8,[[["self"]],["option",["result"]]]],[11,"eq","","",0,[[["self"],["match"]],["bool"]]],[11,"ne","","",0,[[["self"],["match"]],["bool"]]],[11,"clone","","",0,[[["self"]],["match"]]],[11,"clone","","",1,[[["self"]],["fullacautomaton"]]],[11,"clone","","",4,[[["self"]],["acautomaton"]]],[11,"clone","","",9,[[["self"]],["dense"]]],[11,"clone","","",10,[[["self"]],["sparse"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"from_iter","","Create an automaton from an iterator of strings.",4,[[["t"]],["acautomaton"]]],[11,"len","","Return the number of patterns in the automaton.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the automaton has no patterns.",2,[[["self"]],["bool"]]],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",2,[[["self"],["q"]],["matches"]]],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",2,[[["self"],["q"]],["matchesoverlapping"]]],[11,"stream_find","","Returns an iterator of non-overlapping matches in the…",2,[[["self"],["r"]],["streammatches"]]],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given…",2,[[["self"],["r"]],["streammatchesoverlapping"]]]],"paths":[[3,"Match"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Matches"],[3,"MatchesOverlapping"],[3,"StreamMatches"],[3,"StreamMatchesOverlapping"],[3,"Dense"],[3,"Sparse"]]};
searchIndex["ansi_term"]={"doc":"This is a library for controlling colours and formatting,…","items":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",N,N],[3,"Infix","","Like `ANSIString`, but only displays the difference…",N,N],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",N,N],[3,"Style","","A style is a collection of properties that can format a…",N,N],[12,"foreground","","The style's foreground colour, if it has one.",0,N],[12,"background","","The style's background colour, if it has one.",0,N],[12,"is_bold","","Whether this style is bold.",0,N],[12,"is_dimmed","","Whether this style is dimmed.",0,N],[12,"is_italic","","Whether this style is italic.",0,N],[12,"is_underline","","Whether this style is underlined.",0,N],[12,"is_blink","","Whether this style is blinking.",0,N],[12,"is_reverse","","Whether this style has reverse colours.",0,N],[12,"is_hidden","","Whether this style is hidden.",0,N],[12,"is_strikethrough","","Whether this style is struckthrough.",0,N],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and…",N,N],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order…",N,N],[12,"0","","",1,N],[4,"Colour","","A colour is one specific type of ANSI escape code, and can…",N,N],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,N],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,N],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,N],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,N],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,N],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,N],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,N],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,N],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,N],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,N],[4,"Color","","A colour is one specific type of ANSI escape code, and can…",N,N],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,N],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,N],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,N],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,N],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,N],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,N],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,N],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,N],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,N],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,N],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",N,N],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",N,N],[11,"prefix","","The prefix for this style.",0,[[["self"]],["prefix"]]],[11,"infix","","The infix between this style and another.",0,[[["self"],["style"]],["infix"]]],[11,"suffix","","The suffix for this style.",0,[[["self"]],["suffix"]]],[11,"prefix","","The prefix for this colour.",2,[[["self"]],["prefix"]]],[11,"infix","","The infix between this colour and another.",2,[[["self"],["colour"]],["infix"]]],[11,"suffix","","The suffix for this colour.",2,[[["self"]],["suffix"]]],[11,"new","","Creates a new Style with no differences.",0,[[],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",0,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,[[["self"],["colour"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["self"],["colour"]],["style"]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can…",0,[[["self"]],["bool"]]],[11,"normal","","Return a `Style` with the foreground colour set to this…",2,[[["self"]],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",2,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",2,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",2,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",2,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",2,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",2,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",2,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",2,[[["self"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",2,[[["self"],["colour"]],["style"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",0,[[["self"],["i"]],["ansigenericstring"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",2,[[["self"],["i"]],["ansigenericstring"]]],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to…",N,N],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of…",N,N],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be…",N,N],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to…",N,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["style"]],["bool"]]],[11,"ne","","",0,[[["self"],["style"]],["bool"]]],[11,"eq","","",2,[[["self"],["colour"]],["bool"]]],[11,"ne","","",2,[[["self"],["colour"]],["bool"]]],[11,"eq","","",6,[[["self"],["ansigenericstring"]],["bool"]]],[11,"ne","","",6,[[["self"],["ansigenericstring"]],["bool"]]],[11,"default","","Returns a style with no properties set. Formatting text…",0,[[],["style"]]],[11,"clone","","",3,[[["self"]],["prefix"]]],[11,"clone","","",4,[[["self"]],["infix"]]],[11,"clone","","",5,[[["self"]],["suffix"]]],[11,"clone","","",0,[[["self"]],["style"]]],[11,"clone","","",2,[[["self"]],["colour"]]],[11,"clone","","",6,[[["self"]],["ansigenericstring"]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour"]],["style"]]],[11,"from","","",6,[[["i"]],["ansigenericstring"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"deref","","",6,[[["self"]],["s"]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[["self"],["w"]],["result"]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[["self"],["w"]],["result"]]]],"paths":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[3,"ANSIGenericString"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]};
searchIndex["arrayvec"]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","items":[[3,"ArrayString","arrayvec","A string with a fixed capacity.",N,N],[3,"CapacityError","","Error value indicating insufficient capacity",N,N],[3,"ArrayVec","","A vector with a fixed capacity.",N,N],[3,"IntoIter","","By-value iterator for `ArrayVec`.",N,N],[3,"Drain","","A draining iterator for `ArrayVec`.",N,N],[11,"new","","Create a new empty `ArrayString`.",0,[[],["arraystring"]]],[11,"from","","Create a new `ArrayString` from a `str`.",0,[[["str"]],["result",["capacityerror"]]]],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",0,[[["a"]],["result",["utf8error"]]]],[11,"capacity","","Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push","","Adds the given char to the end of the string.",0,[[["self"],["char"]]]],[11,"try_push","","Adds the given char to the end of the string.",0,[[["self"],["char"]],["result",["capacityerror"]]]],[11,"push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]]]],[11,"try_push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]],["result",["capacityerror"]]]],[11,"pop","","Removes the last character from the string and returns it.",0,[[["self"]],["option",["char"]]]],[11,"truncate","","Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove","","Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],["usize"]],["char"]]],[11,"clear","","Make the string empty.",0,[[["self"]]]],[11,"set_len","","Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str","","Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new","","Create a new `CapacityError` from `element`.",1,[[["t"]],["capacityerror"]]],[11,"element","","Extract the overflowing element",1,[[["self"]],["t"]]],[11,"simplify","","Convert into a `CapacityError` that does not carry an…",1,[[["self"]],["capacityerror"]]],[8,"Array","","Trait for fixed size arrays.",N,N],[16,"Item","","The array’s element type",2,N],[8,"RangeArgument","","`RangeArgument` is implemented by Rust's built-in range…",N,N],[11,"start","","Start index (inclusive)",3,[[["self"]],["option",["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],["option",["usize"]]]],[11,"new","","Create a new empty `ArrayVec`.",4,[[],["arrayvec"]]],[11,"len","","Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"capacity","","Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push","","Push `element` to the end of the vector.",4,N],[11,"try_push","","Push `element` to the end of the vector.",4,N],[11,"push_unchecked","","Push `element` to the end of the vector without checking…",4,N],[11,"insert","","Insert `element` at position `index`.",4,N],[11,"try_insert","","Insert `element` at position `index`.",4,N],[11,"pop","","Remove the last element in the vector and return it.",4,[[["self"]],["option"]]],[11,"swap_remove","","Remove the element at `index` and swap the last element…",4,N],[11,"swap_pop","","Remove the element at `index` and swap the last element…",4,[[["self"],["usize"]],["option"]]],[11,"remove","","Remove the element at `index` and shift down the following…",4,N],[11,"pop_at","","Remove the element at `index` and shift down the following…",4,[[["self"],["usize"]],["option"]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and…",4,[[["self"],["usize"]]]],[11,"clear","","Remove all elements in the vector.",4,[[["self"]]]],[11,"retain","","Retains only the elements specified by the predicate.",4,[[["self"],["f"]]]],[11,"set_len","","Set the vector’s length without dropping or moving out…",4,[[["self"],["usize"]]]],[11,"drain","","Create a draining iterator that removes the specified…",4,[[["self"],["r"]],["drain"]]],[11,"into_inner","","Return the inner fixed size array, if it is full to its…",4,[[["self"]],["result"]]],[11,"dispose","","Dispose of `self` without the overwriting that is needed…",4,[[["self"]]]],[11,"as_slice","","Return a slice containing all elements of the vector.",4,N],[11,"as_mut_slice","","Return a mutable slice containing all elements of the…",4,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"eq","","",4,[[["self"],["self"]],["bool"]]],[11,"eq","","",4,N],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["capacityerror"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["arrayvec"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["self"]],["bool"]]],[11,"le","","",0,[[["self"],["self"]],["bool"]]],[11,"gt","","",0,[[["self"],["self"]],["bool"]]],[11,"ge","","",0,[[["self"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["str"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["str"]],["bool"]]],[11,"le","","",0,[[["self"],["str"]],["bool"]]],[11,"gt","","",0,[[["self"],["str"]],["bool"]]],[11,"ge","","",0,[[["self"],["str"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["capacityerror"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"le","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"gt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ge","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["arrayvec"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["self"]],["bool"]]],[11,"le","","",4,[[["self"],["self"]],["bool"]]],[11,"ge","","",4,[[["self"],["self"]],["bool"]]],[11,"gt","","",4,[[["self"],["self"]],["bool"]]],[11,"write_char","","",0,[[["self"],["char"]],["result"]]],[11,"write_str","","",0,[[["self"],["str"]],["result"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"from","","",4,[[["a"]],["self"]]],[11,"deref","","",0,[[["self"]],["str"]]],[11,"deref","","",4,N],[11,"deref_mut","","",0,[[["self"]],["str"]]],[11,"deref_mut","","",4,N],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"into_iter","","",4,[[["self"]],["intoiter"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"from_iter","","",4,[[["t"]],["self"]]],[11,"extend","","",4,[[["self"],["t"]]]],[11,"clone","","",0,[[["self"]],["arraystring"]]],[11,"clone_from","","",0,[[["self"],["self"]]]],[11,"clone","","",1,[[["self"]],["capacityerror"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone_from","","",4,[[["self"],["self"]]]],[11,"default","","Return an empty `ArrayString`",0,[[],["arraystring"]]],[11,"default","","Return an empty array",4,[[],["arrayvec"]]],[11,"as_mut","","",4,N],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",4,N],[11,"borrow","","",0,[[["self"]],["str"]]],[11,"borrow","","",4,N],[11,"borrow_mut","","",4,N],[11,"start","","Start index (inclusive)",3,[[["self"]],["option",["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],["option",["usize"]]]]],"paths":[[3,"ArrayString"],[3,"CapacityError"],[8,"Array"],[8,"RangeArgument"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["atty"]={"doc":"atty is a simple utility that answers one question > is…","items":[[4,"Stream","atty","possible stream sources",N,N],[13,"Stdout","","",0,N],[13,"Stderr","","",0,N],[13,"Stdin","","",0,N],[5,"is","","returns true if this is a tty",N,[[["stream"]],["bool"]]],[5,"isnt","","returns true if this is not a tty",N,[[["stream"]],["bool"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["stream"]]]],"paths":[[4,"Stream"]]};
searchIndex["backtrace"]={"doc":"A library for acquiring a backtrace at runtime","items":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to…",N,N],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",N,N],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic…",N,N],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",N,N],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",N,N],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",N,N],[5,"trace","","Inspects the current call-stack, passing all active frames…",N,[[["f"]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the…",N,N],[11,"ip","","Returns the current instruction pointer of this frame.",0,N],[11,"symbol_address","","Returns the starting symbol address of the frame of this…",0,N],[11,"name","","Returns the name of this function.",1,[[["self"]],["option",["symbolname"]]]],[11,"addr","","Returns the starting address of this function.",1,[[["self"]],["option"]]],[11,"filename","","Returns the file name where this function was defined.",1,[[["self"]],["option",["path"]]]],[11,"lineno","","Returns the line number for where this symbol is currently…",1,[[["self"]],["option",["u32"]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",2,N],[11,"as_str","","Returns the raw symbol name as a `str` if the symbols is…",2,[[["self"]],["option",["str"]]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",2,N],[11,"new","","Captures a backtrace at the callsite of this function,…",3,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",3,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",3,N],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",3,[[["self"]]]],[11,"ip","","Same as `Frame::ip`",4,N],[11,"symbol_address","","Same as `Frame::symbol_address`",4,N],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",4,N],[11,"name","","Same as `Symbol::name`",5,[[["self"]],["option",["symbolname"]]]],[11,"addr","","Same as `Symbol::addr`",5,[[["self"]],["option"]]],[11,"filename","","Same as `Symbol::filename`",5,[[["self"]],["option",["path"]]]],[11,"lineno","","Same as `Symbol::lineno`",5,[[["self"]],["option",["u32"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"default","","",3,[[],["backtrace"]]],[11,"clone","","",3,[[["self"]],["backtrace"]]],[11,"clone","","",4,[[["self"]],["backtraceframe"]]],[11,"clone","","",5,[[["self"]],["backtracesymbol"]]],[11,"from","","",3,[[["vec",["backtraceframe"]]],["self"]]],[11,"into","","",3,[[["self"]],["vec",["backtraceframe"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]};
searchIndex["backtrace_sys"]={"doc":"","items":[[4,"backtrace_state","backtrace_sys","",N,N],[5,"backtrace_create_state","","",N,N],[5,"backtrace_syminfo","","",N,N],[5,"backtrace_pcinfo","","",N,N],[6,"backtrace_syminfo_callback","","",N,N],[6,"backtrace_full_callback","","",N,N],[6,"backtrace_error_callback","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[4,"backtrace_state"]]};
searchIndex["base64"]={"doc":"Configs","items":[[3,"Config","base64","Contains configuration parameters for base64 encoding",N,N],[4,"DecodeError","","Errors that can occur while decoding.",N,N],[13,"InvalidByte","","An invalid byte was found in the input. The offset and…",0,N],[13,"InvalidLength","","The length of the input is invalid.",0,N],[4,"CharacterSet","","Available encoding character sets",N,N],[13,"Standard","","The standard character set (uses `+` and `/`)",1,N],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,N],[13,"Crypt","","The `crypt(3)` character set (uses…",1,N],[4,"LineEnding","","Line ending used in optional line wrapping.",N,N],[13,"LF","","Unix-style \\n",2,N],[13,"CRLF","","Windows-style \\r\\n",2,N],[4,"LineWrap","","Line wrap configuration.",N,N],[13,"NoWrap","","Don't wrap.",3,N],[13,"Wrap","","Wrap lines with the specified length and line ending. The…",3,N],[5,"encode","","Encode arbitrary octets as base64. Returns a String.…",N,[[["t"]],["string"]]],[5,"encode_config","","Encode arbitrary octets as base64. Returns a String.",N,[[["t"],["config"]],["string"]]],[5,"encode_config_buf","","Encode arbitrary octets as base64. Writes into the…",N,[[["t"],["config"],["string"]]]],[5,"encode_config_slice","","Encode arbitrary octets as base64. Writes into the…",N,N],[5,"decode","","Decode from string reference as octets. Returns a Result…",N,[[["t"]],["result",["vec","decodeerror"]]]],[5,"decode_config","","Decode from string reference as octets. Returns a Result…",N,[[["t"],["config"]],["result",["vec","decodeerror"]]]],[5,"decode_config_buf","","Decode from string reference as octets. Writes into the…",N,[[["t"],["config"],["vec"]],["result",["decodeerror"]]]],[5,"decode_config_slice","","Decode the input into the provided output slice.",N,N],[0,"display","","Enables base64'd output anywhere you might use a `Display`…",N,N],[3,"Base64Display","base64::display","A convenience wrapper for base64'ing bytes into a format…",N,N],[4,"DisplayError","","Errors that can occur initializing a Base64Display.",N,N],[13,"InvalidLineLength","","If wrapping is configured, the line length must be a…",4,N],[11,"with_config","","Create a `Base64Display` with the provided config.",5,N],[11,"standard","","Convenience method for creating a `Base64Display` with the…",5,N],[11,"url_safe","","Convenience method for creating a `Base64Display` with the…",5,N],[17,"STANDARD","base64","Standard character set with padding.",N,N],[17,"STANDARD_NO_PAD","","Standard character set without padding.",N,N],[17,"MIME","","As per standards for MIME encoded messages",N,N],[17,"URL_SAFE","","URL-safe character set with padding",N,N],[17,"URL_SAFE_NO_PAD","","URL-safe character set without padding",N,N],[17,"CRYPT","","As per `crypt(3)` requirements",N,N],[11,"new","","Create a new `Config`.",6,[[["characterset"],["bool"],["bool"],["linewrap"]],["config"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","base64::display","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"eq","","",4,[[["self"],["displayerror"]],["bool"]]],[11,"eq","base64","",0,[[["self"],["decodeerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["decodeerror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["decodeerror"]]],[11,"clone","","",1,[[["self"]],["characterset"]]],[11,"clone","","",2,[[["self"]],["lineending"]]],[11,"clone","","",3,[[["self"]],["linewrap"]]],[11,"clone","","",6,[[["self"]],["config"]]],[11,"fmt","base64::display","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","base64","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","base64::display","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","base64","",0,[[["self"],["formatter"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]]],"paths":[[4,"DecodeError"],[4,"CharacterSet"],[4,"LineEnding"],[4,"LineWrap"],[4,"DisplayError"],[3,"Base64Display"],[3,"Config"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of…","items":[[0,"example_generated","bitflags","This module shows an example of code generated by the…",N,N],[3,"Flags","bitflags::example_generated","This is the same `Flags` struct defined in the crate level…",N,N],[17,"FLAG_A","","",N,N],[17,"FLAG_B","","",N,N],[17,"FLAG_C","","",N,N],[17,"FLAG_ABC","","",N,N],[11,"empty","","Returns an empty set of flags.",0,[[],["flags"]]],[11,"all","","Returns the set containing all flags.",0,[[],["flags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",0,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",0,[[["u32"]],["option",["flags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",0,[[["u32"]],["flags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",0,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",0,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",0,[[["self"],["flags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",0,[[["self"],["flags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",0,[[["self"],["flags"]]]],[11,"remove","","Removes the specified flags in-place.",0,[[["self"],["flags"]]]],[11,"toggle","","Toggles the specified flags in-place.",0,[[["self"],["flags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",0,[[["self"],["flags"],["bool"]]]],[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N],[11,"try_from","bitflags::example_generated","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"sub","","Returns the set difference of the two sets of flags.",0,[[["self"],["flags"]],["flags"]]],[11,"eq","","",0,[[["self"],["flags"]],["bool"]]],[11,"ne","","",0,[[["self"],["flags"]],["bool"]]],[11,"cmp","","",0,[[["self"],["flags"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["flags"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["flags"]],["bool"]]],[11,"le","","",0,[[["self"],["flags"]],["bool"]]],[11,"gt","","",0,[[["self"],["flags"]],["bool"]]],[11,"ge","","",0,[[["self"],["flags"]],["bool"]]],[11,"hash","","",0,N],[11,"sub_assign","","Disables all flags enabled in the set.",0,[[["self"],["flags"]]]],[11,"not","","Returns the complement of this set of flags.",0,[[["self"]],["flags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",0,[[["self"],["flags"]],["flags"]]],[11,"bitor","","Returns the union of the two sets of flags.",0,[[["self"],["flags"]],["flags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",0,[[["self"],["flags"]],["flags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",0,[[["self"],["flags"]]]],[11,"bitor_assign","","Adds the set of flags.",0,[[["self"],["flags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",0,[[["self"],["flags"]]]],[11,"from_iter","","",0,[[["t"]],["flags"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["flags"]]]],"paths":[[3,"Flags"]]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and…","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[6,"BE","","A type alias for [`BigEndian`].",N,N],[6,"LE","","A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian","","Defines network byte order serialization.",N,N],[6,"NativeEndian","","Defines system native-endian serialization.",N,N],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For…",N,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For…",N,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,N],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,N],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,N],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,N],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,N],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,N],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,N],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,N],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,N],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,N],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,N],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,N],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,N],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point…",2,N],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,N],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,N],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,N],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,N],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,N],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,N],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,N],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,N],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,N],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,N],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,N],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,N],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,N],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,N],[11,"read_u32","","",3,N],[11,"read_u64","","",3,N],[11,"read_uint","","",3,N],[11,"write_u16","","",3,N],[11,"write_u32","","",3,N],[11,"write_u64","","",3,N],[11,"write_uint","","",3,N],[11,"read_u16_into","","",3,N],[11,"read_u32_into","","",3,N],[11,"read_u64_into","","",3,N],[11,"write_u16_into","","",3,N],[11,"write_u32_into","","",3,N],[11,"write_u64_into","","",3,N],[11,"from_slice_u16","","",3,N],[11,"from_slice_u32","","",3,N],[11,"from_slice_u64","","",3,N],[11,"from_slice_f32","","",3,N],[11,"from_slice_f64","","",3,N],[11,"read_u16","","",4,N],[11,"read_u32","","",4,N],[11,"read_u64","","",4,N],[11,"read_uint","","",4,N],[11,"write_u16","","",4,N],[11,"write_u32","","",4,N],[11,"write_u64","","",4,N],[11,"write_uint","","",4,N],[11,"read_u16_into","","",4,N],[11,"read_u32_into","","",4,N],[11,"read_u64_into","","",4,N],[11,"write_u16_into","","",4,N],[11,"write_u32_into","","",4,N],[11,"write_u64_into","","",4,N],[11,"from_slice_u16","","",4,N],[11,"from_slice_u32","","",4,N],[11,"from_slice_u64","","",4,N],[11,"from_slice_f32","","",4,N],[11,"from_slice_f64","","",4,N],[11,"eq","","",3,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"cmp","","",3,[[["self"],["bigendian"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"partial_cmp","","",3,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["bytes"]={"doc":"Provides abstractions for working with bytes.","items":[[8,"ByteOrder","bytes","`ByteOrder` describes types that can serialize integers as…",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",0,N],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",0,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",0,N],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",0,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",0,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",0,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",0,N],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",0,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",0,N],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",0,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",0,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",0,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",0,N],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",0,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",0,N],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",0,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",0,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",0,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",0,N],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",0,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",0,N],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",0,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",0,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",0,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",0,N],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",0,N],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",0,N],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",0,N],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",0,N],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",0,N],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",0,N],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point…",0,N],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",0,N],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",0,N],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",0,N],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",0,N],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",0,N],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",0,N],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",0,N],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",0,N],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",0,N],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",0,N],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",0,N],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",0,N],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",0,N],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",0,N],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",0,N],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",0,N],[4,"BigEndian","","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[3,"Bytes","","A reference counted contiguous slice of memory.",N,N],[3,"BytesMut","","A unique reference to a contiguous slice of memory.",N,N],[0,"buf","","Utilities for working with buffers.",N,N],[3,"Chain","bytes::buf","A `Chain` sequences two buffers.",N,N],[3,"Iter","","Iterator over the bytes contained by the buffer.",N,N],[3,"Reader","","A `Buf` adapter which implements `io::Read` for the inner…",N,N],[3,"Take","","A `Buf` adapter which limits the bytes read from an…",N,N],[3,"Writer","","A `BufMut` adapter which implements `io::Write` for the…",N,N],[11,"new","","Creates a new `Chain` sequencing the provided values.",1,[[["t"],["u"]],["chain"]]],[11,"first_ref","","Gets a reference to the first underlying `Buf`.",1,[[["self"]],["t"]]],[11,"first_mut","","Gets a mutable reference to the first underlying `Buf`.",1,[[["self"]],["t"]]],[11,"last_ref","","Gets a reference to the last underlying `Buf`.",1,[[["self"]],["u"]]],[11,"last_mut","","Gets a mutable reference to the last underlying `Buf`.",1,[[["self"]],["u"]]],[11,"into_inner","","Consumes this `Chain`, returning the underlying values.",1,N],[11,"into_inner","","Consumes this `Iter`, returning the underlying value.",2,[[["self"]],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",2,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",2,[[["self"]],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",3,[[["self"]],["b"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",3,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Reader`, returning the underlying value.",3,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Take`, returning the underlying value.",4,[[["self"]],["t"]]],[11,"get_ref","","Gets a reference to the underlying `Buf`.",4,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying `Buf`.",4,[[["self"]],["t"]]],[11,"limit","","Returns the maximum number of bytes that can be read.",4,[[["self"]],["usize"]]],[11,"set_limit","","Sets the maximum number of bytes that can be read.",4,[[["self"],["usize"]]]],[11,"get_ref","","Gets a reference to the underlying `BufMut`.",5,[[["self"]],["b"]]],[11,"get_mut","","Gets a mutable reference to the underlying `BufMut`.",5,[[["self"]],["b"]]],[11,"into_inner","","Consumes this `Writer`, returning the underlying value.",5,[[["self"]],["b"]]],[8,"Buf","","Read bytes from a buffer.",N,N],[10,"remaining","","Returns the number of bytes between the current position…",6,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",6,N],[11,"bytes_vec","","Fills `dst` with potentially multiple slices starting at…",6,N],[10,"advance","","Advance the internal cursor of the Buf",6,[[["self"],["usize"]]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",6,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",6,N],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",6,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",6,[[["self"]],["i8"]]],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian…",6,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",6,[[["self"]],["u16"]]],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian…",6,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",6,[[["self"]],["i16"]]],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian…",6,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",6,[[["self"]],["i32"]]],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian…",6,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",6,[[["self"]],["u64"]]],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian…",6,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",6,[[["self"]],["i64"]]],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",6,[[["self"],["usize"]],["u64"]]],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"collect","","Transforms a `Buf` into a concrete buffer.",6,[[["self"]],["b"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",6,[[["self"],["usize"]],["take"]]],[11,"chain","","Creates an adaptor which will chain this buffer with…",6,[[["self"],["u"]],["chain"]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",6,[[["self"]],["self"]]],[11,"reader","","Creates an adaptor which implements the `Read` trait for…",6,[[["self"]],["reader"]]],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",6,[[["self"]],["iter"]]],[8,"BufMut","","A trait for values that provide sequential write access to…",N,N],[10,"remaining_mut","","Returns the number of bytes that can be written from the…",7,[[["self"]],["usize"]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",7,[[["self"],["usize"]]]],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",7,[[["self"]],["bool"]]],[10,"bytes_mut","","Returns a mutable slice starting at the current BufMut…",7,N],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices…",7,N],[11,"put","","Transfer bytes into `self` from `src` and advance the…",7,[[["self"],["t"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",7,N],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",7,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",7,[[["self"],["i8"]]]],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian…",7,[[["self"],["u16"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",7,[[["self"],["u16"]]]],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian…",7,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",7,[[["self"],["i16"]]]],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian…",7,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",7,[[["self"],["u32"]]]],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian…",7,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",7,[[["self"],["i32"]]]],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the…",7,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",7,[[["self"],["u64"]]]],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian…",7,[[["self"],["i64"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",7,[[["self"],["i64"]]]],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian…",7,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",7,[[["self"],["u64"],["usize"]]]],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_f32_be","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f64_be","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",7,[[["self"]],["self"]]],[11,"writer","","Creates an adaptor which implements the `Write` trait for…",7,[[["self"]],["writer"]]],[8,"FromBuf","","Conversion from a [`Buf`]",N,N],[10,"from_buf","","Creates a value from a buffer.",8,[[["t"]],["self"]]],[8,"IntoBuf","","Conversion into a `Buf`",N,N],[16,"Buf","","The `Buf` type that `self` is being converted into",9,N],[10,"into_buf","","Creates a `Buf` from a value.",9,N],[11,"with_capacity","bytes","Creates a new `Bytes` with the specified capacity.",10,[[["usize"]],["bytes"]]],[11,"new","","Creates a new empty `Bytes`.",10,[[],["bytes"]]],[11,"from_static","","Creates a new `Bytes` from a static slice.",10,N],[11,"len","","Returns the number of bytes contained in this `Bytes`.",10,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",10,[[["self"]],["bool"]]],[11,"slice","","Returns a slice of self for the index range `[begin..end)`.",10,[[["self"],["usize"],["usize"]],["bytes"]]],[11,"slice_from","","Returns a slice of self for the index range…",10,[[["self"],["usize"]],["bytes"]]],[11,"slice_to","","Returns a slice of self for the index range `[0..end)`.",10,[[["self"],["usize"]],["bytes"]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given…",10,N],[11,"split_off","","Splits the bytes into two at the given index.",10,[[["self"],["usize"]],["bytes"]]],[11,"split_to","","Splits the bytes into two at the given index.",10,[[["self"],["usize"]],["bytes"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",10,[[["self"],["usize"]]]],[11,"advance","","Shortens the buffer, dropping the first `cnt` bytes and…",10,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",10,[[["self"]]]],[11,"try_mut","","Attempts to convert into a `BytesMut` handle.",10,[[["self"]],["result",["bytesmut","bytes"]]]],[11,"extend_from_slice","","Appends given bytes to this object.",10,N],[11,"with_capacity","","Creates a new `BytesMut` with the specified capacity.",11,[[["usize"]],["bytesmut"]]],[11,"new","","Creates a new `BytesMut` with default capacity.",11,[[],["bytesmut"]]],[11,"len","","Returns the number of bytes contained in this `BytesMut`.",11,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `BytesMut` has a length of 0.",11,[[["self"]],["bool"]]],[11,"capacity","","Returns the number of bytes the `BytesMut` can hold…",11,[[["self"]],["usize"]]],[11,"freeze","","Converts `self` into an immutable `Bytes`.",11,[[["self"]],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",11,[[["self"],["usize"]],["bytesmut"]]],[11,"take","","Removes the bytes from the current view, returning them in…",11,[[["self"]],["bytesmut"]]],[11,"split_to","","Splits the buffer into two at the given index.",11,[[["self"],["usize"]],["bytesmut"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",11,[[["self"],["usize"]]]],[11,"advance","","Shortens the buffer, dropping the first `cnt` bytes and…",11,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",11,[[["self"]]]],[11,"resize","","Resizes the buffer so that `len` is equal to `new_len`.",11,[[["self"],["usize"],["u8"]]]],[11,"set_len","","Sets the length of the buffer.",11,[[["self"],["usize"]]]],[11,"reserve","","Reserves capacity for at least `additional` more bytes to…",11,[[["self"],["usize"]]]],[11,"extend_from_slice","","Appends given bytes to this object.",11,N],[11,"unsplit","","Combine splitted BytesMut objects back as contiguous.",11,[[["self"],["bytesmut"]]]],[8,"Buf","","Read bytes from a buffer.",N,N],[10,"remaining","","Returns the number of bytes between the current position…",6,[[["self"]],["usize"]]],[10,"bytes","","Returns a slice starting at the current position and of…",6,N],[11,"bytes_vec","bytes::buf","Fills `dst` with potentially multiple slices starting at…",6,N],[10,"advance","bytes","Advance the internal cursor of the Buf",6,[[["self"],["usize"]]]],[11,"has_remaining","bytes::buf","Returns true if there are any more bytes to consume",6,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",6,N],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",6,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",6,[[["self"]],["i8"]]],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian…",6,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",6,[[["self"]],["u16"]]],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian…",6,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",6,[[["self"]],["i16"]]],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian…",6,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",6,[[["self"]],["i32"]]],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian…",6,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",6,[[["self"]],["u64"]]],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian…",6,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",6,[[["self"]],["i64"]]],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",6,[[["self"],["usize"]],["u64"]]],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"collect","","Transforms a `Buf` into a concrete buffer.",6,[[["self"]],["b"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",6,[[["self"],["usize"]],["take"]]],[11,"chain","","Creates an adaptor which will chain this buffer with…",6,[[["self"],["u"]],["chain"]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",6,[[["self"]],["self"]]],[11,"reader","","Creates an adaptor which implements the `Read` trait for…",6,[[["self"]],["reader"]]],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",6,[[["self"]],["iter"]]],[8,"BufMut","bytes","A trait for values that provide sequential write access to…",N,N],[10,"remaining_mut","","Returns the number of bytes that can be written from the…",7,[[["self"]],["usize"]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",7,[[["self"],["usize"]]]],[11,"has_remaining_mut","bytes::buf","Returns true if there is space in `self` for more bytes.",7,[[["self"]],["bool"]]],[10,"bytes_mut","bytes","Returns a mutable slice starting at the current BufMut…",7,N],[11,"bytes_vec_mut","bytes::buf","Fills `dst` with potentially multiple mutable slices…",7,N],[11,"put","","Transfer bytes into `self` from `src` and advance the…",7,[[["self"],["t"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",7,N],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",7,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",7,[[["self"],["i8"]]]],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian…",7,[[["self"],["u16"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",7,[[["self"],["u16"]]]],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian…",7,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",7,[[["self"],["i16"]]]],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian…",7,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",7,[[["self"],["u32"]]]],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian…",7,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",7,[[["self"],["i32"]]]],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the…",7,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",7,[[["self"],["u64"]]]],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian…",7,[[["self"],["i64"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",7,[[["self"],["i64"]]]],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian…",7,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",7,[[["self"],["u64"],["usize"]]]],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_f32_be","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f64_be","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",7,[[["self"]],["self"]]],[11,"writer","","Creates an adaptor which implements the `Write` trait for…",7,[[["self"]],["writer"]]],[8,"IntoBuf","bytes","Conversion into a `Buf`",N,N],[16,"Buf","","The `Buf` type that `self` is being converted into",9,N],[10,"into_buf","","Creates a `Buf` from a value.",9,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","bytes::buf","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"hash","bytes","",13,N],[11,"hash","","",12,N],[11,"default","","",12,[[],["bigendian"]]],[11,"default","","",13,[[],["littleendian"]]],[11,"eq","","",12,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",13,[[["self"],["littleendian"]],["bool"]]],[11,"read_u16","","",12,N],[11,"read_u32","","",12,N],[11,"read_u64","","",12,N],[11,"read_uint","","",12,N],[11,"write_u16","","",12,N],[11,"write_u32","","",12,N],[11,"write_u64","","",12,N],[11,"write_uint","","",12,N],[11,"read_u16_into","","",12,N],[11,"read_u32_into","","",12,N],[11,"read_u64_into","","",12,N],[11,"write_u16_into","","",12,N],[11,"write_u32_into","","",12,N],[11,"write_u64_into","","",12,N],[11,"from_slice_u16","","",12,N],[11,"from_slice_u32","","",12,N],[11,"from_slice_u64","","",12,N],[11,"from_slice_f32","","",12,N],[11,"from_slice_f64","","",12,N],[11,"read_u16","","",13,N],[11,"read_u32","","",13,N],[11,"read_u64","","",13,N],[11,"read_uint","","",13,N],[11,"write_u16","","",13,N],[11,"write_u32","","",13,N],[11,"write_u64","","",13,N],[11,"write_uint","","",13,N],[11,"read_u16_into","","",13,N],[11,"read_u32_into","","",13,N],[11,"read_u64_into","","",13,N],[11,"write_u16_into","","",13,N],[11,"write_u32_into","","",13,N],[11,"write_u64_into","","",13,N],[11,"from_slice_u16","","",13,N],[11,"from_slice_u32","","",13,N],[11,"from_slice_u64","","",13,N],[11,"from_slice_f32","","",13,N],[11,"from_slice_f64","","",13,N],[11,"clone","","",13,[[["self"]],["littleendian"]]],[11,"clone","","",12,[[["self"]],["bigendian"]]],[11,"cmp","","",12,[[["self"],["bigendian"]],["ordering"]]],[11,"cmp","","",13,[[["self"],["littleendian"]],["ordering"]]],[11,"partial_cmp","","",12,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"partial_cmp","","",13,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"remaining","bytes::buf","",1,[[["self"]],["usize"]]],[11,"bytes","","",1,N],[11,"advance","","",1,[[["self"],["usize"]]]],[11,"bytes_vec","","",1,N],[11,"remaining","","",4,[[["self"]],["usize"]]],[11,"bytes","","",4,N],[11,"advance","","",4,[[["self"],["usize"]]]],[11,"remaining_mut","","",1,[[["self"]],["usize"]]],[11,"bytes_mut","","",1,N],[11,"advance_mut","","",1,[[["self"],["usize"]]]],[11,"bytes_vec_mut","","",1,N],[11,"remaining_mut","bytes","",11,[[["self"]],["usize"]]],[11,"advance_mut","","",11,[[["self"],["usize"]]]],[11,"bytes_mut","","",11,N],[11,"put_slice","","",11,N],[11,"put_u8","","",11,[[["self"],["u8"]]]],[11,"put_i8","","",11,[[["self"],["i8"]]]],[11,"from_buf","","",10,[[["t"]],["self"]]],[11,"from_buf","","",11,[[["t"]],["self"]]],[11,"into_buf","","",10,N],[11,"into_buf","","",11,N],[11,"as_mut","","",11,N],[11,"next","bytes::buf","",2,[[["self"]],["option",["u8"]]]],[11,"size_hint","","",2,N],[11,"eq","bytes","",10,[[["self"],["bytes"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",11,N],[11,"eq","","",11,[[["self"],["str"]],["bool"]]],[11,"eq","","",11,[[["self"],["vec"]],["bool"]]],[11,"eq","","",11,[[["self"],["string"]],["bool"]]],[11,"eq","","",11,[[["self"],["t"]],["bool"]]],[11,"eq","","",10,N],[11,"eq","","",10,[[["self"],["str"]],["bool"]]],[11,"eq","","",10,[[["self"],["vec"]],["bool"]]],[11,"eq","","",10,[[["self"],["string"]],["bool"]]],[11,"eq","","",10,[[["self"],["t"]],["bool"]]],[11,"eq","","",10,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytes"]],["bool"]]],[11,"as_ref","","",10,N],[11,"as_ref","","",11,N],[11,"into_iter","","",10,N],[11,"into_iter","","",11,N],[11,"default","","",10,[[],["bytes"]]],[11,"default","","",11,[[],["bytesmut"]]],[11,"cmp","","",10,[[["self"],["bytes"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["bytesmut"]],["ordering"]]],[11,"clone","","",10,[[["self"]],["bytes"]]],[11,"clone","","",11,[[["self"]],["bytesmut"]]],[11,"extend","","",10,[[["self"],["t"]]]],[11,"extend","","",10,[[["self"],["t"]]]],[11,"extend","","",11,[[["self"],["t"]]]],[11,"extend","","",11,[[["self"],["t"]]]],[11,"from","","",10,[[["bytesmut"]],["bytes"]]],[11,"from","","",10,[[["vec",["u8"]]],["bytes"]]],[11,"from","","",10,[[["string"]],["bytes"]]],[11,"from","","",10,N],[11,"from","","",10,[[["str"]],["bytes"]]],[11,"from","","",11,[[["vec",["u8"]]],["bytesmut"]]],[11,"from","","",11,[[["string"]],["bytesmut"]]],[11,"from","","",11,N],[11,"from","","",11,[[["str"]],["bytesmut"]]],[11,"from","","",11,[[["bytes"]],["bytesmut"]]],[11,"partial_cmp","","",10,[[["self"],["bytes"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["bytesmut"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,N],[11,"partial_cmp","","",11,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["vec"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["t"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,N],[11,"partial_cmp","","",10,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["vec"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",10,[[["self"],["t"]],["option",["ordering"]]]],[11,"fmt","bytes::buf","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","bytes","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"write_str","","",11,[[["self"],["str"]],["result"]]],[11,"write_fmt","","",11,[[["self"],["arguments"]],["result"]]],[11,"deref_mut","","",11,N],[11,"hash","","",10,[[["self"],["h"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"deref","","",10,N],[11,"deref","","",11,N],[11,"from_iter","","",11,[[["t"]],["self"]]],[11,"from_iter","","",10,[[["t"]],["self"]]],[11,"borrow","","",10,N],[11,"borrow","","",11,N],[11,"borrow_mut","","",11,N],[11,"read","bytes::buf","",3,N],[11,"write","","",5,N],[11,"flush","","",5,[[["self"]],["result"]]],[11,"bytes_vec","","Fills `dst` with potentially multiple slices starting at…",6,N],[11,"has_remaining","","Returns true if there are any more bytes to consume",6,[[["self"]],["bool"]]],[11,"copy_to_slice","","Copies bytes from `self` into `dst`.",6,N],[11,"get_u8","","Gets an unsigned 8 bit integer from `self`.",6,[[["self"]],["u8"]]],[11,"get_i8","","Gets a signed 8 bit integer from `self`.",6,[[["self"]],["i8"]]],[11,"get_u16_be","","Gets an unsigned 16 bit integer from `self` in big-endian…",6,[[["self"]],["u16"]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from `self` in…",6,[[["self"]],["u16"]]],[11,"get_i16_be","","Gets a signed 16 bit integer from `self` in big-endian…",6,[[["self"]],["i16"]]],[11,"get_i16_le","","Gets a signed 16 bit integer from `self` in little-endian…",6,[[["self"]],["i16"]]],[11,"get_u32_be","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from `self` in the…",6,[[["self"]],["u32"]]],[11,"get_i32_be","","Gets a signed 32 bit integer from `self` in big-endian…",6,[[["self"]],["i32"]]],[11,"get_i32_le","","Gets a signed 32 bit integer from `self` in little-endian…",6,[[["self"]],["i32"]]],[11,"get_u64_be","","Gets an unsigned 64 bit integer from `self` in big-endian…",6,[[["self"]],["u64"]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from `self` in…",6,[[["self"]],["u64"]]],[11,"get_i64_be","","Gets a signed 64 bit integer from `self` in big-endian…",6,[[["self"]],["i64"]]],[11,"get_i64_le","","Gets a signed 64 bit integer from `self` in little-endian…",6,[[["self"]],["i64"]]],[11,"get_uint_be","","Gets an unsigned n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["u64"]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from `self` in…",6,[[["self"],["usize"]],["u64"]]],[11,"get_int_be","","Gets a signed n-byte integer from `self` in big-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_int_le","","Gets a signed n-byte integer from `self` in little-endian…",6,[[["self"],["usize"]],["i64"]]],[11,"get_f32_be","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point…",6,[[["self"]],["f32"]]],[11,"get_f64_be","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point…",6,[[["self"]],["f64"]]],[11,"collect","","Transforms a `Buf` into a concrete buffer.",6,[[["self"]],["b"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",6,[[["self"],["usize"]],["take"]]],[11,"chain","","Creates an adaptor which will chain this buffer with…",6,[[["self"],["u"]],["chain"]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of `Buf`.",6,[[["self"]],["self"]]],[11,"reader","","Creates an adaptor which implements the `Read` trait for…",6,[[["self"]],["reader"]]],[11,"iter","","Returns an iterator over the bytes contained by the buffer.",6,[[["self"]],["iter"]]],[11,"has_remaining_mut","","Returns true if there is space in `self` for more bytes.",7,[[["self"]],["bool"]]],[11,"bytes_vec_mut","","Fills `dst` with potentially multiple mutable slices…",7,N],[11,"put","","Transfer bytes into `self` from `src` and advance the…",7,[[["self"],["t"]]]],[11,"put_slice","","Transfer bytes into `self` from `src` and advance the…",7,N],[11,"put_u8","","Writes an unsigned 8 bit integer to `self`.",7,[[["self"],["u8"]]]],[11,"put_i8","","Writes a signed 8 bit integer to `self`.",7,[[["self"],["i8"]]]],[11,"put_u16_be","","Writes an unsigned 16 bit integer to `self` in big-endian…",7,[[["self"],["u16"]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to `self` in…",7,[[["self"],["u16"]]]],[11,"put_i16_be","","Writes a signed 16 bit integer to `self` in big-endian…",7,[[["self"],["i16"]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to `self` in little-endian…",7,[[["self"],["i16"]]]],[11,"put_u32_be","","Writes an unsigned 32 bit integer to `self` in big-endian…",7,[[["self"],["u32"]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to `self` in…",7,[[["self"],["u32"]]]],[11,"put_i32_be","","Writes a signed 32 bit integer to `self` in big-endian…",7,[[["self"],["i32"]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to `self` in little-endian…",7,[[["self"],["i32"]]]],[11,"put_u64_be","","Writes an unsigned 64 bit integer to `self` in the…",7,[[["self"],["u64"]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to `self` in…",7,[[["self"],["u64"]]]],[11,"put_i64_be","","Writes a signed 64 bit integer to `self` in the big-endian…",7,[[["self"],["i64"]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to `self` in little-endian…",7,[[["self"],["i64"]]]],[11,"put_uint_be","","Writes an unsigned n-byte integer to `self` in big-endian…",7,[[["self"],["u64"],["usize"]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to `self` in the…",7,[[["self"],["u64"],["usize"]]]],[11,"put_int_be","","Writes a signed n-byte integer to `self` in big-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_int_le","","Writes a signed n-byte integer to `self` in little-endian…",7,[[["self"],["i64"],["usize"]]]],[11,"put_f32_be","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f32_le","","Writes an IEEE754 single-precision (4 bytes) floating…",7,[[["self"],["f32"]]]],[11,"put_f64_be","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"put_f64_le","","Writes an IEEE754 double-precision (8 bytes) floating…",7,[[["self"],["f64"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",7,[[["self"]],["self"]]],[11,"writer","","Creates an adaptor which implements the `Write` trait for…",7,[[["self"]],["writer"]]]],"paths":[[8,"ByteOrder"],[3,"Chain"],[3,"Iter"],[3,"Reader"],[3,"Take"],[3,"Writer"],[8,"Buf"],[8,"BufMut"],[8,"FromBuf"],[8,"IntoBuf"],[3,"Bytes"],[3,"BytesMut"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","items":[[14,"cfg_if","cfg_if","",N,N]],"paths":[]};
searchIndex["chrono"]={"doc":"Chrono: Date and Time for Rust","items":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision. This…",N,N],[3,"Date","","ISO 8601 calendar date with time zone.",N,N],[3,"DateTime","","ISO 8601 combined date and time with time zone.",N,N],[3,"ParseWeekdayError","","An error resulting from reading `Weekday` value with…",N,N],[4,"SecondsFormat","","Specific formatting options for seconds. This may be…",N,N],[13,"Secs","","Format whole seconds only, with no decimal point nor…",0,N],[13,"Millis","","Use fixed 3 subsecond digits. This corresponds to…",0,N],[13,"Micros","","Use fixed 6 subsecond digits. This corresponds to…",0,N],[13,"Nanos","","Use fixed 9 subsecond digits. This corresponds to…",0,N],[13,"AutoSi","","Automatically select one of `Secs`, `Millis`, `Micros`, or…",0,N],[4,"Weekday","","The day of week.",N,N],[13,"Mon","","Monday.",1,N],[13,"Tue","","Tuesday.",1,N],[13,"Wed","","Wednesday.",1,N],[13,"Thu","","Thursday.",1,N],[13,"Fri","","Friday.",1,N],[13,"Sat","","Saturday.",1,N],[13,"Sun","","Sunday.",1,N],[0,"prelude","","A convenience module appropriate for glob imports (`use…",N,N],[0,"offset","","The time zone, which calculates offsets from the local…",N,N],[3,"Utc","chrono::offset","The UTC time zone. This is the most efficient time zone…",N,N],[3,"FixedOffset","","The time zone with fixed offset, from UTC-23:59:59 to…",N,N],[3,"Local","","The local timescale. This is implemented via the standard…",N,N],[4,"LocalResult","","The conversion result from the local time to the…",N,N],[13,"None","","Given local time representation is invalid. This can occur…",2,N],[13,"Single","","Given local time representation has a single unique result.",2,N],[13,"Ambiguous","","Given local time representation has multiple results and…",2,N],[11,"today","","Returns a `Date` which corresponds to the current date.",3,[[],["date",["utc"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",3,[[],["datetime",["utc"]]]],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",4,[[["i32"]],["fixedoffset"]]],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",4,[[["i32"]],["option",["fixedoffset"]]]],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with…",4,[[["i32"]],["fixedoffset"]]],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with…",4,[[["i32"]],["option",["fixedoffset"]]]],[11,"local_minus_utc","","Returns the number of seconds to add to convert from UTC…",4,[[["self"]],["i32"]]],[11,"utc_minus_local","","Returns the number of seconds to add to convert from the…",4,[[["self"]],["i32"]]],[11,"today","","Returns a `Date` which corresponds to the current date.",5,[[],["date",["local"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",5,[[],["datetime",["local"]]]],[8,"Offset","","The offset from the local time to UTC.",N,N],[10,"fix","","Returns the fixed offset from UTC to the local time stored.",6,[[["self"]],["fixedoffset"]]],[8,"TimeZone","","The time zone.",N,N],[16,"Offset","","An associated offset type. This type is used to store the…",7,N],[11,"ymd","","Makes a new `Date` from year, month, day and the current…",7,[[["self"],["i32"],["u32"],["u32"]],["date"]]],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current…",7,[[["self"],["i32"],["u32"],["u32"]],["localresult",["date"]]]],[11,"yo","","Makes a new `Date` from year, day of year (DOY or…",7,[[["self"],["i32"],["u32"]],["date"]]],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or…",7,[[["self"],["i32"],["u32"]],["localresult",["date"]]]],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week…",7,[[["self"],["i32"],["u32"],["weekday"]],["date"]]],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week…",7,[[["self"],["i32"],["u32"],["weekday"]],["localresult",["date"]]]],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds…",7,[[["self"],["i64"],["u32"]],["datetime"]]],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds…",7,[[["self"],["i64"],["u32"]],["localresult",["datetime"]]]],[11,"timestamp_millis","","Makes a new `DateTime` from the number of non-leap…",7,[[["self"],["i64"]],["datetime"]]],[11,"timestamp_millis_opt","","Makes a new `DateTime` from the number of non-leap…",7,[[["self"],["i64"]],["localresult",["datetime"]]]],[11,"datetime_from_str","","Parses a string with the specified format string and…",7,[[["self"],["str"],["str"]],["parseresult",["datetime"]]]],[10,"from_offset","","Reconstructs the time zone from the offset.",7,N],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if…",7,[[["self"],["naivedate"]],["localresult"]]],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if…",7,[[["self"],["naivedatetime"]],["localresult"]]],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware…",7,[[["self"],["naivedate"]],["localresult",["date"]]]],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware…",7,[[["self"],["naivedatetime"]],["localresult",["datetime"]]]],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot…",7,N],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This…",7,N],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time. The UTC is…",7,[[["self"],["naivedate"]],["date"]]],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time. The…",7,[[["self"],["naivedatetime"]],["datetime"]]],[11,"single","","Returns `Some` only when the conversion result is unique,…",2,[[["self"]],["option"]]],[11,"earliest","","Returns `Some` for the earliest possible conversion…",2,[[["self"]],["option"]]],[11,"latest","","Returns `Some` for the latest possible conversion result,…",2,[[["self"]],["option"]]],[11,"map","","Maps a `LocalResult<T>` into `LocalResult<U>` with given…",2,[[["self"],["f"]],["localresult"]]],[11,"and_time","","Makes a new `DateTime` from the current date and given…",2,[[["self"],["naivetime"]],["localresult",["datetime"]]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",2,[[["self"],["u32"],["u32"],["u32"]],["localresult",["datetime"]]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["self"],["u32"],["u32"],["u32"],["u32"]],["localresult",["datetime"]]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["self"],["u32"],["u32"],["u32"],["u32"]],["localresult",["datetime"]]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",2,[[["self"],["u32"],["u32"],["u32"],["u32"]],["localresult",["datetime"]]]],[11,"unwrap","","Returns the single unique conversion result, or panics…",2,[[["self"]],["t"]]],[0,"naive","chrono","Date and time types which do not concern about the…",N,N],[3,"NaiveDate","chrono::naive","ISO 8601 calendar date without timezone. Allows for every…",N,N],[3,"IsoWeek","","ISO 8601 week.",N,N],[3,"NaiveTime","","ISO 8601 time without timezone. Allows for the nanosecond…",N,N],[3,"NaiveDateTime","","ISO 8601 combined date and time without timezone.",N,N],[11,"from_ymd","","Makes a new `NaiveDate` from the calendar date (year,…",8,[[["i32"],["u32"],["u32"]],["naivedate"]]],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the calendar date (year,…",8,[[["i32"],["u32"],["u32"]],["option",["naivedate"]]]],[11,"from_yo","","Makes a new `NaiveDate` from the ordinal date (year and…",8,[[["i32"],["u32"]],["naivedate"]]],[11,"from_yo_opt","","Makes a new `NaiveDate` from the ordinal date (year and…",8,[[["i32"],["u32"]],["option",["naivedate"]]]],[11,"from_isoywd","","Makes a new `NaiveDate` from the ISO week date (year, week…",8,[[["i32"],["u32"],["weekday"]],["naivedate"]]],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the ISO week date (year, week…",8,[[["i32"],["u32"],["weekday"]],["option",["naivedate"]]]],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from the number of days since…",8,[[["i32"]],["naivedate"]]],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from the number of days since…",8,[[["i32"]],["option",["naivedate"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",8,[[["str"],["str"]],["parseresult",["naivedate"]]]],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and…",8,[[["self"],["naivetime"]],["naivedatetime"]]],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"]],["naivedatetime"]]],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"]],["option",["naivedatetime"]]]],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"],["u32"]],["naivedatetime"]]],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["naivedatetime"]]]],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"],["u32"]],["naivedatetime"]]],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["naivedatetime"]]]],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"],["u32"]],["naivedatetime"]]],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",8,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["naivedatetime"]]]],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",8,[[["self"]],["naivedate"]]],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",8,[[["self"]],["option",["naivedate"]]]],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",8,[[["self"]],["naivedate"]]],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",8,[[["self"]],["option",["naivedate"]]]],[11,"checked_add_signed","","Adds the `days` part of given `Duration` to the current…",8,[[["self"],["oldduration"]],["option",["naivedate"]]]],[11,"checked_sub_signed","","Subtracts the `days` part of given `Duration` from the…",8,[[["self"],["oldduration"]],["option",["naivedate"]]]],[11,"signed_duration_since","","Subtracts another `NaiveDate` from the current date.…",8,[[["self"],["naivedate"]],["oldduration"]]],[11,"format_with_items","","Formats the date with the specified formatting items.…",8,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the…",8,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[11,"year","","Returns the year number for this ISO week.",9,[[["self"]],["i32"]]],[11,"week","","Returns the ISO week number starting from 1.",9,[[["self"]],["u32"]]],[11,"week0","","Returns the ISO week number starting from 0.",9,[[["self"]],["u32"]]],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",10,[[["u32"],["u32"],["u32"]],["naivetime"]]],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",10,[[["u32"],["u32"],["u32"]],["option",["naivetime"]]]],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"],["u32"],["u32"],["u32"]],["naivetime"]]],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"],["u32"],["u32"],["u32"]],["option",["naivetime"]]]],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"],["u32"],["u32"],["u32"]],["naivetime"]]],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"],["u32"],["u32"],["u32"]],["option",["naivetime"]]]],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"],["u32"],["u32"],["u32"]],["naivetime"]]],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and…",10,[[["u32"],["u32"],["u32"],["u32"]],["option",["naivetime"]]]],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since…",10,[[["u32"],["u32"]],["naivetime"]]],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since…",10,[[["u32"],["u32"]],["option",["naivetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",10,[[["str"],["str"]],["parseresult",["naivetime"]]]],[11,"overflowing_add_signed","","Adds given `Duration` to the current time, and also…",10,N],[11,"overflowing_sub_signed","","Subtracts given `Duration` from the current time, and also…",10,N],[11,"signed_duration_since","","Subtracts another `NaiveTime` from the current time.…",10,[[["self"],["naivetime"]],["oldduration"]]],[11,"format_with_items","","Formats the time with the specified formatting items.…",10,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the time with the specified format string. See the…",10,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[11,"new","","Makes a new `NaiveDateTime` from date and time components.…",11,[[["naivedate"],["naivetime"]],["naivedatetime"]]],[11,"from_timestamp","","Makes a new `NaiveDateTime` corresponding to a UTC date…",11,[[["i64"],["u32"]],["naivedatetime"]]],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` corresponding to a UTC date…",11,[[["i64"],["u32"]],["option",["naivedatetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",11,[[["str"],["str"]],["parseresult",["naivedatetime"]]]],[11,"date","","Retrieves a date component.",11,[[["self"]],["naivedate"]]],[11,"time","","Retrieves a time component.",11,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since the midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap milliseconds since midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap nanoseconds since midnight…",11,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole…",11,[[["self"]],["u32"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",11,[[["self"],["oldduration"]],["option",["naivedatetime"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",11,[[["self"],["oldduration"]],["option",["naivedatetime"]]]],[11,"signed_duration_since","","Subtracts another `NaiveDateTime` from the current date…",11,[[["self"],["naivedatetime"]],["oldduration"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",11,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",11,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[17,"MIN_DATE","","The minimum possible `NaiveDate` (January 1, 262145 BCE).",N,N],[17,"MAX_DATE","","The maximum possible `NaiveDate` (December 31, 262143 CE).",N,N],[11,"from_utc","chrono","Makes a new `Date` with given UTC date and offset. The…",12,N],[11,"and_time","","Makes a new `DateTime` from the current date and given…",12,[[["self"],["naivetime"]],["option",["datetime"]]]],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute…",12,[[["self"],["u32"],["u32"],["u32"]],["datetime"]]],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute…",12,[[["self"],["u32"],["u32"],["u32"]],["option",["datetime"]]]],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour,…",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["datetime"]]],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["datetime"]]]],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour,…",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["datetime"]]],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["datetime"]]]],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour,…",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["datetime"]]],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour,…",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["option",["datetime"]]]],[11,"succ","","Makes a new `Date` for the next date.",12,[[["self"]],["date"]]],[11,"succ_opt","","Makes a new `Date` for the next date.",12,[[["self"]],["option",["date"]]]],[11,"pred","","Makes a new `Date` for the prior date.",12,[[["self"]],["date"]]],[11,"pred_opt","","Makes a new `Date` for the prior date.",12,[[["self"]],["option",["date"]]]],[11,"offset","","Retrieves an associated offset from UTC.",12,N],[11,"timezone","","Retrieves an associated time zone.",12,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",12,[[["self"],["tz2"]],["date"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date.",12,[[["self"],["oldduration"]],["option",["date"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date.",12,[[["self"],["oldduration"]],["option",["date"]]]],[11,"signed_duration_since","","Subtracts another `Date` from the current date. Returns a…",12,[[["self"],["date"]],["oldduration"]]],[11,"naive_utc","","Returns a view to the naive UTC date.",12,[[["self"]],["naivedate"]]],[11,"naive_local","","Returns a view to the naive local date.",12,[[["self"]],["naivedate"]]],[11,"format_with_items","","Formats the date with the specified formatting items.",12,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the date with the specified format string. See the…",12,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset.…",13,N],[11,"date","","Retrieves a date component.",13,[[["self"]],["date"]]],[11,"time","","Retrieves a time component. Unlike `date`, this is not…",13,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since January 1,…",13,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap-milliseconds since January…",13,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap-nanoseconds since January…",13,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second…",13,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second…",13,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second…",13,[[["self"]],["u32"]]],[11,"offset","","Retrieves an associated offset from UTC.",13,N],[11,"timezone","","Retrieves an associated time zone.",13,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",13,[[["self"],["tz2"]],["datetime"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",13,[[["self"],["oldduration"]],["option",["datetime"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",13,[[["self"],["oldduration"]],["option",["datetime"]]]],[11,"signed_duration_since","","Subtracts another `DateTime` from the current date and…",13,[[["self"],["datetime"]],["oldduration"]]],[11,"naive_utc","","Returns a view to the naive UTC datetime.",13,[[["self"]],["naivedatetime"]]],[11,"naive_local","","Returns a view to the naive local datetime.",13,[[["self"]],["naivedatetime"]]],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1…",13,[[["str"]],["parseresult",["datetime"]]]],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such…",13,[[["str"]],["parseresult",["datetime"]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",13,[[["str"],["str"]],["parseresult",["datetime"]]]],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1…",13,[[["self"]],["string"]]],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such…",13,[[["self"]],["string"]]],[11,"to_rfc3339_opts","","Return an RFC 3339 and ISO 8601 date and time string with…",13,[[["self"],["secondsformat"],["bool"]],["string"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",13,[[["self"],["i"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",13,[[["self"],["str"]],["delayedformat",["strftimeitems"]]]],[0,"format","","Formatting (and parsing) utilities for date and time.",N,N],[3,"Parsed","chrono::format","Parsed parts of date and time. There are two classes of…",N,N],[12,"year","","Year.",14,N],[12,"year_div_100","","Year divided by 100. Implies that the year is >= 1 BCE…",14,N],[12,"year_mod_100","","Year modulo 100. Implies that the year is >= 1 BCE when set.",14,N],[12,"isoyear","","Year in the ISO week date.",14,N],[12,"isoyear_div_100","","Year in the ISO week date, divided by 100. Implies that…",14,N],[12,"isoyear_mod_100","","Year in the ISO week date, modulo 100. Implies that the…",14,N],[12,"month","","Month (1--12).",14,N],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday…",14,N],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday…",14,N],[12,"isoweek","","ISO week number (1--52 or 1--53 depending on the year).",14,N],[12,"weekday","","Day of the week.",14,N],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",14,N],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending…",14,N],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1…",14,N],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",14,N],[12,"minute","","Minute number (0--59).",14,N],[12,"second","","Second number (0--60, accounting for leap seconds).",14,N],[12,"nanosecond","","The number of nanoseconds since the whole second…",14,N],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on…",14,N],[12,"offset","","Offset from the local time to UTC, in seconds.",14,N],[3,"InternalNumeric","","An opaque type representing numeric item types for…",N,N],[3,"InternalFixed","","An opaque type representing fixed-format item types for…",N,N],[3,"ParseError","","An error from the `parse` function.",N,N],[3,"DelayedFormat","","A temporary object which can be used as an argument to…",N,N],[4,"Pad","","Padding characters for numeric items.",N,N],[13,"None","","No padding.",15,N],[13,"Zero","","Zero (`0`) padding.",15,N],[13,"Space","","Space padding.",15,N],[4,"Numeric","","Numeric item types. They have associated formatting width…",N,N],[13,"Year","","Full Gregorian year (FW=4, PW=∞). May accept years before…",16,N],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2).…",16,N],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",16,N],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞). May accept years…",16,N],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2).…",16,N],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be…",16,N],[13,"Month","","Month (FW=PW=2).",16,N],[13,"Day","","Day of the month (FW=PW=2).",16,N],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday…",16,N],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday…",16,N],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",16,N],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6…",16,N],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",16,N],[13,"Ordinal","","Day of the year (FW=PW=3).",16,N],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",16,N],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",16,N],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",16,N],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",16,N],[13,"Nanosecond","","The number of nanoseconds since the last whole second…",16,N],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on…",16,N],[13,"Internal","","Internal uses only.",16,N],[4,"Fixed","","Fixed-format item types.",N,N],[13,"ShortMonthName","","Abbreviated month names.",17,N],[13,"LongMonthName","","Full month names.",17,N],[13,"ShortWeekdayName","","Abbreviated day of the week names.",17,N],[13,"LongWeekdayName","","Full day of the week names.",17,N],[13,"LowerAmPm","","AM/PM.",17,N],[13,"UpperAmPm","","AM/PM.",17,N],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned…",17,N],[13,"Nanosecond3","","Same to `Nanosecond` but the accuracy is fixed to 3.",17,N],[13,"Nanosecond6","","Same to `Nanosecond` but the accuracy is fixed to 6.",17,N],[13,"Nanosecond9","","Same to `Nanosecond` but the accuracy is fixed to 9.",17,N],[13,"TimezoneName","","Timezone name.",17,N],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or…",17,N],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or…",17,N],[13,"TimezoneOffset","","Same to `TimezoneOffsetColon` but prints no colon. Parsing…",17,N],[13,"TimezoneOffsetZ","","Same to `TimezoneOffsetColonZ` but prints no colon.…",17,N],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and…",17,N],[13,"RFC3339","","RFC 3339 & ISO 8601 date and time syntax.",17,N],[13,"Internal","","Internal uses only.",17,N],[4,"Item","","A single formatting item. This is used for both formatting…",N,N],[13,"Literal","","A literally printed and parsed text.",18,N],[13,"OwnedLiteral","","Same to `Literal` but with the string owned by the item.",18,N],[13,"Space","","Whitespace. Prints literally but reads zero or more…",18,N],[13,"OwnedSpace","","Same to `Space` but with the string owned by the item.",18,N],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal…",18,N],[13,"Fixed","","Fixed-format item.",18,N],[13,"Error","","Issues a formatting error. Used to signal an invalid…",18,N],[5,"parse","","Tries to parse given string into `parsed` with given…",N,[[["parsed"],["str"],["i"]],["parseresult"]]],[5,"format","","Tries to format given arguments with given formatting…",N,[[["formatter"],["option",["naivedate"]],["option",["naivetime"]],["option"],["i"]],["result"]]],[11,"new","","Returns the initial value of parsed parts.",14,[[],["parsed"]]],[11,"set_year","","Tries to set the `year` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_year_div_100","","Tries to set the `year_div_100` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_year_mod_100","","Tries to set the `year_mod_100` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_isoyear","","Tries to set the `isoyear` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_isoyear_div_100","","Tries to set the `isoyear_div_100` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_isoyear_mod_100","","Tries to set the `isoyear_mod_100` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_month","","Tries to set the `month` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_week_from_sun","","Tries to set the `week_from_sun` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_week_from_mon","","Tries to set the `week_from_mon` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_isoweek","","Tries to set the `isoweek` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_weekday","","Tries to set the `weekday` field from given value.",14,[[["self"],["weekday"]],["parseresult"]]],[11,"set_ordinal","","Tries to set the `ordinal` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_day","","Tries to set the `day` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_ampm","","Tries to set the `hour_div_12` field from given value.…",14,[[["self"],["bool"]],["parseresult"]]],[11,"set_hour12","","Tries to set the `hour_mod_12` field from given hour…",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_hour","","Tries to set both `hour_div_12` and `hour_mod_12` fields…",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_minute","","Tries to set the `minute` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_second","","Tries to set the `second` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_nanosecond","","Tries to set the `nanosecond` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_timestamp","","Tries to set the `timestamp` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"set_offset","","Tries to set the `offset` field from given value.",14,[[["self"],["i64"]],["parseresult"]]],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",14,[[["self"]],["parseresult",["naivedate"]]]],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",14,[[["self"]],["parseresult",["naivetime"]]]],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields,…",14,[[["self"],["i32"]],["parseresult",["naivedatetime"]]]],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",14,[[["self"]],["parseresult",["fixedoffset"]]]],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given…",14,[[["self"]],["parseresult",["datetime"]]]],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given…",14,[[["self"],["tz"]],["parseresult",["datetime"]]]],[0,"strftime","","`strftime`/`strptime`-inspired date and time formatting…",N,N],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",N,N],[11,"new","","Creates a new parsing iterator from the `strftime`-like…",19,[[["str"]],["strftimeitems"]]],[6,"ParseResult","chrono::format","Same to `Result<T, ParseError>`.",N,N],[11,"new","","Makes a new `DelayedFormat` value out of local date and…",20,[[["option",["naivedate"]],["option",["naivetime"]],["i"]],["delayedformat"]]],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and…",20,[[["option",["naivedate"]],["option",["naivetime"]],["off"],["i"]],["delayedformat"]]],[17,"MIN_DATE","chrono","The minimum possible `Date`.",N,N],[17,"MAX_DATE","","The maximum possible `Date`.",N,N],[8,"SubsecRound","","Extension trait for subsecond rounding or truncation to a…",N,N],[10,"round_subsecs","","Return a copy rounded to the specified number of subsecond…",21,[[["self"],["u16"]],["self"]]],[10,"trunc_subsecs","","Return a copy truncated to the specified number of…",21,[[["self"],["u16"]],["self"]]],[8,"Datelike","","The common set of methods for date component.",N,N],[10,"year","","Returns the year number in the calendar date.",22,[[["self"]],["i32"]]],[11,"year_ce","","Returns the absolute year number starting from 1 with a…",22,N],[10,"month","","Returns the month number starting from 1.",22,[[["self"]],["u32"]]],[10,"month0","","Returns the month number starting from 0.",22,[[["self"]],["u32"]]],[10,"day","","Returns the day of month starting from 1.",22,[[["self"]],["u32"]]],[10,"day0","","Returns the day of month starting from 0.",22,[[["self"]],["u32"]]],[10,"ordinal","","Returns the day of year starting from 1.",22,[[["self"]],["u32"]]],[10,"ordinal0","","Returns the day of year starting from 0.",22,[[["self"]],["u32"]]],[10,"weekday","","Returns the day of week.",22,[[["self"]],["weekday"]]],[10,"iso_week","","Returns the ISO week.",22,[[["self"]],["isoweek"]]],[10,"with_year","","Makes a new value with the year number changed.",22,[[["self"],["i32"]],["option"]]],[10,"with_month","","Makes a new value with the month number (starting from 1)…",22,[[["self"],["u32"]],["option"]]],[10,"with_month0","","Makes a new value with the month number (starting from 0)…",22,[[["self"],["u32"]],["option"]]],[10,"with_day","","Makes a new value with the day of month (starting from 1)…",22,[[["self"],["u32"]],["option"]]],[10,"with_day0","","Makes a new value with the day of month (starting from 0)…",22,[[["self"],["u32"]],["option"]]],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1)…",22,[[["self"],["u32"]],["option"]]],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0)…",22,[[["self"],["u32"]],["option"]]],[11,"num_days_from_ce","","Returns the number of days since January 1, Year 1 (aka…",22,[[["self"]],["i32"]]],[8,"Timelike","","The common set of methods for time component.",N,N],[10,"hour","","Returns the hour number from 0 to 23.",23,[[["self"]],["u32"]]],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag,…",23,N],[10,"minute","","Returns the minute number from 0 to 59.",23,[[["self"]],["u32"]]],[10,"second","","Returns the second number from 0 to 59.",23,[[["self"]],["u32"]]],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",23,[[["self"]],["u32"]]],[10,"with_hour","","Makes a new value with the hour number changed.",23,[[["self"],["u32"]],["option"]]],[10,"with_minute","","Makes a new value with the minute number changed.",23,[[["self"],["u32"]],["option"]]],[10,"with_second","","Makes a new value with the second number changed.",23,[[["self"],["u32"]],["option"]]],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole…",23,[[["self"],["u32"]],["option"]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",23,[[["self"]],["u32"]]],[11,"succ","","The next day in the week.",1,[[["self"]],["weekday"]]],[11,"pred","","The previous day in the week.",1,[[["self"]],["weekday"]]],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1.…",1,[[["self"]],["u32"]]],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",1,[[["self"]],["u32"]]],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",1,[[["self"]],["u32"]]],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",1,[[["self"]],["u32"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","chrono::offset","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","chrono::naive","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","chrono::format","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_iter","chrono::format::strftime","",19,[[["self"]],["i"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"sub","chrono","",24,[[["self"],["duration"]],["duration"]]],[11,"mul","","",24,[[["self"],["i32"]],["duration"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",24,[[["self"],["duration"]],["bool"]]],[11,"ne","","",24,[[["self"],["duration"]],["bool"]]],[11,"div","","",24,[[["self"],["i32"]],["duration"]]],[11,"clone","","",24,[[["self"]],["duration"]]],[11,"add","","",24,[[["self"],["duration"]],["duration"]]],[11,"cmp","","",24,[[["self"],["duration"]],["ordering"]]],[11,"neg","","",24,[[["self"]],["duration"]]],[11,"partial_cmp","","",24,[[["self"],["duration"]],["option",["ordering"]]]],[11,"lt","","",24,[[["self"],["duration"]],["bool"]]],[11,"le","","",24,[[["self"],["duration"]],["bool"]]],[11,"gt","","",24,[[["self"],["duration"]],["bool"]]],[11,"ge","","",24,[[["self"],["duration"]],["bool"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fix","chrono::offset","",3,[[["self"]],["fixedoffset"]]],[11,"fix","","",4,[[["self"]],["fixedoffset"]]],[11,"from_offset","","",3,[[["utc"]],["utc"]]],[11,"offset_from_local_date","","",3,[[["self"],["naivedate"]],["localresult",["utc"]]]],[11,"offset_from_local_datetime","","",3,[[["self"],["naivedatetime"]],["localresult",["utc"]]]],[11,"offset_from_utc_date","","",3,[[["self"],["naivedate"]],["utc"]]],[11,"offset_from_utc_datetime","","",3,[[["self"],["naivedatetime"]],["utc"]]],[11,"from_offset","","",4,[[["fixedoffset"]],["fixedoffset"]]],[11,"offset_from_local_date","","",4,[[["self"],["naivedate"]],["localresult",["fixedoffset"]]]],[11,"offset_from_local_datetime","","",4,[[["self"],["naivedatetime"]],["localresult",["fixedoffset"]]]],[11,"offset_from_utc_date","","",4,[[["self"],["naivedate"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",4,[[["self"],["naivedatetime"]],["fixedoffset"]]],[11,"from_offset","","",5,[[["fixedoffset"]],["local"]]],[11,"offset_from_local_date","","",5,[[["self"],["naivedate"]],["localresult",["fixedoffset"]]]],[11,"offset_from_local_datetime","","",5,[[["self"],["naivedatetime"]],["localresult",["fixedoffset"]]]],[11,"offset_from_utc_date","","",5,[[["self"],["naivedate"]],["fixedoffset"]]],[11,"offset_from_utc_datetime","","",5,[[["self"],["naivedatetime"]],["fixedoffset"]]],[11,"from_local_date","","",5,[[["self"],["naivedate"]],["localresult",["date"]]]],[11,"from_local_datetime","","",5,[[["self"],["naivedatetime"]],["localresult",["datetime"]]]],[11,"from_utc_date","","",5,[[["self"],["naivedate"]],["date",["local"]]]],[11,"from_utc_datetime","","",5,[[["self"],["naivedatetime"]],["datetime",["local"]]]],[11,"year","chrono::naive","Returns the year number in the calendar date.",8,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",8,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",8,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",8,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",8,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",8,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",8,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",8,[[["self"]],["weekday"]]],[11,"iso_week","","",8,[[["self"]],["isoweek"]]],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",8,[[["self"],["i32"]],["option",["naivedate"]]]],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting…",8,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting…",8,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting…",8,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting…",8,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting…",8,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting…",8,[[["self"],["u32"]],["option",["naivedate"]]]],[11,"year","","Returns the year number in the calendar date.",11,[[["self"]],["i32"]]],[11,"month","","Returns the month number starting from 1.",11,[[["self"]],["u32"]]],[11,"month0","","Returns the month number starting from 0.",11,[[["self"]],["u32"]]],[11,"day","","Returns the day of month starting from 1.",11,[[["self"]],["u32"]]],[11,"day0","","Returns the day of month starting from 0.",11,[[["self"]],["u32"]]],[11,"ordinal","","Returns the day of year starting from 1.",11,[[["self"]],["u32"]]],[11,"ordinal0","","Returns the day of year starting from 0.",11,[[["self"]],["u32"]]],[11,"weekday","","Returns the day of week.",11,[[["self"]],["weekday"]]],[11,"iso_week","","",11,[[["self"]],["isoweek"]]],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",11,[[["self"],["i32"]],["option",["naivedatetime"]]]],[11,"with_month","","Makes a new `NaiveDateTime` with the month number…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"year","chrono","",12,[[["self"]],["i32"]]],[11,"month","","",12,[[["self"]],["u32"]]],[11,"month0","","",12,[[["self"]],["u32"]]],[11,"day","","",12,[[["self"]],["u32"]]],[11,"day0","","",12,[[["self"]],["u32"]]],[11,"ordinal","","",12,[[["self"]],["u32"]]],[11,"ordinal0","","",12,[[["self"]],["u32"]]],[11,"weekday","","",12,[[["self"]],["weekday"]]],[11,"iso_week","","",12,[[["self"]],["isoweek"]]],[11,"with_year","","",12,[[["self"],["i32"]],["option",["date"]]]],[11,"with_month","","",12,[[["self"],["u32"]],["option",["date"]]]],[11,"with_month0","","",12,[[["self"],["u32"]],["option",["date"]]]],[11,"with_day","","",12,[[["self"],["u32"]],["option",["date"]]]],[11,"with_day0","","",12,[[["self"],["u32"]],["option",["date"]]]],[11,"with_ordinal","","",12,[[["self"],["u32"]],["option",["date"]]]],[11,"with_ordinal0","","",12,[[["self"],["u32"]],["option",["date"]]]],[11,"year","","",13,[[["self"]],["i32"]]],[11,"month","","",13,[[["self"]],["u32"]]],[11,"month0","","",13,[[["self"]],["u32"]]],[11,"day","","",13,[[["self"]],["u32"]]],[11,"day0","","",13,[[["self"]],["u32"]]],[11,"ordinal","","",13,[[["self"]],["u32"]]],[11,"ordinal0","","",13,[[["self"]],["u32"]]],[11,"weekday","","",13,[[["self"]],["weekday"]]],[11,"iso_week","","",13,[[["self"]],["isoweek"]]],[11,"with_year","","",13,[[["self"],["i32"]],["option",["datetime"]]]],[11,"with_month","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_month0","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_day","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_day0","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_ordinal","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_ordinal0","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"hour","chrono::naive","Returns the hour number from 0 to 23.",10,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",10,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",10,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",10,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",10,[[["self"],["u32"]],["option",["naivetime"]]]],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",10,[[["self"],["u32"]],["option",["naivetime"]]]],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",10,[[["self"],["u32"]],["option",["naivetime"]]]],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole…",10,[[["self"],["u32"]],["option",["naivetime"]]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",10,[[["self"]],["u32"]]],[11,"hour","","Returns the hour number from 0 to 23.",11,[[["self"]],["u32"]]],[11,"minute","","Returns the minute number from 0 to 59.",11,[[["self"]],["u32"]]],[11,"second","","Returns the second number from 0 to 59.",11,[[["self"]],["u32"]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",11,[[["self"]],["u32"]]],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the…",11,[[["self"],["u32"]],["option",["naivedatetime"]]]],[11,"hour","chrono","",13,[[["self"]],["u32"]]],[11,"minute","","",13,[[["self"]],["u32"]]],[11,"second","","",13,[[["self"]],["u32"]]],[11,"nanosecond","","",13,[[["self"]],["u32"]]],[11,"with_hour","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_minute","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_second","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"with_nanosecond","","",13,[[["self"],["u32"]],["option",["datetime"]]]],[11,"next","chrono::format::strftime","",19,[[["self"]],["option",["item"]]]],[11,"eq","chrono::offset","",2,[[["self"],["localresult"]],["bool"]]],[11,"ne","","",2,[[["self"],["localresult"]],["bool"]]],[11,"eq","","",3,[[["self"],["utc"]],["bool"]]],[11,"eq","","",4,[[["self"],["fixedoffset"]],["bool"]]],[11,"ne","","",4,[[["self"],["fixedoffset"]],["bool"]]],[11,"eq","chrono::naive","",8,[[["self"],["naivedate"]],["bool"]]],[11,"ne","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"eq","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"ne","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"eq","","",10,[[["self"],["naivetime"]],["bool"]]],[11,"ne","","",10,[[["self"],["naivetime"]],["bool"]]],[11,"eq","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"ne","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"eq","chrono","",12,[[["self"],["date"]],["bool"]]],[11,"eq","","",0,[[["self"],["secondsformat"]],["bool"]]],[11,"eq","","",13,[[["self"],["datetime"]],["bool"]]],[11,"eq","chrono::format","",15,[[["self"],["pad"]],["bool"]]],[11,"eq","","",16,[[["self"],["numeric"]],["bool"]]],[11,"ne","","",16,[[["self"],["numeric"]],["bool"]]],[11,"eq","","",26,[[["self"],["internalnumeric"]],["bool"]]],[11,"eq","","",17,[[["self"],["fixed"]],["bool"]]],[11,"ne","","",17,[[["self"],["fixed"]],["bool"]]],[11,"eq","","",27,[[["self"],["internalfixed"]],["bool"]]],[11,"ne","","",27,[[["self"],["internalfixed"]],["bool"]]],[11,"eq","","",18,[[["self"],["item"]],["bool"]]],[11,"ne","","",18,[[["self"],["item"]],["bool"]]],[11,"eq","","",28,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",28,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",14,[[["self"],["parsed"]],["bool"]]],[11,"ne","","",14,[[["self"],["parsed"]],["bool"]]],[11,"eq","chrono","",1,[[["self"],["weekday"]],["bool"]]],[11,"eq","","",25,[[["self"],["parseweekdayerror"]],["bool"]]],[11,"ne","","",25,[[["self"],["parseweekdayerror"]],["bool"]]],[11,"default","chrono::format","",14,[[],["parsed"]]],[11,"cmp","chrono::naive","",8,[[["self"],["naivedate"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["isoweek"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["naivetime"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["naivedatetime"]],["ordering"]]],[11,"cmp","chrono","",12,[[["self"],["date"]],["ordering"]]],[11,"cmp","","",13,[[["self"],["datetime"]],["ordering"]]],[11,"clone","chrono::offset","",2,[[["self"]],["localresult"]]],[11,"clone","","",3,[[["self"]],["utc"]]],[11,"clone","","",4,[[["self"]],["fixedoffset"]]],[11,"clone","","",5,[[["self"]],["local"]]],[11,"clone","chrono::naive","",8,[[["self"]],["naivedate"]]],[11,"clone","","",9,[[["self"]],["isoweek"]]],[11,"clone","","",10,[[["self"]],["naivetime"]]],[11,"clone","","",11,[[["self"]],["naivedatetime"]]],[11,"clone","chrono","",12,[[["self"]],["date"]]],[11,"clone","","",0,[[["self"]],["secondsformat"]]],[11,"clone","","",13,[[["self"]],["datetime"]]],[11,"clone","chrono::format","",15,[[["self"]],["pad"]]],[11,"clone","","",16,[[["self"]],["numeric"]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"clone","","",17,[[["self"]],["fixed"]]],[11,"clone","","",27,[[["self"]],["internalfixed"]]],[11,"clone","","",18,[[["self"]],["item"]]],[11,"clone","","",28,[[["self"]],["parseerror"]]],[11,"clone","","",14,[[["self"]],["parsed"]]],[11,"clone","chrono::format::strftime","",19,[[["self"]],["strftimeitems"]]],[11,"clone","chrono","",1,[[["self"]],["weekday"]]],[11,"clone","","",25,[[["self"]],["parseweekdayerror"]]],[11,"from","","",13,[[["systemtime"]],["datetime",["utc"]]]],[11,"from","","",13,[[["systemtime"]],["datetime",["local"]]]],[11,"partial_cmp","chrono::naive","",8,[[["self"],["naivedate"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"le","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"gt","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"ge","","",8,[[["self"],["naivedate"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["isoweek"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"le","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"gt","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"ge","","",9,[[["self"],["isoweek"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["naivetime"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["naivetime"]],["bool"]]],[11,"le","","",10,[[["self"],["naivetime"]],["bool"]]],[11,"gt","","",10,[[["self"],["naivetime"]],["bool"]]],[11,"ge","","",10,[[["self"],["naivetime"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["naivedatetime"]],["option",["ordering"]]]],[11,"lt","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"le","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"gt","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"ge","","",11,[[["self"],["naivedatetime"]],["bool"]]],[11,"partial_cmp","chrono","",12,[[["self"],["date"]],["option",["ordering"]]]],[11,"partial_cmp","","",13,[[["self"],["datetime"]],["option",["ordering"]]]],[11,"fmt","chrono::offset","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::naive","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::format","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::format::strftime","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::format","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::offset","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::naive","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","chrono::format","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"hash","chrono::offset","",4,N],[11,"hash","chrono::naive","",8,N],[11,"hash","","",10,[[["self"],["h"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"hash","chrono","",12,[[["self"],["h"]]]],[11,"hash","","",13,[[["self"],["h"]]]],[11,"hash","","",1,N],[11,"add","chrono::naive","",10,[[["self"],["fixedoffset"]],["naivetime"]]],[11,"add","","",11,[[["self"],["fixedoffset"]],["naivedatetime"]]],[11,"add","chrono","",13,[[["self"],["fixedoffset"]],["datetime"]]],[11,"add","chrono::naive","",8,[[["self"],["oldduration"]],["naivedate"]]],[11,"add","","",10,[[["self"],["oldduration"]],["naivetime"]]],[11,"add","","",11,[[["self"],["oldduration"]],["naivedatetime"]]],[11,"add","chrono","",12,[[["self"],["oldduration"]],["date"]]],[11,"add","","",13,[[["self"],["oldduration"]],["datetime"]]],[11,"sub","chrono::naive","",10,[[["self"],["fixedoffset"]],["naivetime"]]],[11,"sub","","",11,[[["self"],["fixedoffset"]],["naivedatetime"]]],[11,"sub","chrono","",13,[[["self"],["fixedoffset"]],["datetime"]]],[11,"sub","chrono::naive","",8,[[["self"],["oldduration"]],["naivedate"]]],[11,"sub","","",8,[[["self"],["naivedate"]],["oldduration"]]],[11,"sub","","",10,[[["self"],["oldduration"]],["naivetime"]]],[11,"sub","","",10,[[["self"],["naivetime"]],["oldduration"]]],[11,"sub","","",11,[[["self"],["oldduration"]],["naivedatetime"]]],[11,"sub","","",11,[[["self"],["naivedatetime"]],["oldduration"]]],[11,"sub","chrono","",12,[[["self"],["oldduration"]],["date"]]],[11,"sub","","",12,[[["self"],["date"]],["oldduration"]]],[11,"sub","","",13,[[["self"],["oldduration"]],["datetime"]]],[11,"sub","","",13,[[["self"],["datetime"]],["oldduration"]]],[11,"add_assign","chrono::naive","",8,[[["self"],["oldduration"]]]],[11,"add_assign","","",10,[[["self"],["oldduration"]]]],[11,"add_assign","","",11,[[["self"],["oldduration"]]]],[11,"sub_assign","","",8,[[["self"],["oldduration"]]]],[11,"sub_assign","","",10,[[["self"],["oldduration"]]]],[11,"sub_assign","","",11,[[["self"],["oldduration"]]]],[11,"from_str","","",8,[[["str"]],["parseresult",["naivedate"]]]],[11,"from_str","","",10,[[["str"]],["parseresult",["naivetime"]]]],[11,"from_str","","",11,[[["str"]],["parseresult",["naivedatetime"]]]],[11,"from_str","chrono","",13,[[["str"]],["parseresult",["datetime"]]]],[11,"from_str","","",13,[[["str"]],["parseresult",["datetime"]]]],[11,"from_str","","",13,[[["str"]],["parseresult",["datetime"]]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"description","chrono::format","",28,[[["self"]],["str"]]],[11,"from_i64","chrono","",1,[[["i64"]],["option",["weekday"]]]],[11,"from_u64","","",1,[[["u64"]],["option",["weekday"]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",24,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",24,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",24,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",24,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",24,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",24,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",24,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",24,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",24,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",24,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",24,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",24,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",24,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",24,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",24,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",24,[[["self"]],["option",["i64"]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",24,[[["self"]],["option",["i64"]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",24,[[["self"],["duration"]],["option",["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",24,[[["self"],["duration"]],["option",["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",24,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",24,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",24,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",24,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",24,[[["duration"]],["result",["duration","outofrangeerror"]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",24,[[["self"]],["result",["duration","outofrangeerror"]]]]],"paths":[[4,"SecondsFormat"],[4,"Weekday"],[4,"LocalResult"],[3,"Utc"],[3,"FixedOffset"],[3,"Local"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"IsoWeek"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[3,"Parsed"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"StrftimeItems"],[3,"DelayedFormat"],[8,"SubsecRound"],[8,"Datelike"],[8,"Timelike"],[3,"Duration"],[3,"ParseWeekdayError"],[3,"InternalNumeric"],[3,"InternalFixed"],[3,"ParseError"]]};
searchIndex["clap"]={"doc":"`clap` is a simple-to-use, efficient, and full-featured…","items":[[3,"Arg","clap","The abstract representation of a command line argument.…",N,N],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way…",N,N],[3,"ArgMatches","","Used to get information about the arguments that where…",N,N],[3,"OsValues","","An iterator for getting multiple values out of an argument…",N,N],[3,"SubCommand","","The abstract representation of a command line subcommand.",N,N],[3,"Values","","An iterator for getting multiple values out of an argument…",N,N],[3,"App","","Used to create a representation of a command line program…",N,N],[3,"Error","","Command Line Argument Parser Error",N,N],[12,"message","","Formatted error message",0,N],[12,"kind","","The type of error",0,N],[12,"info","","Any additional information passed along, such as the…",0,N],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",N,N],[13,"Required","","The argument must be used",1,N],[13,"Multiple","","The argument may be used multiple times such as `--flag…",1,N],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",1,N],[13,"Global","","The argument should be propagated down through all child…",1,N],[13,"Hidden","","The argument should not be shown in help text",1,N],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",1,N],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",1,N],[13,"NextLineHelp","","Prints the help text on the line after the argument",1,N],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",1,N],[13,"HidePossibleValues","","Hides the possible values from the help string",1,N],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",1,N],[13,"RequireEquals","","Require options use `--option=val` syntax",1,N],[13,"Last","","Specifies that the arg is the last positional argument and…",1,N],[13,"HideDefaultValue","","Hides the default value from the help string",1,N],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",1,N],[13,"HideEnvValues","","Hides ENV values in the help message",1,N],[13,"HiddenShortHelp","","The argument should not be shown in short help text",1,N],[13,"HiddenLongHelp","","The argument should not be shown in long help text",1,N],[4,"AppSettings","","Application level settings, which affect how [`App`]…",N,N],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",2,N],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",2,N],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",2,N],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",2,N],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",2,N],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",2,N],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates…",2,N],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",2,N],[13,"ColoredHelp","","Uses colorized help messages.",2,N],[13,"ColorAuto","","Enables colored output only when the output is going to a…",2,N],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",2,N],[13,"ColorNever","","Disables colored output no matter if the output is going…",2,N],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",2,N],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",2,N],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",2,N],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting…",2,N],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help…",2,N],[13,"GlobalVersion","","Specifies to use the version of the current command for…",2,N],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from…",2,N],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",2,N],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or…",2,N],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",2,N],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",2,N],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",2,N],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the…",2,N],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",2,N],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",2,N],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at…",2,N],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\"…",2,N],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",2,N],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s…",2,N],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to…",2,N],[4,"ErrorKind","","Command line argument parser kind of error",N,N],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and…",3,N],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",3,N],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",3,N],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized…",3,N],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",3,N],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",3,N],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",3,N],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",3,N],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",3,N],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",3,N],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",3,N],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",3,N],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is…",3,N],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",3,N],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",3,N],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was…",3,N],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was…",3,N],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",3,N],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",3,N],[13,"Format","","Represents a [Format error] (which is a part of…",3,N],[4,"Shell","","Describes which shell to produce a completions file for",N,N],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",4,N],[13,"Fish","","Generates a .fish completion file for the Friendly…",4,N],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",4,N],[13,"PowerShell","","Generates a completion file for PowerShell",4,N],[13,"Elvish","","Generates a completion file for Elvish",4,N],[11,"new","","Creates a new instance of an application requiring a name.…",5,[[["s"]],["self"]]],[11,"get_name","","Get the name of the app",5,[[["self"]],["str"]]],[11,"get_bin_name","","Get the name of the binary",5,[[["self"]],["option",["str"]]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",5,[[["s"]],["self"]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",5,[[["self"],["s"]],["self"]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",5,[[["self"],["s"]],["self"]]],[11,"about","","Sets a string describing what the program does. This will…",5,[[["self"],["s"]],["self"]]],[11,"long_about","","Sets a string describing what the program does. This will…",5,[[["self"],["s"]],["self"]]],[11,"name","","Sets the program's name. This will be displayed when…",5,[[["self"],["s"]],["self"]]],[11,"after_help","","Adds additional help information to be displayed in…",5,[[["self"],["s"]],["self"]]],[11,"before_help","","Adds additional help information to be displayed in…",5,[[["self"],["s"]],["self"]]],[11,"version","","Sets a string of the version number to be displayed when…",5,[[["self"],["s"]],["self"]]],[11,"long_version","","Sets a string of the version number to be displayed when…",5,[[["self"],["s"]],["self"]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",5,[[["self"],["s"]],["self"]]],[11,"help","","Sets a custom help message and overrides the…",5,[[["self"],["s"]],["self"]]],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",5,[[["self"],["s"]],["self"]]],[11,"version_short","","Sets the [`short`] for the auto-generated `version`…",5,[[["self"],["s"]],["self"]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,[[["self"],["s"]],["self"]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",5,[[["self"],["s"]],["self"]]],[11,"template","","Sets the help template to be used, overriding the default…",5,[[["self"],["s"]],["self"]]],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",5,[[["self"],["appsettings"]],["self"]]],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",5,N],[11,"global_setting","","Enables a single setting that is propagated down through…",5,[[["self"],["appsettings"]],["self"]]],[11,"global_settings","","Enables multiple settings which are propagated down…",5,N],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",5,[[["self"],["appsettings"]],["self"]]],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level…",5,N],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",5,[[["self"],["usize"]],["self"]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",5,[[["self"],["usize"]],["self"]]],[11,"arg","","Adds an [argument] to the list of valid possibilities.",5,[[["self"],["a"]],["self"]]],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",5,N],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a…",5,[[["self"],["str"]],["self"]]],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one…",5,[[["self"],["str"]],["self"]]],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as…",5,[[["self"],["s"]],["self"]]],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as…",5,N],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions…",5,[[["self"],["s"]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that…",5,N],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",5,[[["self"],["arggroup"]],["self"]]],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,N],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities.…",5,[[["self"],["app"]],["self"]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",5,[[["self"],["i"]],["self"]]],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help…",5,[[["self"],["usize"]],["self"]]],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[["self"]],["clapresult"]]],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[["self"]],["clapresult"]]],[11,"write_help","","Writes the full help message to the user to a…",5,[[["self"],["w"]],["clapresult"]]],[11,"write_long_help","","Writes the full help message to the user to a…",5,[[["self"],["w"]],["clapresult"]]],[11,"write_version","","Writes the version message to the user to a [`io::Write`]…",5,[[["self"],["w"]],["clapresult"]]],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`]…",5,[[["self"],["w"]],["clapresult"]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",5,[[["self"],["s"],["shell"],["t"]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",5,[[["self"],["s"],["shell"],["w"]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",5,[[["self"]],["argmatches"]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",5,[[["self"]],["clapresult",["argmatches"]]]],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this…",5,[[["self"],["i"]],["argmatches"]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",5,[[["self"],["i"]],["clapresult",["argmatches"]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`]…",5,[[["self"],["i"]],["clapresult",["argmatches"]]]],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string…",6,[[["str"]],["self"]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string.…",6,[[["str"]],["self"]]],[11,"short","","Sets the short version of the argument without the…",6,[[["self"],["s"]],["self"]]],[11,"long","","Sets the long version of the argument without the…",6,[[["self"],["str"]],["self"]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\"…",6,[[["self"],["s"]],["self"]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\"…",6,N],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like…",6,[[["self"],["s"]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions…",6,N],[11,"help","","Sets the short help text of the argument that will be…",6,[[["self"],["str"]],["self"]]],[11,"long_help","","Sets the long help text of the argument that will be…",6,[[["self"],["str"]],["self"]]],[11,"last","","Specifies that this arg is the last, or final, positional…",6,[[["self"],["bool"]],["self"]]],[11,"required","","Sets whether or not the argument is required by default.…",6,[[["self"],["bool"]],["self"]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",6,[[["self"],["bool"]],["self"]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,[[["self"],["bool"]],["self"]]],[11,"required_unless","","Sets an arg that override this arg's required setting.…",6,[[["self"],["str"]],["self"]]],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e.…",6,N],[11,"required_unless_one","","Sets args that override this arg's [required] setting.…",6,N],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",6,[[["self"],["str"]],["self"]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying…",6,N],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",6,[[["self"],["str"]],["self"]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",6,N],[11,"requires","","Sets an argument by name that is required when this one is…",6,[[["self"],["str"]],["self"]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",6,[[["self"],["str"],["str"]],["self"]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",6,N],[11,"required_if","","Allows specifying that an argument is [required]…",6,[[["self"],["str"],["str"]],["self"]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on…",6,N],[11,"requires_all","","Sets multiple arguments by names that are required when…",6,N],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[["self"],["bool"]],["self"]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",6,[[["self"],["bool"]],["self"]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",6,[[["self"],["bool"]],["self"]]],[11,"index","","Specifies the index of a positional argument starting at 1.",6,[[["self"],["u64"]],["self"]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",6,[[["self"],["bool"]],["self"]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",6,[[["self"],["str"]],["self"]]],[11,"global","","Specifies that an argument can be matched to all child…",6,[[["self"],["bool"]],["self"]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",6,[[["self"],["bool"]],["self"]]],[11,"hidden","","Hides an argument from help message output.",6,[[["self"],["bool"]],["self"]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",6,N],[11,"possible_value","","Specifies a possible value for this argument, one at a…",6,[[["self"],["str"]],["self"]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",6,[[["self"],["bool"]],["self"]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument…",6,[[["self"],["str"]],["self"]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the…",6,N],[11,"number_of_values","","Specifies how many values are required to satisfy this…",6,[[["self"],["u64"]],["self"]]],[11,"validator","","Allows one to perform a custom validation on the argument…",6,[[["self"],["f"]],["self"]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",6,[[["self"],["f"]],["self"]]],[11,"max_values","","Specifies the maximum number of values are for this…",6,[[["self"],["u64"]],["self"]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",6,[[["self"],["u64"]],["self"]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",6,[[["self"],["bool"]],["self"]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",6,[[["self"],["bool"]],["self"]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",6,[[["self"],["str"]],["self"]]],[11,"value_names","","Specify multiple names for values of option arguments.…",6,N],[11,"value_name","","Specifies the name for value of [option] or [positional]…",6,[[["self"],["str"]],["self"]]],[11,"default_value","","Specifies the value of the argument when not specified at…",6,[[["self"],["str"]],["self"]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",6,[[["self"],["osstr"]],["self"]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",6,[[["self"],["str"],["option",["str"]],["str"]],["self"]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",6,[[["self"],["str"],["option",["osstr"]],["osstr"]],["self"]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",6,N],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",6,N],[11,"env","","Specifies that if the value is not passed in as an…",6,[[["self"],["str"]],["self"]]],[11,"env_os","","Specifies that if the value is not passed in as an…",6,[[["self"],["osstr"]],["self"]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[["self"],["bool"]],["self"]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",6,[[["self"],["bool"]],["self"]]],[11,"display_order","","Allows custom ordering of args within the help message.…",6,[[["self"],["usize"]],["self"]]],[11,"raw","","Indicates that all parameters passed after this should not…",6,[[["self"],["bool"]],["self"]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[["self"],["bool"]],["self"]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[["self"],["bool"]],["self"]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for…",6,[[["self"],["argsettings"]],["bool"]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument…",6,[[["self"],["argsettings"]],["self"]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the…",6,[[["self"],["argsettings"]],["self"]]],[11,"value_of","","Gets the value of a specific [option] or [positional]…",7,[[["self"],["s"]],["option",["str"]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["self"],["s"]],["option",["cow"]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["self"],["s"]],["option",["osstr"]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["self"],["s"]],["option",["values"]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["self"],["s"]],["option",["vec"]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["self"],["s"]],["option",["osvalues"]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["self"],["s"]],["bool"]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["self"],["s"]],["u64"]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["self"],["s"]],["option",["usize"]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["self"],["s"]],["option",["indices"]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"],["s"]],["option",["argmatches"]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"]],["option",["str"]]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`]…",7,N],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",8,[[["str"]],["app"]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",9,[[["str"]],["self"]]],[11,"arg","","Adds an [argument] to this group by name",9,[[["self"],["str"]],["self"]]],[11,"args","","Adds multiple [arguments] to this group by name",9,N],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be…",9,[[["self"],["bool"]],["self"]]],[11,"required","","Sets the group as required or not. A required group will…",9,[[["self"],["bool"]],["self"]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",9,[[["self"],["str"]],["self"]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",9,N],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",9,[[["self"],["str"]],["self"]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",9,N],[11,"use_stderr","","Should the message be written to `stdout` or not",0,[[["self"]],["bool"]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,N],[11,"with_description","","Create an error with a custom description.",0,[[["str"],["errorkind"]],["self"]]],[11,"variants","","A list of possible variants in `&'static str` form",4,N],[6,"Result","","Short hand for [`Result`] type",N,N],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",N,N],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",N,N],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where…",N,N],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where…",N,N],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",N,N],[14,"arg_enum","","Convenience macro to generate more complete enums with…",N,N],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",N,N],[14,"crate_authors","","Allows you to pull the authors for the app from your…",N,N],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",N,N],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",N,N],[14,"app_from_crate","","Allows you to build the `App` instance from your…",N,N],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",N,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"next","","",11,[[["self"]],["option",["str"]]]],[11,"size_hint","","",11,N],[11,"next","","",10,[[["self"]],["option",["osstr"]]]],[11,"size_hint","","",10,N],[11,"eq","","",2,[[["self"],["appsettings"]],["bool"]]],[11,"eq","","",6,[[["self"],["arg"]],["bool"]]],[11,"eq","","",1,[[["self"],["argsettings"]],["bool"]]],[11,"eq","","",3,[[["self"],["errorkind"]],["bool"]]],[11,"next_back","","",11,[[["self"]],["option",["str"]]]],[11,"next_back","","",10,[[["self"]],["option",["osstr"]]]],[11,"default","","",6,[[],["arg"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",9,[[],["arggroup"]]],[11,"clone","","",2,[[["self"]],["appsettings"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["arg"]]],[11,"clone","","",7,[[["self"]],["argmatches"]]],[11,"clone","","",11,[[["self"]],["values"]]],[11,"clone","","",10,[[["self"]],["osvalues"]]],[11,"clone","","",8,[[["self"]],["subcommand"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["argsettings"]]],[11,"clone","","",3,[[["self"]],["errorkind"]]],[11,"clone","","",4,[[["self"]],["shell"]]],[11,"from","","",6,[[["arg"]],["self"]]],[11,"from","","",9,[[["arggroup"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"from_str","","",4,[[["str"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]]],"paths":[[3,"Error"],[4,"ArgSettings"],[4,"AppSettings"],[4,"ErrorKind"],[4,"Shell"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"SubCommand"],[3,"ArgGroup"],[3,"OsValues"],[3,"Values"]]};
searchIndex["crc"]={"doc":"crc Rust implementation of CRC(16, 32, 64)","items":[[0,"crc16","crc","",N,N],[3,"Digest","crc::crc16","",N,N],[5,"make_table","","",N,N],[5,"update","","",N,N],[5,"checksum_x25","","",N,N],[5,"checksum_usb","","",N,N],[17,"X25","","",N,N],[17,"X25_TABLE","","",N,N],[17,"USB","","",N,N],[17,"USB_TABLE","","",N,N],[8,"Hasher16","","",N,N],[10,"reset","","",0,[[["self"]]]],[10,"write","","",0,N],[10,"sum16","","",0,[[["self"]],["u16"]]],[11,"new","","",1,[[["u16"]],["digest"]]],[11,"new_with_initial","","",1,[[["u16"],["u16"]],["digest"]]],[0,"crc32","crc","",N,N],[3,"Digest","crc::crc32","",N,N],[5,"make_table","","",N,N],[5,"update","","",N,N],[5,"checksum_ieee","","",N,N],[5,"checksum_castagnoli","","",N,N],[5,"checksum_koopman","","",N,N],[17,"CASTAGNOLI","","",N,N],[17,"CASTAGNOLI_TABLE","","",N,N],[17,"IEEE","","",N,N],[17,"IEEE_TABLE","","",N,N],[17,"KOOPMAN","","",N,N],[17,"KOOPMAN_TABLE","","",N,N],[8,"Hasher32","","",N,N],[10,"reset","","",2,[[["self"]]]],[10,"write","","",2,N],[10,"sum32","","",2,[[["self"]],["u32"]]],[11,"new","","",3,[[["u32"]],["digest"]]],[11,"new_with_initial","","",3,[[["u32"],["u32"]],["digest"]]],[0,"crc64","crc","",N,N],[3,"Digest","crc::crc64","",N,N],[5,"make_table","","",N,N],[5,"update","","",N,N],[5,"checksum_ecma","","",N,N],[5,"checksum_iso","","",N,N],[17,"ECMA","","",N,N],[17,"ECMA_TABLE","","",N,N],[17,"ISO","","",N,N],[17,"ISO_TABLE","","",N,N],[8,"Hasher64","","",N,N],[10,"reset","","",4,[[["self"]]]],[10,"write","","",4,N],[10,"sum64","","",4,[[["self"]],["u64"]]],[11,"new","","",5,[[["u64"]],["digest"]]],[11,"new_with_initial","","",5,[[["u64"],["u64"]],["digest"]]],[11,"from","crc::crc16","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","crc::crc32","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","crc::crc64","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"reset","crc::crc16","",1,[[["self"]]]],[11,"write","","",1,N],[11,"sum16","","",1,[[["self"]],["u16"]]],[11,"reset","crc::crc32","",3,[[["self"]]]],[11,"write","","",3,N],[11,"sum32","","",3,[[["self"]],["u32"]]],[11,"reset","crc::crc64","",5,[[["self"]]]],[11,"write","","",5,N],[11,"sum64","","",5,[[["self"]],["u64"]]],[11,"write","crc::crc16","",1,N],[11,"finish","","",1,[[["self"]],["u64"]]],[11,"write","crc::crc32","",3,N],[11,"finish","","",3,[[["self"]],["u64"]]],[11,"write","crc::crc64","",5,N],[11,"finish","","",5,[[["self"]],["u64"]]]],"paths":[[8,"Hasher16"],[3,"Digest"],[8,"Hasher32"],[3,"Digest"],[8,"Hasher64"],[3,"Digest"]]};
searchIndex["crossbeam_deque"]={"doc":"A concurrent work-stealing deque.","items":[[3,"Deque","crossbeam_deque","A concurrent work-stealing deque.",N,N],[3,"Stealer","","A stealer that steals elements from the top of a deque.",N,N],[4,"Steal","","Possible outcomes of a steal operation.",N,N],[13,"Empty","","The deque was empty at the time of stealing.",0,N],[13,"Data","","Some data has been successfully stolen.",0,N],[13,"Retry","","Lost the race for stealing data to another concurrent…",0,N],[11,"new","","Returns a new deque.",1,[[],["deque"]]],[11,"with_min_capacity","","Returns a new deque with the specified minimum capacity.",1,[[["usize"]],["deque"]]],[11,"is_empty","","Returns `true` if the deque is empty.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the deque.",1,[[["self"]],["usize"]]],[11,"push","","Pushes an element into the bottom of the deque.",1,[[["self"],["t"]]]],[11,"pop","","Pops an element from the bottom of the deque.",1,[[["self"]],["option"]]],[11,"steal","","Steals an element from the top of the deque.",1,[[["self"]],["steal"]]],[11,"stealer","","Creates a stealer that can be shared with other threads.",1,[[["self"]],["stealer"]]],[11,"is_empty","","Returns `true` if the deque is empty.",2,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the deque.",2,[[["self"]],["usize"]]],[11,"steal","","Steals an element from the top of the deque.",2,[[["self"]],["steal"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["steal"]],["bool"]]],[11,"ne","","",0,[[["self"],["steal"]],["bool"]]],[11,"default","","",1,[[],["deque"]]],[11,"cmp","","",0,[[["self"],["steal"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["steal"]]],[11,"clone","","Creates another stealer.",2,[[["self"]],["stealer"]]],[11,"partial_cmp","","",0,[[["self"],["steal"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["steal"]],["bool"]]],[11,"le","","",0,[[["self"],["steal"]],["bool"]]],[11,"gt","","",0,[[["self"],["steal"]],["bool"]]],[11,"ge","","",0,[[["self"],["steal"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"Steal"],[3,"Deque"],[3,"Stealer"]]};
searchIndex["crossbeam_epoch"]={"doc":"Epoch-based memory reclamation.","items":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",N,N],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",N,N],[12,"current","","The value in the atomic pointer at the time of the failed…",0,N],[12,"new","","The new value, which the operation failed to store.",0,N],[3,"Owned","","An owned heap-allocated object.",N,N],[3,"Shared","","A pointer to an object protected by the epoch GC.",N,N],[3,"Guard","","A guard that keeps the current thread pinned.",N,N],[3,"Collector","","An epoch-based garbage collector.",N,N],[3,"Handle","","A handle to a garbage collector.",N,N],[5,"unprotected","","Returns a reference to a dummy guard that allows…",N,[[],["guard"]]],[5,"default_handle","","Returns the default handle associated with the current…",N,[[],["handle"]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin","","Pins the current thread.",N,[[],["guard"]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new","","Allocates `value` on the heap and returns a new atomic…",1,[[["t"]],["atomic"]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["self"],["ordering"],["guard"]],["shared"]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["self"],["p"],["ordering"]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["self"],["p"],["ordering"],["guard"]],["shared"]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["self"],["shared"],["p"],["o"],["guard"]],["result",["shared","compareandseterror"]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["self"],["shared"],["p"],["o"],["guard"]],["result",["shared","compareandseterror"]]]],[11,"fetch_and","","Bitwise \"and\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"fetch_or","","Bitwise \"or\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"fetch_xor","","Bitwise \"xor\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"new","","Allocates `value` on the heap and returns a new owned…",2,[[["t"]],["owned"]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,N],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,[[["self"],["guard"]],["shared"]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[["self"]],["box"]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",2,[[["self"],["usize"]],["owned"]]],[11,"null","","Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,N],[11,"deref","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[["self"]],["option"]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[["self"]],["owned"]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",3,[[["self"],["usize"]],["shared"]]],[11,"new","","Creates a new collector.",4,[[],["self"]]],[11,"handle","","Creates a new handle for the collector.",4,[[["self"]],["handle"]]],[11,"pin","","Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,"defer","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",N,N],[10,"success","","The ordering of the operation when it succeeds.",7,[[["self"]],["ordering"]]],[10,"failure","","The ordering of the operation when it fails.",7,[[["self"]],["ordering"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","","",3,[[["self"],["self"]],["bool"]]],[11,"cmp","","",3,[[["self"],["self"]],["ordering"]]],[11,"partial_cmp","","",3,[[["self"],["self"]],["option",["ordering"]]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from","","",1,[[["box"]],["self"]]],[11,"from","","",1,[[["t"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,N],[11,"from","","",2,[[["t"]],["self"]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,N],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["guard"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"as_mut","","",2,[[["self"]],["t"]]],[11,"as_ref","","",2,[[["self"]],["t"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]]],"paths":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"Handle"],[3,"Guard"],[8,"CompareAndSetOrdering"]]};
searchIndex["crossbeam_utils"]={"doc":"","items":[[0,"cache_padded","crossbeam_utils","",N,N],[3,"CachePadded","crossbeam_utils::cache_padded","Pads `T` to the length of a cache line.",N,N],[11,"new","","Pads a value to the length of a cache line.",0,[[["t"]],["cachepadded"]]],[0,"atomic_option","crossbeam_utils","",N,N],[3,"AtomicOption","crossbeam_utils::atomic_option","",N,N],[11,"new","","",1,[[],["self"]]],[11,"swap_box","","",1,[[["self"],["box"],["ordering"]],["option",["box"]]]],[11,"swap","","",1,[[["self"],["t"],["ordering"]],["option"]]],[11,"take","","",1,[[["self"],["ordering"]],["option"]]],[0,"scoped","crossbeam_utils","",N,N],[3,"Scope","crossbeam_utils::scoped","",N,N],[3,"ScopedJoinHandle","","A handle to a scoped thread",N,N],[3,"ScopedThreadBuilder","","Scoped thread configuration. Provides detailed control…",N,N],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",N,[[["f"]],["joinhandle"]]],[5,"builder_spawn_unsafe","","Like `std::thread::Builder::spawn`, but without the…",N,[[["builder"],["f"]],["result",["joinhandle"]]]],[5,"scope","","Create a new `scope`, for deferred destructors.",N,[[["f"]],["r"]]],[11,"defer","","Schedule code to be executed when exiting the scope.",2,[[["self"],["f"]]]],[11,"spawn","","Create a scoped thread.",2,[[["self"],["f"]],["scopedjoinhandle"]]],[11,"builder","","Generates the base configuration for spawning a scoped…",2,[[["self"]],["scopedthreadbuilder"]]],[11,"name","","Names the thread-to-be. Currently the name is used for…",3,[[["self"],["string"]],["scopedthreadbuilder"]]],[11,"stack_size","","Sets the size of the stack for the new thread.",3,[[["self"],["usize"]],["scopedthreadbuilder"]]],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",3,[[["self"],["f"]],["result",["scopedjoinhandle"]]]],[11,"join","","Join the scoped thread, returning the result it produced.",4,[[["self"]],["t"]]],[11,"thread","","Get the underlying thread handle.",4,[[["self"]],["thread"]]],[11,"from","crossbeam_utils::cache_padded","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::atomic_option","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::scoped","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"default","crossbeam_utils::cache_padded","",0,[[],["self"]]],[11,"default","crossbeam_utils::atomic_option","",1,[[],["self"]]],[11,"clone","crossbeam_utils::cache_padded","",0,[[["self"]],["self"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"drop","","",0,[[["self"]]]],[11,"drop","crossbeam_utils::atomic_option","",1,[[["self"]]]],[11,"drop","crossbeam_utils::scoped","",2,[[["self"]]]],[11,"fmt","crossbeam_utils::cache_padded","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils::atomic_option","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","crossbeam_utils::scoped","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","crossbeam_utils::cache_padded","",0,[[["self"]],["t"]]],[11,"deref","","",0,[[["self"]],["t"]]]],"paths":[[3,"CachePadded"],[3,"AtomicOption"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"]]};
searchIndex["dtoa"]={"doc":"","items":[[5,"write","dtoa","",N,[[["w"],["v"]],["result",["usize"]]]],[8,"Floating","","",N,N],[10,"write","","",0,[[["self"],["w"]],["result",["usize"]]]],[14,"diyfp","","",N,N],[14,"dtoa","","",N,N]],"paths":[[8,"Floating"]]};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","items":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",N,N],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"hash","","",0,N],[11,"from","","",0,[[["result"]],["self"]]],[11,"deref","","",0,N],[11,"deref_mut","","",0,N],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"into","","",0,[[["self"]],["result"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["target"]]]],"paths":[[4,"Either"]]};
searchIndex["encoding_rs"]={"doc":"encoding_rs is a Gecko-oriented Free Software / Open…","items":[[3,"Encoding","encoding_rs","An encoding as defined in the [Encoding Standard][1].",N,N],[3,"Decoder","","A converter that decodes a byte stream into Unicode…",N,N],[3,"Encoder","","A converter that encodes a Unicode stream into bytes…",N,N],[4,"CoderResult","","Result of a (potentially partial) decode or encode…",N,N],[13,"InputEmpty","","The input was exhausted.",0,N],[13,"OutputFull","","The converter cannot produce another unit of output,…",0,N],[4,"DecoderResult","","Result of a (potentially partial) decode operation without…",N,N],[13,"InputEmpty","","The input was exhausted.",1,N],[13,"OutputFull","","The decoder cannot produce another unit of output, because…",1,N],[13,"Malformed","","The decoder encountered a malformed byte sequence.",1,N],[4,"EncoderResult","","Result of a (potentially partial) encode operation without…",N,N],[13,"InputEmpty","","The input was exhausted.",2,N],[13,"OutputFull","","The encoder cannot produce another unit of output, because…",2,N],[13,"Unmappable","","The encoder encountered an unmappable character.",2,N],[0,"mem","","Functions for converting between different in-RAM…",N,N],[4,"Latin1Bidi","encoding_rs::mem","Classification of text as Latin1 (all code points are…",N,N],[13,"Latin1","","Every character is below U+0100.",3,N],[13,"LeftToRight","","There is at least one character that's U+0100 or higher,…",3,N],[13,"Bidi","","There is at least one right-to-left character.",3,N],[5,"is_ascii","","Checks whether the buffer is all-ASCII.",N,N],[5,"is_basic_latin","","Checks whether the buffer is all-Basic Latin (i.e. UTF-16…",N,N],[5,"is_utf8_latin1","","Checks whether the buffer is valid UTF-8 representing only…",N,N],[5,"is_str_latin1","","Checks whether the buffer represents only code point less…",N,[[["str"]],["bool"]]],[5,"is_utf16_latin1","","Checks whether the buffer represents only code point less…",N,N],[5,"is_utf8_bidi","","Checks whether a potentially-invalid UTF-8 buffer contains…",N,N],[5,"is_str_bidi","","Checks whether a valid UTF-8 buffer contains code points…",N,[[["str"]],["bool"]]],[5,"is_utf16_bidi","","Checks whether a UTF-16 buffer contains code points that…",N,N],[5,"is_char_bidi","","Checks whether a code point triggers right-to-left…",N,[[["char"]],["bool"]]],[5,"is_utf16_code_unit_bidi","","Checks whether a UTF-16 code unit triggers right-to-left…",N,[[["u16"]],["bool"]]],[5,"check_utf8_for_latin1_and_bidi","","Checks whether a potentially invalid UTF-8 buffer contains…",N,N],[5,"check_str_for_latin1_and_bidi","","Checks whether a valid UTF-8 buffer contains code points…",N,[[["str"]],["latin1bidi"]]],[5,"check_utf16_for_latin1_and_bidi","","Checks whether a potentially invalid UTF-16 buffer…",N,N],[5,"convert_utf8_to_utf16","","Converts potentially-invalid UTF-8 to valid UTF-16 with…",N,N],[5,"convert_str_to_utf16","","Converts valid UTF-8 to valid UTF-16.",N,N],[5,"convert_utf16_to_utf8_partial","","Converts potentially-invalid UTF-16 to valid UTF-8 with…",N,N],[5,"convert_utf16_to_utf8","","Converts potentially-invalid UTF-16 to valid UTF-8 with…",N,N],[5,"convert_utf16_to_str_partial","","Converts potentially-invalid UTF-16 to valid UTF-8 with…",N,N],[5,"convert_utf16_to_str","","Converts potentially-invalid UTF-16 to valid UTF-8 with…",N,N],[5,"convert_latin1_to_utf16","","Converts bytes whose unsigned value is interpreted as…",N,N],[5,"convert_latin1_to_utf8_partial","","Converts bytes whose unsigned value is interpreted as…",N,N],[5,"convert_latin1_to_utf8","","Converts bytes whose unsigned value is interpreted as…",N,N],[5,"convert_latin1_to_str_partial","","Converts bytes whose unsigned value is interpreted as…",N,N],[5,"convert_latin1_to_str","","Converts bytes whose unsigned value is interpreted as…",N,N],[5,"convert_utf8_to_latin1_lossy","","If the input is valid UTF-8 representing only Unicode code…",N,N],[5,"convert_utf16_to_latin1_lossy","","If the input is valid UTF-16 representing only Unicode…",N,N],[5,"utf16_valid_up_to","","Returns the index of the first unpaired surrogate or, if…",N,N],[5,"ensure_utf16_validity","","Replaces unpaired surrogates in the input with the…",N,N],[5,"copy_ascii_to_ascii","","Copies ASCII from source to destination up to the first…",N,N],[5,"copy_ascii_to_basic_latin","","Copies ASCII from source to destination zero-extending it…",N,N],[5,"copy_basic_latin_to_ascii","","Copies Basic Latin from source to destination narrowing it…",N,N],[7,"BIG5_INIT","encoding_rs","The initializer for the Big5 encoding.",N,N],[7,"BIG5","","The Big5 encoding.",N,N],[7,"EUC_JP_INIT","","The initializer for the EUC-JP encoding.",N,N],[7,"EUC_JP","","The EUC-JP encoding.",N,N],[7,"EUC_KR_INIT","","The initializer for the EUC-KR encoding.",N,N],[7,"EUC_KR","","The EUC-KR encoding.",N,N],[7,"GBK_INIT","","The initializer for the GBK encoding.",N,N],[7,"GBK","","The GBK encoding.",N,N],[7,"IBM866_INIT","","The initializer for the IBM866 encoding.",N,N],[7,"IBM866","","The IBM866 encoding.",N,N],[7,"ISO_2022_JP_INIT","","The initializer for the ISO-2022-JP encoding.",N,N],[7,"ISO_2022_JP","","The ISO-2022-JP encoding.",N,N],[7,"ISO_8859_10_INIT","","The initializer for the ISO-8859-10 encoding.",N,N],[7,"ISO_8859_10","","The ISO-8859-10 encoding.",N,N],[7,"ISO_8859_13_INIT","","The initializer for the ISO-8859-13 encoding.",N,N],[7,"ISO_8859_13","","The ISO-8859-13 encoding.",N,N],[7,"ISO_8859_14_INIT","","The initializer for the ISO-8859-14 encoding.",N,N],[7,"ISO_8859_14","","The ISO-8859-14 encoding.",N,N],[7,"ISO_8859_15_INIT","","The initializer for the ISO-8859-15 encoding.",N,N],[7,"ISO_8859_15","","The ISO-8859-15 encoding.",N,N],[7,"ISO_8859_16_INIT","","The initializer for the ISO-8859-16 encoding.",N,N],[7,"ISO_8859_16","","The ISO-8859-16 encoding.",N,N],[7,"ISO_8859_2_INIT","","The initializer for the ISO-8859-2 encoding.",N,N],[7,"ISO_8859_2","","The ISO-8859-2 encoding.",N,N],[7,"ISO_8859_3_INIT","","The initializer for the ISO-8859-3 encoding.",N,N],[7,"ISO_8859_3","","The ISO-8859-3 encoding.",N,N],[7,"ISO_8859_4_INIT","","The initializer for the ISO-8859-4 encoding.",N,N],[7,"ISO_8859_4","","The ISO-8859-4 encoding.",N,N],[7,"ISO_8859_5_INIT","","The initializer for the ISO-8859-5 encoding.",N,N],[7,"ISO_8859_5","","The ISO-8859-5 encoding.",N,N],[7,"ISO_8859_6_INIT","","The initializer for the ISO-8859-6 encoding.",N,N],[7,"ISO_8859_6","","The ISO-8859-6 encoding.",N,N],[7,"ISO_8859_7_INIT","","The initializer for the ISO-8859-7 encoding.",N,N],[7,"ISO_8859_7","","The ISO-8859-7 encoding.",N,N],[7,"ISO_8859_8_INIT","","The initializer for the ISO-8859-8 encoding.",N,N],[7,"ISO_8859_8","","The ISO-8859-8 encoding.",N,N],[7,"ISO_8859_8_I_INIT","","The initializer for the ISO-8859-8-I encoding.",N,N],[7,"ISO_8859_8_I","","The ISO-8859-8-I encoding.",N,N],[7,"KOI8_R_INIT","","The initializer for the KOI8-R encoding.",N,N],[7,"KOI8_R","","The KOI8-R encoding.",N,N],[7,"KOI8_U_INIT","","The initializer for the KOI8-U encoding.",N,N],[7,"KOI8_U","","The KOI8-U encoding.",N,N],[7,"SHIFT_JIS_INIT","","The initializer for the Shift_JIS encoding.",N,N],[7,"SHIFT_JIS","","The Shift_JIS encoding.",N,N],[7,"UTF_16BE_INIT","","The initializer for the UTF-16BE encoding.",N,N],[7,"UTF_16BE","","The UTF-16BE encoding.",N,N],[7,"UTF_16LE_INIT","","The initializer for the UTF-16LE encoding.",N,N],[7,"UTF_16LE","","The UTF-16LE encoding.",N,N],[7,"UTF_8_INIT","","The initializer for the UTF-8 encoding.",N,N],[7,"UTF_8","","The UTF-8 encoding.",N,N],[7,"GB18030_INIT","","The initializer for the gb18030 encoding.",N,N],[7,"GB18030","","The gb18030 encoding.",N,N],[7,"MACINTOSH_INIT","","The initializer for the macintosh encoding.",N,N],[7,"MACINTOSH","","The macintosh encoding.",N,N],[7,"REPLACEMENT_INIT","","The initializer for the replacement encoding.",N,N],[7,"REPLACEMENT","","The replacement encoding.",N,N],[7,"WINDOWS_1250_INIT","","The initializer for the windows-1250 encoding.",N,N],[7,"WINDOWS_1250","","The windows-1250 encoding.",N,N],[7,"WINDOWS_1251_INIT","","The initializer for the windows-1251 encoding.",N,N],[7,"WINDOWS_1251","","The windows-1251 encoding.",N,N],[7,"WINDOWS_1252_INIT","","The initializer for the windows-1252 encoding.",N,N],[7,"WINDOWS_1252","","The windows-1252 encoding.",N,N],[7,"WINDOWS_1253_INIT","","The initializer for the windows-1253 encoding.",N,N],[7,"WINDOWS_1253","","The windows-1253 encoding.",N,N],[7,"WINDOWS_1254_INIT","","The initializer for the windows-1254 encoding.",N,N],[7,"WINDOWS_1254","","The windows-1254 encoding.",N,N],[7,"WINDOWS_1255_INIT","","The initializer for the windows-1255 encoding.",N,N],[7,"WINDOWS_1255","","The windows-1255 encoding.",N,N],[7,"WINDOWS_1256_INIT","","The initializer for the windows-1256 encoding.",N,N],[7,"WINDOWS_1256","","The windows-1256 encoding.",N,N],[7,"WINDOWS_1257_INIT","","The initializer for the windows-1257 encoding.",N,N],[7,"WINDOWS_1257","","The windows-1257 encoding.",N,N],[7,"WINDOWS_1258_INIT","","The initializer for the windows-1258 encoding.",N,N],[7,"WINDOWS_1258","","The windows-1258 encoding.",N,N],[7,"WINDOWS_874_INIT","","The initializer for the windows-874 encoding.",N,N],[7,"WINDOWS_874","","The windows-874 encoding.",N,N],[7,"X_MAC_CYRILLIC_INIT","","The initializer for the x-mac-cyrillic encoding.",N,N],[7,"X_MAC_CYRILLIC","","The x-mac-cyrillic encoding.",N,N],[7,"X_USER_DEFINED_INIT","","The initializer for the x-user-defined encoding.",N,N],[7,"X_USER_DEFINED","","The x-user-defined encoding.",N,N],[11,"for_label","","Implements the get an encoding algorithm.",4,N],[11,"for_label_no_replacement","","This method behaves the same as `for_label()`, except when…",4,N],[11,"for_bom","","Performs non-incremental BOM sniffing.",4,N],[11,"name","","Returns the name of this encoding.",4,[[["self"]],["str"]]],[11,"can_encode_everything","","Checks whether the output encoding of this encoding can…",4,[[["self"]],["bool"]]],[11,"is_ascii_compatible","","Checks whether the bytes 0x00...0x7F map exclusively to…",4,[[["self"]],["bool"]]],[11,"output_encoding","","Returns the output encoding of this encoding. This is…",4,[[["self"]],["encoding"]]],[11,"decode","","Decode complete input to `Cow<'a, str>` with BOM sniffing…",4,N],[11,"decode_with_bom_removal","","Decode complete input to `Cow<'a, str>` with BOM removal…",4,N],[11,"decode_without_bom_handling","","Decode complete input to `Cow<'a, str>` without BOM…",4,N],[11,"decode_without_bom_handling_and_without_replacement","","Decode complete input to `Cow<'a, str>` without BOM…",4,N],[11,"encode","","Encode complete input to `Cow<'a, [u8]>` with unmappable…",4,N],[11,"new_decoder","","Instantiates a new decoder for this encoding with BOM…",4,[[["self"]],["decoder"]]],[11,"new_decoder_with_bom_removal","","Instantiates a new decoder for this encoding with BOM…",4,[[["self"]],["decoder"]]],[11,"new_decoder_without_bom_handling","","Instantiates a new decoder for this encoding with BOM…",4,[[["self"]],["decoder"]]],[11,"new_encoder","","Instantiates a new encoder for the output encoding of this…",4,[[["self"]],["encoder"]]],[11,"utf8_valid_up_to","","Validates UTF-8.",4,N],[11,"ascii_valid_up_to","","Validates ASCII.",4,N],[11,"iso_2022_jp_ascii_valid_up_to","","Validates ISO-2022-JP ASCII-state data.",4,N],[11,"encoding","","The `Encoding` this `Decoder` is for.",5,[[["self"]],["encoding"]]],[11,"max_utf8_buffer_length","","Query the worst-case UTF-8 output size with replacement.",5,[[["self"],["usize"]],["option",["usize"]]]],[11,"max_utf8_buffer_length_without_replacement","","Query the worst-case UTF-8 output size without replacement.",5,[[["self"],["usize"]],["option",["usize"]]]],[11,"decode_to_utf8","","Incrementally decode a byte stream into UTF-8 with…",5,N],[11,"decode_to_str","","Incrementally decode a byte stream into UTF-8 with…",5,N],[11,"decode_to_string","","Incrementally decode a byte stream into UTF-8 with…",5,N],[11,"decode_to_utf8_without_replacement","","Incrementally decode a byte stream into UTF-8 without…",5,N],[11,"decode_to_str_without_replacement","","Incrementally decode a byte stream into UTF-8 with type…",5,N],[11,"decode_to_string_without_replacement","","Incrementally decode a byte stream into UTF-8 using a…",5,N],[11,"max_utf16_buffer_length","","Query the worst-case UTF-16 output size (with or without…",5,[[["self"],["usize"]],["option",["usize"]]]],[11,"decode_to_utf16","","Incrementally decode a byte stream into UTF-16 with…",5,N],[11,"decode_to_utf16_without_replacement","","Incrementally decode a byte stream into UTF-16 without…",5,N],[11,"encoding","","The `Encoding` this `Encoder` is for.",6,[[["self"]],["encoding"]]],[11,"has_pending_state","","Returns `true` if this is an ISO-2022-JP encoder that's…",6,[[["self"]],["bool"]]],[11,"max_buffer_length_from_utf8_if_no_unmappables","","Query the worst-case output size when encoding from UTF-8…",6,[[["self"],["usize"]],["option",["usize"]]]],[11,"max_buffer_length_from_utf8_without_replacement","","Query the worst-case output size when encoding from UTF-8…",6,[[["self"],["usize"]],["option",["usize"]]]],[11,"encode_from_utf8","","Incrementally encode into byte stream from UTF-8 with…",6,N],[11,"encode_from_utf8_to_vec","","Incrementally encode into byte stream from UTF-8 with…",6,N],[11,"encode_from_utf8_without_replacement","","Incrementally encode into byte stream from UTF-8 without…",6,N],[11,"encode_from_utf8_to_vec_without_replacement","","Incrementally encode into byte stream from UTF-8 without…",6,N],[11,"max_buffer_length_from_utf16_if_no_unmappables","","Query the worst-case output size when encoding from UTF-16…",6,[[["self"],["usize"]],["option",["usize"]]]],[11,"max_buffer_length_from_utf16_without_replacement","","Query the worst-case output size when encoding from UTF-16…",6,[[["self"],["usize"]],["option",["usize"]]]],[11,"encode_from_utf16","","Incrementally encode into byte stream from UTF-16 with…",6,N],[11,"encode_from_utf16_without_replacement","","Incrementally encode into byte stream from UTF-16 without…",6,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","encoding_rs::mem","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"eq","","",3,[[["self"],["latin1bidi"]],["bool"]]],[11,"eq","encoding_rs","",4,[[["self"],["encoding"]],["bool"]]],[11,"eq","","",0,[[["self"],["coderresult"]],["bool"]]],[11,"eq","","",1,[[["self"],["decoderresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["decoderresult"]],["bool"]]],[11,"eq","","",2,[[["self"],["encoderresult"]],["bool"]]],[11,"ne","","",2,[[["self"],["encoderresult"]],["bool"]]],[11,"fmt","encoding_rs::mem","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","encoding_rs","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"hash","","",4,[[["self"],["h"]]]]],"paths":[[4,"CoderResult"],[4,"DecoderResult"],[4,"EncoderResult"],[4,"Latin1Bidi"],[3,"Encoding"],[3,"Decoder"],[3,"Encoder"]]};
searchIndex["env_logger"]={"doc":"A simple logger configured via environment variables which…","items":[[3,"Env","env_logger","Set of environment variables to configure from.",N,N],[3,"Logger","","The env logger.",N,N],[3,"Builder","","`Builder` acts as builder for initializing a `Logger`.",N,N],[5,"try_init","","Attempts to initialize the global logger with an env logger.",N,[[],["result",["setloggererror"]]]],[5,"init","","Initializes the global logger with an env logger.",N,[[]]],[5,"try_init_from_env","","Attempts to initialize the global logger with an env…",N,[[["e"]],["result",["setloggererror"]]]],[5,"init_from_env","","Initializes the global logger with an env logger from the…",N,[[["e"]]]],[0,"filter","","Filtering for log records.",N,N],[3,"Filter","env_logger::filter","A log filter.",N,N],[3,"Builder","","A builder for a log filter.",N,N],[11,"filter","","Returns the maximum `LevelFilter` that this filter…",0,[[["self"]],["levelfilter"]]],[11,"matches","","Checks if this record matches the configured filter.",0,[[["self"],["record"]],["bool"]]],[11,"enabled","","Determines if a log message with the specified metadata…",0,[[["self"],["metadata"]],["bool"]]],[11,"new","","Initializes the filter builder with defaults.",1,[[],["builder"]]],[11,"from_env","","Initializes the filter builder from an environment.",1,[[["str"]],["builder"]]],[11,"filter_module","","Adds a directive to the filter for a specific module.",1,[[["self"],["str"],["levelfilter"]],["self"]]],[11,"filter_level","","Adds a directive to the filter for all modules.",1,[[["self"],["levelfilter"]],["self"]]],[11,"filter","","Adds a directive to the filter.",1,[[["self"],["option",["str"]],["levelfilter"]],["self"]]],[11,"parse","","Parses the directives string.",1,[[["self"],["str"]],["self"]]],[11,"build","","Build a log filter.",1,[[["self"]],["filter"]]],[0,"fmt","env_logger","Formatting for log records.",N,N],[3,"Formatter","env_logger::fmt","A formatter to write logs into.",N,N],[3,"Style","","A set of styles to apply to the terminal output.",N,N],[3,"StyledValue","","A value that can be printed using the given styles.",N,N],[3,"Timestamp","","An [RFC3339] formatted timestamp.",N,N],[3,"PreciseTimestamp","","An [RFC3339] formatted timestamp with nanos",N,N],[3,"ParseColorError","","An error from parsing an invalid color specification.",N,N],[4,"Target","","Log target, either `stdout` or `stderr`.",N,N],[13,"Stdout","","Logs will be sent to standard output.",2,N],[13,"Stderr","","Logs will be sent to standard error.",2,N],[4,"WriteStyle","","Whether or not to print styles to the target.",N,N],[13,"Auto","","Try to print styles, but don't force the issue.",3,N],[13,"Always","","Try very hard to print styles.",3,N],[13,"Never","","Never print styles.",3,N],[4,"Color","","The set of available colors for the terminal…",N,N],[13,"Black","","",4,N],[13,"Blue","","",4,N],[13,"Green","","",4,N],[13,"Red","","",4,N],[13,"Cyan","","",4,N],[13,"Magenta","","",4,N],[13,"Yellow","","",4,N],[13,"White","","",4,N],[13,"Ansi256","","",4,N],[13,"Rgb","","",4,N],[11,"set_color","","Set the text color.",5,[[["self"],["color"]],["style"]]],[11,"set_bold","","Set the text weight.",5,[[["self"],["bool"]],["style"]]],[11,"set_intense","","Set the text intensity.",5,[[["self"],["bool"]],["style"]]],[11,"set_bg","","Set the background color.",5,[[["self"],["color"]],["style"]]],[11,"value","","Wrap a value in the style.",5,[[["self"],["t"]],["styledvalue"]]],[11,"style","","Begin a new [`Style`].",6,[[["self"]],["style"]]],[11,"default_level_style","","Get the default [`Style`] for the given level.",6,[[["self"],["level"]],["style"]]],[11,"timestamp","","Get a [`Timestamp`] for the current date and time in UTC.",6,[[["self"]],["timestamp"]]],[11,"precise_timestamp","","Get a [`PreciseTimestamp`] for the current date and time…",6,[[["self"]],["precisetimestamp"]]],[11,"invalid","","Return the string that couldn't be parsed as a valid color.",7,[[["self"]],["str"]]],[17,"DEFAULT_FILTER_ENV","env_logger","The default name for the environment variable to read…",N,N],[17,"DEFAULT_WRITE_STYLE_ENV","","The default name for the environment variable to read…",N,N],[11,"new","","Initializes the log builder with defaults.",8,[[],["builder"]]],[11,"from_env","","Initializes the log builder from the environment.",8,[[["e"]],["self"]]],[11,"from_default_env","","Initializes the log builder from the environment using…",8,[[],["self"]]],[11,"format","","Sets the format function for formatting the log output.",8,[[["self"],["f"]],["self"]]],[11,"default_format","","Use the default format.",8,[[["self"]],["self"]]],[11,"default_format_level","","Whether or not to write the level in the default format.",8,[[["self"],["bool"]],["self"]]],[11,"default_format_module_path","","Whether or not to write the module path in the default…",8,[[["self"],["bool"]],["self"]]],[11,"default_format_timestamp","","Whether or not to write the timestamp in the default format.",8,[[["self"],["bool"]],["self"]]],[11,"default_format_timestamp_nanos","","Whether or not to write the timestamp with nanos.",8,[[["self"],["bool"]],["self"]]],[11,"filter_module","","Adds a directive to the filter for a specific module.",8,[[["self"],["str"],["levelfilter"]],["self"]]],[11,"filter_level","","Adds a directive to the filter for all modules.",8,[[["self"],["levelfilter"]],["self"]]],[11,"filter","","Adds filters to the logger.",8,[[["self"],["option",["str"]],["levelfilter"]],["self"]]],[11,"parse","","Parses the directives string in the same form as the…",8,[[["self"],["str"]],["self"]]],[11,"target","","Sets the target for the log output.",8,[[["self"],["target"]],["self"]]],[11,"write_style","","Sets whether or not styles will be written.",8,[[["self"],["writestyle"]],["self"]]],[11,"parse_write_style","","Parses whether or not to write styles in the same form as…",8,[[["self"],["str"]],["self"]]],[11,"try_init","","Initializes the global logger with the built env logger.",8,[[["self"]],["result",["setloggererror"]]]],[11,"init","","Initializes the global logger with the built env logger.",8,[[["self"]]]],[11,"build","","Build an env logger.",8,[[["self"]],["logger"]]],[11,"from_env","","Creates the logger from the environment.",9,[[["e"]],["self"]]],[11,"from_default_env","","Creates the logger from the environment using default…",9,[[],["self"]]],[11,"filter","","Returns the maximum `LevelFilter` that this env logger…",9,[[["self"]],["levelfilter"]]],[11,"matches","","Checks if this record matches the configured filter.",9,[[["self"],["record"]],["bool"]]],[11,"new","","Get a default set of environment variables.",10,[[],["self"]]],[11,"filter","","Specify an environment variable to read the filter from.",10,[[["self"],["e"]],["self"]]],[11,"filter_or","","Specify an environment variable to read the filter from.",10,[[["self"],["e"],["v"]],["self"]]],[11,"write_style","","Specify an environment variable to read the style from.",10,[[["self"],["e"]],["self"]]],[11,"write_style_or","","Specify an environment variable to read the style from.",10,[[["self"],["e"],["v"]],["self"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","env_logger::filter","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","env_logger::fmt","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"eq","","",2,[[["self"],["target"]],["bool"]]],[11,"eq","","",3,[[["self"],["writestyle"]],["bool"]]],[11,"eq","","",4,[[["self"],["color"]],["bool"]]],[11,"ne","","",4,[[["self"],["color"]],["bool"]]],[11,"eq","","",7,[[["self"],["parsecolorerror"]],["bool"]]],[11,"ne","","",7,[[["self"],["parsecolorerror"]],["bool"]]],[11,"default","env_logger::filter","",1,[[],["self"]]],[11,"default","env_logger::fmt","",2,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"default","env_logger","",8,[[],["builder"]]],[11,"default","","",10,[[],["self"]]],[11,"clone","env_logger::fmt","",5,[[["self"]],["style"]]],[11,"clone","","",2,[[["self"]],["target"]]],[11,"clone","","",3,[[["self"]],["writestyle"]]],[11,"clone","","",4,[[["self"]],["color"]]],[11,"clone","","",7,[[["self"]],["parsecolorerror"]]],[11,"from","env_logger","",10,[[["t"]],["self"]]],[11,"fmt","env_logger::fmt","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","env_logger::filter","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","env_logger::fmt","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","env_logger","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","env_logger::fmt","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"hash","","",2,N],[11,"hash","","",3,N],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",4,[[["str"]],["result",["color","parsecolorerror"]]]],[11,"write","","",6,N],[11,"flush","","",6,[[["self"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"enabled","env_logger","",9,[[["self"],["metadata"]],["bool"]]],[11,"log","","",9,[[["self"],["record"]]]],[11,"flush","","",9,[[["self"]]]]],"paths":[[3,"Filter"],[3,"Builder"],[4,"Target"],[4,"WriteStyle"],[4,"Color"],[3,"Style"],[3,"Formatter"],[3,"ParseColorError"],[3,"Builder"],[3,"Logger"],[3,"Env"],[3,"StyledValue"],[3,"Timestamp"],[3,"PreciseTimestamp"]]};
searchIndex["error_chain"]={"doc":"A library for consistent and reliable error handling","items":[[3,"Backtrace","error_chain","Representation of an owned and self-contained backtrace.",N,N],[3,"Iter","","Iterator over the error chain using the `Error::cause()`…",N,N],[3,"DisplayChain","","A struct which formats an error for output.",N,N],[0,"example_generated","","These modules show an example of code generated by the…",N,N],[3,"Error","error_chain::example_generated","The Error type.",N,N],[12,"0","","The kind of the error.",0,N],[4,"ErrorKind","","The kind of an error.",N,N],[13,"Msg","","A convenient variant for String.",1,N],[13,"Inner","","Link to another `ErrorChain`.",1,N],[13,"Io","","Link to a `std::io::Error` type.",1,N],[13,"Custom","","A custom error kind.",1,N],[0,"inner","","Another code generated by the macro.",N,N],[3,"Error","error_chain::example_generated::inner","The Error type.",N,N],[12,"0","","The kind of the error.",2,N],[4,"ErrorKind","","The kind of an error.",N,N],[13,"Msg","","A convenient variant for String.",3,N],[6,"Result","","Convenient wrapper around `std::Result`.",N,N],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",N,N],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",4,[[["self"],["f"]],["result",["error"]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",2,[[["errorkind"]],["error"]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",2,[[["e"],["k"]],["error"]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",2,[[["box",["error"]],["k"]],["error"]]],[11,"kind","","Returns the kind of the error.",2,[[["self"]],["errorkind"]]],[11,"iter","","Iterates over the error chain.",2,[[["self"]],["iter"]]],[11,"backtrace","","Returns the backtrace associated with this error.",2,[[["self"]],["option",["backtrace"]]]],[11,"chain_err","","Extends the error chain with a new entry.",2,[[["self"],["f"]],["error"]]],[11,"description","","A short description of the error. This method is identical…",2,[[["self"]],["str"]]],[11,"description","","A string describing the error kind.",3,[[["self"]],["str"]]],[6,"Result","error_chain::example_generated","Convenient wrapper around `std::Result`.",N,N],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",N,N],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",5,[[["self"],["f"]],["result",["error"]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,[[["errorkind"]],["error"]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",0,[[["e"],["k"]],["error"]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",0,[[["box",["error"]],["k"]],["error"]]],[11,"kind","","Returns the kind of the error.",0,[[["self"]],["errorkind"]]],[11,"iter","","Iterates over the error chain.",0,[[["self"]],["iter"]]],[11,"backtrace","","Returns the backtrace associated with this error.",0,[[["self"]],["option",["backtrace"]]]],[11,"chain_err","","Extends the error chain with a new entry.",0,[[["self"],["f"]],["error"]]],[11,"description","","A short description of the error. This method is identical…",0,[[["self"]],["str"]]],[11,"description","","A string describing the error kind.",1,[[["self"]],["str"]]],[8,"ExitCode","error_chain","Represents a value that can be used as the exit status of…",N,N],[10,"code","","Returns the value to use as the exit status.",6,[[["self"]],["i32"]]],[8,"ChainedError","","This trait is implemented on all the errors generated by…",N,N],[16,"ErrorKind","","Associated kind type.",7,N],[10,"from_kind","","Constructs an error from a kind, and generates a backtrace.",7,N],[10,"with_chain","","Constructs a chained error from another error and a kind,…",7,[[["e"],["k"]],["self"]]],[10,"kind","","Returns the kind of the error.",7,N],[10,"iter","","Iterates over the error chain.",7,[[["self"]],["iter"]]],[10,"backtrace","","Returns the backtrace associated with this error.",7,[[["self"]],["option",["backtrace"]]]],[11,"display_chain","","Returns an object which implements `Display` for printing…",7,[[["self"]],["displaychain"]]],[10,"chain_err","","Extends the error chain with a new entry.",7,[[["self"],["f"]],["self"]]],[11,"new","","Returns a new iterator over the error chain using…",8,[[["option",["error"]]],["iter"]]],[14,"error_chain","","Macro for generating error types and traits. See crate…",N,N],[14,"quick_main","","Convenient wrapper to be able to use `?` and such in the…",N,N],[14,"bail","","Exits a function early with an error",N,N],[14,"ensure","","Exits a function early with an error if the condition is…",N,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_string","error_chain::example_generated","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","error_chain::example_generated::inner","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"default","error_chain","",9,[[],["backtrace"]]],[11,"from","","",9,[[["vec",["backtraceframe"]]],["backtrace"]]],[11,"clone","","",9,[[["self"]],["backtrace"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"into","","",9,[[["self"]],["vec",["backtraceframe"]]]],[11,"new","error_chain::example_generated::inner","",2,[[["errorkind"],["state"]],["error"]]],[11,"from_kind","","",2,N],[11,"with_chain","","",2,[[["e"],["k"]],["self"]]],[11,"kind","","",2,N],[11,"iter","","",2,[[["self"]],["iter"]]],[11,"chain_err","","",2,[[["self"],["f"]],["self"]]],[11,"backtrace","","",2,[[["self"]],["option",["backtrace"]]]],[11,"extract_backtrace","","",2,[[["error"]],["option",["internalbacktrace"]]]],[11,"new","error_chain::example_generated","",0,[[["errorkind"],["state"]],["error"]]],[11,"from_kind","","",0,N],[11,"with_chain","","",0,[[["e"],["k"]],["self"]]],[11,"kind","","",0,N],[11,"iter","","",0,[[["self"]],["iter"]]],[11,"chain_err","","",0,[[["self"],["f"]],["self"]]],[11,"backtrace","","",0,[[["self"]],["option",["backtrace"]]]],[11,"extract_backtrace","","",0,[[["error"]],["option",["internalbacktrace"]]]],[11,"next","error_chain","",8,[[["self"]],["option",["error"]]]],[11,"from","error_chain::example_generated::inner","",2,[[["errorkind"]],["self"]]],[11,"from","","",2,[[["str"]],["self"]]],[11,"from","","",2,[[["string"]],["self"]]],[11,"from","","",3,[[["str"]],["self"]]],[11,"from","","",3,[[["string"]],["self"]]],[11,"from","","",3,[[["error"]],["self"]]],[11,"from","error_chain::example_generated","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["errorkind"]],["self"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"from","","",0,[[["string"]],["self"]]],[11,"from","","",1,[[["errorkind"]],["self"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"fmt","error_chain::example_generated::inner","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","error_chain::example_generated","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","error_chain","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","error_chain::example_generated::inner","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","error_chain::example_generated","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","error_chain","",10,[[["self"],["formatter"]],["result"]]],[11,"description","error_chain::example_generated::inner","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["error"]]]],[11,"description","error_chain::example_generated","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"new","error_chain","Captures a backtrace at the callsite of this function,…",9,[[],["backtrace"]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",9,[[],["backtrace"]]],[11,"frames","","Returns the frames from when this backtrace was captured.",9,N],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",9,N]],"paths":[[3,"Error"],[4,"ErrorKind"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[8,"ResultExt"],[8,"ExitCode"],[8,"ChainedError"],[3,"Iter"],[3,"Backtrace"],[3,"DisplayChain"]]};
searchIndex["failure"]={"doc":"An experimental new error-handling library. Guide-style…","items":[[3,"Backtrace","failure","A `Backtrace`.",N,N],[3,"Compat","","A compatibility wrapper around an error type from this…",N,N],[3,"Context","","An error with context around it.",N,N],[3,"SyncFailure","","Wrapper for `std` errors to make them `Sync`.",N,N],[3,"Error","","The `Error` type, which can contain any failure.",N,N],[3,"Causes","","A iterator over the causes of a `Fail`",N,N],[5,"err_msg","","Constructs a `Fail` type from a string.",N,[[["d"]],["error"]]],[11,"new","","Constructs a new backtrace. This will only create a real…",0,[[],["backtrace"]]],[11,"into_inner","","Unwraps this into the inner error.",1,[[["self"]],["e"]]],[11,"get_ref","","Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new","","Creates a new context without an underlying error message.",2,[[["d"]],["context"]]],[11,"get_context","","Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map","","Maps `Context<D>` to `Context<T>` by applying a function…",2,[[["self"],["f"]],["context"]]],[11,"new","","Wraps a non-`Sync` `Error` in order to make it implement…",3,[[["e"]],["self"]]],[11,"from_boxed_compat","","Creates an `Error` from `Box<std::error::Error>`.",4,[[["box",["stderror"]]],["error"]]],[11,"as_fail","","Return a reference to the underlying failure that this…",4,[[["self"]],["fail"]]],[11,"cause","","Returns a reference to the underlying cause of this…",4,[[["self"]],["fail"]]],[11,"backtrace","","Gets a reference to the `Backtrace` for this `Error`.",4,[[["self"]],["backtrace"]]],[11,"context","","Provides context for this `Error`.",4,[[["self"],["d"]],["context"]]],[11,"compat","","Wraps `Error` in a compatibility type.",4,[[["self"]],["compat",["error"]]]],[11,"downcast","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],["result",["error"]]]],[11,"find_root_cause","","Returns the \"root cause\" of this error - the last value in…",4,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this error with the…",4,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",4,[[["self"]],["causes"]]],[11,"downcast_ref","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast this `Error` to a particular `Fail`…",4,[[["self"]],["option"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",4,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_causes`.",4,[[["self"]],["causes"]]],[6,"Fallible","","A common result with an `Error`.",N,N],[8,"AsFail","","The `AsFail` trait",N,N],[10,"as_fail","","Converts a reference to `Self` into a dynamic trait object…",5,[[["self"]],["fail"]]],[8,"ResultExt","","Extension methods for `Result`.",N,N],[10,"compat","","Wraps the error in `Compat` to make it compatible with…",6,[[["self"]],["result",["compat"]]]],[10,"context","","Wraps the error type in a context type.",6,[[["self"],["d"]],["result",["context"]]]],[10,"with_context","","Wraps the error type in a context type generated by…",6,[[["self"],["f"]],["result",["context"]]]],[8,"Fail","","The `Fail` trait.",N,N],[11,"cause","","Returns a reference to the underlying cause of this…",7,[[["self"]],["option",["fail"]]]],[11,"backtrace","","Returns a reference to the `Backtrace` carried by this…",7,[[["self"]],["option",["backtrace"]]]],[11,"context","","Provides context for this failure.",7,[[["self"],["d"]],["context"]]],[11,"compat","","Wraps this failure in a compatibility wrapper that…",7,[[["self"]],["compat"]]],[11,"downcast_ref","","Attempts to downcast this failure to a concrete type by…",7,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast this failure to a concrete type by…",7,[[["self"]],["option"]]],[11,"find_root_cause","","Returns the \"root cause\" of this `Fail` - the last value…",7,[[["self"]],["fail"]]],[11,"iter_causes","","Returns a iterator over the causes of this `Fail` with the…",7,[[["self"]],["causes"]]],[11,"iter_chain","","Returns a iterator over all fails up the chain from the…",7,[[["self"]],["causes"]]],[11,"root_cause","","Deprecated alias to `find_root_cause`.",7,[[["self"]],["fail"]]],[11,"causes","","Deprecated alias to `iter_chain`.",7,[[["self"]],["causes"]]],[14,"bail","","Exits a function early with an `Error`.",N,N],[14,"ensure","","Exits a function early with an `Error` if the condition is…",N,N],[14,"format_err","","Constructs an `Error` using the standard string…",N,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"as_fail","","",7,[[["self"]],["fail"]]],[11,"as_fail","","",4,[[["self"]],["fail"]]],[11,"cause","","",2,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",2,[[["self"]],["option",["backtrace"]]]],[11,"next","","",8,[[["self"]],["option",["fail"]]]],[11,"eq","","",1,[[["self"],["compat"]],["bool"]]],[11,"ne","","",1,[[["self"],["compat"]],["bool"]]],[11,"as_ref","","",4,[[["self"]],["fail"]]],[11,"default","","",0,[[],["backtrace"]]],[11,"default","","",1,[[],["compat"]]],[11,"clone","","",1,[[["self"]],["compat"]]],[11,"from","","",2,[[["d"]],["context"]]],[11,"from","","",4,[[["f"]],["error"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"description","","",1,[[["self"]],["str"]]]],"paths":[[3,"Backtrace"],[3,"Compat"],[3,"Context"],[3,"SyncFailure"],[3,"Error"],[8,"AsFail"],[8,"ResultExt"],[8,"Fail"],[3,"Causes"]]};
searchIndex["failure_derive"]={"doc":"","items":[[24,"Fail","failure_derive","",N,N]],"paths":[]};
searchIndex["fnv"]={"doc":"An implementation of the [Fowler–Noll–Vo hash…","items":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",N,N],[6,"FnvBuildHasher","","A builder for default FNV hashers.",N,N],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",N,N],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",N,N],[11,"with_key","","Create an FNV hasher starting with a state corresponding…",0,[[["u64"]],["fnvhasher"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["fnvhasher"]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",0,N]],"paths":[[3,"FnvHasher"]]};
searchIndex["foreign_types"]={"doc":"A framework for Rust wrappers over C APIs.","items":[[3,"Opaque","foreign_types","An opaque type used to define `ForeignTypeRef` types.",N,N],[8,"ForeignType","","A type implemented by wrappers over foreign types.",N,N],[16,"CType","","The raw C type.",0,N],[16,"Ref","","The type representing a reference to this type.",0,N],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,N],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,N],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed…",N,N],[16,"CType","","The raw C type.",1,N],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,N],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw…",1,N],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,N],[14,"foreign_type","","A macro to easily define wrappers for foreign types.",N,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]]],"paths":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]};
searchIndex["foreign_types_shared"]={"doc":"Internal crate used by foreign-types","items":[[3,"Opaque","foreign_types_shared","An opaque type used to define `ForeignTypeRef` types.",N,N],[8,"ForeignType","","A type implemented by wrappers over foreign types.",N,N],[16,"CType","","The raw C type.",0,N],[16,"Ref","","The type representing a reference to this type.",0,N],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,N],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,N],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed…",N,N],[16,"CType","","The raw C type.",1,N],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,N],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw…",1,N],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]]],"paths":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]};
searchIndex["futures"]={"doc":"Zero-cost Futures in Rust","items":[[4,"Async","futures","Return type of future, indicating whether a value is ready…",N,N],[13,"Ready","","Represents that a value is immediately ready.",0,N],[13,"NotReady","","Represents that a value is not ready yet, but may be so…",0,N],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a…",N,N],[13,"Ready","","The `start_send` attempt succeeded, so the sending process…",1,N],[13,"NotReady","","The `start_send` attempt failed due to the sink being…",1,N],[11,"map","","Change the success value of this `Async` with the closure…",0,[[["self"],["f"]],["async"]]],[11,"is_ready","","Returns whether this is `Async::Ready`",0,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",0,[[["self"]],["bool"]]],[11,"map","","Change the NotReady value of this `AsyncSink` with the…",1,[[["self"],["f"]],["asyncsink"]]],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",1,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",1,[[["self"]],["bool"]]],[0,"future","","Futures",N,N],[3,"Empty","futures::future","A future which is never resolved.",N,N],[3,"Lazy","","A future which defers creation of the actual future until…",N,N],[3,"PollFn","","A future which adapts a function returning `Poll`.",N,N],[3,"FutureResult","","A future representing a value that is immediately ready.",N,N],[3,"LoopFn","","A future implementing a tail-recursive loop.",N,N],[3,"AndThen","","Future for the `and_then` combinator, chaining a…",N,N],[3,"Flatten","","Future for the `flatten` combinator, flattening a…",N,N],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a…",N,N],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",N,N],[3,"IntoStream","","Future that forwards one element from the underlying…",N,N],[3,"Join","","Future for the `join` combinator, waiting for two futures…",N,N],[3,"Join3","","Future for the `join3` combinator, waiting for three…",N,N],[3,"Join4","","Future for the `join4` combinator, waiting for four…",N,N],[3,"Join5","","Future for the `join5` combinator, waiting for five…",N,N],[3,"Map","","Future for the `map` combinator, changing the type of a…",N,N],[3,"MapErr","","Future for the `map_err` combinator, changing the error…",N,N],[3,"FromErr","","Future for the `from_err` combinator, changing the error…",N,N],[3,"OrElse","","Future for the `or_else` combinator, chaining a…",N,N],[3,"Select","","Future for the `select` combinator, waiting for one of two…",N,N],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",N,N],[3,"Select2","","Future for the `select2` combinator, waiting for one of…",N,N],[3,"Then","","Future for the `then` combinator, chaining computations on…",N,N],[3,"Inspect","","Do something with the item of a future, passing it on.",N,N],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",N,N],[3,"JoinAll","","A future which takes a list of futures and resolves with a…",N,N],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of…",N,N],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of…",N,N],[3,"Shared","","A future that is cloneable and can be polled in multiple…",N,N],[3,"SharedItem","","A wrapped item of the original future that is cloneable…",N,N],[3,"SharedError","","A wrapped error of the original future that is cloneable…",N,N],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",N,N],[4,"Loop","","The status of a `loop_fn` loop.",N,N],[13,"Break","","Indicates that the loop has completed with output `T`.",2,N],[13,"Continue","","Indicates that the loop function should be called again…",2,N],[4,"Either","","Combines two different futures yielding the same item and…",N,N],[13,"A","","First branch of the type",3,N],[13,"B","","Second branch of the type",3,N],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the…",N,N],[13,"Shutdown","","This executor has shut down and will no longer accept new…",4,N],[13,"NoCapacity","","This executor has no more capacity to run more futures.…",4,N],[5,"empty","","Creates a future which never resolves, representing a…",N,[[],["empty"]]],[5,"lazy","","Creates a new future which will eventually be the same as…",N,[[["f"]],["lazy"]]],[5,"poll_fn","","Creates a new future wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"result","","Creates a new \"leaf future\" which will resolve with the…",N,[[["result"]],["futureresult"]]],[5,"ok","","Creates a \"leaf future\" from an immediate value of a…",N,[[["t"]],["futureresult"]]],[5,"err","","Creates a \"leaf future\" from an immediate value of a…",N,[[["e"]],["futureresult"]]],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",N,[[["s"],["f"]],["loopfn"]]],[5,"join_all","","Creates a future which represents a collection of the…",N,[[["i"]],["joinall"]]],[5,"select_all","","Creates a new future which will select over a list of…",N,[[["i"]],["selectall"]]],[5,"select_ok","","Creates a new future which will select the first…",N,[[["i"]],["selectok"]]],[11,"is_done","","Returns whether the underlying future has finished or not.",5,[[["self"]],["bool"]]],[11,"split","","Splits out the homogeneous type from an either of tuples.",3,N],[11,"peek","","If any clone of this `Shared` has completed execution,…",6,[[["self"]],["option",["result"]]]],[8,"Future","","Trait for types which are a placeholder of a value that…",N,N],[16,"Item","","The type of value that this future will resolved with if…",7,N],[16,"Error","","The type of error that this future will resolve with if it…",7,N],[10,"poll","","Query this future to see if its value has become…",7,[[["self"]],["poll"]]],[11,"wait","","Block the current thread until this future is resolved.",7,[[["self"]],["result"]]],[11,"map","","Map this future's result to a different type, returning a…",7,[[["self"],["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a…",7,[[["self"],["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From`…",7,[[["self"]],["fromerr"]]],[11,"then","","Chain on a computation for when a future finished, passing…",7,[[["self"],["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved…",7,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",7,[[["self"],["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",7,[[["self"],["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to…",7,[[["self"],["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to…",7,[[["self"],["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",7,[[["self"],["b"],["c"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",7,[[["self"],["b"],["c"],["d"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",7,[[["self"],["b"],["c"],["d"],["e"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",7,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful…",7,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",7,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",7,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",7,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",7,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",7,[[["self"]],["shared"]]],[8,"IntoFuture","","Class of types which can be converted into a future.",N,N],[16,"Future","","The future that this type can be converted into.",8,N],[16,"Item","","The item that the future may resolve with.",8,N],[16,"Error","","The error that the future may resolve with.",8,N],[10,"into_future","","Consumes this object and produces a future.",8,N],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",N,N],[16,"Future","","The future for the conversion.",9,N],[16,"Error","","Possible errors during conversion.",9,N],[10,"future_from","","Consume the given value, beginning the conversion.",9,N],[8,"Executor","","A trait for types which can spawn fresh futures.",N,N],[10,"execute","","Spawns a future to run on this `Executor`, typically in…",10,[[["self"],["f"]],["result",["executeerror"]]]],[11,"new","","Create a new `ExecuteError`",11,[[["executeerrorkind"],["f"]],["executeerror"]]],[11,"kind","","Returns the associated reason for the error",11,[[["self"]],["executeerrorkind"]]],[11,"into_future","","Consumes self and returns the original future that was…",11,[[["self"]],["f"]]],[0,"stream","futures","Asynchronous streams",N,N],[3,"Iter","futures::stream","A stream which is just a shim over an underlying instance…",N,N],[3,"IterStream","","A stream which is just a shim over an underlying instance…",N,N],[3,"IterOk","","A stream which is just a shim over an underlying instance…",N,N],[3,"IterResult","","A stream which is just a shim over an underlying instance…",N,N],[3,"Repeat","","Stream that produces the same element repeatedly.",N,N],[3,"AndThen","","A stream combinator which chains a computation onto values…",N,N],[3,"Chain","","An adapter for chaining the output of two streams.",N,N],[3,"Concat","","A stream combinator to concatenate the results of a stream…",N,N],[3,"Concat2","","A stream combinator to concatenate the results of a stream…",N,N],[3,"Empty","","A stream which contains no elements.",N,N],[3,"Filter","","A stream combinator used to filter the results of a stream…",N,N],[3,"FilterMap","","A combinator used to filter the results of a stream and…",N,N],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one…",N,N],[3,"Fold","","A future used to collect all the results of a stream into…",N,N],[3,"ForEach","","A stream combinator which executes a unit closure over…",N,N],[3,"FromErr","","A stream combinator to change the error type of a stream.",N,N],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",N,N],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a…",N,N],[3,"Inspect","","Do something with the items of a stream, passing it on.",N,N],[3,"InspectErr","","Do something with the error of a stream, passing it on.",N,N],[3,"Map","","A stream combinator which will change the type of a stream…",N,N],[3,"MapErr","","A stream combinator which will change the error type of a…",N,N],[3,"Merge","","An adapter for merging the output of two streams.",N,N],[3,"Once","","A stream which emits single element and then EOF.",N,N],[3,"OrElse","","A stream combinator which chains a computation onto errors…",N,N],[3,"Peekable","","A `Stream` that implements a `peek` method.",N,N],[3,"PollFn","","A stream which adapts a function returning `Poll`.",N,N],[3,"Select","","An adapter for merging the output of two streams.",N,N],[3,"Skip","","A stream combinator which skips a number of elements…",N,N],[3,"SkipWhile","","A stream combinator which skips elements of a stream while…",N,N],[3,"Take","","A stream combinator which returns a maximum number of…",N,N],[3,"TakeWhile","","A stream combinator which takes elements from a stream…",N,N],[3,"Then","","A stream combinator which chains a computation onto each…",N,N],[3,"Unfold","","A stream which creates futures, polls them and return…",N,N],[3,"Zip","","An adapter for merging the output of two streams.",N,N],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a…",N,N],[3,"Buffered","","An adaptor for a stream of futures to execute the futures…",N,N],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures…",N,N],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",N,N],[3,"Chunks","","An adaptor that chunks up elements in a vector.",N,N],[3,"Collect","","A future which collects all of the values of a stream into…",N,N],[3,"Wait","","A stream combinator which converts an asynchronous stream…",N,N],[3,"SplitStream","","A `Stream` part of the split pair",N,N],[3,"SplitSink","","A `Sink` part of the split pair",N,N],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>`…",N,N],[12,"0","","",12,N],[12,"1","","",12,N],[3,"FuturesOrdered","","An unbounded queue of futures.",N,N],[4,"MergedItem","","An item returned from a merge stream, which represents an…",N,N],[13,"First","","An item from the first stream",13,N],[13,"Second","","An item from the second stream",13,N],[13,"Both","","Items from both streams",13,N],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream`…",N,[[["j"]],["iter"]]],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always…",N,[[["i"]],["iterok"]]],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream`…",N,[[["j"]],["iterresult"]]],[5,"repeat","","Create a stream which produces the same item repeatedly.",N,[[["t"]],["repeat"]]],[5,"empty","","Creates a stream which contains no elements.",N,[[],["empty"]]],[5,"once","","Creates a stream of single element",N,[[["result"]],["once"]]],[5,"poll_fn","","Creates a new stream wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a…",N,[[["t"],["f"]],["unfold"]]],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from…",N,[[["i"]],["futuresordered"]]],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from…",N,[[["i"]],["futuresunordered"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",14,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",14,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",14,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",15,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",15,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",15,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",16,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",16,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",16,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",17,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",17,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",17,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",18,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",18,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",18,[[["self"]],["s"]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",19,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",19,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",19,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",19,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",20,[[["self"]],["option"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",20,[[["self"]],["option"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",20,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",21,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",21,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",21,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",22,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",22,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",22,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",23,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",23,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",23,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",24,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",24,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",24,[[["self"]],["s"]]],[11,"peek","","Peek retrieves a reference to the next item in the stream.",25,[[["self"]],["poll",["option"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",26,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",26,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",26,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",27,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",27,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",27,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",28,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",28,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",28,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",29,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",29,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",29,[[["self"]],["s"]]],[11,"sink_ref","","Get a shared reference to the inner sink. If this…",30,[[["self"]],["option"]]],[11,"sink_mut","","Get a mutable reference to the inner sink. If this…",30,[[["self"]],["option"]]],[11,"stream_ref","","Get a shared reference to the inner stream. If this…",30,[[["self"]],["option"]]],[11,"stream_mut","","Get a mutable reference to the inner stream. If this…",30,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",31,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",31,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",31,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",32,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",32,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",32,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",33,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",33,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",33,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",34,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",34,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",34,[[["self"]],["s"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",35,[[["self"],["splitsink"]],["result",["reuniteerror"]]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",36,[[["self"],["splitstream"]],["result",["reuniteerror"]]]],[0,"futures_unordered","","An unbounded set of futures.",N,N],[3,"FuturesUnordered","futures::stream::futures_unordered","An unbounded set of futures.",N,N],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",N,N],[11,"new","","Constructs a new, empty `FuturesUnordered`",37,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",37,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures",37,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",37,[[["self"],["t"]]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in…",37,[[["self"]],["itermut"]]],[11,"new","futures::stream","Constructs a new, empty `FuturesOrdered`",38,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",38,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",38,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",38,[[["self"],["t"]]]],[8,"Stream","","A stream of values, not all of which may have been…",N,N],[16,"Item","","The type of item this stream will yield on success.",39,N],[16,"Error","","The type of error this stream may generate.",39,N],[10,"poll","","Attempt to pull out the next value of this stream,…",39,[[["self"]],["poll",["option"]]]],[11,"wait","","Creates an iterator which blocks the current thread until…",39,[[["self"]],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",39,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",39,[[["self"],["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error…",39,[[["self"],["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to…",39,[[["self"],["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",39,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing…",39,[[["self"],["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",39,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",39,[[["self"],["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector,…",39,[[["self"]],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single…",39,[[["self"]],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single…",39,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream,…",39,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",39,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided…",39,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate…",39,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",39,[[["self"],["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From`…",39,[[["self"]],["fromerr"]]],[11,"take","","Creates a new stream of at most `amt` items of the…",39,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the…",39,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called…",39,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",39,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",39,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",39,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",39,[[["self"],["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",39,[[["self"],["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",39,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",39,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",39,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",39,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either…",39,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been…",39,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",39,N],[11,"inspect","","Do something with each item of this stream, afterwards…",39,[[["self"],["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards…",39,[[["self"],["f"]],["inspecterr"]]],[0,"sink","futures","Asynchronous sinks",N,N],[3,"Buffer","futures::sink","Sink for the `Sink::buffer` combinator, which buffers up…",N,N],[3,"Wait","","A sink combinator which converts an asynchronous sink to a…",N,N],[3,"With","","Sink for the `Sink::with` combinator, chaining a…",N,N],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a…",N,N],[3,"Flush","","Future for the `Sink::flush` combinator, which polls the…",N,N],[3,"Send","","Future for the `Sink::send` combinator, which sends a…",N,N],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a…",N,N],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",N,N],[3,"SinkFromErr","","A sink combinator to change the error type of a sink.",N,N],[3,"Fanout","","Sink that clones incoming items and forwards them to two…",N,N],[11,"get_ref","","Get a shared reference to the inner sink.",40,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",40,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",40,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",41,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",41,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",41,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",42,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",42,[[["self"]],["s"]]],[11,"into_inner","","Consume the `Flush` and return the inner sink.",42,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",43,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",43,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",43,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",44,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",44,[[["self"]],["s"]]],[11,"get_ref","","Get a shared reference to the inner sink.",45,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",45,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",45,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",46,N],[11,"get_ref","","Get a shared reference to the inner sink.",47,[[["self"]],["s"]]],[11,"get_mut","","Get a mutable reference to the inner sink.",47,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",47,[[["self"]],["s"]]],[11,"send","","Sends a value to this sink, blocking the current thread…",48,N],[11,"flush","","Flushes any buffered data in this sink, blocking the…",48,[[["self"]],["result"]]],[11,"close","","Close this sink, blocking the current thread until it's…",48,[[["self"]],["result"]]],[6,"BoxSink","","A type alias for `Box<Sink + Send>`",N,N],[8,"Sink","","A `Sink` is a value into which other values can be sent,…",N,N],[16,"SinkItem","","The type of value that the sink accepts.",49,N],[16,"SinkError","","The type of value produced by the sink when an error occurs.",49,N],[10,"start_send","","Begin the process of sending a value to the sink.",49,N],[10,"poll_complete","","Flush all output from this sink, if necessary.",49,[[["self"]],["poll"]]],[11,"close","","A method to indicate that no more values will ever be…",49,[[["self"]],["poll"]]],[11,"wait","","Creates a new object which will produce a synchronous sink.",49,[[["self"]],["wait"]]],[11,"with","","Composes a function in front of the sink.",49,[[["self"],["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",49,[[["self"],["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",49,[[["self"],["f"]],["sinkmaperr"]]],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for…",49,[[["self"]],["sinkfromerr"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",49,[[["self"],["usize"]],["buffer"]]],[11,"fanout","","Fanout items to multiple sinks.",49,[[["self"],["s"]],["fanout"]]],[11,"flush","","A future that completes when the sink has finished…",49,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been…",49,N],[11,"send_all","","A future that completes after the given stream has been…",49,[[["self"],["s"]],["sendall"]]],[0,"task","futures","Tasks used to drive a future computation",N,N],[3,"Task","futures::task","A handle to a \"task\", which represents a single…",N,N],[3,"AtomicTask","","A synchronization primitive for task notification.",N,N],[3,"LocalKey","","A key for task-local data stored in a future's task.",N,N],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",N,N],[5,"current","","Returns a handle to the current task to call `notify` at a…",N,[[],["task"]]],[5,"init","","Initialize the `futures` task system.",N,N],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark…",N,[[["unparkevent"],["f"]],["r"]]],[8,"EventSet","","A concurrent set which allows for the insertion of `usize`…",N,N],[10,"insert","","Insert the given ID into the set",50,[[["self"],["usize"]]]],[0,"executor","futures","Executors",N,N],[3,"Spawn","futures::executor","Representation of a spawned future/stream.",N,N],[3,"NotifyHandle","","A `NotifyHandle` is the core value through which…",N,N],[5,"spawn","","Spawns a future or stream, returning it and the new task…",N,[[["t"]],["spawn"]]],[5,"with_notify","","Sets the `NotifyHandle` of the current task for the…",N,[[["t"],["usize"],["f"]],["r"]]],[8,"Notify","","A trait which represents a sink of notifications that a…",N,N],[10,"notify","","Indicates that an associated future and/or task are ready…",51,[[["self"],["usize"]]]],[11,"clone_id","","This function is called whenever a new copy of `id` is…",51,[[["self"],["usize"]],["usize"]]],[11,"drop_id","","All instances of `Task` store an `id` that they're going…",51,[[["self"],["usize"]]]],[8,"UnsafeNotify","","An unsafe trait for implementing custom forms of memory…",N,N],[10,"clone_raw","","Creates a new `NotifyHandle` from this instance of…",52,[[["self"]],["notifyhandle"]]],[10,"drop_raw","","Drops this instance of `UnsafeNotify`, deallocating…",52,[[["self"]]]],[0,"sync","futures","Future-aware synchronization",N,N],[3,"BiLock","futures::sync","A type of futures-powered synchronization primitive which…",N,N],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",N,N],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when…",N,N],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",N,N],[0,"oneshot","","A one-shot, futures-aware channel",N,N],[3,"Receiver","futures::sync::oneshot","A future representing the completion of a computation…",N,N],[3,"Sender","","Represents the completion half of a oneshot through which…",N,N],[3,"Canceled","","Error returned from a `Receiver<T>` whenever the…",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Execute` instances below must be…",N,N],[5,"channel","","Creates a new futures-aware, one-shot channel.",N,N],[5,"spawn","","Spawns a `future` onto the instance of `Executor`…",N,[[["f"],["e"]],["spawnhandle"]]],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided…",N,[[["f"],["e"]],["spawnhandle"]]],[11,"send","","Completes this oneshot with a successful result.",53,[[["self"],["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver`…",53,[[["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",53,[[["self"]],["bool"]]],[11,"close","","Gracefully close this receiver, preventing sending any…",54,[[["self"]]]],[11,"try_recv","","Attempts to receive a message outside of the context of a…",54,[[["self"]],["result",["option","canceled"]]]],[11,"forget","","Drop this future without canceling the underlying future.",55,[[["self"]]]],[0,"mpsc","futures::sync","A multi-producer, single-consumer, futures-aware, FIFO…",N,N],[3,"Sender","futures::sync::mpsc","The transmission end of a channel which is used to send…",N,N],[3,"UnboundedSender","","The transmission end of a channel which is used to send…",N,N],[3,"Receiver","","The receiving end of a channel which implements the…",N,N],[3,"UnboundedReceiver","","The receiving end of a channel which implements the…",N,N],[3,"SendError","","Error type for sending, used when the receiving end of a…",N,N],[3,"TrySendError","","Error type returned from `try_send`",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Executor` instances must be able to…",N,N],[5,"channel","","Creates an in-memory channel implementation of the…",N,N],[5,"unbounded","","Creates an in-memory channel implementation of the…",N,N],[5,"spawn","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"],["usize"]],["spawnhandle"]]],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"]],["spawnhandle"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",56,[[["self"]],["t"]]],[11,"is_full","","Returns true if this error is a result of the channel…",57,[[["self"]],["bool"]]],[11,"is_disconnected","","Returns true if this error is a result of the receiver…",57,[[["self"]],["bool"]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",57,[[["self"]],["t"]]],[11,"try_send","","Attempts to send a message on this `Sender<T>` without…",58,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed to…",58,[[["self"]],["poll",["senderror"]]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",58,[[["self"]],["bool"]]],[11,"is_closed","","Returns whether this channel is closed without needing a…",59,[[["self"]],["bool"]]],[11,"unbounded_send","","Sends the provided message along this channel.",59,[[["self"],["t"]],["result",["senderror"]]]],[11,"close","","Closes the receiving half",60,[[["self"]]]],[11,"close","","Closes the receiving half",61,[[["self"]]]],[11,"new","futures::sync","Creates a new `BiLock` protecting the provided data.",62,N],[11,"poll_lock","","Attempt to acquire this lock, returning `NotReady` if it…",62,[[["self"]],["async",["bilockguard"]]]],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this…",62,[[["self"]],["bilockacquire"]]],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back…",62,[[["self"],["self"]],["result",["reuniteerror"]]]],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",63,[[["self"]],["bilock"]]],[0,"unsync","futures","Future-aware single-threaded synchronization",N,N],[0,"mpsc","futures::unsync","A multi-producer, single-consumer, futures-aware, FIFO…",N,N],[3,"Sender","futures::unsync::mpsc","The transmission end of a channel.",N,N],[3,"Receiver","","The receiving end of a channel which implements the…",N,N],[3,"UnboundedSender","","The transmission end of an unbounded channel.",N,N],[3,"UnboundedReceiver","","The receiving end of an unbounded channel.",N,N],[3,"SendError","","Error type for sending, used when the receiving end of a…",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Executor` instances must be able to…",N,N],[5,"channel","","Creates a bounded in-memory channel with buffered storage.",N,N],[5,"unbounded","","Creates an unbounded in-memory channel with buffered…",N,N],[5,"spawn","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"],["usize"]],["spawnhandle"]]],[5,"spawn_unbounded","","Spawns a `stream` onto the instance of `Executor`…",N,[[["s"],["e"]],["spawnhandle"]]],[11,"close","","Closes the receiving half",64,[[["self"]]]],[11,"unbounded_send","","Sends the provided message along this channel.",65,[[["self"],["t"]],["result",["senderror"]]]],[11,"close","","Closes the receiving half",66,[[["self"]]]],[11,"into_inner","","Returns the message that was attempted to be sent but…",67,[[["self"]],["t"]]],[0,"oneshot","futures::unsync","A one-shot, futures-aware channel",N,N],[3,"Sender","futures::unsync::oneshot","Represents the completion half of a oneshot through which…",N,N],[3,"Receiver","","A future representing the completion of a computation…",N,N],[3,"SpawnHandle","","Handle returned from the `spawn` function.",N,N],[3,"Execute","","Type of future which `Spawn` instances below must be able…",N,N],[5,"channel","","Creates a new futures-aware, one-shot channel.",N,N],[5,"spawn","","Spawns a `future` onto the instance of `Executor`…",N,[[["f"],["e"]],["spawnhandle"]]],[5,"spawn_fn","","Spawns a function `f` onto the `Spawn` instance provided…",N,[[["f"],["e"]],["spawnhandle"]]],[11,"send","","Completes this oneshot with a successful result.",68,[[["self"],["t"]],["result"]]],[11,"poll_cancel","","Polls this `Sender` half to detect whether the `Receiver`…",68,[[["self"]],["poll"]]],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding…",68,[[["self"]],["bool"]]],[11,"close","","Gracefully close this receiver, preventing sending any…",69,[[["self"]]]],[11,"forget","","Drop this future without canceling the underlying future.",70,[[["self"]]]],[0,"prelude","futures","A \"prelude\" for crates using the `futures` crate.",N,N],[6,"Poll","","Return type of the `Future::poll` method, indicates…",N,N],[6,"StartSend","","Return type of the `Sink::start_send` method, indicating…",N,N],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T,…",N,N],[14,"task_local","","A macro to create a `static` of type `LocalKey`",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"into_future","futures::future","",71,[[["self"]],["f"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into_future","","",72,[[["self"]],["f"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into_future","","",73,[[["self"]],["f"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_future","","",74,[[["self"]],["f"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"into_future","","",75,[[["self"]],["f"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_future","","",76,[[["self"]],["f"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into_future","","",77,[[["self"]],["f"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_future","","",80,[[["self"]],["f"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_future","","",81,[[["self"]],["f"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_future","","",82,[[["self"]],["f"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into_future","","",83,[[["self"]],["f"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_future","","",84,[[["self"]],["f"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into_future","","",85,[[["self"]],["f"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into_future","","",86,[[["self"]],["f"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_future","","",87,[[["self"]],["f"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_future","","",88,[[["self"]],["f"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into_future","","",89,[[["self"]],["f"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into_future","","",90,[[["self"]],["f"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into_future","","",91,[[["self"]],["f"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into_future","","",92,[[["self"]],["f"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into_future","","",93,[[["self"]],["f"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into_future","","",94,[[["self"]],["f"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into_future","","",95,[[["self"]],["f"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into_future","","",96,[[["self"]],["f"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"to_string","","",98,[[["self"]],["string"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[["self"]],["f"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","futures::stream","",99,[[["u"]],["result"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"into_future","","",104,[[["self"]],["f"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into_future","","",105,[[["self"]],["f"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_future","","",107,[[["self"]],["f"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"into_future","","",108,[[["self"]],["f"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_future","","",20,[[["self"]],["f"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into_future","","",30,[[["self"]],["f"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_future","","",118,[[["self"]],["f"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_from","futures::stream::futures_unordered","",37,[[["u"]],["result"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into_iter","","",119,[[["self"]],["i"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"try_from","futures::sink","",47,[[["u"]],["result"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into_future","","",42,[[["self"]],["f"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_future","","",44,[[["self"]],["f"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_future","","",120,[[["self"]],["f"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_from","futures::task","",121,[[["u"]],["result"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","futures::executor","",122,[[["u"]],["result"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","futures::task","",124,[[["u"]],["result"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"try_from","futures::sync","",62,[[["u"]],["result"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"into_future","","",128,[[["self"]],["f"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_future","futures::sync::oneshot","",54,[[["self"]],["f"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"to_string","","",129,[[["self"]],["string"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"into_future","","",55,[[["self"]],["f"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_future","","",130,[[["self"]],["f"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"try_from","futures::sync::mpsc","",58,[[["u"]],["result"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into_future","","",132,[[["self"]],["f"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"try_from","futures::unsync::mpsc","",133,[[["u"]],["result"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into_future","","",135,[[["self"]],["f"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"try_from","futures::unsync::oneshot","",68,[[["u"]],["result"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_future","","",69,[[["self"]],["f"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into_future","","",70,[[["self"]],["f"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into_future","","",136,[[["self"]],["f"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"poll","futures::future","",71,[[["self"]],["poll"]]],[11,"poll","","",72,[[["self"]],["poll"]]],[11,"poll","","",73,[[["self"]],["poll"]]],[11,"poll","","",74,[[["self"]],["poll"]]],[11,"poll","","",75,[[["self"]],["poll"]]],[11,"poll","","",76,[[["self"]],["poll"]]],[11,"poll","","",77,[[["self"]],["poll"]]],[11,"poll","","",5,[[["self"]],["poll"]]],[11,"poll","","",80,[[["self"]],["poll"]]],[11,"poll","","",81,[[["self"]],["poll"]]],[11,"poll","","",82,[[["self"]],["poll"]]],[11,"poll","","",83,[[["self"]],["poll"]]],[11,"poll","","",84,[[["self"]],["poll"]]],[11,"poll","","",85,[[["self"]],["poll"]]],[11,"poll","","",86,[[["self"]],["poll"]]],[11,"poll","","",87,[[["self"]],["poll"]]],[11,"poll","","",88,[[["self"]],["poll"]]],[11,"poll","","",89,[[["self"]],["poll"]]],[11,"poll","","",90,[[["self"]],["poll"]]],[11,"poll","","",91,[[["self"]],["poll"]]],[11,"poll","","",3,[[["self"]],["poll"]]],[11,"poll","","",92,[[["self"]],["poll"]]],[11,"poll","","",93,[[["self"]],["poll"]]],[11,"poll","","",94,[[["self"]],["poll"]]],[11,"poll","","",95,[[["self"]],["poll"]]],[11,"poll","","",96,[[["self"]],["poll"]]],[11,"poll","","",6,[[["self"]],["poll"]]],[11,"poll","futures::stream","",105,[[["self"]],["poll"]]],[11,"poll","","",104,[[["self"]],["poll"]]],[11,"poll","","",107,[[["self"]],["poll"]]],[11,"poll","","",108,[[["self"]],["poll"]]],[11,"poll","","",20,[[["self"]],["poll"]]],[11,"poll","","",30,[[["self"]],["poll"]]],[11,"poll","","",118,[[["self"]],["poll",["vec"]]]],[11,"poll","futures::sink","",42,[[["self"]],["poll"]]],[11,"poll","","",44,[[["self"]],["poll"]]],[11,"poll","","",120,[[["self"]],["poll"]]],[11,"poll","futures::sync::oneshot","",54,[[["self"]],["poll",["canceled"]]]],[11,"poll","","",55,[[["self"]],["poll"]]],[11,"poll","","",130,[[["self"]],["poll"]]],[11,"poll","futures::sync::mpsc","",132,[[["self"]],["poll"]]],[11,"poll","futures::sync","",128,[[["self"]],["poll",["bilockacquired"]]]],[11,"poll","futures::unsync::mpsc","",135,[[["self"]],["poll"]]],[11,"poll","futures::unsync::oneshot","",69,[[["self"]],["poll"]]],[11,"poll","","",70,[[["self"]],["poll"]]],[11,"poll","","",136,[[["self"]],["poll"]]],[11,"poll","futures::future","",78,[[["self"]],["poll",["option"]]]],[11,"poll","","",79,[[["self"]],["poll",["option"]]]],[11,"poll","futures::stream","",99,[[["self"]],["poll",["option"]]]],[11,"poll","","",100,[[["self"]],["poll",["option"]]]],[11,"poll","","",101,[[["self"]],["poll",["option"]]]],[11,"poll","","",102,[[["self"]],["poll",["option"]]]],[11,"poll","","",14,[[["self"]],["poll",["option"]]]],[11,"poll","","",103,[[["self"]],["poll",["option"]]]],[11,"poll","","",106,[[["self"]],["poll",["option"]]]],[11,"poll","","",15,[[["self"]],["poll",["option"]]]],[11,"poll","","",16,[[["self"]],["poll",["option"]]]],[11,"poll","","",17,[[["self"]],["poll",["option"]]]],[11,"poll","","",18,[[["self"]],["poll",["option"]]]],[11,"poll","","",19,[[["self"]],["poll",["option"]]]],[11,"poll","","",21,[[["self"]],["poll",["option"]]]],[11,"poll","","",22,[[["self"]],["poll",["option"]]]],[11,"poll","","",23,[[["self"]],["poll",["option"]]]],[11,"poll","","",24,[[["self"]],["poll",["option"]]]],[11,"poll","","",109,[[["self"]],["poll",["option"]]]],[11,"poll","","",110,[[["self"]],["poll",["option"]]]],[11,"poll","","",111,[[["self"]],["poll",["option"]]]],[11,"poll","","",25,[[["self"]],["poll",["option"]]]],[11,"poll","","",112,[[["self"]],["poll",["option"]]]],[11,"poll","","",113,[[["self"]],["poll",["option"]]]],[11,"poll","","",26,[[["self"]],["poll",["option"]]]],[11,"poll","","",27,[[["self"]],["poll",["option"]]]],[11,"poll","","",28,[[["self"]],["poll",["option"]]]],[11,"poll","","",29,[[["self"]],["poll",["option"]]]],[11,"poll","","",114,[[["self"]],["poll",["option"]]]],[11,"poll","","",115,[[["self"]],["poll",["option"]]]],[11,"poll","","",116,[[["self"]],["poll",["option"]]]],[11,"poll","","",31,[[["self"]],["poll",["option"]]]],[11,"poll","","",32,[[["self"]],["poll",["option"]]]],[11,"poll","","",117,[[["self"]],["poll",["option"]]]],[11,"poll","","",33,[[["self"]],["poll",["option"]]]],[11,"poll","","",35,[[["self"]],["poll",["option"]]]],[11,"poll","futures::stream::futures_unordered","",37,[[["self"]],["poll",["option"]]]],[11,"poll","futures::stream","",38,[[["self"]],["poll",["option"]]]],[11,"poll","futures::sink","",40,[[["self"]],["poll",["option"]]]],[11,"poll","","",41,[[["self"]],["poll",["option"]]]],[11,"poll","","",43,[[["self"]],["poll",["option"]]]],[11,"poll","","",45,[[["self"]],["poll",["option"]]]],[11,"poll","","",47,[[["self"]],["poll",["option"]]]],[11,"poll","futures::sync::mpsc","",60,[[["self"]],["poll",["option"]]]],[11,"poll","","",61,[[["self"]],["poll",["option"]]]],[11,"poll","","",131,[[["self"]],["poll",["option"]]]],[11,"poll","futures::unsync::mpsc","",64,[[["self"]],["poll",["option"]]]],[11,"poll","","",66,[[["self"]],["poll",["option"]]]],[11,"poll","","",134,[[["self"]],["poll",["option"]]]],[11,"start_send","futures::stream","",14,N],[11,"poll_complete","","",14,[[["self"]],["poll"]]],[11,"close","","",14,[[["self"]],["poll"]]],[11,"start_send","","",15,N],[11,"poll_complete","","",15,[[["self"]],["poll"]]],[11,"close","","",15,[[["self"]],["poll"]]],[11,"start_send","","",16,N],[11,"poll_complete","","",16,[[["self"]],["poll"]]],[11,"close","","",16,[[["self"]],["poll"]]],[11,"start_send","","",17,N],[11,"poll_complete","","",17,[[["self"]],["poll"]]],[11,"close","","",17,[[["self"]],["poll"]]],[11,"start_send","","",18,N],[11,"poll_complete","","",18,[[["self"]],["poll"]]],[11,"close","","",18,[[["self"]],["poll"]]],[11,"start_send","","",19,N],[11,"poll_complete","","",19,[[["self"]],["poll"]]],[11,"close","","",19,[[["self"]],["poll"]]],[11,"start_send","","",21,N],[11,"poll_complete","","",21,[[["self"]],["poll"]]],[11,"close","","",21,[[["self"]],["poll"]]],[11,"start_send","","",22,N],[11,"poll_complete","","",22,[[["self"]],["poll"]]],[11,"close","","",22,[[["self"]],["poll"]]],[11,"start_send","","",23,N],[11,"poll_complete","","",23,[[["self"]],["poll"]]],[11,"close","","",23,[[["self"]],["poll"]]],[11,"start_send","","",24,N],[11,"poll_complete","","",24,[[["self"]],["poll"]]],[11,"close","","",24,[[["self"]],["poll"]]],[11,"start_send","","",111,N],[11,"poll_complete","","",111,[[["self"]],["poll"]]],[11,"close","","",111,[[["self"]],["poll"]]],[11,"start_send","","",25,N],[11,"poll_complete","","",25,[[["self"]],["poll"]]],[11,"close","","",25,[[["self"]],["poll"]]],[11,"start_send","","",26,N],[11,"poll_complete","","",26,[[["self"]],["poll"]]],[11,"close","","",26,[[["self"]],["poll"]]],[11,"start_send","","",27,N],[11,"poll_complete","","",27,[[["self"]],["poll"]]],[11,"close","","",27,[[["self"]],["poll"]]],[11,"start_send","","",28,N],[11,"poll_complete","","",28,[[["self"]],["poll"]]],[11,"close","","",28,[[["self"]],["poll"]]],[11,"start_send","","",29,N],[11,"poll_complete","","",29,[[["self"]],["poll"]]],[11,"close","","",29,[[["self"]],["poll"]]],[11,"start_send","","",114,N],[11,"poll_complete","","",114,[[["self"]],["poll"]]],[11,"close","","",114,[[["self"]],["poll"]]],[11,"start_send","","",31,N],[11,"poll_complete","","",31,[[["self"]],["poll"]]],[11,"close","","",31,[[["self"]],["poll"]]],[11,"start_send","","",32,N],[11,"poll_complete","","",32,[[["self"]],["poll"]]],[11,"close","","",32,[[["self"]],["poll"]]],[11,"start_send","","",33,N],[11,"poll_complete","","",33,[[["self"]],["poll"]]],[11,"close","","",33,[[["self"]],["poll"]]],[11,"start_send","","",36,N],[11,"poll_complete","","",36,[[["self"]],["poll"]]],[11,"close","","",36,[[["self"]],["poll"]]],[11,"start_send","futures::sink","",40,N],[11,"poll_complete","","",40,[[["self"]],["poll"]]],[11,"close","","",40,[[["self"]],["poll"]]],[11,"start_send","","",41,N],[11,"poll_complete","","",41,[[["self"]],["poll"]]],[11,"close","","",41,[[["self"]],["poll"]]],[11,"start_send","","",43,N],[11,"poll_complete","","",43,[[["self"]],["poll"]]],[11,"close","","",43,[[["self"]],["poll"]]],[11,"start_send","","",45,N],[11,"poll_complete","","",45,[[["self"]],["poll"]]],[11,"close","","",45,[[["self"]],["poll"]]],[11,"start_send","","",46,N],[11,"poll_complete","","",46,[[["self"]],["poll"]]],[11,"close","","",46,[[["self"]],["poll"]]],[11,"start_send","","",47,N],[11,"poll_complete","","",47,[[["self"]],["poll"]]],[11,"close","","",47,[[["self"]],["poll"]]],[11,"start_send","futures::sync::mpsc","",58,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",58,[[["self"]],["poll",["senderror"]]]],[11,"close","","",58,[[["self"]],["poll",["senderror"]]]],[11,"start_send","","",59,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",59,[[["self"]],["poll",["senderror"]]]],[11,"close","","",59,[[["self"]],["poll",["senderror"]]]],[11,"start_send","futures::unsync::mpsc","",133,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",133,[[["self"]],["poll",["senderror"]]]],[11,"close","","",133,[[["self"]],["poll",["senderror"]]]],[11,"start_send","","",65,[[["self"],["t"]],["startsend",["senderror"]]]],[11,"poll_complete","","",65,[[["self"]],["poll",["senderror"]]]],[11,"close","","",65,[[["self"]],["poll",["senderror"]]]],[11,"fmt","futures::future","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::oneshot","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::mpsc","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::mpsc","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::future","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream::futures_unordered","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::stream","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sink","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["fmtresult"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::task","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::executor","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::oneshot","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync::mpsc","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::sync","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::mpsc","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","futures::unsync::oneshot","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"eq","futures","",0,[[["self"],["async"]],["bool"]]],[11,"ne","","",0,[[["self"],["async"]],["bool"]]],[11,"eq","","",1,[[["self"],["asyncsink"]],["bool"]]],[11,"ne","","",1,[[["self"],["asyncsink"]],["bool"]]],[11,"eq","futures::future","",4,[[["self"],["executeerrorkind"]],["bool"]]],[11,"eq","futures::sync::oneshot","",129,[[["self"],["canceled"]],["bool"]]],[11,"eq","futures::sync::mpsc","",56,[[["self"],["senderror"]],["bool"]]],[11,"ne","","",56,[[["self"],["senderror"]],["bool"]]],[11,"eq","","",57,[[["self"],["trysenderror"]],["bool"]]],[11,"ne","","",57,[[["self"],["trysenderror"]],["bool"]]],[11,"from","futures","",0,[[["t"]],["async"]]],[11,"from","futures::future","",74,[[["result"]],["self"]]],[11,"from","futures::executor","",123,[[["arc"]],["notifyhandle"]]],[11,"from","","",123,[[["t"]],["notifyhandle"]]],[11,"deref","futures::future","",97,[[["self"]],["t"]]],[11,"deref","","",98,[[["self"]],["e"]]],[11,"deref","futures::sync","",127,[[["self"]],["t"]]],[11,"deref","","",63,[[["self"]],["t"]]],[11,"deref_mut","","",127,[[["self"]],["t"]]],[11,"deref_mut","","",63,[[["self"]],["t"]]],[11,"drop","futures::future","",6,[[["self"]]]],[11,"drop","futures::stream::futures_unordered","",37,[[["self"]]]],[11,"drop","futures::executor","",123,[[["self"]]]],[11,"drop","futures::sync::oneshot","",53,[[["self"]]]],[11,"drop","","",54,[[["self"]]]],[11,"drop","","",55,[[["self"]]]],[11,"drop","","",130,[[["self"]]]],[11,"drop","futures::sync::mpsc","",58,[[["self"]]]],[11,"drop","","",60,[[["self"]]]],[11,"drop","futures::sync","",127,[[["self"]]]],[11,"drop","","",63,[[["self"]]]],[11,"drop","futures::unsync::mpsc","",133,[[["self"]]]],[11,"drop","","",64,[[["self"]]]],[11,"drop","futures::unsync::oneshot","",68,[[["self"]]]],[11,"drop","","",69,[[["self"]]]],[11,"next","futures::stream","",34,[[["self"]],["option"]]],[11,"next","futures::stream::futures_unordered","",119,[[["self"]],["option"]]],[11,"size_hint","","",119,N],[11,"from_iter","","",37,[[["t"]],["self"]]],[11,"from_iter","futures::stream","",38,[[["t"]],["self"]]],[11,"clone","futures","",0,[[["self"]],["async"]]],[11,"clone","","",1,[[["self"]],["asyncsink"]]],[11,"clone","futures::future","",74,[[["self"]],["futureresult"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",97,[[["self"]],["shareditem"]]],[11,"clone","","",98,[[["self"]],["sharederror"]]],[11,"clone","","",4,[[["self"]],["executeerrorkind"]]],[11,"clone","futures::sink","",40,[[["self"]],["with"]]],[11,"clone","","",43,[[["self"]],["sinkfromerr"]]],[11,"clone","","",45,[[["self"]],["sinkmaperr"]]],[11,"clone","futures::task","",125,[[["self"]],["unparkevent"]]],[11,"clone","","",121,[[["self"]],["task"]]],[11,"clone","futures::executor","",123,[[["self"]],["self"]]],[11,"clone","futures::sync::oneshot","",129,[[["self"]],["canceled"]]],[11,"clone","futures::sync::mpsc","",56,[[["self"]],["senderror"]]],[11,"clone","","",57,[[["self"]],["trysenderror"]]],[11,"clone","","",59,[[["self"]],["unboundedsender"]]],[11,"clone","","",58,[[["self"]],["sender"]]],[11,"clone","futures::unsync::mpsc","",133,[[["self"]],["self"]]],[11,"clone","","",65,[[["self"]],["self"]]],[11,"default","futures::task","",124,[[],["self"]]],[11,"description","futures::future","",98,[[["self"]],["str"]]],[11,"cause","","",98,[[["self"]],["option",["error"]]]],[11,"description","futures::stream","",12,[[["self"]],["str"]]],[11,"description","futures::sync::oneshot","",129,[[["self"]],["str"]]],[11,"description","futures::sync::mpsc","",56,[[["self"]],["str"]]],[11,"description","","",57,[[["self"]],["str"]]],[11,"description","futures::unsync::mpsc","",67,[[["self"]],["str"]]],[11,"new","futures::task","Create an `AtomicTask` initialized with the given `Task`",124,[[],["atomictask"]]],[11,"register","","Registers the current task to be notified on calls to…",124,[[["self"]]]],[11,"register_task","","Registers the provided task to be notified on calls to…",124,[[["self"],["task"]]]],[11,"notify","","Notifies the task that last called `register`.",124,[[["self"]]]],[11,"with","","Access this task-local key, running the provided closure…",126,[[["self"],["f"]],["r"]]],[11,"wait_future","futures::executor","Waits for the internal future to complete, blocking this…",122,[[["self"]],["result"]]],[11,"wait_stream","","Like `wait_future`, except only waits for the next element…",122,[[["self"]],["option",["result"]]]],[11,"wait_send","","Blocks the current thread until it's able to send `value`…",122,N],[11,"wait_flush","","Blocks the current thread until it's able to flush this…",122,[[["self"]],["result"]]],[11,"wait_close","","Blocks the current thread until it's able to close this…",122,[[["self"]],["result"]]],[11,"new","futures::task","Construct an unpark event that will insert `id` into `set`…",125,[[["arc",["eventset"]],["usize"]],["unparkevent"]]],[11,"clone_id","futures::executor","This function is called whenever a new copy of `id` is…",51,[[["self"],["usize"]],["usize"]]],[11,"drop_id","","All instances of `Task` store an `id` that they're going…",51,[[["self"],["usize"]]]],[11,"notify","futures::task","Indicate that the task should attempt to poll its future…",121,[[["self"]]]],[11,"is_current","","Returns `true` when called from within the context of the…",121,[[["self"]],["bool"]]],[11,"will_notify_current","","This function is intended as a performance optimization…",121,[[["self"]],["bool"]]],[11,"get_ref","futures::executor","Get a shared reference to the object the Spawn is wrapping.",122,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",122,[[["self"]],["t"]]],[11,"into_inner","","Consume the Spawn, returning its inner object",122,[[["self"]],["t"]]],[11,"poll_fn_notify","","Calls the provided closure, scheduling notifications to be…",122,[[["self"],["n"],["usize"],["f"]],["r"]]],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying…",122,[[["self"],["n"],["usize"]],["poll",["option"]]]],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task…",122,N],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"close_notify","","Invokes the underlying `close` method with this task in…",122,[[["self"],["n"],["usize"]],["poll"]]],[11,"new","","Constructs a new `NotifyHandle` directly.",123,N],[11,"notify","","Invokes the underlying instance of `Notify` with the…",123,[[["self"],["usize"]]]]],"paths":[[4,"Async"],[4,"AsyncSink"],[4,"Loop"],[4,"Either"],[4,"ExecuteErrorKind"],[3,"Fuse"],[3,"Shared"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[3,"ExecuteError"],[3,"ReuniteError"],[4,"MergedItem"],[3,"AndThen"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"FromErr"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"InspectErr"],[3,"Map"],[3,"MapErr"],[3,"Peekable"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Forward"],[3,"Buffered"],[3,"BufferUnordered"],[3,"Chunks"],[3,"Wait"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"FuturesOrdered"],[8,"Stream"],[3,"With"],[3,"WithFlatMap"],[3,"Flush"],[3,"SinkFromErr"],[3,"Send"],[3,"SinkMapErr"],[3,"Fanout"],[3,"Buffer"],[3,"Wait"],[8,"Sink"],[8,"EventSet"],[8,"Notify"],[8,"UnsafeNotify"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"SendError"],[3,"TrySendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"BiLock"],[3,"BiLockAcquired"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"Sender"],[3,"Receiver"],[3,"SpawnHandle"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"FutureResult"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"FromErr"],[3,"OrElse"],[3,"Select"],[3,"SelectNext"],[3,"Select2"],[3,"Then"],[3,"Inspect"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"SharedItem"],[3,"SharedError"],[3,"Iter"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"Chain"],[3,"Concat"],[3,"Concat2"],[3,"Empty"],[3,"Fold"],[3,"ForEach"],[3,"Merge"],[3,"Once"],[3,"OrElse"],[3,"PollFn"],[3,"Select"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"CatchUnwind"],[3,"Collect"],[3,"IterMut"],[3,"SendAll"],[3,"Task"],[3,"Spawn"],[3,"NotifyHandle"],[3,"AtomicTask"],[3,"UnparkEvent"],[3,"LocalKey"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"Canceled"],[3,"Execute"],[3,"SpawnHandle"],[3,"Execute"],[3,"Sender"],[3,"SpawnHandle"],[3,"Execute"],[3,"Execute"]]};
searchIndex["futures_cpupool"]={"doc":"A simple crate for executing work on a thread pool, and…","items":[[3,"CpuPool","futures_cpupool","A thread pool intended to run CPU intensive work.",N,N],[3,"Builder","","Thread pool configuration object",N,N],[3,"CpuFuture","","The type of future returned from the `CpuPool::spawn`…",N,N],[11,"new","","Creates a new thread pool with `size` worker threads…",0,[[["usize"]],["cpupool"]]],[11,"new_num_cpus","","Creates a new thread pool with a number of workers equal…",0,[[],["cpupool"]]],[11,"spawn","","Spawns a future to run on this thread pool, returning a…",0,[[["self"],["f"]],["cpufuture"]]],[11,"spawn_fn","","Spawns a closure on this thread pool.",0,[[["self"],["f"]],["cpufuture"]]],[11,"forget","","Drop this future without canceling the underlying future.",1,[[["self"]]]],[11,"new","","Create a builder a number of workers equal to the number…",2,[[],["builder"]]],[11,"pool_size","","Set size of a future CpuPool",2,[[["self"],["usize"]],["self"]]],[11,"stack_size","","Set stack size of threads in the pool.",2,[[["self"],["usize"]],["self"]]],[11,"name_prefix","","Set thread name prefix of a future CpuPool",2,[[["self"],["s"]],["self"]]],[11,"after_start","","Execute function `f` right after each thread is started…",2,[[["self"],["f"]],["self"]]],[11,"before_stop","","Execute function `f` before each worker thread stops.",2,[[["self"],["f"]],["self"]]],[11,"create","","Create CpuPool with configured parameters",2,[[["self"]],["cpupool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_future","","",1,[[["self"]],["f"]]],[11,"clone","","",0,[[["self"]],["cpupool"]]],[11,"drop","","",0,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"poll","","",1,[[["self"]],["poll"]]],[11,"execute","","",0,[[["self"],["f"]],["result",["executeerror"]]]]],"paths":[[3,"CpuPool"],[3,"CpuFuture"],[3,"Builder"]]};
searchIndex["getopts"]={"doc":"Simple getopt alternative.","items":[[3,"Options","getopts","A description of the options that a program can handle.",N,N],[3,"Matches","","The result of checking command line arguments. Contains a…",N,N],[12,"free","","Free string fragments",0,N],[4,"ParsingStyle","","What parsing style to use when parsing arguments.",N,N],[13,"FloatingFrees","","Flags and \"free\" arguments can be freely inter-mixed.",1,N],[13,"StopAtFirstFree","","As soon as a \"free\" argument (i.e. non-flag) is…",1,N],[4,"HasArg","","Describes whether an option has an argument.",N,N],[13,"Yes","","The option requires an argument.",2,N],[13,"No","","The option takes no argument.",2,N],[13,"Maybe","","The option argument is optional.",2,N],[4,"Occur","","Describes how often an option may occur.",N,N],[13,"Req","","The option occurs once.",3,N],[13,"Optional","","The option occurs at most once.",3,N],[13,"Multi","","The option occurs zero or more times.",3,N],[4,"Fail","","The type returned when the command line does not conform…",N,N],[13,"ArgumentMissing","","The option requires an argument but none was passed.",4,N],[13,"UnrecognizedOption","","The passed option is not declared among the possible…",4,N],[13,"OptionMissing","","A required option is not present.",4,N],[13,"OptionDuplicated","","A single occurrence option is being used multiple times.",4,N],[13,"UnexpectedArgument","","There's an argument being passed to a non-argument option.",4,N],[6,"Result","","The result of parsing a command line with a set of options.",N,N],[11,"new","","Create a blank set of options.",5,[[],["options"]]],[11,"parsing_style","","Set the parsing style.",5,[[["self"],["parsingstyle"]],["options"]]],[11,"long_only","","Set or clear \"long options only\" mode.",5,[[["self"],["bool"]],["options"]]],[11,"opt","","Create a generic option group, stating all parameters…",5,[[["self"],["str"],["str"],["str"],["str"],["hasarg"],["occur"]],["options"]]],[11,"optflag","","Create a long option that is optional and does not take an…",5,[[["self"],["str"],["str"],["str"]],["options"]]],[11,"optflagmulti","","Create a long option that can occur more than once and…",5,[[["self"],["str"],["str"],["str"]],["options"]]],[11,"optflagopt","","Create a long option that is optional and takes an…",5,[[["self"],["str"],["str"],["str"],["str"]],["options"]]],[11,"optmulti","","Create a long option that is optional, takes an argument,…",5,[[["self"],["str"],["str"],["str"],["str"]],["options"]]],[11,"optopt","","Create a long option that is optional and takes an argument.",5,[[["self"],["str"],["str"],["str"],["str"]],["options"]]],[11,"reqopt","","Create a long option that is required and takes an argument.",5,[[["self"],["str"],["str"],["str"],["str"]],["options"]]],[11,"parse","","Parse command line arguments according to the provided…",5,[[["self"],["c"]],["result"]]],[11,"short_usage","","Derive a short one-line usage summary from a set of long…",5,[[["self"],["str"]],["string"]]],[11,"usage","","Derive a formatted message from a set of options.",5,[[["self"],["str"]],["string"]]],[11,"usage_with_format","","Derive a custom formatted message from a set of options.…",5,[[["self"],["f"]],["string"]]],[11,"opt_defined","","Returns true if an option was defined",0,[[["self"],["str"]],["bool"]]],[11,"opt_present","","Returns true if an option was matched.",0,[[["self"],["str"]],["bool"]]],[11,"opt_count","","Returns the number of times an option was matched.",0,[[["self"],["str"]],["usize"]]],[11,"opts_present","","Returns true if any of several options were matched.",0,N],[11,"opts_str","","Returns the string argument supplied to one of several…",0,N],[11,"opt_strs","","Returns a vector of the arguments provided to all matches…",0,[[["self"],["str"]],["vec",["string"]]]],[11,"opt_str","","Returns the string argument supplied to a matching option…",0,[[["self"],["str"]],["option",["string"]]]],[11,"opt_default","","Returns the matching string, a default, or `None`.",0,[[["self"],["str"],["str"]],["option",["string"]]]],[11,"opt_get","","Returns some matching value or `None`.",0,[[["self"],["str"]],["result",["option"]]]],[11,"opt_get_default","","Returns a matching value or default.",0,[[["self"],["str"],["t"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["parsingstyle"]],["bool"]]],[11,"eq","","",2,[[["self"],["hasarg"]],["bool"]]],[11,"eq","","",3,[[["self"],["occur"]],["bool"]]],[11,"eq","","",0,[[["self"],["matches"]],["bool"]]],[11,"ne","","",0,[[["self"],["matches"]],["bool"]]],[11,"eq","","",4,[[["self"],["fail"]],["bool"]]],[11,"ne","","",4,[[["self"],["fail"]],["bool"]]],[11,"clone","","",1,[[["self"]],["parsingstyle"]]],[11,"clone","","",2,[[["self"]],["hasarg"]]],[11,"clone","","",3,[[["self"]],["occur"]]],[11,"clone","","",0,[[["self"]],["matches"]]],[11,"clone","","",4,[[["self"]],["fail"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"description","","",4,[[["self"]],["str"]]]],"paths":[[3,"Matches"],[4,"ParsingStyle"],[4,"HasArg"],[4,"Occur"],[4,"Fail"],[3,"Options"]]};
searchIndex["h2"]={"doc":"An asynchronous, HTTP/2.0 server and client implementation.","items":[[3,"Error","h2","Represents HTTP/2.0 operation errors.",N,N],[3,"Reason","","HTTP/2.0 error codes.",N,N],[3,"SendStream","","Sends the body stream and trailers to the remote peer.",N,N],[3,"StreamId","","A stream identifier, as described in [Section 5.1.1] of…",N,N],[3,"RecvStream","","Receives the body stream and trailers from the remote peer.",N,N],[3,"ReleaseCapacity","","A handle to release window capacity to a remote stream.",N,N],[11,"reason","","If the error was caused by the remote peer, the error…",0,[[["self"]],["option",["reason"]]]],[11,"is_io","","Returns the true if the error is an io::Error",0,[[["self"]],["bool"]]],[11,"get_io","","Returns the error if the error is an io::Error",0,[[["self"]],["option",["error"]]]],[11,"into_io","","Returns the error if the error is an io::Error",0,[[["self"]],["option",["error"]]]],[18,"NO_ERROR","","The associated condition is not a result of an error.",1,N],[18,"PROTOCOL_ERROR","","The endpoint detected an unspecific protocol error.",1,N],[18,"INTERNAL_ERROR","","The endpoint encountered an unexpected internal error.",1,N],[18,"FLOW_CONTROL_ERROR","","The endpoint detected that its peer violated the…",1,N],[18,"SETTINGS_TIMEOUT","","The endpoint sent a SETTINGS frame but did not receive a…",1,N],[18,"STREAM_CLOSED","","The endpoint received a frame after a stream was…",1,N],[18,"FRAME_SIZE_ERROR","","The endpoint received a frame with an invalid size.",1,N],[18,"REFUSED_STREAM","","The endpoint refused the stream prior to performing any…",1,N],[18,"CANCEL","","Used by the endpoint to indicate that the stream is no…",1,N],[18,"COMPRESSION_ERROR","","The endpoint is unable to maintain the header compression…",1,N],[18,"CONNECT_ERROR","","The connection established in response to a CONNECT…",1,N],[18,"ENHANCE_YOUR_CALM","","The endpoint detected that its peer is exhibiting a…",1,N],[18,"INADEQUATE_SECURITY","","The underlying transport has properties that do not meet…",1,N],[18,"HTTP_1_1_REQUIRED","","The endpoint requires that HTTP/1.1 be used instead of…",1,N],[11,"description","","Get a string description of the error code.",1,[[["self"]],["str"]]],[0,"client","","Client implementation of the HTTP/2.0 protocol.",N,N],[3,"Handshake","h2::client","Performs the HTTP/2.0 connection handshake.",N,N],[3,"SendRequest","","Initializes new HTTP/2.0 streams on a connection by…",N,N],[3,"ReadySendRequest","","Returns a `SendRequest` instance once it is ready to send…",N,N],[3,"Connection","","Manages all state associated with an HTTP/2.0 client…",N,N],[3,"ResponseFuture","","A future of an HTTP response.",N,N],[3,"PushedResponseFuture","","A future of a pushed HTTP response.",N,N],[3,"PushPromise","","A pushed response and corresponding request headers",N,N],[3,"PushPromises","","A stream of pushed responses and corresponding promised…",N,N],[3,"Builder","","Builds client connections with custom configuration values.",N,N],[5,"handshake","","Creates a new configured HTTP/2.0 client with default…",N,[[["t"]],["handshake",["bytes"]]]],[11,"poll_ready","","Returns `Ready` when the connection can initialize a new…",2,[[["self"]],["poll",["error"]]]],[11,"ready","","Consumes `self`, returning a future that returns `self`…",2,[[["self"]],["readysendrequest"]]],[11,"send_request","","Sends a HTTP/2.0 request to the server.",2,[[["self"],["request"],["bool"]],["result",["error"]]]],[11,"new","","Returns a new client builder instance initialized with…",3,[[],["builder"]]],[11,"initial_window_size","","Indicates the initial window size (in octets) for…",3,[[["self"],["u32"]],["self"]]],[11,"initial_connection_window_size","","Indicates the initial window size (in octets) for…",3,[[["self"],["u32"]],["self"]]],[11,"max_frame_size","","Indicates the size (in octets) of the largest HTTP/2.0…",3,[[["self"],["u32"]],["self"]]],[11,"max_header_list_size","","Sets the max size of received header frames.",3,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_streams","","Sets the maximum number of concurrent streams.",3,[[["self"],["u32"]],["self"]]],[11,"initial_max_send_streams","","Sets the initial maximum of locally initiated (send)…",3,[[["self"],["usize"]],["self"]]],[11,"max_concurrent_reset_streams","","Sets the maximum number of concurrent locally reset streams.",3,[[["self"],["usize"]],["self"]]],[11,"reset_stream_duration","","Sets the duration to remember locally reset streams.",3,[[["self"],["duration"]],["self"]]],[11,"enable_push","","Enables or disables server push promises.",3,[[["self"],["bool"]],["self"]]],[11,"handshake","","Creates a new configured HTTP/2.0 client backed by `io`.",3,[[["self"],["t"]],["handshake"]]],[11,"set_target_window_size","","Sets the target window size for the whole connection.",4,[[["self"],["u32"]]]],[11,"stream_id","","Returns the stream ID of the response stream.",5,[[["self"]],["streamid"]]],[11,"push_promises","","Returns a stream of PushPromises",5,[[["self"]],["pushpromises"]]],[11,"request","","Returns a reference to the push promise's request headers.",6,[[["self"]],["request"]]],[11,"request_mut","","Returns a mutable reference to the push promise's request…",6,[[["self"]],["request"]]],[11,"into_parts","","Consumes `self`, returning the push promise's request…",6,N],[11,"stream_id","","Returns the stream ID of the response stream.",7,[[["self"]],["streamid"]]],[0,"server","h2","Server implementation of the HTTP/2.0 protocol.",N,N],[3,"Handshake","h2::server","In progress HTTP/2.0 connection handshake future.",N,N],[3,"Connection","","Accepts inbound HTTP/2.0 streams on a connection.",N,N],[3,"Builder","","Builds server connections with custom configuration values.",N,N],[3,"SendResponse","","Send a response back to the client",N,N],[5,"handshake","","Creates a new configured HTTP/2.0 server with default…",N,[[["t"]],["handshake",["bytes"]]]],[11,"set_target_window_size","","Sets the target window size for the whole connection.",8,[[["self"],["u32"]]]],[11,"poll_close","","Returns `Ready` when the underlying connection has closed.",8,[[["self"]],["poll",["error"]]]],[11,"abrupt_shutdown","","Sets the connection to a GOAWAY state.",8,[[["self"],["reason"]]]],[11,"graceful_shutdown","","Starts a [graceful shutdown][1] process.",8,[[["self"]]]],[11,"new","","Returns a new server builder instance initialized with…",9,[[],["builder"]]],[11,"initial_window_size","","Indicates the initial window size (in octets) for…",9,[[["self"],["u32"]],["self"]]],[11,"initial_connection_window_size","","Indicates the initial window size (in octets) for…",9,[[["self"],["u32"]],["self"]]],[11,"max_frame_size","","Indicates the size (in octets) of the largest HTTP/2.0…",9,[[["self"],["u32"]],["self"]]],[11,"max_header_list_size","","Sets the max size of received header frames.",9,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_streams","","Sets the maximum number of concurrent streams.",9,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_reset_streams","","Sets the maximum number of concurrent locally reset streams.",9,[[["self"],["usize"]],["self"]]],[11,"reset_stream_duration","","Sets the maximum number of concurrent locally reset streams.",9,[[["self"],["duration"]],["self"]]],[11,"handshake","","Creates a new configured HTTP/2.0 server backed by `io`.",9,[[["self"],["t"]],["handshake"]]],[11,"send_response","","Send a response to a client request.",10,[[["self"],["response"],["bool"]],["result",["sendstream","error"]]]],[11,"send_reset","","Send a stream reset to the peer.",10,[[["self"],["reason"]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",10,[[["self"]],["poll",["reason","error"]]]],[11,"stream_id","","Returns the stream ID of the response stream.",10,[[["self"]],["streamid"]]],[11,"reserve_capacity","h2","Requests capacity to send data.",11,[[["self"],["usize"]]]],[11,"capacity","","Returns the stream's current send capacity.",11,[[["self"]],["usize"]]],[11,"poll_capacity","","Requests to be notified when the stream's capacity…",11,[[["self"]],["poll",["option","error"]]]],[11,"send_data","","Sends a single data frame to the remote peer.",11,[[["self"],["b"],["bool"]],["result",["error"]]]],[11,"send_trailers","","Sends trailers to the remote peer.",11,[[["self"],["headermap"]],["result",["error"]]]],[11,"send_reset","","Resets the stream.",11,[[["self"],["reason"]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",11,[[["self"]],["poll",["reason","error"]]]],[11,"stream_id","","Returns the stream ID of this `SendStream`.",11,[[["self"]],["streamid"]]],[11,"is_end_stream","","Returns true if the receive half has reached the end of…",12,[[["self"]],["bool"]]],[11,"release_capacity","","Get a mutable reference to this streams `ReleaseCapacity`.",12,[[["self"]],["releasecapacity"]]],[11,"poll_trailers","","Returns received trailers.",12,[[["self"]],["poll",["option","error"]]]],[11,"stream_id","","Returns the stream ID of this stream.",12,[[["self"]],["streamid"]]],[11,"stream_id","","Returns the stream ID of the stream whose capacity will be…",13,[[["self"]],["streamid"]]],[11,"release_capacity","","Release window capacity back to remote stream.",13,[[["self"],["usize"]],["result",["error"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"equivalent","","",1,[[["self"],["k"]],["bool"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"equivalent","","",14,[[["self"],["k"]],["bool"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","h2::client","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into_future","","",15,[[["self"]],["f"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into_future","","",16,[[["self"]],["f"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_future","","",4,[[["self"]],["f"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","h2::server","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_future","","",18,[[["self"]],["f"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"eq","h2","",1,[[["self"],["reason"]],["bool"]]],[11,"ne","","",1,[[["self"],["reason"]],["bool"]]],[11,"eq","","",14,[[["self"],["streamid"]],["bool"]]],[11,"ne","","",14,[[["self"],["streamid"]],["bool"]]],[11,"default","h2::client","",3,[[],["builder"]]],[11,"default","h2::server","",9,[[],["builder"]]],[11,"clone","h2","",1,[[["self"]],["reason"]]],[11,"clone","h2::client","",3,[[["self"]],["builder"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","h2::server","",9,[[["self"]],["builder"]]],[11,"clone","h2","",14,[[["self"]],["streamid"]]],[11,"clone","","",13,[[["self"]],["self"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"from","","",0,[[["reason"]],["error"]]],[11,"from","","",1,[[["u32"]],["reason"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","h2::client","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","h2::server","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","h2","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",14,N],[11,"description","","",0,[[["self"]],["str"]]],[11,"poll","h2::client","",16,[[["self"]],["poll"]]],[11,"poll","","",4,[[["self"]],["poll",["error"]]]],[11,"poll","","",15,[[["self"]],["poll"]]],[11,"poll","","",5,[[["self"]],["poll"]]],[11,"poll","","",7,[[["self"]],["poll"]]],[11,"poll","h2::server","",18,[[["self"]],["poll"]]],[11,"poll","h2::client","",17,[[["self"]],["poll",["option"]]]],[11,"poll","h2::server","",8,[[["self"]],["poll",["option","error"]]]],[11,"poll","h2","",12,[[["self"]],["poll",["option"]]]]],"paths":[[3,"Error"],[3,"Reason"],[3,"SendRequest"],[3,"Builder"],[3,"Connection"],[3,"ResponseFuture"],[3,"PushPromise"],[3,"PushedResponseFuture"],[3,"Connection"],[3,"Builder"],[3,"SendResponse"],[3,"SendStream"],[3,"RecvStream"],[3,"ReleaseCapacity"],[3,"StreamId"],[3,"Handshake"],[3,"ReadySendRequest"],[3,"PushPromises"],[3,"Handshake"]]};
searchIndex["handlebars"]={"doc":"Handlebars","items":[[3,"Context","handlebars","The context wrap data you render on your templates.",N,N],[3,"RenderError","","Error when rendering data on template.",N,N],[12,"desc","","",0,N],[12,"template_name","","",0,N],[12,"line_no","","",0,N],[12,"column_no","","",0,N],[3,"TemplateError","","Error on parsing template.",N,N],[12,"reason","","",1,N],[12,"template_name","","",1,N],[12,"line_no","","",1,N],[12,"column_no","","",1,N],[3,"Handlebars","","The single entry point of your Handlebars templates",N,N],[3,"Decorator","","",N,N],[3,"Helper","","",N,N],[3,"RenderContext","","The context of a render call",N,N],[3,"StringWriter","","",N,N],[3,"PathAndJson","","Json wrapper that holds the Json value and reference path…",N,N],[4,"TemplateFileError","","",N,N],[13,"TemplateError","","",2,N],[13,"IOError","","",2,N],[4,"TemplateRenderError","","",N,N],[13,"TemplateError","","",3,N],[13,"RenderError","","",3,N],[13,"IOError","","",3,N],[4,"ScopedJson","","A JSON wrapper designed for handlebars internal use case",N,N],[13,"Constant","","",4,N],[13,"Derived","","",4,N],[13,"Context","","",4,N],[5,"html_escape","","The default escape fn replaces the characters `&\"<>` with…",N,[[["str"]],["string"]]],[5,"no_escape","","`EscapeFn` that do not change any thing. Useful when using…",N,[[["str"]],["string"]]],[5,"to_json","","",N,[[["t"]],["json"]]],[11,"null","","Create a context with null data",5,[[],["context"]]],[11,"wraps","","Create a context with given data",5,[[["t"]],["result",["context","rendererror"]]]],[11,"navigate","","Navigate the context with base path and relative path…",5,[[["self"],["str"],["vecdeque"],["str"]],["result",["option","rendererror"]]]],[11,"data","","",5,[[["self"]],["json"]]],[11,"data_mut","","",5,[[["self"]],["json"]]],[11,"new","","",0,[[["t"]],["rendererror"]]],[11,"with","","",0,[[["e"]],["rendererror"]]],[11,"of","","",1,[[["templateerrorreason"]],["templateerror"]]],[11,"at","","",1,[[["self"],["str"],["usize"],["usize"]],["templateerror"]]],[11,"in_template","","",1,[[["self"],["string"]],["templateerror"]]],[11,"as_render_error","","",3,[[["self"]],["option",["rendererror"]]]],[11,"new","","",6,[[],["registry"]]],[11,"source_map_enabled","","Enable handlebars template source map",6,[[["self"],["bool"]]]],[11,"set_strict_mode","","Enable handlebars strict mode",6,[[["self"],["bool"]]]],[11,"strict_mode","","Return strict mode state, default is false.",6,[[["self"]],["bool"]]],[11,"register_template_string","","Register a template string",6,[[["self"],["str"],["s"]],["result",["templateerror"]]]],[11,"register_partial","","Register a partial string",6,[[["self"],["str"],["s"]],["result",["templateerror"]]]],[11,"register_template_file","","Register a template from a path",6,[[["self"],["str"],["p"]],["result",["templatefileerror"]]]],[11,"register_templates_directory","","Register templates from a directory",6,[[["self"],["str"],["p"]],["result",["templatefileerror"]]]],[11,"register_template_source","","Register a template from `std::io::Read` source",6,[[["self"],["str"],["read"]],["result",["templatefileerror"]]]],[11,"unregister_template","","remove a template from the registry",6,[[["self"],["str"]]]],[11,"register_helper","","register a helper",6,[[["self"],["str"],["box",["helperdef"]]],["option",["box"]]]],[11,"register_decorator","","register a decorator",6,[[["self"],["str"],["box",["directivedef"]]],["option",["box"]]]],[11,"register_escape_fn","","Register a new escape fn to be used from now on by this…",6,[[["self"],["f"]]]],[11,"unregister_escape_fn","","Restore the default escape fn.",6,[[["self"]]]],[11,"get_escape_fn","","Get a reference to the current escape fn.",6,[[["self"]],["fn"]]],[11,"has_template","","Return `true` if a template is registered for the given name",6,[[["self"],["str"]],["bool"]]],[11,"get_template","","Return a registered template,",6,[[["self"],["str"]],["option",["template"]]]],[11,"get_helper","","Return a registered helper",6,[[["self"],["str"]],["option",["box"]]]],[11,"get_decorator","","Return a registered directive, aka decorator",6,[[["self"],["str"]],["option",["box"]]]],[11,"get_templates","","Return all templates registered",6,[[["self"]],["hashmap"]]],[11,"clear_templates","","Unregister all templates",6,[[["self"]]]],[11,"render","","Render a registered template with some data into a string",6,[[["self"],["str"],["t"]],["result",["string","rendererror"]]]],[11,"render_to_write","","Render a registered template and write some data to the…",6,[[["self"],["str"],["t"],["w"]],["result",["rendererror"]]]],[11,"render_template","","render a template string using current registry without…",6,[[["self"],["str"],["t"]],["result",["string","templaterendererror"]]]],[11,"render_template_to_write","","render a template string using current registry without…",6,[[["self"],["str"],["t"],["w"]],["result",["templaterendererror"]]]],[11,"render_template_source_to_write","","render a template source using current registry without…",6,[[["self"],["read"],["t"],["w"]],["result",["templaterendererror"]]]],[11,"new","","Create a render context from a `Write`",7,[[["option",["string"]]],["rendercontext"]]],[11,"derive","","",7,[[["self"]],["rendercontext"]]],[11,"new_for_block","","",7,[[["self"]],["rendercontext"]]],[11,"context","","",7,[[["self"]],["option",["rc"]]]],[11,"set_context","","",7,[[["self"],["context"]]]],[11,"evaluate","","",7,[[["self"],["context"],["str"],["bool"]],["result",["json","rendererror"]]]],[11,"evaluate_absolute","","",7,[[["self"],["context"],["str"],["bool"]],["result",["json","rendererror"]]]],[11,"get_partial","","",7,[[["self"],["str"]],["option",["template"]]]],[11,"set_partial","","",7,[[["self"],["string"],["template"]]]],[11,"set_local_var","","",7,[[["self"],["string"],["json"]]]],[11,"clear_local_vars","","",7,[[["self"]]]],[11,"promote_local_vars","","",7,[[["self"]]]],[11,"demote_local_vars","","",7,[[["self"]]]],[11,"get_local_var","","",7,[[["self"],["str"]],["option",["json"]]]],[11,"is_current_template","","",7,[[["self"],["str"]],["bool"]]],[11,"register_local_helper","","",7,[[["self"],["str"],["box",["helperdef"]]],["option",["rc"]]]],[11,"unregister_local_helper","","",7,[[["self"],["str"]]]],[11,"get_local_helper","","",7,[[["self"],["str"]],["option",["rc"]]]],[11,"get_current_template_name","","",7,[[["self"]],["option",["string"]]]],[11,"set_current_template_name","","",7,[[["self"],["option",["string"]]]]],[11,"get_root_template_name","","",7,[[["self"]],["option",["string"]]]],[11,"set_root_template_name","","",7,[[["self"],["option",["string"]]]]],[11,"is_disable_escape","","",7,[[["self"]],["bool"]]],[11,"set_disable_escape","","",7,[[["self"],["bool"]]]],[11,"get_path","","",7,[[["self"]],["string"]]],[11,"set_path","","",7,[[["self"],["string"]]]],[11,"get_local_path_root","","",7,[[["self"]],["vecdeque"]]],[11,"push_local_path_root","","",7,[[["self"],["string"]]]],[11,"pop_local_path_root","","",7,[[["self"]]]],[11,"push_block_context","","",7,[[["self"],["t"]],["result",["rendererror"]]]],[11,"pop_block_context","","",7,[[["self"]]]],[11,"evaluate_in_block_context","","",7,[[["self"],["str"]],["result",["option","rendererror"]]]],[11,"name","","Returns helper name",8,[[["self"]],["str"]]],[11,"params","","Returns all helper params, resolved within the context",8,[[["self"]],["vec"]]],[11,"param","","Returns nth helper param, resolved within the context.",8,[[["self"],["usize"]],["option",["pathandjson"]]]],[11,"hash","","Returns hash, resolved within the context",8,[[["self"]],["btreemap"]]],[11,"hash_get","","Return hash value of a given key, resolved within the…",8,[[["self"],["str"]],["option",["pathandjson"]]]],[11,"template","","Returns the default inner template if the helper is a…",8,[[["self"]],["option",["template"]]]],[11,"inverse","","Returns the template of `else` branch if any",8,[[["self"]],["option",["template"]]]],[11,"is_block","","Returns if the helper is a block one…",8,[[["self"]],["bool"]]],[11,"block_param","","Returns block param if any",8,[[["self"]],["option",["str"]]]],[11,"block_param_pair","","Return block param pair (for example |key, val|) if any",8,[[["self"]],["option"]]],[11,"name","","Returns helper name",9,[[["self"]],["string"]]],[11,"params","","Returns all helper params, resolved within the context",9,[[["self"]],["vec"]]],[11,"param","","Returns nth helper param, resolved within the context",9,[[["self"],["usize"]],["option",["pathandjson"]]]],[11,"hash","","Returns hash, resolved within the context",9,[[["self"]],["btreemap"]]],[11,"hash_get","","Return hash value of a given key, resolved within the…",9,[[["self"],["str"]],["option",["pathandjson"]]]],[11,"template","","Returns the default inner template if any",9,[[["self"]],["option",["template"]]]],[11,"new","","",10,[[],["stringwriter"]]],[11,"into_string","","",10,[[["self"]],["string"]]],[0,"template","","",N,N],[3,"TemplateMapping","handlebars::template","",N,N],[12,"0","","",11,N],[12,"1","","",11,N],[3,"Template","","A handlebars template",N,N],[12,"name","","",12,N],[12,"elements","","",12,N],[12,"mapping","","",12,N],[3,"Subexpression","","",N,N],[12,"element","","",13,N],[3,"ExpressionSpec","","",N,N],[12,"name","","",14,N],[12,"params","","",14,N],[12,"hash","","",14,N],[12,"block_param","","",14,N],[12,"omit_pre_ws","","",14,N],[12,"omit_pro_ws","","",14,N],[3,"HelperTemplate","","",N,N],[12,"name","","",15,N],[12,"params","","",15,N],[12,"hash","","",15,N],[12,"block_param","","",15,N],[12,"template","","",15,N],[12,"inverse","","",15,N],[12,"block","","",15,N],[3,"DirectiveTemplate","","",N,N],[12,"name","","",16,N],[12,"params","","",16,N],[12,"hash","","",16,N],[12,"template","","",16,N],[4,"BlockParam","","",N,N],[13,"Single","","",17,N],[13,"Pair","","",17,N],[4,"Parameter","","",N,N],[13,"Name","","",18,N],[13,"Literal","","",18,N],[13,"Subexpression","","",18,N],[4,"TemplateElement","","",N,N],[13,"RawString","","",19,N],[13,"Expression","","",19,N],[13,"HTMLExpression","","",19,N],[13,"HelperExpression","","",19,N],[13,"HelperBlock","","",19,N],[13,"DirectiveExpression","","",19,N],[13,"DirectiveBlock","","",19,N],[13,"PartialExpression","","",19,N],[13,"PartialBlock","","",19,N],[13,"Comment","","",19,N],[11,"new","","",13,N],[11,"is_helper","","",13,[[["self"]],["bool"]]],[11,"as_element","","",13,[[["self"]],["templateelement"]]],[11,"name","","",13,[[["self"]],["str"]]],[11,"params","","",13,[[["self"]],["option",["vec"]]]],[11,"hash","","",13,[[["self"]],["option",["btreemap"]]]],[11,"into_name","","",18,[[["self"]],["option",["string"]]]],[11,"parse","","",18,[[["str"]],["result",["parameter","templateerror"]]]],[11,"new","","",12,[[["bool"]],["template"]]],[11,"compile","","",12,[[["s"]],["result",["template","templateerror"]]]],[11,"compile2","","",12,[[["s"],["bool"]],["result",["template","templateerror"]]]],[11,"compile_with_name","","",12,[[["s"],["string"],["bool"]],["result",["template","templateerror"]]]],[11,"as_json","handlebars","get the JSON reference",4,[[["self"]],["json"]]],[11,"render","","",4,[[["self"]],["string"]]],[11,"new","","",20,[[["option",["string"]],["scopedjson"]],["pathandjson"]]],[11,"path","","Returns relative path when the value is referenced If the…",20,[[["self"]],["option",["string"]]]],[11,"path_root","","Return root level of this path if any",20,[[["self"]],["option",["str"]]]],[11,"value","","Returns the value",20,[[["self"]],["json"]]],[6,"HelperResult","","",N,N],[6,"EscapeFn","","This type represents an escape fn, that is a function…",N,N],[8,"DecoratorDef","","Decorator Definition",N,N],[10,"call","","",21,[[["self"],["directive"],["registry"],["context"],["rendercontext"]],["result",["rendererror"]]]],[8,"HelperDef","","Helper Definition",N,N],[11,"call_inner","","",22,[[["self"],["helper"],["registry"],["context"],["rendercontext"]],["result",["option","rendererror"]]]],[11,"call","","",22,[[["self"],["helper"],["registry"],["context"],["rendercontext"],["output"]],["helperresult"]]],[8,"Output","","",N,N],[10,"write","","",23,[[["self"],["str"]],["result",["ioerror"]]]],[8,"Evaluable","","Evaluate directive or decorator",N,N],[10,"eval","","",24,[[["self"],["registry"],["context"],["rendercontext"]],["result",["rendererror"]]]],[8,"Renderable","","Render trait",N,N],[10,"render","","render into RenderContext's `writer`",25,[[["self"],["registry"],["context"],["rendercontext"],["output"]],["result",["rendererror"]]]],[11,"renders","","render into string",25,[[["self"],["registry"],["context"],["rendercontext"]],["result",["string","rendererror"]]]],[8,"JsonRender","","Render Json data with default format",N,N],[10,"render","","",26,[[["self"]],["string"]]],[14,"handlebars_helper","","Macro that allows you to quickly define a handlebars…",N,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","handlebars::template","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"render","","",12,[[["self"],["registry"],["context"],["rendercontext"],["output"]],["result",["rendererror"]]]],[11,"render","","",19,[[["self"],["registry"],["context"],["rendercontext"],["output"]],["result",["rendererror"]]]],[11,"eval","","",12,[[["self"],["registry"],["context"],["rendercontext"]],["result",["rendererror"]]]],[11,"eval","","",19,[[["self"],["registry"],["context"],["rendercontext"]],["result",["rendererror"]]]],[11,"eq","handlebars","",1,[[["self"],["templateerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["templateerror"]],["bool"]]],[11,"eq","handlebars::template","",11,[[["self"],["templatemapping"]],["bool"]]],[11,"ne","","",11,[[["self"],["templatemapping"]],["bool"]]],[11,"eq","","",12,[[["self"],["template"]],["bool"]]],[11,"ne","","",12,[[["self"],["template"]],["bool"]]],[11,"eq","","",13,[[["self"],["subexpression"]],["bool"]]],[11,"ne","","",13,[[["self"],["subexpression"]],["bool"]]],[11,"eq","","",17,[[["self"],["blockparam"]],["bool"]]],[11,"ne","","",17,[[["self"],["blockparam"]],["bool"]]],[11,"eq","","",14,[[["self"],["expressionspec"]],["bool"]]],[11,"ne","","",14,[[["self"],["expressionspec"]],["bool"]]],[11,"eq","","",18,[[["self"],["parameter"]],["bool"]]],[11,"ne","","",18,[[["self"],["parameter"]],["bool"]]],[11,"eq","","",15,[[["self"],["helpertemplate"]],["bool"]]],[11,"ne","","",15,[[["self"],["helpertemplate"]],["bool"]]],[11,"eq","","",16,[[["self"],["directivetemplate"]],["bool"]]],[11,"ne","","",16,[[["self"],["directivetemplate"]],["bool"]]],[11,"eq","","",19,[[["self"],["templateelement"]],["bool"]]],[11,"ne","","",19,[[["self"],["templateelement"]],["bool"]]],[11,"default","handlebars","",6,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"clone","","",5,[[["self"]],["context"]]],[11,"clone","","",7,[[["self"]],["rendercontext"]]],[11,"clone","handlebars::template","",11,[[["self"]],["templatemapping"]]],[11,"clone","","",12,[[["self"]],["template"]]],[11,"clone","","",13,[[["self"]],["subexpression"]]],[11,"clone","","",17,[[["self"]],["blockparam"]]],[11,"clone","","",14,[[["self"]],["expressionspec"]]],[11,"clone","","",18,[[["self"]],["parameter"]]],[11,"clone","","",15,[[["self"]],["helpertemplate"]]],[11,"clone","","",16,[[["self"]],["directivetemplate"]]],[11,"clone","","",19,[[["self"]],["templateelement"]]],[11,"from","handlebars","",0,[[["ioerror"]],["rendererror"]]],[11,"from","","",0,[[["serdeerror"]],["rendererror"]]],[11,"from","","",0,[[["fromutf8error"]],["rendererror"]]],[11,"from","","",2,[[["templateerror"]],["templatefileerror"]]],[11,"from","","",2,[[["walkdirerror"]],["templatefileerror"]]],[11,"from","","",3,[[["templateerror"]],["templaterendererror"]]],[11,"from","","",3,[[["rendererror"]],["templaterendererror"]]],[11,"from","","",4,[[["json"]],["scopedjson"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","handlebars::template","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","handlebars","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"write","","",10,N],[11,"flush","","",10,[[["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["error"]]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"call_inner","","",22,[[["self"],["helper"],["registry"],["context"],["rendercontext"]],["result",["option","rendererror"]]]],[11,"call","","",22,[[["self"],["helper"],["registry"],["context"],["rendercontext"],["output"]],["helperresult"]]],[11,"renders","","render into string",25,[[["self"],["registry"],["context"],["rendercontext"]],["result",["string","rendererror"]]]],[11,"expand_as_name","handlebars::template","",18,[[["self"],["registry"],["context"],["rendercontext"]],["result",["string","rendererror"]]]],[11,"expand","","",18,[[["self"],["registry"],["context"],["rendercontext"]],["result",["pathandjson","rendererror"]]]]],"paths":[[3,"RenderError"],[3,"TemplateError"],[4,"TemplateFileError"],[4,"TemplateRenderError"],[4,"ScopedJson"],[3,"Context"],[3,"Handlebars"],[3,"RenderContext"],[3,"Helper"],[3,"Decorator"],[3,"StringWriter"],[3,"TemplateMapping"],[3,"Template"],[3,"Subexpression"],[3,"ExpressionSpec"],[3,"HelperTemplate"],[3,"DirectiveTemplate"],[4,"BlockParam"],[4,"Parameter"],[4,"TemplateElement"],[3,"PathAndJson"],[8,"DecoratorDef"],[8,"HelperDef"],[8,"Output"],[8,"Evaluable"],[8,"Renderable"],[8,"JsonRender"]]};
searchIndex["http"]={"doc":"A general purpose library of common HTTP types","items":[[3,"Error","http","A generic \"error\" for HTTP connections",N,N],[3,"Extensions","","A type map of protocol extensions.",N,N],[3,"HeaderMap","","A set of HTTP headers",N,N],[0,"header","","HTTP header types",N,N],[3,"HeaderMap","http::header","A set of HTTP headers",N,N],[3,"Iter","","`HeaderMap` entry iterator.",N,N],[3,"Keys","","An iterator over `HeaderMap` keys.",N,N],[3,"Values","","`HeaderMap` value iterator.",N,N],[3,"Drain","","A drain iterator for `HeaderMap`.",N,N],[3,"GetAll","","A view to all values stored in a single entry.",N,N],[3,"VacantEntry","","A view into a single empty location in a `HeaderMap`.",N,N],[3,"OccupiedEntry","","A view into a single occupied location in a `HeaderMap`.",N,N],[3,"ValueIter","","An iterator of all values associated with a single header…",N,N],[3,"ValueIterMut","","A mutable iterator of all values associated with a single…",N,N],[3,"ValueDrain","","An drain iterator of all values associated with a single…",N,N],[3,"IntoIter","","An owning iterator over the entries of a `HeaderMap`.",N,N],[3,"HeaderName","","Represents an HTTP header field name",N,N],[3,"InvalidHeaderName","","A possible error when converting a `HeaderName` from…",N,N],[3,"InvalidHeaderNameBytes","","A possible error when converting a `HeaderName` from…",N,N],[3,"HeaderValue","","Represents an HTTP header field value.",N,N],[3,"InvalidHeaderValue","","A possible error when converting a `HeaderValue` from a…",N,N],[3,"InvalidHeaderValueBytes","","A possible error when converting a `HeaderValue` from a…",N,N],[3,"ToStrError","","A possible error when converting a `HeaderValue` to a…",N,N],[4,"Entry","","A view into a single location in a `HeaderMap`, which may…",N,N],[13,"Occupied","","An occupied entry",0,N],[13,"Vacant","","A vacant entry",0,N],[11,"new","http","Create an empty `HeaderMap`.",1,[[],["self"]]],[11,"with_capacity","","Create an empty `HeaderMap` with the specified capacity.",1,[[["usize"]],["headermap"]]],[11,"len","","Returns the number of headers stored in the map.",1,[[["self"]],["usize"]]],[11,"keys_len","","Returns the number of keys stored in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",1,[[["self"]]]],[11,"capacity","","Returns the number of headers the map can hold without…",1,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more headers…",1,[[["self"],["usize"]]]],[11,"get","","Returns a reference to the value associated with the key.",1,[[["self"],["k"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the value associated with…",1,[[["self"],["k"]],["option"]]],[11,"get_all","","Returns a view of all values associated with a key.",1,[[["self"],["k"]],["getall"]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[["self"],["k"]],["bool"]]],[11,"iter","","An iterator visiting all key-value pairs.",1,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable…",1,[[["self"]],["itermut"]]],[11,"keys","","An iterator visiting all keys.",1,[[["self"]],["keys"]]],[11,"values","","An iterator visiting all values.",1,[[["self"]],["values"]]],[11,"values_mut","","An iterator visiting all values mutably.",1,[[["self"]],["valuesmut"]]],[11,"drain","","Clears the map, returning all entries as an iterator.",1,[[["self"]],["drain"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["k"]],["result",["entry","invalidheadername"]]]],[11,"insert","","Inserts a key-value pair into the map.",1,[[["self"],["k"],["t"]],["option"]]],[11,"append","","Inserts a key-value pair into the map.",1,[[["self"],["k"],["t"]],["bool"]]],[11,"remove","","Removes a key from the map, returning the value associated…",1,[[["self"],["k"]],["option"]]],[11,"or_insert","http::header","Ensures a value is in the entry by inserting the default…",0,[[["self"],["t"]],["t"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["self"],["f"]],["t"]]],[11,"key","","Returns a reference to the entry's key",0,[[["self"]],["headername"]]],[11,"key","","Returns a reference to the entry's key",2,[[["self"]],["headername"]]],[11,"into_key","","Take ownership of the key",2,[[["self"]],["headername"]]],[11,"insert","","Insert the value into the entry.",2,[[["self"],["t"]],["t"]]],[11,"insert_entry","","Insert the value into the entry.",2,[[["self"],["t"]],["occupiedentry"]]],[11,"iter","","Returns an iterator visiting all values associated with…",3,[[["self"]],["valueiter"]]],[11,"key","","Returns a reference to the entry's key.",4,[[["self"]],["headername"]]],[11,"get","","Get a reference to the first value in the entry.",4,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",4,[[["self"]],["t"]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference to…",4,[[["self"]],["t"]]],[11,"insert","","Sets the value of the entry.",4,[[["self"],["t"]],["t"]]],[11,"insert_mult","","Sets the value of the entry.",4,[[["self"],["t"]],["valuedrain"]]],[11,"append","","Insert the value into the entry.",4,[[["self"],["t"]]]],[11,"remove","","Remove the entry from the map.",4,[[["self"]],["t"]]],[11,"remove_entry","","Remove the entry from the map.",4,N],[11,"remove_entry_mult","","Remove the entry from the map.",4,N],[11,"iter","","Returns an iterator visiting all values associated with…",4,[[["self"]],["valueiter"]]],[11,"iter_mut","","Returns an iterator mutably visiting all values associated…",4,[[["self"]],["valueitermut"]]],[11,"from_bytes","","Converts a slice of bytes to an HTTP header name.",5,N],[11,"from_lowercase","","Converts a slice of bytes to an HTTP header name.",5,N],[11,"from_static","","Converts a static string to a HTTP header name.",5,[[["str"]],["headername"]]],[11,"as_str","","Returns a `str` representation of the header.",5,[[["self"]],["str"]]],[11,"from_static","","Convert a static string to a `HeaderValue`.",6,[[["str"]],["headervalue"]]],[11,"from_str","","Attempt to convert a string to a `HeaderValue`.",6,[[["str"]],["result",["headervalue","invalidheadervalue"]]]],[11,"from_name","","Converts a HeaderName into a HeaderValue",6,[[["headername"]],["headervalue"]]],[11,"from_bytes","","Attempt to convert a byte slice to a `HeaderValue`.",6,N],[11,"from_shared","","Attempt to convert a `Bytes` buffer to a `HeaderValue`.",6,[[["bytes"]],["result",["headervalue","invalidheadervaluebytes"]]]],[11,"from_shared_unchecked","","Convert a `Bytes` directly into a `HeaderValue` without…",6,[[["bytes"]],["headervalue"]]],[11,"to_str","","Yields a `&str` slice if the `HeaderValue` only contains…",6,[[["self"]],["result",["str","tostrerror"]]]],[11,"len","","Returns the length of `self`.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `HeaderValue` has a length of zero…",6,[[["self"]],["bool"]]],[11,"as_bytes","","Converts a `HeaderValue` to a byte slice.",6,N],[11,"set_sensitive","","Mark that the header value represents sensitive information.",6,[[["self"],["bool"]]]],[11,"is_sensitive","","Returns `true` if the value represents sensitive data.",6,[[["self"]],["bool"]]],[17,"ACCEPT","","Advertises which content types the client is able to…",N,N],[17,"ACCEPT_CHARSET","","Advertises which character set the client is able to…",N,N],[17,"ACCEPT_ENCODING","","Advertises which content encoding the client is able to…",N,N],[17,"ACCEPT_LANGUAGE","","Advertises which languages the client is able to understand.",N,N],[17,"ACCEPT_RANGES","","Marker used by the server to advertise partial request…",N,N],[17,"ACCESS_CONTROL_ALLOW_CREDENTIALS","","Preflight response indicating if the response to the…",N,N],[17,"ACCESS_CONTROL_ALLOW_HEADERS","","Preflight response indicating permitted HTTP headers.",N,N],[17,"ACCESS_CONTROL_ALLOW_METHODS","","Preflight header response indicating permitted access…",N,N],[17,"ACCESS_CONTROL_ALLOW_ORIGIN","","Indicates whether the response can be shared with…",N,N],[17,"ACCESS_CONTROL_EXPOSE_HEADERS","","Indicates which headers can be exposed as part of the…",N,N],[17,"ACCESS_CONTROL_MAX_AGE","","Indicates how long the results of a preflight request can…",N,N],[17,"ACCESS_CONTROL_REQUEST_HEADERS","","Informs the server which HTTP headers will be used when an…",N,N],[17,"ACCESS_CONTROL_REQUEST_METHOD","","Informs the server know which HTTP method will be used…",N,N],[17,"AGE","","Indicates the time in seconds the object has been in a…",N,N],[17,"ALLOW","","Lists the set of methods support by a resource.",N,N],[17,"ALT_SVC","","Advertises the availability of alternate services to…",N,N],[17,"AUTHORIZATION","","Contains the credentials to authenticate a user agent with…",N,N],[17,"CACHE_CONTROL","","Specifies directives for caching mechanisms in both…",N,N],[17,"CONNECTION","","Controls whether or not the network connection stays open…",N,N],[17,"CONTENT_DISPOSITION","","Indicates if the content is expected to be displayed inline.",N,N],[17,"CONTENT_ENCODING","","Used to compress the media-type.",N,N],[17,"CONTENT_LANGUAGE","","Used to describe the languages intended for the audience.",N,N],[17,"CONTENT_LENGTH","","Indicates the size fo the entity-body.",N,N],[17,"CONTENT_LOCATION","","Indicates an alternate location for the returned data.",N,N],[17,"CONTENT_RANGE","","Indicates where in a full body message a partial message…",N,N],[17,"CONTENT_SECURITY_POLICY","","Allows controlling resources the user agent is allowed to…",N,N],[17,"CONTENT_SECURITY_POLICY_REPORT_ONLY","","Allows experimenting with policies by monitoring their…",N,N],[17,"CONTENT_TYPE","","Used to indicate the media type of the resource.",N,N],[17,"COOKIE","","Contains stored HTTP cookies previously sent by the server…",N,N],[17,"DNT","","Indicates the client's tracking preference.",N,N],[17,"DATE","","Contains the date and time at which the message was…",N,N],[17,"ETAG","","Identifier for a specific version of a resource.",N,N],[17,"EXPECT","","Indicates expectations that need to be fulfilled by the…",N,N],[17,"EXPIRES","","Contains the date/time after which the response is…",N,N],[17,"FORWARDED","","Contains information from the client-facing side of proxy…",N,N],[17,"FROM","","Contains an Internet email address for a human user who…",N,N],[17,"HOST","","Specifies the domain name of the server and (optionally)…",N,N],[17,"IF_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[17,"IF_MODIFIED_SINCE","","Makes a request conditional based on the modification date.",N,N],[17,"IF_NONE_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[17,"IF_RANGE","","Makes a request conditional based on range.",N,N],[17,"IF_UNMODIFIED_SINCE","","Makes the request conditional based on the last…",N,N],[17,"LAST_MODIFIED","","Content-Types that are acceptable for the response.",N,N],[17,"LINK","","Allows the server to point an interested client to another…",N,N],[17,"LOCATION","","Indicates the URL to redirect a page to.",N,N],[17,"MAX_FORWARDS","","Indicates the max number of intermediaries the request…",N,N],[17,"ORIGIN","","Indicates where a fetch originates from.",N,N],[17,"PRAGMA","","HTTP/1.0 header usually used for backwards compatibility.",N,N],[17,"PROXY_AUTHENTICATE","","Defines the authentication method that should be used to…",N,N],[17,"PROXY_AUTHORIZATION","","Contains the credentials to authenticate a user agent to a…",N,N],[17,"PUBLIC_KEY_PINS","","Associates a specific cryptographic public key with a…",N,N],[17,"PUBLIC_KEY_PINS_REPORT_ONLY","","Sends reports of pinning violation to the report-uri…",N,N],[17,"RANGE","","Indicates the part of a document that the server should…",N,N],[17,"REFERER","","Contains the address of the previous web page from which a…",N,N],[17,"REFERRER_POLICY","","Governs which referrer information should be included with…",N,N],[17,"REFRESH","","Informs the web browser that the current page or frame…",N,N],[17,"RETRY_AFTER","","The Retry-After response HTTP header indicates how long…",N,N],[17,"SEC_WEBSOCKET_ACCEPT","","The |Sec-WebSocket-Accept| header field is used in the…",N,N],[17,"SEC_WEBSOCKET_EXTENSIONS","","The |Sec-WebSocket-Extensions| header field is used in the…",N,N],[17,"SEC_WEBSOCKET_KEY","","The |Sec-WebSocket-Key| header field is used in the…",N,N],[17,"SEC_WEBSOCKET_PROTOCOL","","The |Sec-WebSocket-Protocol| header field is used in the…",N,N],[17,"SEC_WEBSOCKET_VERSION","","The |Sec-WebSocket-Version| header field is used in the…",N,N],[17,"SERVER","","Contains information about the software used by the origin…",N,N],[17,"SET_COOKIE","","Used to send cookies from the server to the user agent.",N,N],[17,"STRICT_TRANSPORT_SECURITY","","Tells the client to communicate with HTTPS instead of…",N,N],[17,"TE","","Informs the server of transfer encodings willing to be…",N,N],[17,"TRAILER","","Allows the sender to include additional fields at the end…",N,N],[17,"TRANSFER_ENCODING","","Specifies the form of encoding used to safely transfer the…",N,N],[17,"UPGRADE","","Used as part of the exchange to upgrade the protocol.",N,N],[17,"UPGRADE_INSECURE_REQUESTS","","Sends a signal to the server expressing the client’s…",N,N],[17,"USER_AGENT","","Contains a string that allows identifying the requesting…",N,N],[17,"VARY","","Determines how to match future requests with cached…",N,N],[17,"VIA","","Added by proxies to track routing.",N,N],[17,"WARNING","","General HTTP header contains information about possible…",N,N],[17,"WWW_AUTHENTICATE","","Defines the authentication method that should be used to…",N,N],[17,"X_CONTENT_TYPE_OPTIONS","","Marker used by the server to indicate that the MIME types…",N,N],[17,"X_DNS_PREFETCH_CONTROL","","Controls DNS prefetching.",N,N],[17,"X_FRAME_OPTIONS","","Indicates whether or not a browser should be allowed to…",N,N],[17,"X_XSS_PROTECTION","","Stop pages from loading when an XSS attack is detected.",N,N],[8,"AsHeaderName","","A marker trait used to identify values that can be used as…",N,N],[8,"IntoHeaderName","","A marker trait used to identify values that can be used as…",N,N],[0,"method","http","The HTTP request method",N,N],[3,"Method","http::method","The Request Method (VERB)",N,N],[3,"InvalidMethod","","A possible error value when converting `Method` from bytes.",N,N],[18,"GET","","GET",7,N],[18,"POST","","POST",7,N],[18,"PUT","","PUT",7,N],[18,"DELETE","","DELETE",7,N],[18,"HEAD","","HEAD",7,N],[18,"OPTIONS","","OPTIONS",7,N],[18,"CONNECT","","CONNECT",7,N],[18,"PATCH","","PATCH",7,N],[18,"TRACE","","TRACE",7,N],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",7,N],[11,"is_safe","","Whether a method is considered \"safe\", meaning the request…",7,[[["self"]],["bool"]]],[11,"is_idempotent","","Whether a method is considered \"idempotent\", meaning the…",7,[[["self"]],["bool"]]],[11,"as_str","","Return a &str representation of the HTTP method",7,[[["self"]],["str"]]],[0,"request","http","HTTP request types.",N,N],[3,"Request","http::request","Represents an HTTP request.",N,N],[3,"Parts","","Component parts of an HTTP `Request`",N,N],[12,"method","","The request's method",8,N],[12,"uri","","The request's URI",8,N],[12,"version","","The request's version",8,N],[12,"headers","","The request's headers",8,N],[12,"extensions","","The request's extensions",8,N],[3,"Builder","","An HTTP request builder",N,N],[11,"builder","","Creates a new builder-style object to manufacture a…",9,[[],["builder"]]],[11,"get","","Creates a new `Builder` initialized with a GET method and…",9,[[["t"]],["builder"]]],[11,"put","","Creates a new `Builder` initialized with a PUT method and…",9,[[["t"]],["builder"]]],[11,"post","","Creates a new `Builder` initialized with a POST method and…",9,[[["t"]],["builder"]]],[11,"delete","","Creates a new `Builder` initialized with a DELETE method…",9,[[["t"]],["builder"]]],[11,"options","","Creates a new `Builder` initialized with an OPTIONS method…",9,[[["t"]],["builder"]]],[11,"head","","Creates a new `Builder` initialized with a HEAD method and…",9,[[["t"]],["builder"]]],[11,"connect","","Creates a new `Builder` initialized with a CONNECT method…",9,[[["t"]],["builder"]]],[11,"patch","","Creates a new `Builder` initialized with a PATCH method…",9,[[["t"]],["builder"]]],[11,"trace","","Creates a new `Builder` initialized with a TRACE method…",9,[[["t"]],["builder"]]],[11,"new","","Creates a new blank `Request` with the body",9,[[["t"]],["request"]]],[11,"from_parts","","Creates a new `Request` with the given components parts…",9,[[["parts"],["t"]],["request"]]],[11,"method","","Returns a reference to the associated HTTP method.",9,[[["self"]],["method"]]],[11,"method_mut","","Returns a mutable reference to the associated HTTP method.",9,[[["self"]],["method"]]],[11,"uri","","Returns a reference to the associated URI.",9,[[["self"]],["uri"]]],[11,"uri_mut","","Returns a mutable reference to the associated URI.",9,[[["self"]],["uri"]]],[11,"version","","Returns the associated version.",9,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",9,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",9,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field…",9,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",9,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",9,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",9,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",9,[[["self"]],["t"]]],[11,"into_body","","Consumes the request, returning just the body.",9,[[["self"]],["t"]]],[11,"into_parts","","Consumes the request returning the head and body parts.",9,N],[11,"map","","Consumes the request returning a new request with body…",9,[[["self"],["f"]],["request"]]],[11,"new","","Creates a new default instance of `Builder` to construct…",10,[[],["builder"]]],[11,"method","","Set the HTTP method for this request.",10,[[["self"],["t"]],["builder"]]],[11,"uri","","Set the URI for this request.",10,[[["self"],["t"]],["builder"]]],[11,"version","","Set the HTTP version for this request.",10,[[["self"],["version"]],["builder"]]],[11,"header","","Appends a header to this request builder.",10,[[["self"],["k"],["v"]],["builder"]]],[11,"extension","","Adds an extension to this builder",10,[[["self"],["t"]],["builder"]]],[11,"body","","\"Consumes\" this builder, using the provided `body` to…",10,[[["self"],["t"]],["result",["request"]]]],[0,"response","http","HTTP response types.",N,N],[3,"Response","http::response","Represents an HTTP response",N,N],[3,"Parts","","Component parts of an HTTP `Response`",N,N],[12,"status","","The response's status",11,N],[12,"version","","The response's version",11,N],[12,"headers","","The response's headers",11,N],[12,"extensions","","The response's extensions",11,N],[3,"Builder","","An HTTP response builder",N,N],[11,"builder","","Creates a new builder-style object to manufacture a…",12,[[],["builder"]]],[11,"new","","Creates a new blank `Response` with the body",12,[[["t"]],["response"]]],[11,"from_parts","","Creates a new `Response` with the given head and body",12,[[["parts"],["t"]],["response"]]],[11,"status","","Returns the `StatusCode`.",12,[[["self"]],["statuscode"]]],[11,"status_mut","","Returns a mutable reference to the associated `StatusCode`.",12,[[["self"]],["statuscode"]]],[11,"version","","Returns a reference to the associated version.",12,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",12,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",12,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field…",12,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",12,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",12,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",12,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",12,[[["self"]],["t"]]],[11,"into_body","","Consumes the response, returning just the body.",12,[[["self"]],["t"]]],[11,"into_parts","","Consumes the response returning the head and body parts.",12,N],[11,"map","","Consumes the response returning a new response with body…",12,[[["self"],["f"]],["response"]]],[11,"new","","Creates a new default instance of `Builder` to construct…",13,[[],["builder"]]],[11,"status","","Set the HTTP status for this response.",13,[[["self"],["t"]],["builder"]]],[11,"version","","Set the HTTP version for this response.",13,[[["self"],["version"]],["builder"]]],[11,"header","","Appends a header to this response builder.",13,[[["self"],["k"],["v"]],["builder"]]],[11,"extension","","Adds an extension to this builder",13,[[["self"],["t"]],["builder"]]],[11,"body","","\"Consumes\" this builder, using the provided `body` to…",13,[[["self"],["t"]],["result",["response"]]]],[0,"status","http","HTTP status codes",N,N],[3,"StatusCode","http::status","An HTTP status code (`status-code` in RFC 7230 et al.).",N,N],[3,"InvalidStatusCode","","A possible error value when converting a `StatusCode` from…",N,N],[11,"from_u16","","Converts a u16 to a status code.",14,[[["u16"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_bytes","","Converts a &[u8] to a status code",14,N],[11,"as_u16","","Returns the `u16` corresponding to this `StatusCode`.",14,[[["self"]],["u16"]]],[11,"as_str","","Returns a &str representation of the `StatusCode`",14,[[["self"]],["str"]]],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",14,[[["self"]],["option",["str"]]]],[11,"is_informational","","Check if status is within 100-199.",14,[[["self"]],["bool"]]],[11,"is_success","","Check if status is within 200-299.",14,[[["self"]],["bool"]]],[11,"is_redirection","","Check if status is within 300-399.",14,[[["self"]],["bool"]]],[11,"is_client_error","","Check if status is within 400-499.",14,[[["self"]],["bool"]]],[11,"is_server_error","","Check if status is within 500-599.",14,[[["self"]],["bool"]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",14,N],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",14,N],[18,"PROCESSING","","102 Processing [RFC2518]",14,N],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",14,N],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",14,N],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",14,N],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",14,N],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",14,N],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",14,N],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",14,N],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",14,N],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",14,N],[18,"IM_USED","","226 IM Used [RFC3229]",14,N],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",14,N],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",14,N],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",14,N],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",14,N],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",14,N],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",14,N],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",14,N],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",14,N],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",14,N],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",14,N],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",14,N],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",14,N],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",14,N],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",14,N],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",14,N],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",14,N],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",14,N],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",14,N],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",14,N],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",14,N],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",14,N],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",14,N],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",14,N],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",14,N],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",14,N],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",14,N],[18,"IM_A_TEAPOT","","418 I'm a teapot [curiously not registered by IANA but…",14,N],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",14,N],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",14,N],[18,"LOCKED","","423 Locked [RFC4918]",14,N],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",14,N],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",14,N],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",14,N],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",14,N],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",14,N],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",14,N],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",14,N],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",14,N],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",14,N],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",14,N],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",14,N],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",14,N],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",14,N],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",14,N],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",14,N],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",14,N],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",14,N],[0,"version","http","HTTP version",N,N],[3,"Version","http::version","Represents a version of the HTTP spec.",N,N],[18,"HTTP_09","","`HTTP/0.9`",15,N],[18,"HTTP_10","","`HTTP/1.0`",15,N],[18,"HTTP_11","","`HTTP/1.1`",15,N],[18,"HTTP_2","","`HTTP/2.0`",15,N],[0,"uri","http","URI component of request and response lines",N,N],[3,"Authority","http::uri","Represents the authority component of a URI.",N,N],[3,"PathAndQuery","","Represents the path component of a URI",N,N],[3,"Scheme","","Represents the scheme component of a URI",N,N],[3,"Uri","","The URI component of a request.",N,N],[3,"Parts","","The various parts of a URI.",N,N],[12,"scheme","","The scheme component of a URI",16,N],[12,"authority","","The authority component of a URI",16,N],[12,"path_and_query","","The origin-form component of a URI",16,N],[3,"InvalidUri","","An error resulting from a failed attempt to construct a URI.",N,N],[3,"InvalidUriBytes","","An error resulting from a failed attempt to construct a URI.",N,N],[3,"InvalidUriParts","","An error resulting from a failed attempt to construct a URI.",N,N],[11,"from_shared","","Attempt to convert an `Authority` from `Bytes`.",17,[[["bytes"]],["result",["invaliduribytes"]]]],[11,"from_static","","Attempt to convert an `Authority` from a static string.",17,[[["str"]],["self"]]],[11,"host","","Get the host of this `Authority`.",17,[[["self"]],["str"]]],[11,"port","","Get the port of this `Authority`.",17,[[["self"]],["option",["u16"]]]],[11,"as_str","","Return a str representation of the authority",17,[[["self"]],["str"]]],[11,"into_bytes","","Converts this `Authority` back to a sequence of bytes",17,[[["self"]],["bytes"]]],[11,"from_shared","","Attempt to convert a `PathAndQuery` from `Bytes`.",18,[[["bytes"]],["result",["invaliduribytes"]]]],[11,"from_static","","Convert a `PathAndQuery` from a static string.",18,[[["str"]],["self"]]],[11,"path","","Returns the path component",18,[[["self"]],["str"]]],[11,"query","","Returns the query string component",18,[[["self"]],["option",["str"]]]],[11,"as_str","","Returns the path and query as a string component.",18,[[["self"]],["str"]]],[11,"into_bytes","","Converts this `PathAndQuery` back to a sequence of bytes",18,[[["self"]],["bytes"]]],[18,"HTTP","","HTTP protocol scheme",19,N],[18,"HTTPS","","HTTP protocol over TLS.",19,N],[11,"from_shared","","Attempt to convert a `Scheme` from `Bytes`",19,[[["bytes"]],["result",["invaliduribytes"]]]],[11,"as_str","","Return a str representation of the scheme",19,[[["self"]],["str"]]],[11,"into_bytes","","Converts this `Scheme` back to a sequence of bytes",19,[[["self"]],["bytes"]]],[11,"from_parts","","Attempt to convert a `Uri` from `Parts`",20,[[["parts"]],["result",["uri","invaliduriparts"]]]],[11,"from_shared","","Attempt to convert a `Uri` from `Bytes`",20,[[["bytes"]],["result",["uri","invaliduribytes"]]]],[11,"from_static","","Convert a `Uri` from a static string.",20,[[["str"]],["self"]]],[11,"into_parts","","Convert a `Uri` into `Parts`.",20,[[["self"]],["parts"]]],[11,"path_and_query","","Returns the path & query components of the Uri",20,[[["self"]],["option",["pathandquery"]]]],[11,"path","","Get the path of this `Uri`.",20,[[["self"]],["str"]]],[11,"scheme_part","","Get the scheme of this `Uri`.",20,[[["self"]],["option",["scheme"]]]],[11,"authority_part","","Get the authority of this `Uri`.",20,[[["self"]],["option",["authority"]]]],[11,"host","","Get the host of this `Uri`.",20,[[["self"]],["option",["str"]]]],[11,"port","","Get the port of this `Uri`.",20,[[["self"]],["option",["u16"]]]],[11,"query","","Get the query string of this `Uri`, starting after the `?`.",20,[[["self"]],["option",["str"]]]],[11,"new","http","Create an empty `Extensions`.",21,[[],["extensions"]]],[11,"insert","","Insert a type into this `Extensions`.",21,[[["self"],["t"]],["option"]]],[11,"get","","Get a reference to a type previously inserted on this…",21,[[["self"]],["option"]]],[11,"get_mut","","Get a mutable reference to a type previously inserted on…",21,[[["self"]],["option"]]],[11,"remove","","Remove a type from this `Extensions`.",21,[[["self"]],["option"]]],[11,"clear","","Clear the `Extensions` of all inserted extensions.",21,[[["self"]]]],[6,"Result","","A `Result` typedef to use with the `http::Error` type",N,N],[8,"HttpTryFrom","","Private trait for the `http` crate to have generic methods…",N,N],[16,"Error","","Associated error with the conversion this implementation…",22,N],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","http::header","",24,[[["self"]],["i"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into_iter","","",26,[[["self"]],["i"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into_iter","","",27,[[["self"]],["i"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","","",28,[[["self"]],["i"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into_iter","","",29,[[["self"]],["i"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into_iter","","",30,[[["self"]],["i"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into_iter","","",31,[[["self"]],["i"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_string","","",32,[[["self"]],["string"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","http::method","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","http::request","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","http::response","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_string","http::status","",14,[[["self"]],["string"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","http::version","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"to_string","http::uri","",17,[[["self"]],["string"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_from","http::header","",5,[[["headername"]],["result"]]],[11,"try_from","","",5,[[["str"]],["result"]]],[11,"try_from","","",5,N],[11,"try_from","","",5,[[["bytes"]],["result"]]],[11,"try_from","","",6,[[["u16"]],["result"]]],[11,"try_from","","",6,[[["i16"]],["result"]]],[11,"try_from","","",6,[[["u32"]],["result"]]],[11,"try_from","","",6,[[["i32"]],["result"]]],[11,"try_from","","",6,[[["u64"]],["result"]]],[11,"try_from","","",6,[[["i64"]],["result"]]],[11,"try_from","","",6,[[["usize"]],["result"]]],[11,"try_from","","",6,[[["isize"]],["result"]]],[11,"try_from","","",6,[[["headervalue"]],["result"]]],[11,"try_from","","",6,[[["str"]],["result"]]],[11,"try_from","","",6,N],[11,"try_from","","",6,[[["string"]],["result"]]],[11,"try_from","","",6,[[["bytes"]],["result"]]],[11,"try_from","","",6,[[["headername"]],["result"]]],[11,"try_from","http::method","",7,[[["method"]],["result"]]],[11,"try_from","","",7,N],[11,"try_from","","",7,[[["str"]],["result"]]],[11,"try_from","http::status","",14,[[["statuscode"]],["result"]]],[11,"try_from","","",14,N],[11,"try_from","","",14,[[["str"]],["result"]]],[11,"try_from","","",14,[[["u16"]],["result"]]],[11,"try_from","http::uri","",20,[[["str"]],["result"]]],[11,"try_from","","",20,[[["string"]],["result"]]],[11,"try_from","","",20,[[["string"]],["result"]]],[11,"try_from","","",20,[[["bytes"]],["result"]]],[11,"try_from","","",20,[[["parts"]],["result"]]],[11,"try_from","","",20,[[["uri"]],["result"]]],[11,"try_from","","",20,[[["self"]],["result"]]],[11,"try_from","http::method","",7,[[["self"]],["result"]]],[11,"try_from","http::status","",14,[[["self"]],["result"]]],[11,"try_from","http::header","",5,[[["self"]],["result"]]],[11,"try_from","","",6,[[["self"]],["result"]]],[11,"next","","",24,[[["self"]],["option"]]],[11,"size_hint","","",24,N],[11,"next","","",25,[[["self"]],["option"]]],[11,"size_hint","","",25,N],[11,"next","","",26,[[["self"]],["option"]]],[11,"size_hint","","",26,N],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,N],[11,"next","","",28,[[["self"]],["option"]]],[11,"size_hint","","",28,N],[11,"next","","",29,[[["self"]],["option"]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"size_hint","","",31,N],[11,"next","","",30,[[["self"]],["option"]]],[11,"size_hint","","",30,N],[11,"eq","http","",1,[[["self"],["headermap"]],["bool"]]],[11,"eq","http::header","",3,[[["self"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["headername"]],["bool"]]],[11,"ne","","",5,[[["self"],["headername"]],["bool"]]],[11,"eq","","",5,[[["self"],["headername"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",5,[[["self"],["str"]],["bool"]]],[11,"eq","","Performs a case-insensitive comparison of the string…",5,[[["self"],["str"]],["bool"]]],[11,"eq","","",6,[[["self"],["headervalue"]],["bool"]]],[11,"eq","","",6,[[["self"],["str"]],["bool"]]],[11,"eq","","",6,N],[11,"eq","","",6,[[["self"],["string"]],["bool"]]],[11,"eq","","",6,[[["self"],["t"]],["bool"]]],[11,"eq","http::method","",7,[[["self"],["method"]],["bool"]]],[11,"ne","","",7,[[["self"],["method"]],["bool"]]],[11,"eq","","",7,[[["self"],["method"]],["bool"]]],[11,"eq","","",7,[[["self"],["str"]],["bool"]]],[11,"eq","","",7,[[["self"],["str"]],["bool"]]],[11,"eq","http::status","",14,[[["self"],["statuscode"]],["bool"]]],[11,"ne","","",14,[[["self"],["statuscode"]],["bool"]]],[11,"eq","","",14,[[["self"],["u16"]],["bool"]]],[11,"eq","http::version","",15,[[["self"],["version"]],["bool"]]],[11,"ne","","",15,[[["self"],["version"]],["bool"]]],[11,"eq","http::uri","",17,[[["self"],["authority"]],["bool"]]],[11,"eq","","",17,[[["self"],["str"]],["bool"]]],[11,"eq","","",17,[[["self"],["str"]],["bool"]]],[11,"eq","","",17,[[["self"],["string"]],["bool"]]],[11,"eq","","",18,[[["self"],["pathandquery"]],["bool"]]],[11,"eq","","",18,[[["self"],["str"]],["bool"]]],[11,"eq","","",18,[[["self"],["str"]],["bool"]]],[11,"eq","","",18,[[["self"],["string"]],["bool"]]],[11,"eq","","",19,[[["self"],["scheme"]],["bool"]]],[11,"eq","","",19,[[["self"],["str"]],["bool"]]],[11,"eq","","",20,[[["self"],["uri"]],["bool"]]],[11,"eq","","",20,[[["self"],["str"]],["bool"]]],[11,"eq","","",20,[[["self"],["str"]],["bool"]]],[11,"next_back","http::header","",28,[[["self"]],["option"]]],[11,"next_back","","",29,[[["self"]],["option"]]],[11,"as_ref","","",5,[[["self"]],["str"]]],[11,"as_ref","","",5,N],[11,"as_ref","","",6,N],[11,"as_ref","http::method","",7,[[["self"]],["str"]]],[11,"as_ref","http::uri","",17,[[["self"]],["str"]]],[11,"as_ref","","",19,[[["self"]],["str"]]],[11,"into_iter","http","Creates a consuming iterator, that is, one that moves keys…",1,[[["self"]],["intoiter"]]],[11,"into_iter","http::header","",3,[[["self"]],["valueiter"]]],[11,"into_iter","","",4,[[["self"]],["valueitermut"]]],[11,"default","http","",1,[[],["self"]]],[11,"default","http::method","",7,[[],["method"]]],[11,"default","http::request","",9,[[],["request"]]],[11,"default","","",10,[[],["builder"]]],[11,"default","http::response","",12,[[],["response"]]],[11,"default","","",13,[[],["builder"]]],[11,"default","http::status","",14,[[],["statuscode"]]],[11,"default","http::version","",15,[[],["version"]]],[11,"default","http::uri","",16,[[],["parts"]]],[11,"default","","",20,[[],["uri"]]],[11,"default","http","",21,[[],["extensions"]]],[11,"cmp","http::header","",6,[[["self"],["self"]],["ordering"]]],[11,"cmp","http::status","",14,[[["self"],["statuscode"]],["ordering"]]],[11,"cmp","http::version","",15,[[["self"],["version"]],["ordering"]]],[11,"clone","http","",1,[[["self"]],["headermap"]]],[11,"clone","http::header","",5,[[["self"]],["headername"]]],[11,"clone","","",6,[[["self"]],["headervalue"]]],[11,"clone","http::method","",7,[[["self"]],["method"]]],[11,"clone","http::status","",14,[[["self"]],["statuscode"]]],[11,"clone","http::version","",15,[[["self"]],["version"]]],[11,"clone","http::uri","",17,[[["self"]],["authority"]]],[11,"clone","","",18,[[["self"]],["pathandquery"]]],[11,"clone","","",19,[[["self"]],["scheme"]]],[11,"clone","","",20,[[["self"]],["uri"]]],[11,"extend","http","Extend a `HeaderMap` with the contents of another…",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"from","http::header","",5,[[["headername"]],["headername"]]],[11,"from","","",6,[[["headername"]],["headervalue"]]],[11,"from","","",6,[[["u16"]],["headervalue"]]],[11,"from","","",6,[[["i16"]],["headervalue"]]],[11,"from","","",6,[[["u32"]],["headervalue"]]],[11,"from","","",6,[[["i32"]],["headervalue"]]],[11,"from","","",6,[[["u64"]],["headervalue"]]],[11,"from","","",6,[[["i64"]],["headervalue"]]],[11,"from","","",6,[[["usize"]],["headervalue"]]],[11,"from","","",6,[[["isize"]],["headervalue"]]],[11,"from","","",6,[[["headervalue"]],["self"]]],[11,"from","http::method","",7,[[["method"]],["self"]]],[11,"from","http::status","",14,[[["statuscode"]],["self"]]],[11,"from","http::uri","",16,[[["uri"]],["self"]]],[11,"from","http","",23,[[["invalidstatuscode"]],["error"]]],[11,"from","","",23,[[["invalidmethod"]],["error"]]],[11,"from","","",23,[[["invaliduri"]],["error"]]],[11,"from","","",23,[[["invaliduribytes"]],["error"]]],[11,"from","","",23,[[["invaliduriparts"]],["error"]]],[11,"from","","",23,[[["invalidheadername"]],["error"]]],[11,"from","","",23,[[["invalidheadernamebytes"]],["error"]]],[11,"from","","",23,[[["invalidheadervalue"]],["error"]]],[11,"from","","",23,[[["invalidheadervaluebytes"]],["error"]]],[11,"drop","http::header","",27,[[["self"]]]],[11,"drop","","",31,[[["self"]]]],[11,"drop","","",30,[[["self"]]]],[11,"partial_cmp","","",6,[[["self"],["headervalue"]],["option",["ordering"]]]],[11,"partial_cmp","","",6,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",6,N],[11,"partial_cmp","","",6,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",6,[[["self"],["t"]],["option",["ordering"]]]],[11,"partial_cmp","http::status","",14,[[["self"],["statuscode"]],["option",["ordering"]]]],[11,"lt","","",14,[[["self"],["statuscode"]],["bool"]]],[11,"le","","",14,[[["self"],["statuscode"]],["bool"]]],[11,"gt","","",14,[[["self"],["statuscode"]],["bool"]]],[11,"ge","","",14,[[["self"],["statuscode"]],["bool"]]],[11,"partial_cmp","http::version","",15,[[["self"],["version"]],["option",["ordering"]]]],[11,"lt","","",15,[[["self"],["version"]],["bool"]]],[11,"le","","",15,[[["self"],["version"]],["bool"]]],[11,"gt","","",15,[[["self"],["version"]],["bool"]]],[11,"ge","","",15,[[["self"],["version"]],["bool"]]],[11,"partial_cmp","http::uri","",17,[[["self"],["authority"]],["option",["ordering"]]]],[11,"partial_cmp","","",17,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",17,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",17,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",18,[[["self"],["pathandquery"]],["option",["ordering"]]]],[11,"partial_cmp","","",18,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",18,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",18,[[["self"],["string"]],["option",["ordering"]]]],[11,"fmt","http::header","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","http","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::header","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::method","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::request","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::response","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::status","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::version","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::uri","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","http","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::header","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::method","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::status","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","http::uri","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","http","",23,[[["self"],["formatter"]],["result"]]],[11,"hash","http::header","",5,N],[11,"hash","","",6,N],[11,"hash","http::method","",7,N],[11,"hash","http::status","",14,N],[11,"hash","http::version","",15,N],[11,"hash","http::uri","",17,[[["self"],["h"]]]],[11,"hash","","",19,[[["self"],["h"]]]],[11,"hash","","",20,[[["self"],["h"]]]],[11,"index","http","Panics Using the index operator will cause a panic if the…",1,[[["self"],["k"]],["t"]]],[11,"from_iter","","",1,[[["i"]],["self"]]],[11,"from_str","http::header","",5,[[["str"]],["result",["headername","invalidheadername"]]]],[11,"from_str","","",6,[[["str"]],["result",["headervalue"]]]],[11,"from_str","http::method","",7,[[["str"]],["result"]]],[11,"from_str","http::status","",14,[[["str"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_str","http::uri","",17,[[["str"]],["result",["invaliduri"]]]],[11,"from_str","","",18,[[["str"]],["result",["invaliduri"]]]],[11,"from_str","","",19,[[["str"]],["result"]]],[11,"from_str","","",20,[[["str"]],["result",["uri","invaliduri"]]]],[11,"borrow","http::header","",5,[[["self"]],["str"]]],[11,"description","","",32,[[["self"]],["str"]]],[11,"description","","",33,[[["self"]],["str"]]],[11,"description","","",34,[[["self"]],["str"]]],[11,"description","","",35,[[["self"]],["str"]]],[11,"description","","",36,[[["self"]],["str"]]],[11,"description","http::method","",37,[[["self"]],["str"]]],[11,"description","http::status","",38,[[["self"]],["str"]]],[11,"description","http::uri","",39,[[["self"]],["str"]]],[11,"description","","",40,[[["self"]],["str"]]],[11,"description","","",41,[[["self"]],["str"]]],[11,"description","http","",23,[[["self"]],["str"]]]],"paths":[[4,"Entry"],[3,"HeaderMap"],[3,"VacantEntry"],[3,"GetAll"],[3,"OccupiedEntry"],[3,"HeaderName"],[3,"HeaderValue"],[3,"Method"],[3,"Parts"],[3,"Request"],[3,"Builder"],[3,"Parts"],[3,"Response"],[3,"Builder"],[3,"StatusCode"],[3,"Version"],[3,"Parts"],[3,"Authority"],[3,"PathAndQuery"],[3,"Scheme"],[3,"Uri"],[3,"Extensions"],[8,"HttpTryFrom"],[3,"Error"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"ValueIter"],[3,"ValueIterMut"],[3,"ValueDrain"],[3,"IntoIter"],[3,"InvalidHeaderName"],[3,"InvalidHeaderNameBytes"],[3,"InvalidHeaderValue"],[3,"InvalidHeaderValueBytes"],[3,"ToStrError"],[3,"InvalidMethod"],[3,"InvalidStatusCode"],[3,"InvalidUri"],[3,"InvalidUriBytes"],[3,"InvalidUriParts"]]};
searchIndex["httparse"]={"doc":"httparse","items":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",N,N],[3,"Request","","A parsed Request.",N,N],[12,"method","","The request method, such as `GET`.",0,N],[12,"path","","The request path, such as `/about-us`.",0,N],[12,"version","","The request version, such as `HTTP/1.1`.",0,N],[12,"headers","","The request headers.",0,N],[3,"Response","","A parsed Response.",N,N],[12,"version","","The response version, such as `HTTP/1.1`.",1,N],[12,"code","","The response code, such as `200`.",1,N],[12,"reason","","The response reason-phrase, such as `OK`.",1,N],[12,"headers","","The response headers.",1,N],[3,"Header","","Represents a parsed header.",N,N],[12,"name","","The name portion of a header.",2,N],[12,"value","","The value portion of a header.",2,N],[4,"Error","","An error in parsing.",N,N],[13,"HeaderName","","Invalid byte in header name.",3,N],[13,"HeaderValue","","Invalid byte in header value.",3,N],[13,"NewLine","","Invalid byte in new line.",3,N],[13,"Status","","Invalid byte in Response status.",3,N],[13,"Token","","Invalid byte where token is required.",3,N],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,N],[13,"Version","","Invalid byte in HTTP version.",3,N],[4,"Status","","The result of a successful parse pass.",N,N],[13,"Complete","","The completed result.",4,N],[13,"Partial","","A partial result.",4,N],[5,"parse_headers","","Parse a buffer of bytes as headers.",N,N],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",N,N],[6,"Result","","A Result of any parsing action.",N,N],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array…",N,N],[11,"is_complete","","Convenience method to check if status is complete.",4,[[["self"]],["bool"]]],[11,"is_partial","","Convenience method to check if status is partial.",4,[[["self"]],["bool"]]],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if…",4,[[["self"]],["t"]]],[11,"new","","Creates a new Request, using a slice of headers you…",0,N],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,N],[11,"new","","Creates a new `Response` using a slice of `Header`s you…",1,N],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"eq","","",3,[[["self"],["error"]],["bool"]]],[11,"eq","","",5,[[["self"],["invalidchunksize"]],["bool"]]],[11,"eq","","",4,[[["self"],["status"]],["bool"]]],[11,"ne","","",4,[[["self"],["status"]],["bool"]]],[11,"eq","","",0,[[["self"],["request"]],["bool"]]],[11,"ne","","",0,[[["self"],["request"]],["bool"]]],[11,"eq","","",1,[[["self"],["response"]],["bool"]]],[11,"ne","","",1,[[["self"],["response"]],["bool"]]],[11,"eq","","",2,[[["self"],["header"]],["bool"]]],[11,"ne","","",2,[[["self"],["header"]],["bool"]]],[11,"clone","","",3,[[["self"]],["error"]]],[11,"clone","","",4,[[["self"]],["status"]]],[11,"clone","","",2,[[["self"]],["header"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"description","","",3,[[["self"]],["str"]]]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["humantime"]={"doc":"Human-friendly time parser and formatter","items":[[3,"FormattedDuration","humantime","A wrapper type that allows you to Display a Duration",N,N],[3,"Duration","","A wrapper for duration that has `FromStr` implementation",N,N],[3,"Timestamp","","A wrapper for SystemTime that has `FromStr` implementation",N,N],[3,"Rfc3339Timestamp","","A wrapper type that allows you to Display a SystemTime",N,N],[4,"DurationError","","Error parsing human-friendly duration",N,N],[13,"InvalidCharacter","","Invalid character during parsing",0,N],[13,"NumberExpected","","Non-numeric value where number is expected",0,N],[13,"UnknownUnit","","Unit in the number is not one of allowed units",0,N],[13,"NumberOverflow","","The numeric value is too large",0,N],[13,"Empty","","The value was an empty string (or consists only whitespace)",0,N],[4,"TimestampError","","Error parsing datetime (timestamp)",N,N],[13,"OutOfRange","","Numeric component is out of range",1,N],[13,"InvalidDigit","","Bad character where digit is expected",1,N],[13,"InvalidFormat","","Other formatting errors",1,N],[5,"parse_duration","","Parse duration object `1hour 12min 5s`",N,[[["str"]],["result",["duration","error"]]]],[5,"format_duration","","Formats duration into a human-readable string",N,[[["duration"]],["formattedduration"]]],[5,"parse_rfc3339","","Parse RFC3339 timestamp `2018-02-14T00:28:07Z`",N,[[["str"]],["result",["systemtime","error"]]]],[5,"parse_rfc3339_weak","","Parse RFC3339-like timestamp `2018-02-14 00:28:07`",N,[[["str"]],["result",["systemtime","error"]]]],[5,"format_rfc3339","","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`",N,[[["systemtime"]],["rfc3339timestamp"]]],[5,"format_rfc3339_seconds","","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`",N,[[["systemtime"]],["rfc3339timestamp"]]],[5,"format_rfc3339_nanos","","Format an RFC3339 timestamp `2018-02-14T00:28:07.000000000Z`",N,[[["systemtime"]],["rfc3339timestamp"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"eq","","",3,[[["self"],["duration"]],["bool"]]],[11,"ne","","",3,[[["self"],["duration"]],["bool"]]],[11,"eq","","",4,[[["self"],["timestamp"]],["bool"]]],[11,"ne","","",4,[[["self"],["timestamp"]],["bool"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"as_ref","","",3,[[["self"]],["stdduration"]]],[11,"as_ref","","",4,[[["self"]],["systemtime"]]],[11,"clone","","",0,[[["self"]],["error"]]],[11,"clone","","",3,[[["self"]],["duration"]]],[11,"clone","","",4,[[["self"]],["timestamp"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"from","","",3,[[["stdduration"]],["duration"]]],[11,"from","","",4,[[["systemtime"]],["timestamp"]]],[11,"into","","",3,[[["self"]],["stdduration"]]],[11,"into","","",4,[[["self"]],["systemtime"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"deref","","",3,[[["self"]],["stdduration"]]],[11,"deref","","",4,[[["self"]],["systemtime"]]],[11,"from_str","","",3,[[["str"]],["result",["duration"]]]],[11,"from_str","","",4,[[["str"]],["result",["timestamp"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]]],"paths":[[4,"DurationError"],[4,"TimestampError"],[3,"FormattedDuration"],[3,"Duration"],[3,"Timestamp"],[3,"Rfc3339Timestamp"]]};
searchIndex["hyper"]={"doc":"hyper","items":[[0,"header","hyper","HTTP header types",N,N],[17,"ETAG","hyper::header","Identifier for a specific version of a resource.",N,N],[17,"PUBLIC_KEY_PINS","","Associates a specific cryptographic public key with a…",N,N],[17,"SEC_WEBSOCKET_PROTOCOL","","The |Sec-WebSocket-Protocol| header field is used in the…",N,N],[17,"IF_UNMODIFIED_SINCE","","Makes the request conditional based on the last…",N,N],[17,"ACCESS_CONTROL_REQUEST_METHOD","","Informs the server know which HTTP method will be used…",N,N],[17,"ACCEPT","","Advertises which content types the client is able to…",N,N],[17,"ACCEPT_LANGUAGE","","Advertises which languages the client is able to understand.",N,N],[17,"DNT","","Indicates the client's tracking preference.",N,N],[17,"VARY","","Determines how to match future requests with cached…",N,N],[3,"VacantEntry","","A view into a single empty location in a `HeaderMap`.",N,N],[3,"InvalidHeaderName","","A possible error when converting a `HeaderName` from…",N,N],[17,"STRICT_TRANSPORT_SECURITY","","Tells the client to communicate with HTTPS instead of…",N,N],[3,"HeaderMap","","A set of HTTP headers",N,N],[17,"WWW_AUTHENTICATE","","Defines the authentication method that should be used to…",N,N],[17,"REFRESH","","Informs the web browser that the current page or frame…",N,N],[17,"CACHE_CONTROL","","Specifies directives for caching mechanisms in both…",N,N],[17,"HOST","","Specifies the domain name of the server and (optionally)…",N,N],[3,"ValueIterMut","","A mutable iterator of all values associated with a single…",N,N],[17,"LINK","","Allows the server to point an interested client to another…",N,N],[17,"ORIGIN","","Indicates where a fetch originates from.",N,N],[17,"REFERER","","Contains the address of the previous web page from which a…",N,N],[17,"FORWARDED","","Contains information from the client-facing side of proxy…",N,N],[17,"ACCESS_CONTROL_ALLOW_CREDENTIALS","","Preflight response indicating if the response to the…",N,N],[17,"SET_COOKIE","","Used to send cookies from the server to the user agent.",N,N],[17,"USER_AGENT","","Contains a string that allows identifying the requesting…",N,N],[17,"WARNING","","General HTTP header contains information about possible…",N,N],[17,"CONTENT_LENGTH","","Indicates the size fo the entity-body.",N,N],[17,"CONTENT_SECURITY_POLICY","","Allows controlling resources the user agent is allowed to…",N,N],[17,"EXPECT","","Indicates expectations that need to be fulfilled by the…",N,N],[17,"ACCEPT_CHARSET","","Advertises which character set the client is able to…",N,N],[8,"IntoHeaderName","","A marker trait used to identify values that can be used as…",N,N],[17,"X_FRAME_OPTIONS","","Indicates whether or not a browser should be allowed to…",N,N],[17,"VIA","","Added by proxies to track routing.",N,N],[3,"Values","","`HeaderMap` value iterator.",N,N],[17,"IF_NONE_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[17,"RETRY_AFTER","","The Retry-After response HTTP header indicates how long…",N,N],[17,"PROXY_AUTHENTICATE","","Defines the authentication method that should be used to…",N,N],[17,"PUBLIC_KEY_PINS_REPORT_ONLY","","Sends reports of pinning violation to the report-uri…",N,N],[17,"ACCESS_CONTROL_ALLOW_ORIGIN","","Indicates whether the response can be shared with…",N,N],[17,"ALT_SVC","","Advertises the availability of alternate services to…",N,N],[17,"CONNECTION","","Controls whether or not the network connection stays open…",N,N],[17,"ACCESS_CONTROL_MAX_AGE","","Indicates how long the results of a preflight request can…",N,N],[3,"ValueDrain","","An drain iterator of all values associated with a single…",N,N],[3,"Keys","","An iterator over `HeaderMap` keys.",N,N],[17,"FROM","","Contains an Internet email address for a human user who…",N,N],[3,"GetAll","","A view to all values stored in a single entry.",N,N],[17,"TE","","Informs the server of transfer encodings willing to be…",N,N],[3,"Iter","","`HeaderMap` entry iterator.",N,N],[3,"HeaderValue","","Represents an HTTP header field value.",N,N],[17,"LOCATION","","Indicates the URL to redirect a page to.",N,N],[3,"Drain","","A drain iterator for `HeaderMap`.",N,N],[17,"AGE","","Indicates the time in seconds the object has been in a…",N,N],[3,"IntoIter","","An owning iterator over the entries of a `HeaderMap`.",N,N],[17,"CONTENT_LOCATION","","Indicates an alternate location for the returned data.",N,N],[3,"ToStrError","","A possible error when converting a `HeaderValue` to a…",N,N],[17,"CONTENT_DISPOSITION","","Indicates if the content is expected to be displayed inline.",N,N],[3,"InvalidHeaderNameBytes","","A possible error when converting a `HeaderName` from…",N,N],[17,"SEC_WEBSOCKET_EXTENSIONS","","The |Sec-WebSocket-Extensions| header field is used in the…",N,N],[17,"UPGRADE","","Used as part of the exchange to upgrade the protocol.",N,N],[17,"X_CONTENT_TYPE_OPTIONS","","Marker used by the server to indicate that the MIME types…",N,N],[17,"X_XSS_PROTECTION","","Stop pages from loading when an XSS attack is detected.",N,N],[17,"CONTENT_TYPE","","Used to indicate the media type of the resource.",N,N],[17,"DATE","","Contains the date and time at which the message was…",N,N],[17,"IF_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[17,"TRAILER","","Allows the sender to include additional fields at the end…",N,N],[17,"REFERRER_POLICY","","Governs which referrer information should be included with…",N,N],[17,"SEC_WEBSOCKET_ACCEPT","","The |Sec-WebSocket-Accept| header field is used in the…",N,N],[17,"ACCESS_CONTROL_ALLOW_HEADERS","","Preflight response indicating permitted HTTP headers.",N,N],[17,"ACCESS_CONTROL_EXPOSE_HEADERS","","Indicates which headers can be exposed as part of the…",N,N],[17,"AUTHORIZATION","","Contains the credentials to authenticate a user agent with…",N,N],[3,"InvalidHeaderValue","","A possible error when converting a `HeaderValue` from a…",N,N],[17,"MAX_FORWARDS","","Indicates the max number of intermediaries the request…",N,N],[17,"ACCEPT_RANGES","","Marker used by the server to advertise partial request…",N,N],[3,"HeaderName","","Represents an HTTP header field name",N,N],[17,"SEC_WEBSOCKET_VERSION","","The |Sec-WebSocket-Version| header field is used in the…",N,N],[3,"OccupiedEntry","","A view into a single occupied location in a `HeaderMap`.",N,N],[17,"CONTENT_ENCODING","","Used to compress the media-type.",N,N],[8,"AsHeaderName","","A marker trait used to identify values that can be used as…",N,N],[17,"PROXY_AUTHORIZATION","","Contains the credentials to authenticate a user agent to a…",N,N],[17,"RANGE","","Indicates the part of a document that the server should…",N,N],[17,"SEC_WEBSOCKET_KEY","","The |Sec-WebSocket-Key| header field is used in the…",N,N],[17,"IF_RANGE","","Makes a request conditional based on range.",N,N],[17,"ACCESS_CONTROL_REQUEST_HEADERS","","Informs the server which HTTP headers will be used when an…",N,N],[17,"X_DNS_PREFETCH_CONTROL","","Controls DNS prefetching.",N,N],[17,"ACCEPT_ENCODING","","Advertises which content encoding the client is able to…",N,N],[17,"PRAGMA","","HTTP/1.0 header usually used for backwards compatibility.",N,N],[17,"COOKIE","","Contains stored HTTP cookies previously sent by the server…",N,N],[17,"IF_MODIFIED_SINCE","","Makes a request conditional based on the modification date.",N,N],[17,"TRANSFER_ENCODING","","Specifies the form of encoding used to safely transfer the…",N,N],[17,"CONTENT_SECURITY_POLICY_REPORT_ONLY","","Allows experimenting with policies by monitoring their…",N,N],[17,"ACCESS_CONTROL_ALLOW_METHODS","","Preflight header response indicating permitted access…",N,N],[4,"Entry","","A view into a single location in a `HeaderMap`, which may…",N,N],[13,"Occupied","","An occupied entry",0,N],[13,"Vacant","","A vacant entry",0,N],[3,"InvalidHeaderValueBytes","","A possible error when converting a `HeaderValue` from a…",N,N],[3,"ValueIter","","An iterator of all values associated with a single header…",N,N],[17,"LAST_MODIFIED","","Content-Types that are acceptable for the response.",N,N],[17,"SERVER","","Contains information about the software used by the origin…",N,N],[17,"UPGRADE_INSECURE_REQUESTS","","Sends a signal to the server expressing the client’s…",N,N],[17,"EXPIRES","","Contains the date/time after which the response is…",N,N],[17,"ALLOW","","Lists the set of methods support by a resource.",N,N],[17,"CONTENT_LANGUAGE","","Used to describe the languages intended for the audience.",N,N],[17,"CONTENT_RANGE","","Indicates where in a full body message a partial message…",N,N],[3,"HeaderMap","hyper","A set of HTTP headers",N,N],[3,"Method","","The Request Method (VERB)",N,N],[3,"Request","","Represents an HTTP request.",N,N],[3,"Response","","Represents an HTTP response",N,N],[3,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",N,N],[3,"Uri","","The URI component of a request.",N,N],[3,"Version","","Represents a version of the HTTP spec.",N,N],[3,"Body","","A stream of `Chunk`s, used when receiving bodies.",N,N],[3,"Chunk","","A piece of a message body.",N,N],[0,"body","","Streaming bodies for Requests and Responses",N,N],[3,"Body","hyper::body","A stream of `Chunk`s, used when receiving bodies.",N,N],[3,"Sender","","A sender half used with `Body::channel()`.",N,N],[3,"Chunk","","A piece of a message body.",N,N],[11,"empty","hyper","Create an empty `Body` stream.",1,[[],["body"]]],[11,"channel","","Create a `Body` stream with an associated sender half.",1,N],[11,"wrap_stream","","Wrap a futures `Stream` in a box inside `Body`.",1,[[["s"]],["body"]]],[11,"on_upgrade","","Converts this `Body` into a `Future` of a pending HTTP…",1,[[["self"]],["onupgrade"]]],[11,"poll_ready","hyper::body","Check to see if this `Sender` can send more data.",2,[[["self"]],["poll",["error"]]]],[11,"send_data","","Sends data on this channel.",2,[[["self"],["chunk"]],["result",["chunk"]]]],[11,"abort","","Aborts the body in an abnormal fashion.",2,[[["self"]]]],[11,"into_bytes","hyper","Converts this `Chunk` directly into the `Bytes` type…",3,[[["self"]],["bytes"]]],[8,"Payload","hyper::body","This trait represents a streaming body of a `Request` or…",N,N],[16,"Data","","A buffer of bytes representing a single chunk of a body.",4,N],[16,"Error","","The error type of this stream.",4,N],[10,"poll_data","","Poll for a `Data` buffer.",4,[[["self"]],["poll",["option"]]]],[11,"poll_trailers","","Poll for an optional single `HeaderMap` of trailers.",4,[[["self"]],["poll",["option"]]]],[11,"is_end_stream","","A hint that the `Body` is complete, and doesn't need to be…",4,[[["self"]],["bool"]]],[11,"content_length","","Return a length of the total bytes that will be streamed,…",4,[[["self"]],["option",["u64"]]]],[0,"client","hyper","HTTP Client",N,N],[3,"HttpConnector","hyper::client","A connector for the `http` scheme.",N,N],[3,"Client","","A Client to make outgoing HTTP requests.",N,N],[3,"ResponseFuture","","A `Future` that will resolve to an HTTP Response.",N,N],[3,"Builder","","Builder for a Client",N,N],[0,"conn","","Lower-level client connection API.",N,N],[3,"SendRequest","hyper::client::conn","The sender side of an established connection.",N,N],[3,"Connection","","A future that processes all HTTP state for the IO object.",N,N],[3,"Builder","","A builder to configure an HTTP connection.",N,N],[3,"Handshake","","A future setting up HTTP over an IO object.",N,N],[3,"ResponseFuture","","A future returned by `SendRequest::send_request`.",N,N],[3,"Parts","","Deconstructed parts of a `Connection`.",N,N],[12,"io","","The original IO object used in the handshake.",5,N],[12,"read_buf","","A buffer of bytes that have been read but not processed as…",5,N],[5,"handshake","","Returns a `Handshake` future over some IO.",N,[[["t"]],["handshake",["body"]]]],[11,"poll_ready","","Polls to determine whether this sender can be used yet for…",6,[[["self"]],["poll",["error"]]]],[11,"send_request","","Sends a `Request` on the associated connection.",6,[[["self"],["request"]],["responsefuture"]]],[11,"into_parts","","Return the inner IO object, and additional information.",7,[[["self"]],["parts"]]],[11,"poll_without_shutdown","","Poll the connection for completion, but without calling…",7,[[["self"]],["poll",["error"]]]],[11,"new","","Creates a new connection builder.",8,[[],["builder"]]],[11,"http2_only","","Sets whether HTTP2 is required.",8,[[["self"],["bool"]],["builder"]]],[11,"handshake","","Constructs a connection with the configured options and IO.",8,[[["self"],["t"]],["handshake"]]],[0,"connect","hyper::client","The `Connect` trait, and supporting types.",N,N],[3,"HttpConnector","hyper::client::connect","A connector for the `http` scheme.",N,N],[3,"Destination","","A set of properties to describe where and how to try to…",N,N],[3,"Connected","","Extra information about the connected transport.",N,N],[11,"new","hyper::client","Construct a new HttpConnector.",9,[[["usize"]],["httpconnector"]]],[11,"new_with_handle","","Construct a new HttpConnector with a specific Tokio handle.",9,[[["usize"],["handle"]],["httpconnector"]]],[11,"new_with_executor","","Construct a new HttpConnector.",9,[[["e"],["option",["handle"]]],["httpconnector"]]],[11,"enforce_http","","Option to enforce all `Uri`s have the `http` scheme.",9,[[["self"],["bool"]]]],[11,"set_keepalive","","Set that all sockets have `SO_KEEPALIVE` set with the…",9,[[["self"],["option",["duration"]]]]],[11,"set_nodelay","","Set that all sockets have `SO_NODELAY` set to the supplied…",9,[[["self"],["bool"]]]],[11,"set_local_address","","Set that all sockets are bound to the configured address…",9,[[["self"],["option",["ipaddr"]]]]],[11,"set_happy_eyeballs_timeout","","Set timeout for [RFC 6555 (Happy Eyeballs)][RFC 6555]…",9,[[["self"],["option",["duration"]]]]],[11,"set_reuse_address","","Set that all socket have `SO_REUSEADDR` set to the…",9,[[["self"],["bool"]],["self"]]],[8,"Connect","hyper::client::connect","Connect to a destination, returning an IO transport.",N,N],[16,"Transport","","The connected IO Stream.",10,N],[16,"Error","","An error occured when trying to connect.",10,N],[16,"Future","","A Future that will resolve to the connected Transport.",10,N],[10,"connect","","Connect to a destination.",10,N],[11,"scheme","","Get the protocol scheme.",11,[[["self"]],["str"]]],[11,"host","","Get the hostname.",11,[[["self"]],["str"]]],[11,"port","","Get the port, if specified.",11,[[["self"]],["option",["u16"]]]],[11,"set_scheme","","Update the scheme of this destination.",11,[[["self"],["str"]],["result"]]],[11,"set_host","","Update the host of this destination.",11,[[["self"],["str"]],["result"]]],[11,"set_port","","Update the port of this destination.",11,[[["self"],["p"]]]],[11,"new","","Create new `Connected` type with empty metadata.",12,[[],["connected"]]],[11,"proxy","","Set whether the connected transport is to an HTTP proxy.",12,[[["self"],["bool"]],["connected"]]],[11,"new","hyper::client","Create a new Client with the default config.",13,[[],["client",["httpconnector","body"]]]],[11,"builder","","Configure a Client.",13,[[],["builder"]]],[11,"get","","Send a `GET` request to the supplied `Uri`.",13,[[["self"],["uri"]],["responsefuture"]]],[11,"request","","Send a constructed Request using this Client.",13,[[["self"],["request"]],["responsefuture"]]],[11,"keep_alive","","Enable or disable keep-alive mechanics.",14,[[["self"],["bool"]],["self"]]],[11,"keep_alive_timeout","","Set an optional timeout for idle sockets being kept-alive.",14,[[["self"],["d"]],["self"]]],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored…",14,[[["self"],["bool"]],["self"]]],[11,"http1_title_case_headers","","Set whether HTTP/1 connections will write header names as…",14,[[["self"],["bool"]],["self"]]],[11,"http2_only","","Set whether the connection must use HTTP/2.",14,[[["self"],["bool"]],["self"]]],[11,"max_idle_per_host","","Sets the maximum idle connection per host allowed in the…",14,[[["self"],["usize"]],["self"]]],[11,"retry_canceled_requests","","Set whether to retry requests that get disrupted before…",14,[[["self"],["bool"]],["self"]]],[11,"set_host","","Set whether to automatically add the `Host` header to…",14,[[["self"],["bool"]],["self"]]],[11,"executor","","Provide an executor to execute background `Connection`…",14,[[["self"],["e"]],["self"]]],[11,"build_http","","Builder a client with this configuration and the default…",14,[[["self"]],["client",["httpconnector"]]]],[11,"build","","Combine the configuration of this builder with a connector…",14,[[["self"],["c"]],["client"]]],[0,"error","hyper","Error and Result module.",N,N],[3,"Error","hyper::error","Represents errors that can occur handling HTTP streams.",N,N],[6,"Result","","Result type often returned from methods that can have…",N,N],[11,"is_parse","","Returns true if this was an HTTP parse error.",15,[[["self"]],["bool"]]],[11,"is_user","","Returns true if this error was caused by user code.",15,[[["self"]],["bool"]]],[11,"is_canceled","","Returns true if this was about a `Request` that was…",15,[[["self"]],["bool"]]],[11,"is_closed","","Returns true if a sender's channel is closed.",15,[[["self"]],["bool"]]],[11,"cause2","","Returns the error's cause.",15,[[["self"]],["option",["stderror"]]]],[11,"into_cause","","Consumes the error, returning its cause.",15,[[["self"]],["option",["box"]]]],[0,"server","hyper","HTTP Server",N,N],[3,"Server","hyper::server","A listening HTTP server that accepts connections in both…",N,N],[3,"Builder","","A builder for a `Server`.",N,N],[0,"conn","","Lower-level Server connection API.",N,N],[3,"AddrIncoming","hyper::server::conn","A stream of connections from binding to an address.",N,N],[3,"Http","","A lower-level configuration of the HTTP protocol.",N,N],[3,"Serve","","A stream mapping incoming IOs to new services.",N,N],[3,"Connecting","","A future building a new `Service` to a `Connection`.",N,N],[3,"Connection","","A future binding a connection with a Service.",N,N],[3,"Parts","","Deconstructed parts of a `Connection`.",N,N],[12,"io","","The original IO object used in the handshake.",16,N],[12,"read_buf","","A buffer of bytes that have been read but not processed as…",16,N],[12,"service","","The `Service` used to serve this connection.",16,N],[11,"new","","Creates a new instance of the HTTP protocol, ready to…",17,[[],["http"]]],[11,"http1_only","","Sets whether HTTP1 is required.",17,[[["self"],["bool"]],["self"]]],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored…",17,[[["self"],["bool"]],["self"]]],[11,"http2_only","","Sets whether HTTP2 is required.",17,[[["self"],["bool"]],["self"]]],[11,"keep_alive","","Enables or disables HTTP keep-alive.",17,[[["self"],["bool"]],["self"]]],[11,"max_buf_size","","Set the maximum buffer size for the connection.",17,[[["self"],["usize"]],["self"]]],[11,"pipeline_flush","","Aggregates flushes to better support pipelined responses.",17,[[["self"],["bool"]],["self"]]],[11,"executor","","Set the executor used to spawn background tasks.",17,[[["self"],["e"]],["self"]]],[11,"serve_connection","","Bind a connection together with a `Service`.",17,[[["self"],["i"],["s"]],["connection"]]],[11,"serve_addr","","Bind the provided `addr` with the default `Handle` and…",17,[[["self"],["socketaddr"],["s"]],["result",["serve"]]]],[11,"serve_addr_handle","","Bind the provided `addr` with the `Handle` and return a…",17,[[["self"],["socketaddr"],["handle"],["s"]],["result",["serve"]]]],[11,"serve_incoming","","Bind the provided stream of incoming IO objects with a…",17,[[["self"],["i"],["s"]],["serve"]]],[11,"graceful_shutdown","","Start a graceful shutdown process for this connection.",18,[[["self"]]]],[11,"into_parts","","Return the inner IO object, and additional information.",18,[[["self"]],["parts"]]],[11,"try_into_parts","","Return the inner IO object, and additional information, if…",18,[[["self"]],["option",["parts"]]]],[11,"poll_without_shutdown","","Poll the connection for completion, but without calling…",18,[[["self"]],["poll",["error"]]]],[11,"with_upgrades","","Enable this connection to support higher-level HTTP…",18,[[["self"]],["upgradeableconnection"]]],[11,"incoming_ref","","Get a reference to the incoming stream.",19,[[["self"]],["i"]]],[11,"incoming_mut","","Get a mutable reference to the incoming stream.",19,[[["self"]],["i"]]],[11,"local_addr","","Get the local address bound to this listener.",20,[[["self"]],["socketaddr"]]],[11,"set_keepalive","","Set whether TCP keepalive messages are enabled on accepted…",20,[[["self"],["option",["duration"]]],["self"]]],[11,"set_nodelay","","Set the value of `TCP_NODELAY` option for accepted…",20,[[["self"],["bool"]],["self"]]],[11,"set_sleep_on_errors","","Set whether to sleep on accept errors.",20,[[["self"],["bool"]]]],[11,"builder","hyper::server","Starts a `Builder` with the provided incoming stream.",21,[[["i"]],["builder"]]],[11,"bind","","Binds to the provided address, and returns a `Builder`.",21,[[["socketaddr"]],["builder",["addrincoming"]]]],[11,"try_bind","","Tries to bind to the provided address, and returns a…",21,[[["socketaddr"]],["result",["builder"]]]],[11,"from_tcp","","Create a new instance from a `std::net::TcpListener`…",21,[[["stdtcplistener"]],["result",["builder","error"]]]],[11,"local_addr","","Returns the local address that this server is bound to.",21,[[["self"]],["socketaddr"]]],[11,"with_graceful_shutdown","","Prepares a server to handle graceful shutdown when the…",21,[[["self"],["f"]],["graceful"]]],[11,"new","","Start a new builder, wrapping an incoming stream and…",22,[[["i"],["http_"]],["self"]]],[11,"http1_keepalive","","Sets whether to use keep-alive for HTTP/1 connections.",22,[[["self"],["bool"]],["self"]]],[11,"http1_only","","Sets whether HTTP/1 is required.",22,[[["self"],["bool"]],["self"]]],[11,"http1_writev","","Set whether HTTP/1 connections should try to use vectored…",22,[[["self"],["bool"]],["self"]]],[11,"http2_only","","Sets whether HTTP/2 is required.",22,[[["self"],["bool"]],["self"]]],[11,"serve","","Consume this `Builder`, creating a `Server`.",22,[[["self"],["s"]],["server"]]],[11,"tcp_keepalive","","Set whether TCP keepalive messages are enabled on accepted…",22,[[["self"],["option",["duration"]]],["self"]]],[11,"tcp_nodelay","","Set the value of `TCP_NODELAY` option for accepted…",22,[[["self"],["bool"]],["self"]]],[0,"service","hyper","Services and NewServices",N,N],[5,"service_fn","hyper::service","Create a `Service` from a function.",N,[[["f"]],["servicefn"]]],[5,"service_fn_ok","","Create a `Service` from a function that never errors.",N,[[["f"]],["servicefnok"]]],[8,"NewService","","An asynchronous constructor of `Service`s.",N,N],[16,"ReqBody","","The `Payload` body of the `http::Request`.",23,N],[16,"ResBody","","The `Payload` body of the `http::Response`.",23,N],[16,"Error","","The error type that can be returned by `Service`s.",23,N],[16,"Service","","The resolved `Service` from `new_service()`.",23,N],[16,"Future","","The future returned from `new_service` of a `Service`.",23,N],[16,"InitError","","The error type that can be returned when creating a new…",23,N],[10,"new_service","","Create a new `Service`.",23,N],[8,"Service","","An asynchronous function from `Request` to `Response`.",N,N],[16,"ReqBody","","The `Payload` body of the `http::Request`.",24,N],[16,"ResBody","","The `Payload` body of the `http::Response`.",24,N],[16,"Error","","The error type that can occur within this `Service`.",24,N],[16,"Future","","The `Future` returned by this `Service`.",24,N],[10,"call","","Calls this `Service` with a request, returning a `Future`…",24,N],[0,"rt","hyper","Default runtime",N,N],[8,"Future","hyper::rt","Trait for types which are a placeholder of a value that…",N,N],[16,"Item","","The type of value that this future will resolved with if…",25,N],[16,"Error","","The type of error that this future will resolve with if it…",25,N],[10,"poll","","Query this future to see if its value has become…",25,[[["self"]],["result",["async"]]]],[11,"wait","","Block the current thread until this future is resolved.",25,[[["self"]],["result"]]],[11,"map","","Map this future's result to a different type, returning a…",25,[[["self"],["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a…",25,[[["self"],["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From`…",25,[[["self"]],["fromerr"]]],[11,"then","","Chain on a computation for when a future finished, passing…",25,[[["self"],["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved…",25,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",25,[[["self"],["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",25,[[["self"],["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to…",25,[[["self"],["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to…",25,[[["self"],["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",25,[[["self"],["b"],["c"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",25,[[["self"],["b"],["c"],["d"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",25,[[["self"],["b"],["c"],["d"],["e"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",25,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful…",25,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",25,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",25,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",25,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",25,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",25,[[["self"]],["shared"]]],[8,"Stream","","A stream of values, not all of which may have been…",N,N],[16,"Item","","The type of item this stream will yield on success.",26,N],[16,"Error","","The type of error this stream may generate.",26,N],[10,"poll","","Attempt to pull out the next value of this stream,…",26,[[["self"]],["result",["async"]]]],[11,"wait","","Creates an iterator which blocks the current thread until…",26,[[["self"]],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",26,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",26,[[["self"],["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error…",26,[[["self"],["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to…",26,[[["self"],["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",26,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing…",26,[[["self"],["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",26,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",26,[[["self"],["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector,…",26,[[["self"]],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single…",26,[[["self"]],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single…",26,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream,…",26,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",26,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided…",26,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate…",26,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",26,[[["self"],["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From`…",26,[[["self"]],["fromerr"]]],[11,"take","","Creates a new stream of at most `amt` items of the…",26,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the…",26,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called…",26,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",26,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",26,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",26,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",26,[[["self"],["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",26,[[["self"],["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",26,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",26,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",26,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",26,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either…",26,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been…",26,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",26,N],[11,"inspect","","Do something with each item of this stream, afterwards…",26,[[["self"],["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards…",26,[[["self"],["f"]],["inspecterr"]]],[5,"lazy","","Creates a new future which will eventually be the same as…",N,[[["f"]],["lazy"]]],[5,"poll_fn","","Creates a new future wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[5,"spawn","","Spawns a future on the default executor.",N,[[["f"]],["spawn"]]],[5,"run","","Start the Tokio runtime using the supplied future to…",N,[[["f"]]]],[0,"upgrade","hyper","HTTP Upgrades",N,N],[3,"Upgraded","hyper::upgrade","An upgraded HTTP connection.",N,N],[3,"OnUpgrade","","A future for a possible HTTP upgrade.",N,N],[3,"Parts","","The deconstructed parts of an `Upgraded` type.",N,N],[12,"io","","The original IO object used before the upgrade.",27,N],[12,"read_buf","","A buffer of bytes that have been read but not processed as…",27,N],[11,"downcast","","Tries to downcast the internal trait object to the type…",28,[[["self"]],["result",["parts"]]]],[11,"from","hyper::header","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into_iter","hyper","",31,[[["self"]],["i"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"equivalent","","",31,[[["self"],["k"]],["bool"]]],[11,"into_iter","hyper::header","",32,[[["self"]],["i"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into_iter","","",33,[[["self"]],["i"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into_iter","","",35,[[["self"]],["i"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into_iter","","",36,[[["self"]],["i"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into_iter","","",37,[[["self"]],["i"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"equivalent","","",38,[[["self"],["k"]],["bool"]]],[11,"into_iter","","",39,[[["self"]],["i"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into_iter","","",40,[[["self"]],["i"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"equivalent","","",44,[[["self"],["k"]],["bool"]]],[11,"into_iter","","",45,[[["self"]],["i"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"to_string","hyper","",48,[[["self"]],["string"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"equivalent","","",48,[[["self"],["k"]],["bool"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"equivalent","","",51,[[["self"],["k"]],["bool"]]],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"equivalent","","",52,[[["self"],["k"]],["bool"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"equivalent","","",53,[[["self"],["k"]],["bool"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_buf","","",3,[[["self"]],["t"]]],[11,"from","hyper::body","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","hyper::client","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into_future","","",54,[[["self"]],["f"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","hyper::client::conn","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_future","","",55,[[["self"]],["f"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into_future","","",56,[[["self"]],["f"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","hyper::client::connect","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","hyper::error","",15,[[["self"]],["string"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","hyper::server","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_future","","",21,[[["self"]],["f"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","hyper::server::conn","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into_future","","",57,[[["self"]],["f"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_future","","",18,[[["self"]],["f"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","hyper::upgrade","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_future","","",58,[[["self"]],["f"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"hash","hyper::header","",44,N],[11,"hash","hyper","",53,N],[11,"hash","","",48,N],[11,"hash","","",51,N],[11,"hash","","",52,N],[11,"hash","hyper::header","",38,N],[11,"index","hyper","Panics Using the index operator will cause a panic if the…",31,[[["self"],["k"]],["t"]]],[11,"default","","",48,[[],["method"]]],[11,"default","","",53,[[],["version"]]],[11,"default","","",50,[[],["response"]]],[11,"default","","",52,[[],["uri"]]],[11,"default","","",51,[[],["statuscode"]]],[11,"default","","",49,[[],["request"]]],[11,"default","","",31,[[],["headermap"]]],[11,"into_iter","hyper::header","",45,[[["self"]],["valueitermut"]]],[11,"into_iter","","",36,[[["self"]],["valueiter"]]],[11,"into_iter","hyper","Creates a consuming iterator, that is, one that moves keys…",31,[[["self"]],["intoiter"]]],[11,"from","hyper::header","",38,[[["u16"]],["headervalue"]]],[11,"from","hyper","",48,[[["method"]],["method"]]],[11,"from","hyper::header","",38,[[["u64"]],["headervalue"]]],[11,"from","","",38,[[["isize"]],["headervalue"]]],[11,"from","","",38,[[["u32"]],["headervalue"]]],[11,"from","","",38,[[["headername"]],["headervalue"]]],[11,"from","hyper","",51,[[["statuscode"]],["statuscode"]]],[11,"from","hyper::header","",38,[[["i64"]],["headervalue"]]],[11,"from","","",38,[[["i32"]],["headervalue"]]],[11,"from","","",38,[[["usize"]],["headervalue"]]],[11,"from","","",38,[[["i16"]],["headervalue"]]],[11,"from","","",38,[[["headervalue"]],["headervalue"]]],[11,"from","","",44,[[["headername"]],["headername"]]],[11,"eq","hyper","",52,[[["self"],["str"]],["bool"]]],[11,"eq","","",48,[[["self"],["method"]],["bool"]]],[11,"ne","","",48,[[["self"],["method"]],["bool"]]],[11,"eq","hyper::header","",44,[[["self"],["headername"]],["bool"]]],[11,"eq","hyper","",51,[[["self"],["statuscode"]],["bool"]]],[11,"ne","","",51,[[["self"],["statuscode"]],["bool"]]],[11,"eq","hyper::header","Performs a case-insensitive comparison of the string…",44,[[["self"],["str"]],["bool"]]],[11,"eq","hyper","",52,[[["self"],["str"]],["bool"]]],[11,"eq","hyper::header","",38,[[["self"],["t"]],["bool"]]],[11,"eq","hyper","",48,[[["self"],["str"]],["bool"]]],[11,"eq","","",52,[[["self"],["uri"]],["bool"]]],[11,"eq","hyper::header","",38,N],[11,"eq","","",38,[[["self"],["string"]],["bool"]]],[11,"eq","","",38,[[["self"],["headervalue"]],["bool"]]],[11,"eq","","",38,[[["self"],["str"]],["bool"]]],[11,"eq","hyper","",48,[[["self"],["str"]],["bool"]]],[11,"eq","","",31,[[["self"],["headermap"]],["bool"]]],[11,"eq","","",48,[[["self"],["method"]],["bool"]]],[11,"eq","hyper::header","",36,[[["self"],["getall"]],["bool"]]],[11,"eq","","",44,[[["self"],["headername"]],["bool"]]],[11,"ne","","",44,[[["self"],["headername"]],["bool"]]],[11,"eq","hyper","",51,[[["self"],["u16"]],["bool"]]],[11,"eq","hyper::header","Performs a case-insensitive comparison of the string…",44,[[["self"],["str"]],["bool"]]],[11,"eq","hyper","",53,[[["self"],["version"]],["bool"]]],[11,"ne","","",53,[[["self"],["version"]],["bool"]]],[11,"next","hyper::header","",35,[[["self"]],["option"]]],[11,"size_hint","","",35,N],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,N],[11,"next","","",34,[[["self"]],["option"]]],[11,"size_hint","","",34,N],[11,"next","","",33,[[["self"]],["option"]]],[11,"size_hint","","",33,N],[11,"next","","",37,[[["self"]],["option"]]],[11,"size_hint","","",37,N],[11,"next","","",32,[[["self"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"size_hint","","",40,N],[11,"next","","",39,[[["self"]],["option"]]],[11,"size_hint","","",39,N],[11,"drop","","",40,N],[11,"drop","","",39,N],[11,"drop","","",34,N],[11,"description","","",30,[[["self"]],["str"]]],[11,"description","","",43,[[["self"]],["str"]]],[11,"description","","",46,[[["self"]],["str"]]],[11,"description","","",42,[[["self"]],["str"]]],[11,"description","","",41,[[["self"]],["str"]]],[11,"as_ref","","",44,[[["self"]],["str"]]],[11,"as_ref","hyper","",48,[[["self"]],["str"]]],[11,"as_ref","hyper::header","",44,N],[11,"as_ref","","",38,N],[11,"cmp","","",38,[[["self"],["headervalue"]],["ordering"]]],[11,"cmp","hyper","",53,[[["self"],["version"]],["ordering"]]],[11,"cmp","","",51,[[["self"],["statuscode"]],["ordering"]]],[11,"next_back","hyper::header","",32,[[["self"]],["option"]]],[11,"next_back","","",47,[[["self"]],["option"]]],[11,"partial_cmp","","",38,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",38,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",38,[[["self"],["t"]],["option",["ordering"]]]],[11,"partial_cmp","hyper","",51,[[["self"],["statuscode"]],["option",["ordering"]]]],[11,"lt","","",51,[[["self"],["statuscode"]],["bool"]]],[11,"le","","",51,[[["self"],["statuscode"]],["bool"]]],[11,"gt","","",51,[[["self"],["statuscode"]],["bool"]]],[11,"ge","","",51,[[["self"],["statuscode"]],["bool"]]],[11,"partial_cmp","hyper::header","",38,[[["self"],["headervalue"]],["option",["ordering"]]]],[11,"partial_cmp","hyper","",53,[[["self"],["version"]],["option",["ordering"]]]],[11,"lt","","",53,[[["self"],["version"]],["bool"]]],[11,"le","","",53,[[["self"],["version"]],["bool"]]],[11,"gt","","",53,[[["self"],["version"]],["bool"]]],[11,"ge","","",53,[[["self"],["version"]],["bool"]]],[11,"partial_cmp","hyper::header","",38,N],[11,"borrow","","",44,[[["self"]],["str"]]],[11,"from_str","","",44,[[["str"]],["result",["headername","invalidheadername"]]]],[11,"from_str","","",38,[[["str"]],["result",["headervalue"]]]],[11,"from_str","hyper","",51,[[["str"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_str","","",52,[[["str"]],["result",["uri","invaliduri"]]]],[11,"from_str","","",48,[[["str"]],["result",["method"]]]],[11,"try_from","hyper::header","",38,[[["i16"]],["result",["headervalue"]]]],[11,"try_from","","",38,N],[11,"try_from","hyper","",48,[[["str"]],["result",["method"]]]],[11,"try_from","hyper::header","",44,[[["headername"]],["result",["headername"]]]],[11,"try_from","","",38,[[["string"]],["result",["headervalue"]]]],[11,"try_from","hyper","",52,[[["bytes"]],["result",["uri"]]]],[11,"try_from","","",52,[[["string"]],["result",["uri"]]]],[11,"try_from","","",48,N],[11,"try_from","hyper::header","",38,[[["u16"]],["result",["headervalue"]]]],[11,"try_from","","",38,[[["headervalue"]],["result",["headervalue"]]]],[11,"try_from","","",38,[[["headername"]],["result",["headervalue"]]]],[11,"try_from","hyper","",52,[[["str"]],["result",["uri"]]]],[11,"try_from","hyper::header","",38,[[["usize"]],["result",["headervalue"]]]],[11,"try_from","","",44,[[["headername"]],["result",["headername"]]]],[11,"try_from","","",38,[[["bytes"]],["result",["headervalue"]]]],[11,"try_from","","",38,[[["u32"]],["result",["headervalue"]]]],[11,"try_from","hyper","",48,[[["method"]],["result",["method"]]]],[11,"try_from","hyper::header","",44,[[["str"]],["result",["headername"]]]],[11,"try_from","hyper","",51,[[["statuscode"]],["result",["statuscode"]]]],[11,"try_from","","",52,[[["parts"]],["result",["uri"]]]],[11,"try_from","hyper::header","",38,[[["u64"]],["result",["headervalue"]]]],[11,"try_from","hyper","",51,[[["statuscode"]],["result",["statuscode"]]]],[11,"try_from","","",48,[[["method"]],["result",["method"]]]],[11,"try_from","","",52,[[["uri"]],["result",["uri"]]]],[11,"try_from","","",52,[[["string"]],["result",["uri"]]]],[11,"try_from","","",51,[[["u16"]],["result",["statuscode"]]]],[11,"try_from","hyper::header","",38,[[["i64"]],["result",["headervalue"]]]],[11,"try_from","","",44,N],[11,"try_from","","",38,[[["str"]],["result",["headervalue"]]]],[11,"try_from","","",38,[[["i32"]],["result",["headervalue"]]]],[11,"try_from","hyper","",51,N],[11,"try_from","","",52,[[["uri"]],["result",["uri"]]]],[11,"try_from","hyper::header","",38,[[["headervalue"]],["result",["headervalue"]]]],[11,"try_from","","",44,[[["bytes"]],["result",["headername"]]]],[11,"try_from","hyper","",51,[[["str"]],["result",["statuscode"]]]],[11,"try_from","hyper::header","",38,[[["isize"]],["result",["headervalue"]]]],[11,"from_iter","hyper","",31,[[["i"]],["headermap"]]],[11,"fmt","hyper::header","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",31,[[["self"]],["headermap"]]],[11,"clone","","",52,[[["self"]],["uri"]]],[11,"clone","","",51,[[["self"]],["statuscode"]]],[11,"clone","hyper::header","",38,[[["self"]],["headervalue"]]],[11,"clone","","",44,[[["self"]],["headername"]]],[11,"clone","hyper","",53,[[["self"]],["version"]]],[11,"clone","","",48,[[["self"]],["method"]]],[11,"extend","","",31,N],[11,"extend","","Extend a `HeaderMap` with the contents of another…",31,N],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper::header","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","hyper","",49,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"poll_data","","",1,[[["self"]],["poll",["option"]]]],[11,"poll_trailers","","",1,[[["self"]],["poll",["option"]]]],[11,"is_end_stream","","",1,[[["self"]],["bool"]]],[11,"content_length","","",1,[[["self"]],["option",["u64"]]]],[11,"connect","hyper::client","",9,N],[11,"as_ref","hyper","",3,N],[11,"into_iter","","",3,N],[11,"default","","Returns `Body::empty()`.",1,[[],["body"]]],[11,"default","","",3,[[],["chunk"]]],[11,"default","hyper::client","",13,[[],["client",["httpconnector","body"]]]],[11,"default","","",14,[[],["self"]]],[11,"clone","hyper::client::conn","",8,[[["self"]],["builder"]]],[11,"clone","hyper::client","",9,[[["self"]],["httpconnector"]]],[11,"clone","hyper::client::connect","",11,[[["self"]],["destination"]]],[11,"clone","hyper::client","",13,[[["self"]],["client"]]],[11,"clone","","",14,[[["self"]],["builder"]]],[11,"clone","hyper::server::conn","",17,[[["self"]],["http"]]],[11,"extend","hyper","",3,[[["self"],["t"]]]],[11,"from","","",1,[[["chunk"]],["body"]]],[11,"from","","",1,[[["box",["stream"]]],["body"]]],[11,"from","","",1,[[["bytes"]],["body"]]],[11,"from","","",1,[[["vec",["u8"]]],["body"]]],[11,"from","","",1,N],[11,"from","","",1,[[["cow"]],["body"]]],[11,"from","","",1,[[["string"]],["body"]]],[11,"from","","",1,[[["str"]],["body"]]],[11,"from","","",1,[[["cow",["str"]]],["body"]]],[11,"from","","",3,[[["vec",["u8"]]],["chunk"]]],[11,"from","","",3,N],[11,"from","","",3,[[["string"]],["chunk"]]],[11,"from","","",3,[[["str"]],["chunk"]]],[11,"from","","",3,[[["bytes"]],["chunk"]]],[11,"fmt","hyper::body","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client::conn","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client::connect","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::client","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::error","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::server::conn","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::server","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::upgrade","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","hyper::error","",15,[[["self"],["formatter"]],["result"]]],[11,"deref","hyper","",3,N],[11,"read","hyper::upgrade","",28,N],[11,"write","","",28,N],[11,"flush","","",28,[[["self"]],["result"]]],[11,"description","hyper::error","",15,[[["self"]],["str"]]],[11,"cause","","",15,[[["self"]],["option",["stderror"]]]],[11,"remaining","hyper","",3,[[["self"]],["usize"]]],[11,"bytes","","",3,N],[11,"advance","","",3,[[["self"],["usize"]]]],[11,"poll","hyper::client::conn","",7,[[["self"]],["poll"]]],[11,"poll","","",55,[[["self"]],["poll"]]],[11,"poll","","",56,[[["self"]],["poll"]]],[11,"poll","hyper::client","",54,[[["self"]],["poll"]]],[11,"poll","hyper::server::conn","",18,[[["self"]],["poll"]]],[11,"poll","","",57,[[["self"]],["poll"]]],[11,"poll","hyper::server","",21,[[["self"]],["poll"]]],[11,"poll","hyper::upgrade","",58,[[["self"]],["poll"]]],[11,"poll","hyper","",1,[[["self"]],["poll",["option"]]]],[11,"poll","hyper::server::conn","",19,[[["self"]],["poll",["option"]]]],[11,"poll","","",20,[[["self"]],["poll",["option"]]]],[11,"shutdown","hyper::upgrade","",28,[[["self"]],["poll",["error"]]]],[11,"write_buf","","",28,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"prepare_uninitialized_buffer","","",28,N],[11,"read_buf","","",28,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"key","hyper::header","Returns a reference to the entry's key",29,[[["self"]],["headername"]]],[11,"into_key","","Take ownership of the key",29,[[["self"]],["headername"]]],[11,"insert","","Insert the value into the entry.",29,[[["self"],["t"]],["t"]]],[11,"insert_entry","","Insert the value into the entry.",29,[[["self"],["t"]],["occupiedentry"]]],[11,"new","hyper","Create an empty `HeaderMap`.",31,[[],["headermap",["headervalue"]]]],[11,"with_capacity","","Create an empty `HeaderMap` with the specified capacity.",31,[[["usize"]],["headermap"]]],[11,"len","","Returns the number of headers stored in the map.",31,[[["self"]],["usize"]]],[11,"keys_len","","Returns the number of keys stored in the map.",31,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",31,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",31,N],[11,"capacity","","Returns the number of headers the map can hold without…",31,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more headers…",31,N],[11,"get","","Returns a reference to the value associated with the key.",31,[[["self"],["k"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the value associated with…",31,[[["self"],["k"]],["option"]]],[11,"get_all","","Returns a view of all values associated with a key.",31,[[["self"],["k"]],["getall"]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",31,[[["self"],["k"]],["bool"]]],[11,"iter","","An iterator visiting all key-value pairs.",31,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable…",31,[[["self"]],["itermut"]]],[11,"keys","","An iterator visiting all keys.",31,[[["self"]],["keys"]]],[11,"values","","An iterator visiting all values.",31,[[["self"]],["values"]]],[11,"values_mut","","An iterator visiting all values mutably.",31,[[["self"]],["valuesmut"]]],[11,"drain","","Clears the map, returning all entries as an iterator.",31,[[["self"]],["drain"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",31,[[["self"],["k"]],["result",["entry","invalidheadername"]]]],[11,"insert","","Inserts a key-value pair into the map.",31,[[["self"],["k"],["t"]],["option"]]],[11,"append","","Inserts a key-value pair into the map.",31,[[["self"],["k"],["t"]],["bool"]]],[11,"remove","","Removes a key from the map, returning the value associated…",31,[[["self"],["k"]],["option"]]],[11,"iter","hyper::header","Returns an iterator visiting all values associated with…",36,[[["self"]],["valueiter"]]],[11,"from_static","","Convert a static string to a `HeaderValue`.",38,[[["str"]],["headervalue"]]],[11,"from_str","","Attempt to convert a string to a `HeaderValue`.",38,[[["str"]],["result",["headervalue","invalidheadervalue"]]]],[11,"from_name","","Converts a HeaderName into a HeaderValue",38,[[["headername"]],["headervalue"]]],[11,"from_bytes","","Attempt to convert a byte slice to a `HeaderValue`.",38,N],[11,"from_shared","","Attempt to convert a `Bytes` buffer to a `HeaderValue`.",38,[[["bytes"]],["result",["headervalue","invalidheadervaluebytes"]]]],[11,"from_shared_unchecked","","Convert a `Bytes` directly into a `HeaderValue` without…",38,[[["bytes"]],["headervalue"]]],[11,"to_str","","Yields a `&str` slice if the `HeaderValue` only contains…",38,[[["self"]],["result",["str","tostrerror"]]]],[11,"len","","Returns the length of `self`.",38,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `HeaderValue` has a length of zero…",38,[[["self"]],["bool"]]],[11,"as_bytes","","Converts a `HeaderValue` to a byte slice.",38,N],[11,"set_sensitive","","Mark that the header value represents sensitive information.",38,N],[11,"is_sensitive","","Returns `true` if the value represents sensitive data.",38,[[["self"]],["bool"]]],[11,"from_bytes","","Converts a slice of bytes to an HTTP header name.",44,N],[11,"from_lowercase","","Converts a slice of bytes to an HTTP header name.",44,N],[11,"from_static","","Converts a static string to a HTTP header name.",44,[[["str"]],["headername"]]],[11,"as_str","","Returns a `str` representation of the header.",44,[[["self"]],["str"]]],[11,"key","","Returns a reference to the entry's key.",45,[[["self"]],["headername"]]],[11,"get","","Get a reference to the first value in the entry.",45,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",45,[[["self"]],["t"]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference to…",45,[[["self"]],["t"]]],[11,"insert","","Sets the value of the entry.",45,[[["self"],["t"]],["t"]]],[11,"insert_mult","","Sets the value of the entry.",45,[[["self"],["t"]],["valuedrain"]]],[11,"append","","Insert the value into the entry.",45,N],[11,"remove","","Remove the entry from the map.",45,[[["self"]],["t"]]],[11,"remove_entry","","Remove the entry from the map.",45,N],[11,"remove_entry_mult","","Remove the entry from the map.",45,N],[11,"iter","","Returns an iterator visiting all values associated with…",45,[[["self"]],["valueiter"]]],[11,"iter_mut","","Returns an iterator mutably visiting all values associated…",45,[[["self"]],["valueitermut"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["self"],["t"]],["t"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["self"],["f"]],["t"]]],[11,"key","","Returns a reference to the entry's key",0,[[["self"]],["headername"]]],[18,"GET","hyper","GET",48,N],[18,"POST","","POST",48,N],[18,"PUT","","PUT",48,N],[18,"DELETE","","DELETE",48,N],[18,"HEAD","","HEAD",48,N],[18,"OPTIONS","","OPTIONS",48,N],[18,"CONNECT","","CONNECT",48,N],[18,"PATCH","","PATCH",48,N],[18,"TRACE","","TRACE",48,N],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",48,N],[11,"is_safe","","Whether a method is considered \"safe\", meaning the request…",48,[[["self"]],["bool"]]],[11,"is_idempotent","","Whether a method is considered \"idempotent\", meaning the…",48,[[["self"]],["bool"]]],[11,"as_str","","Return a &str representation of the HTTP method",48,[[["self"]],["str"]]],[11,"builder","","Creates a new builder-style object to manufacture a…",49,[[],["builder"]]],[11,"get","","Creates a new `Builder` initialized with a GET method and…",49,[[["t"]],["builder"]]],[11,"put","","Creates a new `Builder` initialized with a PUT method and…",49,[[["t"]],["builder"]]],[11,"post","","Creates a new `Builder` initialized with a POST method and…",49,[[["t"]],["builder"]]],[11,"delete","","Creates a new `Builder` initialized with a DELETE method…",49,[[["t"]],["builder"]]],[11,"options","","Creates a new `Builder` initialized with an OPTIONS method…",49,[[["t"]],["builder"]]],[11,"head","","Creates a new `Builder` initialized with a HEAD method and…",49,[[["t"]],["builder"]]],[11,"connect","","Creates a new `Builder` initialized with a CONNECT method…",49,[[["t"]],["builder"]]],[11,"patch","","Creates a new `Builder` initialized with a PATCH method…",49,[[["t"]],["builder"]]],[11,"trace","","Creates a new `Builder` initialized with a TRACE method…",49,[[["t"]],["builder"]]],[11,"new","","Creates a new blank `Request` with the body",49,[[["t"]],["request"]]],[11,"from_parts","","Creates a new `Request` with the given components parts…",49,[[["parts"],["t"]],["request"]]],[11,"method","","Returns a reference to the associated HTTP method.",49,[[["self"]],["method"]]],[11,"method_mut","","Returns a mutable reference to the associated HTTP method.",49,[[["self"]],["method"]]],[11,"uri","","Returns a reference to the associated URI.",49,[[["self"]],["uri"]]],[11,"uri_mut","","Returns a mutable reference to the associated URI.",49,[[["self"]],["uri"]]],[11,"version","","Returns the associated version.",49,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",49,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",49,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field…",49,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",49,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",49,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",49,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",49,[[["self"]],["t"]]],[11,"into_body","","Consumes the request, returning just the body.",49,[[["self"]],["t"]]],[11,"into_parts","","Consumes the request returning the head and body parts.",49,N],[11,"map","","Consumes the request returning a new request with body…",49,[[["self"],["f"]],["request"]]],[11,"builder","","Creates a new builder-style object to manufacture a…",50,[[],["builder"]]],[11,"new","","Creates a new blank `Response` with the body",50,[[["t"]],["response"]]],[11,"from_parts","","Creates a new `Response` with the given head and body",50,[[["parts"],["t"]],["response"]]],[11,"status","","Returns the `StatusCode`.",50,[[["self"]],["statuscode"]]],[11,"status_mut","","Returns a mutable reference to the associated `StatusCode`.",50,[[["self"]],["statuscode"]]],[11,"version","","Returns a reference to the associated version.",50,[[["self"]],["version"]]],[11,"version_mut","","Returns a mutable reference to the associated version.",50,[[["self"]],["version"]]],[11,"headers","","Returns a reference to the associated header field map.",50,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a mutable reference to the associated header field…",50,[[["self"]],["headermap"]]],[11,"extensions","","Returns a reference to the associated extensions.",50,[[["self"]],["extensions"]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",50,[[["self"]],["extensions"]]],[11,"body","","Returns a reference to the associated HTTP body.",50,[[["self"]],["t"]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",50,[[["self"]],["t"]]],[11,"into_body","","Consumes the response, returning just the body.",50,[[["self"]],["t"]]],[11,"into_parts","","Consumes the response returning the head and body parts.",50,N],[11,"map","","Consumes the response returning a new response with body…",50,[[["self"],["f"]],["response"]]],[11,"from_u16","","Converts a u16 to a status code.",51,[[["u16"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_bytes","","Converts a &[u8] to a status code",51,N],[11,"as_u16","","Returns the `u16` corresponding to this `StatusCode`.",51,[[["self"]],["u16"]]],[11,"as_str","","Returns a &str representation of the `StatusCode`",51,[[["self"]],["str"]]],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",51,[[["self"]],["option",["str"]]]],[11,"is_informational","","Check if status is within 100-199.",51,[[["self"]],["bool"]]],[11,"is_success","","Check if status is within 200-299.",51,[[["self"]],["bool"]]],[11,"is_redirection","","Check if status is within 300-399.",51,[[["self"]],["bool"]]],[11,"is_client_error","","Check if status is within 400-499.",51,[[["self"]],["bool"]]],[11,"is_server_error","","Check if status is within 500-599.",51,[[["self"]],["bool"]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",51,N],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",51,N],[18,"PROCESSING","","102 Processing [RFC2518]",51,N],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",51,N],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",51,N],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",51,N],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",51,N],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",51,N],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",51,N],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",51,N],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",51,N],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",51,N],[18,"IM_USED","","226 IM Used [RFC3229]",51,N],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",51,N],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",51,N],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",51,N],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",51,N],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",51,N],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",51,N],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",51,N],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",51,N],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",51,N],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",51,N],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",51,N],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",51,N],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",51,N],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",51,N],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",51,N],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",51,N],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",51,N],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",51,N],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",51,N],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",51,N],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",51,N],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",51,N],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",51,N],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",51,N],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",51,N],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",51,N],[18,"IM_A_TEAPOT","","418 I'm a teapot [curiously not registered by IANA but…",51,N],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",51,N],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",51,N],[18,"LOCKED","","423 Locked [RFC4918]",51,N],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",51,N],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",51,N],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",51,N],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",51,N],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",51,N],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",51,N],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",51,N],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",51,N],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",51,N],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",51,N],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",51,N],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",51,N],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",51,N],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",51,N],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",51,N],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",51,N],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",51,N],[11,"from_parts","","Attempt to convert a `Uri` from `Parts`",52,[[["parts"]],["result",["uri","invaliduriparts"]]]],[11,"from_shared","","Attempt to convert a `Uri` from `Bytes`",52,[[["bytes"]],["result",["uri","invaliduribytes"]]]],[11,"from_static","","Convert a `Uri` from a static string.",52,[[["str"]],["uri"]]],[11,"into_parts","","Convert a `Uri` into `Parts`.",52,[[["self"]],["parts"]]],[11,"path_and_query","","Returns the path & query components of the Uri",52,[[["self"]],["option",["pathandquery"]]]],[11,"path","","Get the path of this `Uri`.",52,[[["self"]],["str"]]],[11,"scheme_part","","Get the scheme of this `Uri`.",52,[[["self"]],["option",["scheme"]]]],[11,"authority_part","","Get the authority of this `Uri`.",52,[[["self"]],["option",["authority"]]]],[11,"host","","Get the host of this `Uri`.",52,[[["self"]],["option",["str"]]]],[11,"port","","Get the port of this `Uri`.",52,[[["self"]],["option",["u16"]]]],[11,"query","","Get the query string of this `Uri`, starting after the `?`.",52,[[["self"]],["option",["str"]]]],[18,"HTTP_09","","`HTTP/0.9`",53,N],[18,"HTTP_10","","`HTTP/1.0`",53,N],[18,"HTTP_11","","`HTTP/1.1`",53,N],[18,"HTTP_2","","`HTTP/2.0`",53,N],[11,"poll_trailers","hyper::body","Poll for an optional single `HeaderMap` of trailers.",4,[[["self"]],["poll",["option"]]]],[11,"is_end_stream","","A hint that the `Body` is complete, and doesn't need to be…",4,[[["self"]],["bool"]]],[11,"content_length","","Return a length of the total bytes that will be streamed,…",4,[[["self"]],["option",["u64"]]]]],"paths":[[4,"Entry"],[3,"Body"],[3,"Sender"],[3,"Chunk"],[8,"Payload"],[3,"Parts"],[3,"SendRequest"],[3,"Connection"],[3,"Builder"],[3,"HttpConnector"],[8,"Connect"],[3,"Destination"],[3,"Connected"],[3,"Client"],[3,"Builder"],[3,"Error"],[3,"Parts"],[3,"Http"],[3,"Connection"],[3,"Serve"],[3,"AddrIncoming"],[3,"Server"],[3,"Builder"],[8,"NewService"],[8,"Service"],[8,"Future"],[8,"Stream"],[3,"Parts"],[3,"Upgraded"],[3,"VacantEntry"],[3,"InvalidHeaderName"],[3,"HeaderMap"],[3,"ValueIterMut"],[3,"Values"],[3,"ValueDrain"],[3,"Keys"],[3,"GetAll"],[3,"Iter"],[3,"HeaderValue"],[3,"Drain"],[3,"IntoIter"],[3,"ToStrError"],[3,"InvalidHeaderNameBytes"],[3,"InvalidHeaderValue"],[3,"HeaderName"],[3,"OccupiedEntry"],[3,"InvalidHeaderValueBytes"],[3,"ValueIter"],[3,"Method"],[3,"Request"],[3,"Response"],[3,"StatusCode"],[3,"Uri"],[3,"Version"],[3,"ResponseFuture"],[3,"Handshake"],[3,"ResponseFuture"],[3,"Connecting"],[3,"OnUpgrade"]]};
searchIndex["hyper_tls"]={"doc":"hyper-tls","items":[[3,"Error","hyper_tls","An error returned from the TLS implementation.",N,N],[3,"HttpsConnector","","A Connector for the `https` scheme.",N,N],[3,"HttpsConnecting","","A Future representing work to connect to a URL, and a TLS…",N,N],[3,"TlsStream","","A stream protected with TLS.",N,N],[4,"MaybeHttpsStream","","A stream that might be protected with TLS.",N,N],[13,"Http","","A stream over plain text.",0,N],[13,"Https","","A stream protected with TLS.",0,N],[11,"new","","Construct a new HttpsConnector.",1,[[["usize"]],["result",["error"]]]],[11,"https_only","","Force the use of HTTPS when connecting.",1,[[["self"],["bool"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[["self"]],["f"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["error"]],["error"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",1,[[["self"]],["httpsconnector"]]],[11,"from","","",1,N],[11,"from","","",0,[[["tlsstream"]],["self"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"from","","",0,[[["tlsstream"]],["self"]]],[11,"from","","",4,[[["tlsstream"]],["self"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"read","","",0,N],[11,"read","","",4,N],[11,"write","","",0,N],[11,"flush","","",0,[[["self"]],["result"]]],[11,"write","","",4,N],[11,"flush","","",4,[[["self"]],["result"]]],[11,"poll","","",3,[[["self"]],["poll"]]],[11,"prepare_uninitialized_buffer","","",0,N],[11,"read_buf","","",0,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"shutdown","","",0,[[["self"]],["poll",["error"]]]],[11,"write_buf","","",0,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"shutdown","","",4,[[["self"]],["poll",["error"]]]],[11,"connect","","",1,N]],"paths":[[4,"MaybeHttpsStream"],[3,"HttpsConnector"],[3,"Error"],[3,"HttpsConnecting"],[3,"TlsStream"]]};
searchIndex["idna"]={"doc":"This Rust crate implements IDNA per the WHATWG URL Standard.","items":[[5,"domain_to_ascii","idna","The domain to ASCII algorithm.",N,[[["str"]],["result",["string","errors"]]]],[5,"domain_to_unicode","","The domain to Unicode algorithm.",N,N],[0,"punycode","","Punycode (RFC 3492) implementation.",N,N],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",N,[[["str"]],["option",["string"]]]],[5,"decode","","Convert Punycode to Unicode.",N,[[["str"]],["option",["vec"]]]],[5,"encode_str","","Convert an Unicode `str` to Punycode.",N,[[["str"]],["option",["string"]]]],[5,"encode","","Convert Unicode to Punycode.",N,N],[0,"uts46","idna","Unicode IDNA Compatibility Processing (Unicode Technical…",N,N],[3,"Flags","idna::uts46","",N,N],[12,"use_std3_ascii_rules","","",0,N],[12,"transitional_processing","","",0,N],[12,"verify_dns_length","","",0,N],[3,"Errors","","Errors recorded during UTS #46 processing.",N,N],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",N,[[["str"],["flags"]],["result",["string","errors"]]]],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",N,N],[7,"PUNYCODE_PREFIX","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["flags"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Flags"],[3,"Errors"]]};
searchIndex["indexmap"]={"doc":"[`IndexMap`] is a hash table where the iteration order of…","items":[[0,"set","indexmap","A hash set implemented using `IndexMap`",N,N],[3,"IndexSet","indexmap::set","A hash set where the iteration order of the values is…",N,N],[3,"IntoIter","","",N,N],[3,"Iter","","",N,N],[3,"Drain","","",N,N],[3,"Difference","","",N,N],[3,"Intersection","","",N,N],[3,"SymmetricDifference","","",N,N],[3,"Union","","",N,N],[11,"new","","Create a new set. (Does not allocate.)",0,[[],["self"]]],[11,"with_capacity","","Create a new set with capacity for `n` elements. (Does not…",0,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for `n` elements. (Does not…",0,[[["usize"],["s"]],["self"]]],[11,"len","","Return the number of elements in the set.",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the set contains no elements.",0,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new set with `hash_builder`",0,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the set's `BuildHasher`.",0,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",0,[[["self"]],["usize"]]],[11,"clear","","Remove all elements in the set, while preserving its…",0,[[["self"]]]],[11,"reserve","","FIXME Not implemented fully yet",0,[[["self"],["usize"]]]],[11,"insert","","Insert the value into the set.",0,[[["self"],["t"]],["bool"]]],[11,"iter","","Return an iterator over the values of the set, in their…",0,[[["self"]],["iter"]]],[11,"difference","","Return an iterator over the values that are in `self` but…",0,[[["self"],["indexset"]],["difference"]]],[11,"symmetric_difference","","Return an iterator over the values that are in `self` or…",0,[[["self"],["indexset"]],["symmetricdifference"]]],[11,"intersection","","Return an iterator over the values that are in both `self`…",0,[[["self"],["indexset"]],["intersection"]]],[11,"union","","Return an iterator over all values that are in `self` or…",0,[[["self"],["indexset"]],["union"]]],[11,"contains","","Return `true` if an equivalent to `value` exists in the set.",0,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored in the set, if it…",0,[[["self"],["q"]],["option"]]],[11,"get_full","","Return item index and value",0,[[["self"],["q"]],["option"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",0,[[["self"],["t"]],["option"]]],[11,"remove","","FIXME Same as .swap_remove",0,[[["self"],["q"]],["bool"]]],[11,"swap_remove","","Remove the value from the set, and return `true` if it was…",0,[[["self"],["q"]],["bool"]]],[11,"take","","FIXME Same as .swap_take",0,[[["self"],["q"]],["option"]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is…",0,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it…",0,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last value",0,[[["self"]],["option"]]],[11,"retain","","Scan through each value in the set and keep those where…",0,[[["self"],["f"]]]],[11,"sort","","Sort the set’s values by their default ordering.",0,[[["self"]]]],[11,"sort_by","","Sort the set’s values in place using the comparison…",0,[[["self"],["f"]]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator…",0,[[["self"],["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexSet`, returning all values as a drain…",0,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a value by index",0,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",0,[[["self"],["usize"]],["option"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",0,[[["self"],["indexset"]],["bool"]]],[11,"is_subset","","Returns `true` if all elements of `self` are contained in…",0,[[["self"],["indexset"]],["bool"]]],[11,"is_superset","","Returns `true` if all elements of `other` are contained in…",0,[[["self"],["indexset"]],["bool"]]],[0,"map","indexmap","`IndexMap` is a hash table where the iteration order of…",N,N],[3,"IndexMap","indexmap::map","A hash table where the iteration order of the key-value…",N,N],[3,"OccupiedEntry","","",N,N],[3,"VacantEntry","","",N,N],[3,"Keys","","",N,N],[3,"Values","","",N,N],[3,"ValuesMut","","",N,N],[3,"Iter","","",N,N],[3,"IterMut","","",N,N],[3,"IntoIter","","",N,N],[3,"Drain","","",N,N],[4,"Entry","","Entry for an existing key-value pair or a vacant location…",N,N],[13,"Occupied","","Existing slot with equivalent key.",1,N],[13,"Vacant","","Vacant slot (no equivalent key in the map).",1,N],[8,"MutableKeys","","Opt-in mutable access to keys.",N,N],[16,"Key","","",2,N],[16,"Value","","",2,N],[10,"get_full_mut2","","Return item index, mutable reference to key and value",2,[[["self"],["q"]],["option"]]],[10,"retain2","","Scan through each key-value pair in the map and keep those…",2,[[["self"],["f"]]]],[10,"__private_marker","","This method is not useful in itself – it is there to…",2,[[["self"]],["privatemarker"]]],[11,"new","","Create a new map. (Does not allocate.)",3,[[],["self"]]],[11,"with_capacity","","Create a new map with capacity for `n` key-value pairs.…",3,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for `n` key-value pairs.…",3,[[["usize"],["s"]],["self"]]],[11,"len","","Return the number of key-value pairs in the map.",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",3,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new map with `hash_builder`",3,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the map's `BuildHasher`.",3,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",3,[[["self"]],["usize"]]],[11,"or_insert","","Computes in O(1) time (amortized average).",1,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Computes in O(1) time (amortized average).",1,[[["self"],["f"]],["v"]]],[11,"key","","",1,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair exists or will…",1,[[["self"]],["usize"]]],[11,"key","","",4,[[["self"]],["k"]]],[11,"get","","",4,[[["self"]],["v"]]],[11,"get_mut","","",4,[[["self"]],["v"]]],[11,"index","","Return the index of the key-value pair",4,[[["self"]],["usize"]]],[11,"into_mut","","",4,[[["self"]],["v"]]],[11,"insert","","Sets the value of the entry to `value`, and returns the…",4,[[["self"],["v"]],["v"]]],[11,"remove","","",4,[[["self"]],["v"]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map…",4,N],[11,"key","","",5,[[["self"]],["k"]]],[11,"into_key","","",5,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair will be inserted.",5,[[["self"]],["usize"]]],[11,"insert","","",5,[[["self"],["v"]],["v"]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",3,[[["self"]]]],[11,"reserve","","Reserve capacity for `additional` more key-value pairs.",3,[[["self"],["usize"]]]],[11,"insert","","Insert a key-value pair in the map.",3,[[["self"],["k"],["v"]],["option"]]],[11,"entry","","Get the given key’s corresponding entry in the map for…",3,[[["self"],["k"]],["entry"]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",3,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",3,[[["self"]],["itermut"]]],[11,"keys","","Return an iterator over the keys of the map, in their order",3,[[["self"]],["keys"]]],[11,"values","","Return an iterator over the values of the map, in their…",3,[[["self"]],["values"]]],[11,"values_mut","","Return an iterator over mutable references to the the…",3,[[["self"]],["valuesmut"]]],[11,"contains_key","","Return `true` if an equivalent to `key` exists in the map.",3,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored for `key`, if it is…",3,[[["self"],["q"]],["option"]]],[11,"get_full","","Return item index, key and value",3,[[["self"],["q"]],["option"]]],[11,"get_mut","","",3,[[["self"],["q"]],["option"]]],[11,"get_full_mut","","",3,[[["self"],["q"]],["option"]]],[11,"remove","","NOTE: Same as .swap_remove",3,[[["self"],["q"]],["option"]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",3,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to `key` and return…",3,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last key-value pair",3,[[["self"]],["option"]]],[11,"retain","","Scan through each key-value pair in the map and keep those…",3,[[["self"],["f"]]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering of…",3,[[["self"]]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the…",3,[[["self"],["f"]]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value…",3,[[["self"],["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexMap`, returning all key-value pairs as a…",3,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a key-value pair by index",3,[[["self"],["usize"]],["option"]]],[11,"get_index_mut","","Get a key-value pair by index",3,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",3,[[["self"],["usize"]],["option"]]],[8,"Equivalent","indexmap","Key equivalence trait.",N,N],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",6,[[["self"],["k"]],["bool"]]],[14,"indexmap","","Create an `IndexMap` from a list of key-value pairs",N,N],[14,"indexset","","Create an `IndexSet` from a list of values",N,N],[11,"into_iter","indexmap::set","",0,[[["self"]],["i"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into_iter","indexmap::map","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"get_full_mut2","","",3,[[["self"],["q"]],["option"]]],[11,"retain2","","",3,[[["self"],["f"]]]],[11,"__private_marker","","",3,[[["self"]],["privatemarker"]]],[11,"next","indexmap::set","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"count","","",7,[[["self"]],["usize"]]],[11,"nth","","",7,[[["self"],["usize"]],["option"]]],[11,"last","","",7,[[["self"]],["option"]]],[11,"collect","","",7,[[["self"]],["c"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"count","","",8,[[["self"]],["usize"]]],[11,"nth","","",8,[[["self"],["usize"]],["option"]]],[11,"last","","",8,[[["self"]],["option"]]],[11,"collect","","",8,[[["self"]],["c"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"count","","",9,[[["self"]],["usize"]]],[11,"nth","","",9,[[["self"],["usize"]],["option"]]],[11,"last","","",9,[[["self"]],["option"]]],[11,"collect","","",9,[[["self"]],["c"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,N],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,N],[11,"fold","","",12,[[["self"],["b"],["f"]],["b"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,N],[11,"fold","","",13,[[["self"],["b"],["f"]],["b"]]],[11,"next","indexmap::map","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,N],[11,"count","","",14,[[["self"]],["usize"]]],[11,"nth","","",14,[[["self"],["usize"]],["option"]]],[11,"last","","",14,[[["self"]],["option"]]],[11,"collect","","",14,[[["self"]],["c"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,N],[11,"count","","",15,[[["self"]],["usize"]]],[11,"nth","","",15,[[["self"],["usize"]],["option"]]],[11,"last","","",15,[[["self"]],["option"]]],[11,"collect","","",15,[[["self"]],["c"]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,N],[11,"count","","",16,[[["self"]],["usize"]]],[11,"nth","","",16,[[["self"],["usize"]],["option"]]],[11,"last","","",16,[[["self"]],["option"]]],[11,"collect","","",16,[[["self"]],["c"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"count","","",17,[[["self"]],["usize"]]],[11,"nth","","",17,[[["self"],["usize"]],["option"]]],[11,"last","","",17,[[["self"]],["option"]]],[11,"collect","","",17,[[["self"]],["c"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"count","","",18,[[["self"]],["usize"]]],[11,"nth","","",18,[[["self"],["usize"]],["option"]]],[11,"last","","",18,[[["self"]],["option"]]],[11,"collect","","",18,[[["self"]],["c"]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"count","","",19,[[["self"]],["usize"]]],[11,"nth","","",19,[[["self"],["usize"]],["option"]]],[11,"last","","",19,[[["self"]],["option"]]],[11,"collect","","",19,[[["self"]],["c"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"count","","",20,[[["self"]],["usize"]]],[11,"nth","","",20,[[["self"],["usize"]],["option"]]],[11,"last","","",20,[[["self"]],["option"]]],[11,"collect","","",20,[[["self"]],["c"]]],[11,"len","indexmap::set","",7,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","indexmap::map","",14,[[["self"]],["usize"]]],[11,"len","","",15,[[["self"]],["usize"]]],[11,"len","","",16,[[["self"]],["usize"]]],[11,"len","","",17,[[["self"]],["usize"]]],[11,"len","","",18,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"eq","indexmap::set","",0,[[["self"],["indexset"]],["bool"]]],[11,"eq","indexmap::map","",3,[[["self"],["indexmap"]],["bool"]]],[11,"next_back","indexmap::set","",7,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"next_back","indexmap::map","",14,[[["self"]],["option"]]],[11,"next_back","","",15,[[["self"]],["option"]]],[11,"next_back","","",16,[[["self"]],["option"]]],[11,"next_back","","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"into_iter","indexmap::set","",0,N],[11,"into_iter","indexmap::map","",3,N],[11,"default","indexmap::set","Return an empty `IndexSet`",0,[[],["self"]]],[11,"default","indexmap::map","Return an empty `IndexMap`",3,[[],["self"]]],[11,"clone","indexmap::set","",0,[[["self"]],["indexset"]]],[11,"clone","indexmap::map","",3,[[["self"]],["indexmap"]]],[11,"extend","indexmap::set","",0,[[["self"],["i"]]]],[11,"extend","","",0,[[["self"],["i"]]]],[11,"extend","indexmap::map","Extend the map with all key-value pairs in the iterable.",3,[[["self"],["i"]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",3,[[["self"],["i"]]]],[11,"fmt","indexmap::set","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","indexmap::map","",3,[[["self"],["formatter"]],["result"]]],[11,"index","","Panics if `key` is not present in the map.",3,[[["self"],["q"]],["v"]]],[11,"index_mut","","Panics if `key` is not present in the map.",3,[[["self"],["q"]],["v"]]],[11,"from_iter","indexmap::set","",0,[[["i"]],["self"]]],[11,"from_iter","indexmap::map","Create an `IndexMap` from the sequence of key-value pairs…",3,[[["i"]],["self"]]]],"paths":[[3,"IndexSet"],[4,"Entry"],[8,"MutableKeys"],[3,"IndexMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Equivalent"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["iovec"]={"doc":"A specialized byte slice type for performing vectored I/O…","items":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O…",N,N],[0,"unix","","IoVec extensions for Unix platforms.",N,N],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",N,N],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice…",N,N],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",N,N],[11,"from_bytes","","",0,N],[11,"from_bytes_mut","","",0,N],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"deref_mut","","",0,N],[11,"deref","","",0,N]],"paths":[[3,"IoVec"]]};
searchIndex["is_match"]={"doc":"","items":[[14,"is_match","is_match","",N,N]],"paths":[]};
searchIndex["itertools"]={"doc":"Itertools — extra iterator adaptors, functions and macros.","items":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a…",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[4,"Diff","","A type returned by the `diff_with` function.",N,N],[13,"FirstMismatch","","The index of the first non-matching element along with…",1,N],[13,"Shorter","","The total number of elements that were in `J` along with…",1,N],[13,"Longer","","The total number of elements that were in `I` along with…",1,N],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See…",N,N],[13,"NoElements","","Empty iterator",2,N],[13,"OneElement","","Iterator with one element, so the minimum and maximum are…",2,N],[13,"MinMax","","More than one element in the iterator, the first element…",2,N],[4,"Position","","A value yielded by `WithPosition`. Indicates the position…",N,N],[13,"First","","This is the first element.",3,N],[13,"Middle","","This is neither the first nor the last element.",3,N],[13,"Last","","This is the last element.",3,N],[13,"Only","","This is the only element.",3,N],[4,"EitherOrBoth","","Value that either holds a single A or B, or both.",N,N],[13,"Both","","Both values are present.",4,N],[13,"Left","","Only the left value of type `A` is present.",4,N],[13,"Right","","Only the right value of type `B` is present.",4,N],[4,"FoldWhile","","An enum used for controlling the execution of…",N,N],[13,"Continue","","Continue folding with this value",5,N],[13,"Done","","Fold is complete and will return this value",5,N],[5,"flatten","","Flatten an iterable of iterables into a single combined…",N,[[["i"]],["flatten"]]],[5,"concat","","Combine all an iterator's elements into one element by…",N,N],[5,"cons_tuples","","Create an iterator that maps for example iterators of…",N,[[["i"]],["constuples"]]],[5,"diff_with","","Compares every element yielded by both `i` and `j` with…",N,[[["i"],["j"],["f"]],["option",["diff"]]]],[5,"kmerge_by","","Create an iterator that merges elements of the contained…",N,[[["i"],["f"]],["kmergeby"]]],[5,"process_results","","“Lift” a function of the values of an iterator so that it…",N,[[["i"],["f"]],["result"]]],[5,"repeat_n","","Create an iterator that produces `n` repetitions of…",N,[[["a"],["usize"]],["repeatn"]]],[5,"repeat_call","","An iterator source that produces elements indefinitely by…",N,[[["f"]],["repeatcall"]]],[5,"unfold","","Creates a new unfold source with the specified closure as…",N,[[["st"],["f"]],["unfold"]]],[5,"iterate","","Creates a new iterator that infinitely applies function to…",N,[[["st"],["f"]],["iterate"]]],[5,"multizip","","An iterator that generalizes .zip() and allows running…",N,[[["u"]],["zip"]]],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",N,[[["i"],["j"]],["interleave"]]],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",N,[[["i"],["j"]],["merge"]]],[5,"put_back","","Create an iterator where you can put back a single item",N,[[["i"]],["putback"]]],[5,"put_back_n","","Create an iterator where you can put back multiple values…",N,[[["i"]],["putbackn"]]],[5,"multipeek","","An iterator adaptor that allows the user to peek at…",N,[[["i"]],["multipeek"]]],[5,"kmerge","","Create an iterator that merges elements of the contained…",N,[[["i"]],["kmerge"]]],[5,"zip_eq","","Iterate `i` and `j` in lock step.",N,[[["i"],["j"]],["zipeq"]]],[5,"merge_join_by","","Return an iterator adaptor that merge-joins items from the…",N,[[["i"],["j"],["f"]],["mergejoinby"]]],[5,"rciter","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",N,[[["i"]],["rciter"]]],[5,"enumerate","","Iterate `iterable` with a running index.",N,[[["i"]],["enumerate"]]],[5,"rev","","Iterate `iterable` in reverse.",N,[[["i"]],["rev"]]],[5,"zip","","Iterate `i` and `j` in lock step.",N,[[["i"],["j"]],["zip"]]],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",N,[[["i"],["j"]],["chain"]]],[5,"cloned","","Create an iterator that clones each element from &T to T",N,[[["i"]],["cloned"]]],[5,"fold","","Perform a fold operation over the iterable.",N,[[["i"],["b"],["f"]],["b"]]],[5,"all","","Test whether the predicate holds for all elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"any","","Test whether the predicate holds for any elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"max","","Return the maximum value of the iterable.",N,[[["i"]],["option"]]],[5,"min","","Return the minimum value of the iterable.",N,[[["i"]],["option"]]],[5,"join","","Combine all iterator elements into one String, seperated…",N,[[["i"],["str"]],["string"]]],[5,"sorted","","Collect all the iterable's elements into a sorted vector…",N,[[["i"]],["vec"]]],[5,"equal","","Return `true` if both iterables produce equal sequences…",N,[[["i"],["j"]],["bool"]]],[5,"assert_equal","","Assert that two iterables produce equal sequences, with…",N,[[["i"],["j"]]]],[5,"partition","","Partition a sequence using predicate `pred` so that…",N,[[["i"],["f"]],["usize"]]],[0,"structs","","The concrete iterator types.",N,N],[3,"Dedup","itertools::structs","An iterator adaptor that removes repeated duplicates.",N,N],[3,"Interleave","","An iterator adaptor that alternates elements from two…",N,N],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two…",N,N],[3,"Product","","An iterator adaptor that iterates over the cartesian…",N,N],[3,"PutBack","","An iterator adaptor that allows putting back a single item…",N,N],[3,"Batching","","A “meta iterator adaptor”. Its closure recives a reference…",N,N],[3,"Step","","An iterator adaptor that steps a number elements in the…",N,N],[3,"MapResults","","An iterator adapter to apply a transformation within a…",N,N],[3,"Merge","","An iterator adaptor that merges the two base iterators in…",N,N],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in…",N,N],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able…",N,N],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator…",N,N],[3,"Coalesce","","An iterator adaptor that may join together adjacent…",N,N],[3,"TupleCombinations","","An iterator to iterate through all combinations in a…",N,N],[3,"Flatten","","An iterator adapter to simply flatten a structure.",N,N],[3,"Positions","","An iterator adapter to get the positions of each element…",N,N],[3,"Update","","An iterator adapter to apply a mutating function to each…",N,N],[3,"MultiProduct","","An iterator adaptor that iterates over the cartesian…",N,N],[3,"Combinations","","An iterator to iterate through all the `n`-length…",N,N],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B),…",N,N],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",N,N],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",N,N],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",N,N],[3,"Chunk","","An iterator for the elements in a single chunk.",N,N],[3,"Chunks","","An iterator that yields the Chunk iterators.",N,N],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",N,N],[3,"Group","","An iterator for the elements in a single group.",N,N],[3,"Groups","","An iterator that yields the Group iterators.",N,N],[3,"Intersperse","","An iterator adaptor to insert a particular value between…",N,N],[3,"KMerge","","An iterator adaptor that merges an abitrary number of base…",N,N],[3,"KMergeBy","","An iterator adaptor that merges an abitrary number of base…",N,N],[3,"MergeJoinBy","","An iterator adaptor that merge-joins items from the two…",N,N],[3,"MultiPeek","","See `multipeek()` for more information.",N,N],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum…",N,N],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure…",N,N],[3,"ProcessResults","","An iterator that produces only the `T` values as long as…",N,N],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in…",N,N],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the…",N,N],[12,"rciter","","The boxed iterator.",6,N],[3,"RepeatN","","An iterator that produces n repetitions of an element.",N,N],[3,"RepeatCall","","See `repeat_call` for more information.",N,N],[3,"Unfold","","See `unfold` for more information.",N,N],[12,"state","","Internal state that will be passed to the closure on the…",7,N],[3,"Iterate","","An iterator that infinitely applies function to value and…",N,N],[3,"Tee","","One half of an iterator pair where both return the same…",N,N],[3,"TupleBuffer","","An iterator over a incomplete tuple.",N,N],[3,"TupleWindows","","An iterator over all contiguous windows that produces…",N,N],[3,"Tuples","","An iterator that groups the items in tuples of a specific…",N,N],[3,"Unique","","An iterator adapter to filter out duplicate elements.",N,N],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",N,N],[3,"WithPosition","","An iterator adaptor that wraps each element in an…",N,N],[3,"ZipEq","","An iterator which iterates two other iterators…",N,N],[3,"ZipLongest","","An iterator which iterates two other iterators…",N,N],[3,"Zip","","See `multizip` for more information.",N,N],[11,"with_value","","put back value `value` (builder method)",8,N],[11,"into_parts","","Split the `PutBack` into its parts.",8,N],[11,"put_back","","Put back a single value to the front of the iterator.",8,N],[11,"into_option","itertools","`into_option` creates an `Option` of type `(T, T)`. The…",2,[[["self"]],["option"]]],[11,"reset_peek","itertools::structs","Reset the peeking “cursor”",9,[[["self"]]]],[11,"peek","","Works exactly like `.next()` with the only difference that…",9,[[["self"]],["option"]]],[11,"put_back","","Puts x in front of the iterator. The values are yielded in…",10,N],[11,"into_buffer","","Return a buffer with the produced items that was not…",11,[[["self"]],["tuplebuffer"]]],[11,"into_inner","itertools","Return the inner value.",3,[[["self"]],["t"]]],[8,"PeekingNext","","An iterator that allows peeking at an element before…",N,N],[10,"peeking_next","","Pass a reference to the next iterator element to the…",12,[[["self"],["f"]],["option"]]],[8,"Itertools","","The trait `Itertools`: extra iterator adaptors and methods…",N,N],[11,"interleave","","Alternate elements from two iterators until both have run…",13,[[["self"],["j"]],["interleave"]]],[11,"interleave_shortest","","Alternate elements from two iterators until at least one…",13,[[["self"],["j"]],["interleaveshortest"]]],[11,"intersperse","","An iterator adaptor to insert a particular value between…",13,N],[11,"zip_longest","","Create an iterator which iterates over both this and the…",13,[[["self"],["j"]],["ziplongest"]]],[11,"zip_eq","","Create an iterator which iterates over both this and the…",13,[[["self"],["j"]],["zipeq"]]],[11,"batching","","A “meta iterator adaptor”. Its closure recives a reference…",13,[[["self"],["f"]],["batching"]]],[11,"group_by","","Return an iterable that can group iterator elements.…",13,[[["self"],["f"]],["groupby"]]],[11,"chunks","","Return an iterable that can chunk the iterator.",13,[[["self"],["usize"]],["intochunks"]]],[11,"tuple_windows","","Return an iterator over all contiguous windows producing…",13,[[["self"]],["tuplewindows"]]],[11,"tuples","","Return an iterator that groups the items in tuples of a…",13,[[["self"]],["tuples"]]],[11,"tee","","Split into an iterator pair that both yield all elements…",13,N],[11,"step","","Return an iterator adaptor that steps `n` elements in the…",13,[[["self"],["usize"]],["step"]]],[11,"map_results","","Return an iterator adaptor that applies the provided…",13,[[["self"],["f"]],["mapresults"]]],[11,"merge","","Return an iterator adaptor that merges the two base…",13,[[["self"],["j"]],["merge"]]],[11,"merge_by","","Return an iterator adaptor that merges the two base…",13,[[["self"],["j"],["f"]],["mergeby"]]],[11,"merge_join_by","","Create an iterator that merges items from both this and…",13,[[["self"],["j"],["f"]],["mergejoinby"]]],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of…",13,[[["self"]],["kmerge"]]],[11,"kmerge_by","","Return an iterator adaptor that flattens an iterator of…",13,[[["self"],["f"]],["kmergeby"]]],[11,"cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[["self"],["j"]],["product"]]],[11,"multi_cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[["self"]],["multiproduct"]]],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure…",13,[[["self"],["f"]],["coalesce"]]],[11,"dedup","","Remove duplicates from sections of consecutive identical…",13,[[["self"]],["dedup"]]],[11,"unique","","Return an iterator adaptor that filters out elements that…",13,[[["self"]],["unique"]]],[11,"unique_by","","Return an iterator adaptor that filters out elements that…",13,[[["self"],["f"]],["uniqueby"]]],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator…",13,[[["self"],["f"]],["peekingtakewhile"]]],[11,"take_while_ref","","Return an iterator adaptor that borrows from a…",13,[[["self"],["f"]],["takewhileref"]]],[11,"while_some","","Return an iterator adaptor that filters `Option<A>`…",13,[[["self"]],["whilesome"]]],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the…",13,[[["self"]],["tuplecombinations"]]],[11,"combinations","","Return an iterator adaptor that iterates over the…",13,[[["self"],["usize"]],["combinations"]]],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a…",13,[[["self"],["usize"],["f"]],["padusing"]]],[11,"flatten","","Flatten an iterator of iterables into a single combined…",13,[[["self"]],["flatten"]]],[11,"with_position","","Return an iterator adaptor that wraps each element in a…",13,[[["self"]],["withposition"]]],[11,"positions","","Return an iterator adaptor that yields the indices of all…",13,[[["self"],["p"]],["positions"]]],[11,"update","","Return an iterator adaptor that applies a mutating…",13,[[["self"],["f"]],["update"]]],[11,"next_tuple","","Advances the iterator and returns the next items grouped…",13,[[["self"]],["option"]]],[11,"collect_tuple","","Collects all items from the iterator into a tuple of a…",13,[[["self"]],["option"]]],[11,"find_position","","Find the position and value of the first element…",13,[[["self"],["p"]],["option"]]],[11,"all_equal","","Check whether all elements compare equal.",13,[[["self"]],["bool"]]],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,…",13,[[["self"],["usize"]],["self"]]],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,…",13,[[["self"],["usize"]],["self"]]],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",13,[[["self"],["f"]]]],[11,"concat","","Combine all an iterator's elements into one element by…",13,N],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of…",13,[[["self"]],["vec"]]],[11,"set_from","","Assign to each reference in `self` from the `from`…",13,[[["self"],["j"]],["usize"]]],[11,"join","","Combine all iterator elements into one String, seperated…",13,[[["self"],["str"]],["string"]]],[11,"format","","Format all iterator elements, separated by `sep`.",13,[[["self"],["str"]],["format"]]],[11,"format_with","","Format all iterator elements, separated by `sep`.",13,[[["self"],["str"],["f"]],["formatwith"]]],[11,"fold_results","","Fold `Result` values from an iterator.",13,[[["self"],["b"],["f"]],["result"]]],[11,"fold_options","","Fold `Option` values from an iterator.",13,[[["self"],["b"],["f"]],["option"]]],[11,"fold1","","Accumulator of the elements in the iterator.",13,[[["self"],["f"]],["option"]]],[11,"tree_fold1","","Accumulate the elements in the iterator in a tree-like…",13,[[["self"],["f"]],["option"]]],[11,"fold_while","","An iterator method that applies a function, producing a…",13,[[["self"],["b"],["f"]],["foldwhile"]]],[11,"sorted","","Collect all iterator elements into a sorted vector in…",13,[[["self"]],["vec"]]],[11,"sorted_by","","Collect all iterator elements into a sorted vector.",13,[[["self"],["f"]],["vec"]]],[11,"sorted_by_key","","Collect all iterator elements into a sorted vector.",13,[[["self"],["f"]],["vec"]]],[11,"partition_map","","Collect all iterator elements into one of two partitions.…",13,N],[11,"into_group_map","","Return a `HashMap` of keys mapped to `Vec`s of values.…",13,[[["self"]],["hashmap",["vec"]]]],[11,"minmax","","Return the minimum and maximum elements in the iterator.",13,[[["self"]],["minmaxresult"]]],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as…",13,[[["self"],["f"]],["minmaxresult"]]],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as…",13,[[["self"],["f"]],["minmaxresult"]]],[11,"into_inner","","Return the value in the continue or done.",5,[[["self"]],["t"]]],[11,"is_done","","Return true if `self` is `Done`, false if it is `Continue`.",5,[[["self"]],["bool"]]],[14,"iproduct","","Create an iterator over the “cartesian product” of…",N,N],[14,"izip","","Create an iterator running multiple iterators in lockstep.",N,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_iter","itertools::structs","",14,[[["self"]],["i"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into_iter","","",24,[[["self"]],["i"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into_iter","","",26,[[["self"]],["i"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into_iter","","",27,[[["self"]],["i"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into_iter","","",28,[[["self"]],["i"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into_iter","","",29,[[["self"]],["i"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into_iter","","",30,[[["self"]],["i"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into_iter","","",31,[[["self"]],["i"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into_iter","","",32,[[["self"]],["i"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into_iter","","",36,[[["self"]],["i"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into_iter","","",37,[[["self"]],["i"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into_iter","","",39,[[["self"]],["i"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into_iter","","",40,[[["self"]],["i"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into_iter","","",41,[[["self"]],["i"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into_iter","","",42,[[["self"]],["i"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_iter","","",43,[[["self"]],["i"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into_iter","","",44,[[["self"]],["i"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_iter","","",45,[[["self"]],["i"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into_iter","","",46,[[["self"]],["i"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_iter","","",48,[[["self"]],["i"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into_iter","","",49,[[["self"]],["i"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_iter","","",50,[[["self"]],["i"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into_iter","","",51,[[["self"]],["i"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into_iter","","",52,[[["self"]],["i"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into_iter","","",53,[[["self"]],["i"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_iter","","",54,[[["self"]],["i"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into_iter","","",55,[[["self"]],["i"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_iter","","",56,[[["self"]],["i"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into_iter","","",57,[[["self"]],["i"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_iter","","",59,[[["self"]],["i"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"as_ref","itertools","",0,[[["self"]],["target"]]],[11,"extend","","",0,N],[11,"clone","","",0,[[["self"]],["either"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",0,N],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"hash","","",0,N],[11,"deref_mut","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"into","","",0,[[["self"]],["result"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"peeking_next","itertools::structs","",9,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",8,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",10,[[["self"],["f"]],["option"]]],[11,"next","","",30,[[["self"]],["option"]]],[11,"count","","",30,[[["self"]],["usize"]]],[11,"size_hint","","",30,N],[11,"last","","",30,[[["self"]],["option"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,N],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,N],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"all","","",8,[[["self"],["g"]],["bool"]]],[11,"fold","","",8,[[["self"],["acc"],["g"]],["acc"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"fold","","",17,[[["self"],["acc"],["g"]],["acc"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,N],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,N],[11,"next","","",25,[[["self"]],["option"]]],[11,"size_hint","","",25,N],[11,"next","","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,N],[11,"fold","","",14,[[["self"],["acc"],["g"]],["acc"]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"size_hint","","",23,N],[11,"next","","",24,[[["self"]],["option"]]],[11,"size_hint","","",24,N],[11,"next","","",26,[[["self"]],["option"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"fold","","",27,[[["self"],["acc"],["g"]],["acc"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"fold","","",20,[[["self"],["acc"],["fold"]],["acc"]]],[11,"collect","","",20,[[["self"]],["c"]]],[11,"next","","",28,[[["self"]],["option"]]],[11,"size_hint","","",28,N],[11,"next","","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,N],[11,"fold","","",29,[[["self"],["acc"],["g"]],["acc"]]],[11,"collect","","",29,[[["self"]],["c"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"fold","","",32,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"fold","","",32,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"fold","","",32,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"fold","","",32,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"fold","","",32,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"fold","","",32,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"next","","",39,[[["self"]],["option"]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"next","","",36,[[["self"]],["option"]]],[11,"next","","",41,[[["self"]],["option"]]],[11,"size_hint","","",41,N],[11,"next","","",42,[[["self"]],["option"]]],[11,"size_hint","","",42,N],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,N],[11,"next","","",44,[[["self"]],["option"]]],[11,"size_hint","","",44,N],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"next","","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,N],[11,"next","","",46,[[["self"]],["option"]]],[11,"size_hint","","",46,N],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,N],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"next","","",48,[[["self"]],["option"]]],[11,"size_hint","","",48,N],[11,"next","","",49,[[["self"]],["option"]]],[11,"size_hint","","",49,N],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"next","","",50,[[["self"]],["option"]]],[11,"size_hint","","",50,N],[11,"next","","",51,[[["self"]],["option"]]],[11,"size_hint","","",51,N],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,N],[11,"next","","",11,[[["self"]],["option"]]],[11,"next","","",53,[[["self"]],["option"]]],[11,"next","","",55,[[["self"]],["option"]]],[11,"size_hint","","",55,N],[11,"count","","",55,[[["self"]],["usize"]]],[11,"next","","",54,[[["self"]],["option"]]],[11,"size_hint","","",54,N],[11,"count","","",54,[[["self"]],["usize"]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"size_hint","","",56,N],[11,"next","","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,N],[11,"next","","",58,[[["self"]],["option"]]],[11,"size_hint","","",58,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"eq","itertools","",4,[[["self"],["eitherorboth"]],["bool"]]],[11,"ne","","",4,[[["self"],["eitherorboth"]],["bool"]]],[11,"eq","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"ne","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"eq","","",3,[[["self"],["position"]],["bool"]]],[11,"ne","","",3,[[["self"],["position"]],["bool"]]],[11,"next_back","itertools::structs","",28,[[["self"]],["option"]]],[11,"next_back","","",29,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",45,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",48,[[["self"]],["option"]]],[11,"next_back","","",58,[[["self"]],["option"]]],[11,"clone","","",30,[[["self"]],["multiproduct"]]],[11,"clone","","",15,[[["self"]],["interleave"]]],[11,"clone","","",16,[[["self"]],["interleaveshortest"]]],[11,"clone","","",8,[[["self"]],["putback"]]],[11,"clone","","",17,[[["self"]],["product"]]],[11,"clone","","",18,[[["self"]],["batching"]]],[11,"clone","","",19,[[["self"]],["step"]]],[11,"clone","","",21,[[["self"]],["self"]]],[11,"clone","","",22,[[["self"]],["self"]]],[11,"clone","","",25,[[["self"]],["self"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"clone","","",24,[[["self"]],["whilesome"]]],[11,"clone","","",27,[[["self"]],["flatten"]]],[11,"clone","itertools","",4,[[["self"]],["eitherorboth"]]],[11,"clone","itertools::structs","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["format"]]],[11,"clone","","",41,[[["self"]],["intersperse"]]],[11,"clone","","",42,[[["self"]],["kmerge"]]],[11,"clone","itertools","",2,[[["self"]],["minmaxresult"]]],[11,"clone","itertools::structs","",9,[[["self"]],["multipeek"]]],[11,"clone","","",45,[[["self"]],["padusing"]]],[11,"clone","","",10,[[["self"]],["putbackn"]]],[11,"clone","","",6,[[["self"]],["rciter"]]],[11,"clone","","",7,[[["self"]],["unfold"]]],[11,"clone","","",50,[[["self"]],["iterate"]]],[11,"clone","","",55,[[["self"]],["uniqueby"]]],[11,"clone","","",54,[[["self"]],["unique"]]],[11,"clone","itertools","",3,[[["self"]],["position"]]],[11,"clone","itertools::structs","",57,[[["self"]],["zipeq"]]],[11,"clone","","",58,[[["self"]],["ziplongest"]]],[11,"clone","","",59,[[["self"]],["zip"]]],[11,"clone","itertools","",5,[[["self"]],["foldwhile"]]],[11,"from","itertools::structs","",59,N],[11,"from","","",59,N],[11,"from","","",59,N],[11,"from","","",59,N],[11,"from","","",59,N],[11,"from","","",59,N],[11,"from","","",59,N],[11,"from","","",59,N],[11,"drop","","",39,[[["self"]]]],[11,"drop","","",36,[[["self"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools::structs","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools::structs","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools::structs","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools::structs","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"is_left","itertools","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]]],"paths":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"PutBack"],[3,"MultiPeek"],[3,"PutBackN"],[3,"Tuples"],[8,"PeekingNext"],[8,"Itertools"],[3,"Dedup"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Product"],[3,"Batching"],[3,"Step"],[3,"MapResults"],[3,"Merge"],[3,"MergeBy"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Coalesce"],[3,"TupleCombinations"],[3,"Flatten"],[3,"Positions"],[3,"Update"],[3,"MultiProduct"],[3,"Combinations"],[3,"ConsTuples"],[3,"Format"],[3,"FormatWith"],[3,"IntoChunks"],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,"Intersperse"],[3,"KMerge"],[3,"KMergeBy"],[3,"MergeJoinBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"ProcessResults"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"TupleWindows"],[3,"Unique"],[3,"UniqueBy"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"]]};
searchIndex["itoa"]={"doc":"","items":[[3,"Buffer","itoa","A safe API for formatting integers to text.",N,N],[5,"write","","Write integer to an `io::Write`.",N,[[["w"],["v"]],["result",["usize"]]]],[5,"fmt","","Write integer to an `fmt::Write`.",N,[[["w"],["v"]],["result"]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",N,N],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["buffer"]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["self"],["i"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["buffer"]]],[11,"clone","","",0,[[["self"]],["self"]]]],"paths":[[3,"Buffer"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["lazycell"]={"doc":"This crate provides a `LazyCell` struct which acts as a…","items":[[3,"LazyCell","lazycell","A lazily filled `Cell`, with mutable contents.",N,N],[3,"AtomicLazyCell","","A lazily filled and thread-safe `Cell`, with frozen…",N,N],[11,"new","","Creates a new, empty, `LazyCell`.",0,[[],["lazycell"]]],[11,"fill","","Put a value into this cell.",0,[[["self"],["t"]],["result"]]],[11,"replace","","Put a value into this cell.",0,[[["self"],["t"]],["option"]]],[11,"filled","","Test whether this cell has been previously filled.",0,[[["self"]],["bool"]]],[11,"borrow","","Borrows the contents of this lazy cell for the duration of…",0,[[["self"]],["option"]]],[11,"borrow_mut","","Borrows the contents of this lazy cell mutably for the…",0,[[["self"]],["option"]]],[11,"borrow_with","","Borrows the contents of this lazy cell for the duration of…",0,[[["self"],["f"]],["t"]]],[11,"borrow_mut_with","","Borrows the contents of this `LazyCell` mutably for the…",0,[[["self"],["f"]],["t"]]],[11,"try_borrow_with","","Same as `borrow_with`, but allows the initializing…",0,[[["self"],["f"]],["result"]]],[11,"try_borrow_mut_with","","Same as `borrow_mut_with`, but allows the initializing…",0,[[["self"],["f"]],["result"]]],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",0,[[["self"]],["option"]]],[11,"get","","Returns a copy of the contents of the lazy cell.",0,[[["self"]],["option"]]],[18,"NONE","","An empty `AtomicLazyCell`.",1,N],[11,"new","","Creates a new, empty, `AtomicLazyCell`.",1,[[],["atomiclazycell"]]],[11,"fill","","Put a value into this cell.",1,[[["self"],["t"]],["result"]]],[11,"replace","","Put a value into this cell.",1,[[["self"],["t"]],["option"]]],[11,"filled","","Test whether this cell has been previously filled.",1,[[["self"]],["bool"]]],[11,"borrow","","Borrows the contents of this lazy cell for the duration of…",1,[[["self"]],["option"]]],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",1,[[["self"]],["option"]]],[11,"get","","Returns a copy of the contents of the lazy cell.",1,[[["self"]],["option"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"default","","",0,[[],["lazycell"]]],[11,"default","","",1,[[],["atomiclazycell"]]]],"paths":[[3,"LazyCell"],[3,"AtomicLazyCell"]]};
searchIndex["libc"]={"doc":"Crate docs","items":[[3,"group","libc","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"in_addr","","",N,N],[12,"s_addr","","",6,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",7,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",8,N],[12,"imr_interface","","",8,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",9,N],[12,"ipv6mr_interface","","",9,N],[3,"hostent","","",N,N],[12,"h_name","","",10,N],[12,"h_aliases","","",10,N],[12,"h_addrtype","","",10,N],[12,"h_length","","",10,N],[12,"h_addr_list","","",10,N],[3,"iovec","","",N,N],[12,"iov_base","","",11,N],[12,"iov_len","","",11,N],[3,"pollfd","","",N,N],[12,"fd","","",12,N],[12,"events","","",12,N],[12,"revents","","",12,N],[3,"winsize","","",N,N],[12,"ws_row","","",13,N],[12,"ws_col","","",13,N],[12,"ws_xpixel","","",13,N],[12,"ws_ypixel","","",13,N],[3,"linger","","",N,N],[12,"l_onoff","","",14,N],[12,"l_linger","","",14,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",15,N],[3,"itimerval","","",N,N],[12,"it_interval","","",16,N],[12,"it_value","","",16,N],[3,"tms","","",N,N],[12,"tms_utime","","",17,N],[12,"tms_stime","","",17,N],[12,"tms_cutime","","",17,N],[12,"tms_cstime","","",17,N],[3,"servent","","",N,N],[12,"s_name","","",18,N],[12,"s_aliases","","",18,N],[12,"s_port","","",18,N],[12,"s_proto","","",18,N],[3,"protoent","","",N,N],[12,"p_name","","",19,N],[12,"p_aliases","","",19,N],[12,"p_proto","","",19,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",20,N],[12,"sa_data","","",20,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",21,N],[12,"sin_port","","",21,N],[12,"sin_addr","","",21,N],[12,"sin_zero","","",21,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",22,N],[12,"sin6_port","","",22,N],[12,"sin6_flowinfo","","",22,N],[12,"sin6_addr","","",22,N],[12,"sin6_scope_id","","",22,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",23,N],[12,"sun_path","","",23,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",24,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",25,N],[12,"ai_family","","",25,N],[12,"ai_socktype","","",25,N],[12,"ai_protocol","","",25,N],[12,"ai_addrlen","","",25,N],[12,"ai_addr","","",25,N],[12,"ai_canonname","","",25,N],[12,"ai_next","","",25,N],[3,"sockaddr_nl","","",N,N],[12,"nl_family","","",26,N],[12,"nl_pid","","",26,N],[12,"nl_groups","","",26,N],[3,"sockaddr_ll","","",N,N],[12,"sll_family","","",27,N],[12,"sll_protocol","","",27,N],[12,"sll_ifindex","","",27,N],[12,"sll_hatype","","",27,N],[12,"sll_pkttype","","",27,N],[12,"sll_halen","","",27,N],[12,"sll_addr","","",27,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",28,N],[12,"tm_min","","",28,N],[12,"tm_hour","","",28,N],[12,"tm_mday","","",28,N],[12,"tm_mon","","",28,N],[12,"tm_year","","",28,N],[12,"tm_wday","","",28,N],[12,"tm_yday","","",28,N],[12,"tm_isdst","","",28,N],[12,"tm_gmtoff","","",28,N],[12,"tm_zone","","",28,N],[3,"sched_param","","",N,N],[12,"sched_priority","","",29,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",30,N],[12,"dli_fbase","","",30,N],[12,"dli_sname","","",30,N],[12,"dli_saddr","","",30,N],[3,"epoll_event","","",N,N],[12,"events","","",31,N],[12,"u64","","",31,N],[3,"utsname","","",N,N],[12,"sysname","","",32,N],[12,"nodename","","",32,N],[12,"release","","",32,N],[12,"version","","",32,N],[12,"machine","","",32,N],[12,"domainname","","",32,N],[3,"lconv","","",N,N],[12,"decimal_point","","",33,N],[12,"thousands_sep","","",33,N],[12,"grouping","","",33,N],[12,"int_curr_symbol","","",33,N],[12,"currency_symbol","","",33,N],[12,"mon_decimal_point","","",33,N],[12,"mon_thousands_sep","","",33,N],[12,"mon_grouping","","",33,N],[12,"positive_sign","","",33,N],[12,"negative_sign","","",33,N],[12,"int_frac_digits","","",33,N],[12,"frac_digits","","",33,N],[12,"p_cs_precedes","","",33,N],[12,"p_sep_by_space","","",33,N],[12,"n_cs_precedes","","",33,N],[12,"n_sep_by_space","","",33,N],[12,"p_sign_posn","","",33,N],[12,"n_sign_posn","","",33,N],[12,"int_p_cs_precedes","","",33,N],[12,"int_p_sep_by_space","","",33,N],[12,"int_n_cs_precedes","","",33,N],[12,"int_n_sep_by_space","","",33,N],[12,"int_p_sign_posn","","",33,N],[12,"int_n_sign_posn","","",33,N],[3,"sigevent","","",N,N],[12,"sigev_value","","",34,N],[12,"sigev_signo","","",34,N],[12,"sigev_notify","","",34,N],[12,"sigev_notify_thread_id","","",34,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",35,N],[12,"ipi_spec_dst","","",35,N],[12,"ipi_addr","","",35,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",36,N],[12,"ifa_name","","",36,N],[12,"ifa_flags","","",36,N],[12,"ifa_addr","","",36,N],[12,"ifa_netmask","","",36,N],[12,"ifa_ifu","","",36,N],[12,"ifa_data","","",36,N],[3,"in6_rtmsg","","",N,N],[3,"arpreq","","",N,N],[12,"arp_pa","","",37,N],[12,"arp_ha","","",37,N],[12,"arp_flags","","",37,N],[12,"arp_netmask","","",37,N],[12,"arp_dev","","",37,N],[3,"arpreq_old","","",N,N],[12,"arp_pa","","",38,N],[12,"arp_ha","","",38,N],[12,"arp_flags","","",38,N],[12,"arp_netmask","","",38,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",39,N],[12,"ar_pro","","",39,N],[12,"ar_hln","","",39,N],[12,"ar_pln","","",39,N],[12,"ar_op","","",39,N],[3,"dirent","","",N,N],[12,"d_ino","","",40,N],[12,"d_off","","",40,N],[12,"d_reclen","","",40,N],[12,"d_type","","",40,N],[12,"d_name","","",40,N],[3,"dirent64","","",N,N],[12,"d_ino","","",41,N],[12,"d_off","","",41,N],[12,"d_reclen","","",41,N],[12,"d_type","","",41,N],[12,"d_name","","",41,N],[3,"rlimit64","","",N,N],[12,"rlim_cur","","",42,N],[12,"rlim_max","","",42,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",43,N],[12,"gl_pathv","","",43,N],[12,"gl_offs","","",43,N],[12,"gl_flags","","",43,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"passwd","","",N,N],[12,"pw_name","","",44,N],[12,"pw_passwd","","",44,N],[12,"pw_uid","","",44,N],[12,"pw_gid","","",44,N],[12,"pw_gecos","","",44,N],[12,"pw_dir","","",44,N],[12,"pw_shell","","",44,N],[3,"spwd","","",N,N],[12,"sp_namp","","",45,N],[12,"sp_pwdp","","",45,N],[12,"sp_lstchg","","",45,N],[12,"sp_min","","",45,N],[12,"sp_max","","",45,N],[12,"sp_warn","","",45,N],[12,"sp_inact","","",45,N],[12,"sp_expire","","",45,N],[12,"sp_flag","","",45,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",46,N],[12,"dqb_bsoftlimit","","",46,N],[12,"dqb_curspace","","",46,N],[12,"dqb_ihardlimit","","",46,N],[12,"dqb_isoftlimit","","",46,N],[12,"dqb_curinodes","","",46,N],[12,"dqb_btime","","",46,N],[12,"dqb_itime","","",46,N],[12,"dqb_valid","","",46,N],[3,"signalfd_siginfo","","",N,N],[12,"ssi_signo","","",47,N],[12,"ssi_errno","","",47,N],[12,"ssi_code","","",47,N],[12,"ssi_pid","","",47,N],[12,"ssi_uid","","",47,N],[12,"ssi_fd","","",47,N],[12,"ssi_tid","","",47,N],[12,"ssi_band","","",47,N],[12,"ssi_overrun","","",47,N],[12,"ssi_trapno","","",47,N],[12,"ssi_status","","",47,N],[12,"ssi_int","","",47,N],[12,"ssi_ptr","","",47,N],[12,"ssi_utime","","",47,N],[12,"ssi_stime","","",47,N],[12,"ssi_addr","","",47,N],[3,"itimerspec","","",N,N],[12,"it_interval","","",48,N],[12,"it_value","","",48,N],[3,"fsid_t","","",N,N],[3,"mq_attr","","",N,N],[12,"mq_flags","","",49,N],[12,"mq_maxmsg","","",49,N],[12,"mq_msgsize","","",49,N],[12,"mq_curmsgs","","",49,N],[3,"packet_mreq","","",N,N],[12,"mr_ifindex","","",50,N],[12,"mr_type","","",50,N],[12,"mr_alen","","",50,N],[12,"mr_address","","",50,N],[3,"cpu_set_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",51,N],[12,"if_name","","",51,N],[3,"msginfo","","",N,N],[12,"msgpool","","",52,N],[12,"msgmap","","",52,N],[12,"msgmax","","",52,N],[12,"msgmnb","","",52,N],[12,"msgmni","","",52,N],[12,"msgssz","","",52,N],[12,"msgtql","","",52,N],[12,"msgseg","","",52,N],[3,"mmsghdr","","",N,N],[12,"msg_hdr","","",53,N],[12,"msg_len","","",53,N],[3,"sembuf","","",N,N],[12,"sem_num","","",54,N],[12,"sem_op","","",54,N],[12,"sem_flg","","",54,N],[3,"input_event","","",N,N],[12,"time","","",55,N],[12,"type_","","",55,N],[12,"code","","",55,N],[12,"value","","",55,N],[3,"input_id","","",N,N],[12,"bustype","","",56,N],[12,"vendor","","",56,N],[12,"product","","",56,N],[12,"version","","",56,N],[3,"input_absinfo","","",N,N],[12,"value","","",57,N],[12,"minimum","","",57,N],[12,"maximum","","",57,N],[12,"fuzz","","",57,N],[12,"flat","","",57,N],[12,"resolution","","",57,N],[3,"input_keymap_entry","","",N,N],[12,"flags","","",58,N],[12,"len","","",58,N],[12,"index","","",58,N],[12,"keycode","","",58,N],[12,"scancode","","",58,N],[3,"input_mask","","",N,N],[12,"type_","","",59,N],[12,"codes_size","","",59,N],[12,"codes_ptr","","",59,N],[3,"ff_replay","","",N,N],[12,"length","","",60,N],[12,"delay","","",60,N],[3,"ff_trigger","","",N,N],[12,"button","","",61,N],[12,"interval","","",61,N],[3,"ff_envelope","","",N,N],[12,"attack_length","","",62,N],[12,"attack_level","","",62,N],[12,"fade_length","","",62,N],[12,"fade_level","","",62,N],[3,"ff_constant_effect","","",N,N],[12,"level","","",63,N],[12,"envelope","","",63,N],[3,"ff_ramp_effect","","",N,N],[12,"start_level","","",64,N],[12,"end_level","","",64,N],[12,"envelope","","",64,N],[3,"ff_condition_effect","","",N,N],[12,"right_saturation","","",65,N],[12,"left_saturation","","",65,N],[12,"right_coeff","","",65,N],[12,"left_coeff","","",65,N],[12,"deadband","","",65,N],[12,"center","","",65,N],[3,"ff_periodic_effect","","",N,N],[12,"waveform","","",66,N],[12,"period","","",66,N],[12,"magnitude","","",66,N],[12,"offset","","",66,N],[12,"phase","","",66,N],[12,"envelope","","",66,N],[12,"custom_len","","",66,N],[12,"custom_data","","",66,N],[3,"ff_rumble_effect","","",N,N],[12,"strong_magnitude","","",67,N],[12,"weak_magnitude","","",67,N],[3,"ff_effect","","",N,N],[12,"type_","","",68,N],[12,"id","","",68,N],[12,"direction","","",68,N],[12,"trigger","","",68,N],[12,"replay","","",68,N],[12,"u","","",68,N],[3,"dl_phdr_info","","",N,N],[12,"dlpi_addr","","",69,N],[12,"dlpi_name","","",69,N],[12,"dlpi_phdr","","",69,N],[12,"dlpi_phnum","","",69,N],[12,"dlpi_adds","","",69,N],[12,"dlpi_subs","","",69,N],[12,"dlpi_tls_modid","","",69,N],[12,"dlpi_tls_data","","",69,N],[3,"Elf32_Phdr","","",N,N],[12,"p_type","","",70,N],[12,"p_offset","","",70,N],[12,"p_vaddr","","",70,N],[12,"p_paddr","","",70,N],[12,"p_filesz","","",70,N],[12,"p_memsz","","",70,N],[12,"p_flags","","",70,N],[12,"p_align","","",70,N],[3,"Elf64_Phdr","","",N,N],[12,"p_type","","",71,N],[12,"p_flags","","",71,N],[12,"p_offset","","",71,N],[12,"p_vaddr","","",71,N],[12,"p_paddr","","",71,N],[12,"p_filesz","","",71,N],[12,"p_memsz","","",71,N],[12,"p_align","","",71,N],[3,"ucred","","",N,N],[12,"pid","","",72,N],[12,"uid","","",72,N],[12,"gid","","",72,N],[3,"mntent","","",N,N],[12,"mnt_fsname","","",73,N],[12,"mnt_dir","","",73,N],[12,"mnt_type","","",73,N],[12,"mnt_opts","","",73,N],[12,"mnt_freq","","",73,N],[12,"mnt_passno","","",73,N],[3,"posix_spawn_file_actions_t","","",N,N],[3,"posix_spawnattr_t","","",N,N],[3,"genlmsghdr","","",N,N],[12,"cmd","","",74,N],[12,"version","","",74,N],[12,"reserved","","",74,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",75,N],[12,"ipi6_ifindex","","",75,N],[3,"arpd_request","","",N,N],[12,"req","","",76,N],[12,"ip","","",76,N],[12,"dev","","",76,N],[12,"stamp","","",76,N],[12,"updated","","",76,N],[12,"ha","","",76,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",77,N],[12,"aio_lio_opcode","","",77,N],[12,"aio_reqprio","","",77,N],[12,"aio_buf","","",77,N],[12,"aio_nbytes","","",77,N],[12,"aio_sigevent","","",77,N],[12,"aio_offset","","",77,N],[3,"__exit_status","","",N,N],[12,"e_termination","","",78,N],[12,"e_exit","","",78,N],[3,"__timeval","","",N,N],[12,"tv_sec","","",79,N],[12,"tv_usec","","",79,N],[3,"utmpx","","",N,N],[12,"ut_type","","",80,N],[12,"ut_pid","","",80,N],[12,"ut_line","","",80,N],[12,"ut_id","","",80,N],[12,"ut_user","","",80,N],[12,"ut_host","","",80,N],[12,"ut_exit","","",80,N],[12,"ut_session","","",80,N],[12,"ut_tv","","",80,N],[12,"ut_addr_v6","","",80,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",81,N],[12,"sa_mask","","",81,N],[12,"sa_flags","","",81,N],[12,"sa_restorer","","",81,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",82,N],[12,"ss_flags","","",82,N],[12,"ss_size","","",82,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",83,N],[12,"si_errno","","",83,N],[12,"si_code","","",83,N],[12,"_pad","","",83,N],[3,"glob64_t","","",N,N],[12,"gl_pathc","","",84,N],[12,"gl_pathv","","",84,N],[12,"gl_offs","","",84,N],[12,"gl_flags","","",84,N],[3,"statfs","","",N,N],[12,"f_type","","",85,N],[12,"f_bsize","","",85,N],[12,"f_blocks","","",85,N],[12,"f_bfree","","",85,N],[12,"f_bavail","","",85,N],[12,"f_files","","",85,N],[12,"f_ffree","","",85,N],[12,"f_fsid","","",85,N],[12,"f_namelen","","",85,N],[12,"f_frsize","","",85,N],[3,"msghdr","","",N,N],[12,"msg_name","","",86,N],[12,"msg_namelen","","",86,N],[12,"msg_iov","","",86,N],[12,"msg_iovlen","","",86,N],[12,"msg_control","","",86,N],[12,"msg_controllen","","",86,N],[12,"msg_flags","","",86,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",87,N],[12,"cmsg_level","","",87,N],[12,"cmsg_type","","",87,N],[3,"termios","","",N,N],[12,"c_iflag","","",88,N],[12,"c_oflag","","",88,N],[12,"c_cflag","","",88,N],[12,"c_lflag","","",88,N],[12,"c_line","","",88,N],[12,"c_cc","","",88,N],[12,"c_ispeed","","",88,N],[12,"c_ospeed","","",88,N],[3,"flock","","",N,N],[12,"l_type","","",89,N],[12,"l_whence","","",89,N],[12,"l_start","","",89,N],[12,"l_len","","",89,N],[12,"l_pid","","",89,N],[3,"sem_t","","",N,N],[3,"mallinfo","","",N,N],[12,"arena","","",90,N],[12,"ordblks","","",90,N],[12,"smblks","","",90,N],[12,"hblks","","",90,N],[12,"hblkhd","","",90,N],[12,"usmblks","","",90,N],[12,"fsmblks","","",90,N],[12,"uordblks","","",90,N],[12,"fordblks","","",90,N],[12,"keepcost","","",90,N],[3,"nlmsghdr","","",N,N],[12,"nlmsg_len","","",91,N],[12,"nlmsg_type","","",91,N],[12,"nlmsg_flags","","",91,N],[12,"nlmsg_seq","","",91,N],[12,"nlmsg_pid","","",91,N],[3,"nlmsgerr","","",N,N],[12,"error","","",92,N],[12,"msg","","",92,N],[3,"nl_pktinfo","","",N,N],[12,"group","","",93,N],[3,"nl_mmap_req","","",N,N],[12,"nm_block_size","","",94,N],[12,"nm_block_nr","","",94,N],[12,"nm_frame_size","","",94,N],[12,"nm_frame_nr","","",94,N],[3,"nl_mmap_hdr","","",N,N],[12,"nm_status","","",95,N],[12,"nm_len","","",95,N],[12,"nm_group","","",95,N],[12,"nm_pid","","",95,N],[12,"nm_uid","","",95,N],[12,"nm_gid","","",95,N],[3,"nlattr","","",N,N],[12,"nla_len","","",96,N],[12,"nla_type","","",96,N],[3,"rtentry","","",N,N],[12,"rt_pad1","","",97,N],[12,"rt_dst","","",97,N],[12,"rt_gateway","","",97,N],[12,"rt_genmask","","",97,N],[12,"rt_flags","","",97,N],[12,"rt_pad2","","",97,N],[12,"rt_pad3","","",97,N],[12,"rt_tos","","",97,N],[12,"rt_class","","",97,N],[12,"rt_pad4","","",97,N],[12,"rt_metric","","",97,N],[12,"rt_dev","","",97,N],[12,"rt_mtu","","",97,N],[12,"rt_window","","",97,N],[12,"rt_irtt","","",97,N],[3,"sigset_t","","",N,N],[3,"sysinfo","","",N,N],[12,"uptime","","",98,N],[12,"loads","","",98,N],[12,"totalram","","",98,N],[12,"freeram","","",98,N],[12,"sharedram","","",98,N],[12,"bufferram","","",98,N],[12,"totalswap","","",98,N],[12,"freeswap","","",98,N],[12,"procs","","",98,N],[12,"pad","","",98,N],[12,"totalhigh","","",98,N],[12,"freehigh","","",98,N],[12,"mem_unit","","",98,N],[12,"_f","","",98,N],[3,"msqid_ds","","",N,N],[12,"msg_perm","","",99,N],[12,"msg_stime","","",99,N],[12,"msg_rtime","","",99,N],[12,"msg_ctime","","",99,N],[12,"msg_qnum","","",99,N],[12,"msg_qbytes","","",99,N],[12,"msg_lspid","","",99,N],[12,"msg_lrpid","","",99,N],[3,"stat","","",N,N],[12,"st_dev","","",100,N],[12,"st_ino","","",100,N],[12,"st_nlink","","",100,N],[12,"st_mode","","",100,N],[12,"st_uid","","",100,N],[12,"st_gid","","",100,N],[12,"st_rdev","","",100,N],[12,"st_size","","",100,N],[12,"st_blksize","","",100,N],[12,"st_blocks","","",100,N],[12,"st_atime","","",100,N],[12,"st_atime_nsec","","",100,N],[12,"st_mtime","","",100,N],[12,"st_mtime_nsec","","",100,N],[12,"st_ctime","","",100,N],[12,"st_ctime_nsec","","",100,N],[3,"stat64","","",N,N],[12,"st_dev","","",101,N],[12,"st_ino","","",101,N],[12,"st_nlink","","",101,N],[12,"st_mode","","",101,N],[12,"st_uid","","",101,N],[12,"st_gid","","",101,N],[12,"st_rdev","","",101,N],[12,"st_size","","",101,N],[12,"st_blksize","","",101,N],[12,"st_blocks","","",101,N],[12,"st_atime","","",101,N],[12,"st_atime_nsec","","",101,N],[12,"st_mtime","","",101,N],[12,"st_mtime_nsec","","",101,N],[12,"st_ctime","","",101,N],[12,"st_ctime_nsec","","",101,N],[3,"statfs64","","",N,N],[12,"f_type","","",102,N],[12,"f_bsize","","",102,N],[12,"f_blocks","","",102,N],[12,"f_bfree","","",102,N],[12,"f_bavail","","",102,N],[12,"f_files","","",102,N],[12,"f_ffree","","",102,N],[12,"f_fsid","","",102,N],[12,"f_namelen","","",102,N],[12,"f_frsize","","",102,N],[12,"f_flags","","",102,N],[12,"f_spare","","",102,N],[3,"statvfs64","","",N,N],[12,"f_bsize","","",103,N],[12,"f_frsize","","",103,N],[12,"f_blocks","","",103,N],[12,"f_bfree","","",103,N],[12,"f_bavail","","",103,N],[12,"f_files","","",103,N],[12,"f_ffree","","",103,N],[12,"f_favail","","",103,N],[12,"f_fsid","","",103,N],[12,"f_flag","","",103,N],[12,"f_namemax","","",103,N],[3,"pthread_attr_t","","",N,N],[3,"_libc_fpxreg","","",N,N],[12,"significand","","",104,N],[12,"exponent","","",104,N],[3,"_libc_xmmreg","","",N,N],[12,"element","","",105,N],[3,"_libc_fpstate","","",N,N],[12,"cwd","","",106,N],[12,"swd","","",106,N],[12,"ftw","","",106,N],[12,"fop","","",106,N],[12,"rip","","",106,N],[12,"rdp","","",106,N],[12,"mxcsr","","",106,N],[12,"mxcr_mask","","",106,N],[12,"_st","","",106,N],[12,"_xmm","","",106,N],[3,"user_fpregs_struct","","",N,N],[12,"cwd","","",107,N],[12,"swd","","",107,N],[12,"ftw","","",107,N],[12,"fop","","",107,N],[12,"rip","","",107,N],[12,"rdp","","",107,N],[12,"mxcsr","","",107,N],[12,"mxcr_mask","","",107,N],[12,"st_space","","",107,N],[12,"xmm_space","","",107,N],[3,"user_regs_struct","","",N,N],[12,"r15","","",108,N],[12,"r14","","",108,N],[12,"r13","","",108,N],[12,"r12","","",108,N],[12,"rbp","","",108,N],[12,"rbx","","",108,N],[12,"r11","","",108,N],[12,"r10","","",108,N],[12,"r9","","",108,N],[12,"r8","","",108,N],[12,"rax","","",108,N],[12,"rcx","","",108,N],[12,"rdx","","",108,N],[12,"rsi","","",108,N],[12,"rdi","","",108,N],[12,"orig_rax","","",108,N],[12,"rip","","",108,N],[12,"cs","","",108,N],[12,"eflags","","",108,N],[12,"rsp","","",108,N],[12,"ss","","",108,N],[12,"fs_base","","",108,N],[12,"gs_base","","",108,N],[12,"ds","","",108,N],[12,"es","","",108,N],[12,"fs","","",108,N],[12,"gs","","",108,N],[3,"user","","",N,N],[12,"regs","","",109,N],[12,"u_fpvalid","","",109,N],[12,"i387","","",109,N],[12,"u_tsize","","",109,N],[12,"u_dsize","","",109,N],[12,"u_ssize","","",109,N],[12,"start_code","","",109,N],[12,"start_stack","","",109,N],[12,"signal","","",109,N],[12,"u_ar0","","",109,N],[12,"u_fpstate","","",109,N],[12,"magic","","",109,N],[12,"u_comm","","",109,N],[12,"u_debugreg","","",109,N],[3,"mcontext_t","","",N,N],[12,"gregs","","",110,N],[12,"fpregs","","",110,N],[3,"ucontext_t","","",N,N],[12,"uc_flags","","",111,N],[12,"uc_link","","",111,N],[12,"uc_stack","","",111,N],[12,"uc_mcontext","","",111,N],[12,"uc_sigmask","","",111,N],[3,"ipc_perm","","",N,N],[12,"__key","","",112,N],[12,"uid","","",112,N],[12,"gid","","",112,N],[12,"cuid","","",112,N],[12,"cgid","","",112,N],[12,"mode","","",112,N],[12,"__seq","","",112,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",113,N],[12,"shm_segsz","","",113,N],[12,"shm_atime","","",113,N],[12,"shm_dtime","","",113,N],[12,"shm_ctime","","",113,N],[12,"shm_cpid","","",113,N],[12,"shm_lpid","","",113,N],[12,"shm_nattch","","",113,N],[3,"termios2","","",N,N],[12,"c_iflag","","",114,N],[12,"c_oflag","","",114,N],[12,"c_cflag","","",114,N],[12,"c_lflag","","",114,N],[12,"c_line","","",114,N],[12,"c_cc","","",114,N],[12,"c_ispeed","","",114,N],[12,"c_ospeed","","",114,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",115,N],[12,"f_frsize","","",115,N],[12,"f_blocks","","",115,N],[12,"f_bfree","","",115,N],[12,"f_bavail","","",115,N],[12,"f_files","","",115,N],[12,"f_ffree","","",115,N],[12,"f_favail","","",115,N],[12,"f_fsid","","",115,N],[12,"f_flag","","",115,N],[12,"f_namemax","","",115,N],[4,"c_void","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"timezone","","",N,N],[4,"fpos64_t","","",N,N],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",N,[[["u8"]],["u8"]]],[5,"CPU_ZERO","","",N,N],[5,"CPU_SET","","",N,N],[5,"CPU_CLR","","",N,N],[5,"CPU_ISSET","","",N,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",N,[[["cpu_set_t"],["cpu_set_t"]],["bool"]]],[5,"major","","",N,[[["dev_t"]],["c_uint"]]],[5,"minor","","",N,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",N,[[["c_uint"],["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",N,[[["u8"]],["u8"]]],[5,"RT_TOS","","",N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN","","",N,[[["c_int"]],["c_int"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"uname","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"sem_init","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"cfsetspeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"fdatasync","","",N,N],[5,"mincore","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"clock_settime","","",N,N],[5,"dirfd","","",N,N],[5,"pthread_getattr_np","","",N,N],[5,"pthread_attr_getstack","","",N,N],[5,"memalign","","",N,N],[5,"setgroups","","",N,N],[5,"pipe2","","",N,N],[5,"statfs","","",N,N],[5,"statfs64","","",N,N],[5,"fstatfs","","",N,N],[5,"fstatfs64","","",N,N],[5,"statvfs64","","",N,N],[5,"fstatvfs64","","",N,N],[5,"memrchr","","",N,N],[5,"posix_fadvise","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"creat64","","",N,N],[5,"fstat64","","",N,N],[5,"fstatat64","","",N,N],[5,"ftruncate64","","",N,N],[5,"getrlimit64","","",N,N],[5,"lseek64","","",N,N],[5,"lstat64","","",N,N],[5,"mmap64","","",N,N],[5,"open64","","",N,N],[5,"openat64","","",N,N],[5,"pread64","","",N,N],[5,"preadv64","","",N,N],[5,"pwrite64","","",N,N],[5,"pwritev64","","",N,N],[5,"readdir64","","",N,N],[5,"readdir64_r","","",N,N],[5,"setrlimit64","","",N,N],[5,"stat64","","",N,N],[5,"truncate64","","",N,N],[5,"mknodat","","",N,N],[5,"pthread_condattr_getclock","","",N,N],[5,"pthread_condattr_setclock","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"accept4","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"ptsname_r","","",N,N],[5,"clearenv","","",N,N],[5,"waitid","","",N,N],[5,"setreuid","","",N,N],[5,"setregid","","",N,N],[5,"getresuid","","",N,N],[5,"getresgid","","",N,N],[5,"acct","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"vfork","","",N,N],[5,"setresgid","","",N,N],[5,"setresuid","","",N,N],[5,"wait4","","",N,N],[5,"openpty","","",N,N],[5,"execvpe","","",N,N],[5,"fexecve","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"lio_listio","","",N,N],[5,"lutimes","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"getpwent","","",N,N],[5,"setgrent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"setspent","","",N,N],[5,"endspent","","",N,N],[5,"getspent","","",N,N],[5,"getspnam","","",N,N],[5,"shm_open","","",N,N],[5,"shmget","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"ftok","","",N,N],[5,"semget","","",N,N],[5,"semop","","",N,N],[5,"semctl","","",N,N],[5,"msgctl","","",N,N],[5,"msgget","","",N,N],[5,"msgrcv","","",N,N],[5,"msgsnd","","",N,N],[5,"mprotect","","",N,N],[5,"__errno_location","","",N,N],[5,"fopen64","","",N,N],[5,"freopen64","","",N,N],[5,"tmpfile64","","",N,N],[5,"fgetpos64","","",N,N],[5,"fsetpos64","","",N,N],[5,"fseeko64","","",N,N],[5,"ftello64","","",N,N],[5,"fallocate","","",N,N],[5,"posix_fallocate","","",N,N],[5,"readahead","","",N,N],[5,"getxattr","","",N,N],[5,"lgetxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"lsetxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"llistxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"lremovexattr","","",N,N],[5,"fremovexattr","","",N,N],[5,"signalfd","","",N,N],[5,"timerfd_create","","",N,N],[5,"timerfd_gettime","","",N,N],[5,"timerfd_settime","","",N,N],[5,"pwritev","","",N,N],[5,"preadv","","",N,N],[5,"quotactl","","",N,N],[5,"mq_open","","",N,N],[5,"mq_close","","",N,N],[5,"mq_unlink","","",N,N],[5,"mq_receive","","",N,N],[5,"mq_send","","",N,N],[5,"mq_getattr","","",N,N],[5,"mq_setattr","","",N,N],[5,"epoll_pwait","","",N,N],[5,"dup3","","",N,N],[5,"mkostemp","","",N,N],[5,"mkostemps","","",N,N],[5,"sigtimedwait","","",N,N],[5,"sigwaitinfo","","",N,N],[5,"nl_langinfo_l","","",N,N],[5,"getnameinfo","","",N,N],[5,"pthread_setschedprio","","",N,N],[5,"prlimit","","",N,N],[5,"prlimit64","","",N,N],[5,"getloadavg","","",N,N],[5,"process_vm_readv","","",N,N],[5,"process_vm_writev","","",N,N],[5,"reboot","","",N,N],[5,"setfsgid","","",N,N],[5,"setfsuid","","",N,N],[5,"mkfifoat","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"sync_file_range","","",N,N],[5,"mremap","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"remap_file_pages","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"vhangup","","",N,N],[5,"sendmmsg","","",N,N],[5,"recvmmsg","","",N,N],[5,"sync","","",N,N],[5,"syscall","","",N,N],[5,"sched_getaffinity","","",N,N],[5,"sched_setaffinity","","",N,N],[5,"epoll_create","","",N,N],[5,"epoll_create1","","",N,N],[5,"epoll_wait","","",N,N],[5,"epoll_ctl","","",N,N],[5,"pthread_getschedparam","","",N,N],[5,"unshare","","",N,N],[5,"umount","","",N,N],[5,"sched_get_priority_max","","",N,N],[5,"tee","","",N,N],[5,"settimeofday","","",N,N],[5,"splice","","",N,N],[5,"eventfd","","",N,N],[5,"sched_rr_get_interval","","",N,N],[5,"sem_timedwait","","",N,N],[5,"sem_getvalue","","",N,N],[5,"sched_setparam","","",N,N],[5,"setns","","",N,N],[5,"swapoff","","",N,N],[5,"vmsplice","","",N,N],[5,"mount","","",N,N],[5,"personality","","",N,N],[5,"prctl","","",N,N],[5,"sched_getparam","","",N,N],[5,"ppoll","","",N,N],[5,"pthread_mutex_timedlock","","",N,N],[5,"clone","","",N,N],[5,"sched_getscheduler","","",N,N],[5,"clock_nanosleep","","",N,N],[5,"pthread_attr_getguardsize","","",N,N],[5,"sethostname","","",N,N],[5,"sched_get_priority_min","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"sysinfo","","",N,N],[5,"umount2","","",N,N],[5,"pthread_setschedparam","","",N,N],[5,"swapon","","",N,N],[5,"sched_setscheduler","","",N,N],[5,"sendfile","","",N,N],[5,"sigsuspend","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"initgroups","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"daemon","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"getgrouplist","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"dl_iterate_phdr","","",N,N],[5,"setmntent","","",N,N],[5,"getmntent","","",N,N],[5,"addmntent","","",N,N],[5,"endmntent","","",N,N],[5,"hasmntopt","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawnattr_getschedpolicy","","",N,N],[5,"posix_spawnattr_setschedpolicy","","",N,N],[5,"posix_spawnattr_getschedparam","","",N,N],[5,"posix_spawnattr_setschedparam","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"fread_unlocked","","",N,N],[5,"utmpxname","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"getpt","","",N,N],[5,"ioctl","","",N,N],[5,"backtrace","","",N,N],[5,"glob64","","",N,N],[5,"globfree64","","",N,N],[5,"ptrace","","",N,N],[5,"pthread_attr_getaffinity_np","","",N,N],[5,"pthread_attr_setaffinity_np","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"pthread_getaffinity_np","","",N,N],[5,"pthread_setaffinity_np","","",N,N],[5,"pthread_rwlockattr_getkind_np","","",N,N],[5,"pthread_rwlockattr_setkind_np","","",N,N],[5,"sched_getcpu","","",N,N],[5,"mallinfo","","",N,N],[5,"malloc_usable_size","","",N,N],[5,"getauxval","","",N,N],[5,"getpwent_r","","",N,N],[5,"getgrent_r","","",N,N],[5,"getcontext","","",N,N],[5,"setcontext","","",N,N],[5,"makecontext","","",N,N],[5,"swapcontext","","",N,N],[5,"iopl","","",N,N],[5,"ioperm","","",N,N],[5,"sysctl","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"clockid_t","","",N,N],[6,"key_t","","",N,N],[6,"id_t","","",N,N],[6,"useconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"socklen_t","","",N,N],[6,"pthread_t","","",N,N],[6,"mode_t","","",N,N],[6,"ino64_t","","",N,N],[6,"off64_t","","",N,N],[6,"blkcnt64_t","","",N,N],[6,"rlim64_t","","",N,N],[6,"mqd_t","","",N,N],[6,"nfds_t","","",N,N],[6,"nl_item","","",N,N],[6,"idtype_t","","",N,N],[6,"loff_t","","",N,N],[6,"__u8","","",N,N],[6,"__u16","","",N,N],[6,"__s16","","",N,N],[6,"__u32","","",N,N],[6,"__s32","","",N,N],[6,"Elf32_Half","","",N,N],[6,"Elf32_Word","","",N,N],[6,"Elf32_Off","","",N,N],[6,"Elf32_Addr","","",N,N],[6,"Elf64_Half","","",N,N],[6,"Elf64_Word","","",N,N],[6,"Elf64_Off","","",N,N],[6,"Elf64_Addr","","",N,N],[6,"Elf64_Xword","","",N,N],[6,"__priority_which_t","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"ino_t","","",N,N],[6,"off_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"msgqnum_t","","",N,N],[6,"msglen_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"rlim_t","","",N,N],[6,"c_char","","",N,N],[6,"wchar_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"greg_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"__u64","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_SETLEASE","","",N,N],[17,"F_GETLEASE","","",N,N],[17,"F_NOTIFY","","",N,N],[17,"F_CANCELLK","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_SETPIPE_SZ","","",N,N],[17,"F_GETPIPE_SZ","","",N,N],[17,"F_ADD_SEALS","","",N,N],[17,"F_GET_SEALS","","",N,N],[17,"F_SEAL_SEAL","","",N,N],[17,"F_SEAL_SHRINK","","",N,N],[17,"F_SEAL_GROW","","",N,N],[17,"F_SEAL_WRITE","","",N,N],[17,"SIGTRAP","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"CLOCK_MONOTONIC_RAW","","",N,N],[17,"CLOCK_REALTIME_COARSE","","",N,N],[17,"CLOCK_MONOTONIC_COARSE","","",N,N],[17,"CLOCK_BOOTTIME","","",N,N],[17,"CLOCK_REALTIME_ALARM","","",N,N],[17,"CLOCK_BOOTTIME_ALARM","","",N,N],[17,"TIMER_ABSTIME","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_LOCKS","","",N,N],[17,"RLIMIT_SIGPENDING","","",N,N],[17,"RLIMIT_MSGQUEUE","","",N,N],[17,"RLIMIT_NICE","","",N,N],[17,"RLIMIT_RTPRIO","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"SOCK_CLOEXEC","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_RDONLY","","",N,N],[17,"MS_NOSUID","","",N,N],[17,"MS_NODEV","","",N,N],[17,"MS_NOEXEC","","",N,N],[17,"MS_SYNCHRONOUS","","",N,N],[17,"MS_REMOUNT","","",N,N],[17,"MS_MANDLOCK","","",N,N],[17,"MS_DIRSYNC","","",N,N],[17,"MS_NOATIME","","",N,N],[17,"MS_NODIRATIME","","",N,N],[17,"MS_BIND","","",N,N],[17,"MS_MOVE","","",N,N],[17,"MS_REC","","",N,N],[17,"MS_SILENT","","",N,N],[17,"MS_POSIXACL","","",N,N],[17,"MS_UNBINDABLE","","",N,N],[17,"MS_PRIVATE","","",N,N],[17,"MS_SLAVE","","",N,N],[17,"MS_SHARED","","",N,N],[17,"MS_RELATIME","","",N,N],[17,"MS_KERNMOUNT","","",N,N],[17,"MS_I_VERSION","","",N,N],[17,"MS_STRICTATIME","","",N,N],[17,"MS_ACTIVE","","",N,N],[17,"MS_NOUSER","","",N,N],[17,"MS_MGC_VAL","","",N,N],[17,"MS_MGC_MSK","","",N,N],[17,"MS_RMT_MASK","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EAGAIN","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"SCM_CREDENTIALS","","",N,N],[17,"PROT_GROWSDOWN","","",N,N],[17,"PROT_GROWSUP","","",N,N],[17,"MAP_TYPE","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_REMOVE","","",N,N],[17,"MADV_DONTFORK","","",N,N],[17,"MADV_DOFORK","","",N,N],[17,"MADV_MERGEABLE","","",N,N],[17,"MADV_UNMERGEABLE","","",N,N],[17,"MADV_HUGEPAGE","","",N,N],[17,"MADV_NOHUGEPAGE","","",N,N],[17,"MADV_DONTDUMP","","",N,N],[17,"MADV_DODUMP","","",N,N],[17,"MADV_HWPOISON","","",N,N],[17,"MADV_SOFT_OFFLINE","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_MASTER","","",N,N],[17,"IFF_SLAVE","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"IFF_PORTSEL","","",N,N],[17,"IFF_AUTOMEDIA","","",N,N],[17,"IFF_DYNAMIC","","",N,N],[17,"SOL_IP","","",N,N],[17,"SOL_TCP","","",N,N],[17,"SOL_UDP","","",N,N],[17,"SOL_IPV6","","",N,N],[17,"SOL_ICMPV6","","",N,N],[17,"SOL_RAW","","",N,N],[17,"SOL_DECNET","","",N,N],[17,"SOL_X25","","",N,N],[17,"SOL_PACKET","","",N,N],[17,"SOL_ATM","","",N,N],[17,"SOL_AAL","","",N,N],[17,"SOL_IRDA","","",N,N],[17,"SOL_NETBEUI","","",N,N],[17,"SOL_LLC","","",N,N],[17,"SOL_DCCP","","",N,N],[17,"SOL_NETLINK","","",N,N],[17,"SOL_TIPC","","",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_AX25","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_NETROM","","",N,N],[17,"AF_BRIDGE","","",N,N],[17,"AF_ATMPVC","","",N,N],[17,"AF_X25","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_ROSE","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_NETBEUI","","",N,N],[17,"AF_SECURITY","","",N,N],[17,"AF_KEY","","",N,N],[17,"AF_NETLINK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_PACKET","","",N,N],[17,"AF_ASH","","",N,N],[17,"AF_ECONET","","",N,N],[17,"AF_ATMSVC","","",N,N],[17,"AF_RDS","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_IRDA","","",N,N],[17,"AF_PPPOX","","",N,N],[17,"AF_WANPIPE","","",N,N],[17,"AF_LLC","","",N,N],[17,"AF_CAN","","",N,N],[17,"AF_TIPC","","",N,N],[17,"AF_BLUETOOTH","","",N,N],[17,"AF_IUCV","","",N,N],[17,"AF_RXRPC","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_PHONET","","",N,N],[17,"AF_IEEE802154","","",N,N],[17,"AF_CAIF","","",N,N],[17,"AF_ALG","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_AX25","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_NETROM","","",N,N],[17,"PF_BRIDGE","","",N,N],[17,"PF_ATMPVC","","",N,N],[17,"PF_X25","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_ROSE","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_NETBEUI","","",N,N],[17,"PF_SECURITY","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_NETLINK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_PACKET","","",N,N],[17,"PF_ASH","","",N,N],[17,"PF_ECONET","","",N,N],[17,"PF_ATMSVC","","",N,N],[17,"PF_RDS","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_IRDA","","",N,N],[17,"PF_PPPOX","","",N,N],[17,"PF_WANPIPE","","",N,N],[17,"PF_LLC","","",N,N],[17,"PF_CAN","","",N,N],[17,"PF_TIPC","","",N,N],[17,"PF_BLUETOOTH","","",N,N],[17,"PF_IUCV","","",N,N],[17,"PF_RXRPC","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_PHONET","","",N,N],[17,"PF_IEEE802154","","",N,N],[17,"PF_CAIF","","",N,N],[17,"PF_ALG","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_FIN","","",N,N],[17,"MSG_SYN","","",N,N],[17,"MSG_CONFIRM","","",N,N],[17,"MSG_RST","","",N,N],[17,"MSG_ERRQUEUE","","",N,N],[17,"MSG_NOSIGNAL","","",N,N],[17,"MSG_MORE","","",N,N],[17,"MSG_WAITFORONE","","",N,N],[17,"MSG_FASTOPEN","","",N,N],[17,"MSG_CMSG_CLOEXEC","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_TRANSPARENT","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_ADD_MEMBERSHIP","","",N,N],[17,"IPV6_DROP_MEMBERSHIP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"TCP_CORK","","",N,N],[17,"TCP_KEEPIDLE","","",N,N],[17,"TCP_KEEPINTVL","","",N,N],[17,"TCP_KEEPCNT","","",N,N],[17,"TCP_SYNCNT","","",N,N],[17,"TCP_LINGER2","","",N,N],[17,"TCP_DEFER_ACCEPT","","",N,N],[17,"TCP_WINDOW_CLAMP","","",N,N],[17,"TCP_INFO","","",N,N],[17,"TCP_QUICKACK","","",N,N],[17,"TCP_CONGESTION","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"PATH_MAX","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"EPOLLIN","","",N,N],[17,"EPOLLPRI","","",N,N],[17,"EPOLLOUT","","",N,N],[17,"EPOLLRDNORM","","",N,N],[17,"EPOLLRDBAND","","",N,N],[17,"EPOLLWRNORM","","",N,N],[17,"EPOLLWRBAND","","",N,N],[17,"EPOLLMSG","","",N,N],[17,"EPOLLERR","","",N,N],[17,"EPOLLHUP","","",N,N],[17,"EPOLLET","","",N,N],[17,"EPOLL_CTL_ADD","","",N,N],[17,"EPOLL_CTL_MOD","","",N,N],[17,"EPOLL_CTL_DEL","","",N,N],[17,"MNT_DETACH","","",N,N],[17,"MNT_EXPIRE","","",N,N],[17,"Q_GETFMT","","",N,N],[17,"Q_GETINFO","","",N,N],[17,"Q_SETINFO","","",N,N],[17,"QIF_BLIMITS","","",N,N],[17,"QIF_SPACE","","",N,N],[17,"QIF_ILIMITS","","",N,N],[17,"QIF_INODES","","",N,N],[17,"QIF_BTIME","","",N,N],[17,"QIF_ITIME","","",N,N],[17,"QIF_LIMITS","","",N,N],[17,"QIF_USAGE","","",N,N],[17,"QIF_TIMES","","",N,N],[17,"QIF_ALL","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"CR0","","",N,N],[17,"FF0","","",N,N],[17,"BS0","","",N,N],[17,"VT0","","",N,N],[17,"VERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VLNEXT","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"CS5","","",N,N],[17,"CRTSCTS","","",N,N],[17,"ECHO","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"OFDEL","","",N,N],[17,"CLONE_VM","","",N,N],[17,"CLONE_FS","","",N,N],[17,"CLONE_FILES","","",N,N],[17,"CLONE_SIGHAND","","",N,N],[17,"CLONE_PTRACE","","",N,N],[17,"CLONE_VFORK","","",N,N],[17,"CLONE_PARENT","","",N,N],[17,"CLONE_THREAD","","",N,N],[17,"CLONE_NEWNS","","",N,N],[17,"CLONE_SYSVSEM","","",N,N],[17,"CLONE_SETTLS","","",N,N],[17,"CLONE_PARENT_SETTID","","",N,N],[17,"CLONE_CHILD_CLEARTID","","",N,N],[17,"CLONE_DETACHED","","",N,N],[17,"CLONE_UNTRACED","","",N,N],[17,"CLONE_CHILD_SETTID","","",N,N],[17,"CLONE_NEWUTS","","",N,N],[17,"CLONE_NEWIPC","","",N,N],[17,"CLONE_NEWUSER","","",N,N],[17,"CLONE_NEWPID","","",N,N],[17,"CLONE_NEWNET","","",N,N],[17,"CLONE_IO","","",N,N],[17,"CLONE_NEWCGROUP","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WEXITED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"PTRACE_O_TRACESYSGOOD","","",N,N],[17,"PTRACE_O_TRACEFORK","","",N,N],[17,"PTRACE_O_TRACEVFORK","","",N,N],[17,"PTRACE_O_TRACECLONE","","",N,N],[17,"PTRACE_O_TRACEEXEC","","",N,N],[17,"PTRACE_O_TRACEVFORKDONE","","",N,N],[17,"PTRACE_O_TRACEEXIT","","",N,N],[17,"PTRACE_O_TRACESECCOMP","","",N,N],[17,"PTRACE_O_EXITKILL","","",N,N],[17,"PTRACE_O_SUSPEND_SECCOMP","","",N,N],[17,"PTRACE_O_MASK","","",N,N],[17,"PTRACE_EVENT_FORK","","",N,N],[17,"PTRACE_EVENT_VFORK","","",N,N],[17,"PTRACE_EVENT_CLONE","","",N,N],[17,"PTRACE_EVENT_EXEC","","",N,N],[17,"PTRACE_EVENT_VFORK_DONE","","",N,N],[17,"PTRACE_EVENT_EXIT","","",N,N],[17,"PTRACE_EVENT_SECCOMP","","",N,N],[17,"__WNOTHREAD","","",N,N],[17,"__WALL","","",N,N],[17,"__WCLONE","","",N,N],[17,"SPLICE_F_MOVE","","",N,N],[17,"SPLICE_F_NONBLOCK","","",N,N],[17,"SPLICE_F_MORE","","",N,N],[17,"SPLICE_F_GIFT","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"POSIX_FADV_NORMAL","","",N,N],[17,"POSIX_FADV_RANDOM","","",N,N],[17,"POSIX_FADV_SEQUENTIAL","","",N,N],[17,"POSIX_FADV_WILLNEED","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_NO_AUTOMOUNT","","",N,N],[17,"AT_EMPTY_PATH","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"SI_LOAD_SHIFT","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"UTIME_OMIT","","",N,N],[17,"UTIME_NOW","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"IPTOS_LOWDELAY","","",N,N],[17,"IPTOS_THROUGHPUT","","",N,N],[17,"IPTOS_RELIABILITY","","",N,N],[17,"IPTOS_MINCOST","","",N,N],[17,"IPTOS_PREC_NETCONTROL","","",N,N],[17,"IPTOS_PREC_INTERNETCONTROL","","",N,N],[17,"IPTOS_PREC_CRITIC_ECP","","",N,N],[17,"IPTOS_PREC_FLASHOVERRIDE","","",N,N],[17,"IPTOS_PREC_FLASH","","",N,N],[17,"IPTOS_PREC_IMMEDIATE","","",N,N],[17,"IPTOS_PREC_PRIORITY","","",N,N],[17,"IPTOS_PREC_ROUTINE","","",N,N],[17,"IPOPT_COPY","","",N,N],[17,"IPOPT_CLASS_MASK","","",N,N],[17,"IPOPT_NUMBER_MASK","","",N,N],[17,"IPOPT_CONTROL","","",N,N],[17,"IPOPT_RESERVED1","","",N,N],[17,"IPOPT_MEASUREMENT","","",N,N],[17,"IPOPT_RESERVED2","","",N,N],[17,"IPOPT_END","","",N,N],[17,"IPOPT_NOOP","","",N,N],[17,"IPOPT_SEC","","",N,N],[17,"IPOPT_LSRR","","",N,N],[17,"IPOPT_TIMESTAMP","","",N,N],[17,"IPOPT_RR","","",N,N],[17,"IPOPT_SID","","",N,N],[17,"IPOPT_SSRR","","",N,N],[17,"IPOPT_RA","","",N,N],[17,"IPVERSION","","",N,N],[17,"MAXTTL","","",N,N],[17,"IPDEFTTL","","",N,N],[17,"IPOPT_OPTVAL","","",N,N],[17,"IPOPT_OLEN","","",N,N],[17,"IPOPT_OFFSET","","",N,N],[17,"IPOPT_MINOFF","","",N,N],[17,"MAX_IPOPTLEN","","",N,N],[17,"IPOPT_NOP","","",N,N],[17,"IPOPT_EOL","","",N,N],[17,"IPOPT_TS","","",N,N],[17,"IPOPT_TS_TSONLY","","",N,N],[17,"IPOPT_TS_TSANDADDR","","",N,N],[17,"IPOPT_TS_PRESPEC","","",N,N],[17,"ARPOP_RREQUEST","","",N,N],[17,"ARPOP_RREPLY","","",N,N],[17,"ARPOP_InREQUEST","","",N,N],[17,"ARPOP_InREPLY","","",N,N],[17,"ARPOP_NAK","","",N,N],[17,"ATF_NETMASK","","",N,N],[17,"ATF_DONTPUB","","",N,N],[17,"ARPHRD_NETROM","","",N,N],[17,"ARPHRD_ETHER","","",N,N],[17,"ARPHRD_EETHER","","",N,N],[17,"ARPHRD_AX25","","",N,N],[17,"ARPHRD_PRONET","","",N,N],[17,"ARPHRD_CHAOS","","",N,N],[17,"ARPHRD_IEEE802","","",N,N],[17,"ARPHRD_ARCNET","","",N,N],[17,"ARPHRD_APPLETLK","","",N,N],[17,"ARPHRD_DLCI","","",N,N],[17,"ARPHRD_ATM","","",N,N],[17,"ARPHRD_METRICOM","","",N,N],[17,"ARPHRD_IEEE1394","","",N,N],[17,"ARPHRD_EUI64","","",N,N],[17,"ARPHRD_INFINIBAND","","",N,N],[17,"ARPHRD_SLIP","","",N,N],[17,"ARPHRD_CSLIP","","",N,N],[17,"ARPHRD_SLIP6","","",N,N],[17,"ARPHRD_CSLIP6","","",N,N],[17,"ARPHRD_RSRVD","","",N,N],[17,"ARPHRD_ADAPT","","",N,N],[17,"ARPHRD_ROSE","","",N,N],[17,"ARPHRD_X25","","",N,N],[17,"ARPHRD_HWX25","","",N,N],[17,"ARPHRD_PPP","","",N,N],[17,"ARPHRD_CISCO","","",N,N],[17,"ARPHRD_HDLC","","",N,N],[17,"ARPHRD_LAPB","","",N,N],[17,"ARPHRD_DDCMP","","",N,N],[17,"ARPHRD_RAWHDLC","","",N,N],[17,"ARPHRD_TUNNEL","","",N,N],[17,"ARPHRD_TUNNEL6","","",N,N],[17,"ARPHRD_FRAD","","",N,N],[17,"ARPHRD_SKIP","","",N,N],[17,"ARPHRD_LOOPBACK","","",N,N],[17,"ARPHRD_LOCALTLK","","",N,N],[17,"ARPHRD_FDDI","","",N,N],[17,"ARPHRD_BIF","","",N,N],[17,"ARPHRD_SIT","","",N,N],[17,"ARPHRD_IPDDP","","",N,N],[17,"ARPHRD_IPGRE","","",N,N],[17,"ARPHRD_PIMREG","","",N,N],[17,"ARPHRD_HIPPI","","",N,N],[17,"ARPHRD_ASH","","",N,N],[17,"ARPHRD_ECONET","","",N,N],[17,"ARPHRD_IRDA","","",N,N],[17,"ARPHRD_FCPP","","",N,N],[17,"ARPHRD_FCAL","","",N,N],[17,"ARPHRD_FCPL","","",N,N],[17,"ARPHRD_FCFABRIC","","",N,N],[17,"ARPHRD_IEEE802_TR","","",N,N],[17,"ARPHRD_IEEE80211","","",N,N],[17,"ARPHRD_IEEE80211_PRISM","","",N,N],[17,"ARPHRD_IEEE80211_RADIOTAP","","",N,N],[17,"ARPHRD_IEEE802154","","",N,N],[17,"ARPHRD_VOID","","",N,N],[17,"ARPHRD_NONE","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"CODESET","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"RUSAGE_THREAD","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"_PC_SYNC_IO","","",N,N],[17,"_PC_ASYNC_IO","","",N,N],[17,"_PC_PRIO_IO","","",N,N],[17,"_PC_SOCK_MAXBUF","","",N,N],[17,"_PC_FILESIZEBITS","","",N,N],[17,"_PC_REC_INCR_XFER_SIZE","","",N,N],[17,"_PC_REC_MAX_XFER_SIZE","","",N,N],[17,"_PC_REC_MIN_XFER_SIZE","","",N,N],[17,"_PC_REC_XFER_ALIGN","","",N,N],[17,"_PC_ALLOC_SIZE_MIN","","",N,N],[17,"_PC_SYMLINK_MAX","","",N,N],[17,"_PC_2_SYMLINKS","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_UIO_MAXIOV","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"_SC_AVPHYS_PAGES","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_XOPEN_XPG2","","",N,N],[17,"_SC_XOPEN_XPG3","","",N,N],[17,"_SC_XOPEN_XPG4","","",N,N],[17,"_SC_NZERO","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_STREAMS","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_V7_ILP32_OFF32","","",N,N],[17,"_SC_V7_ILP32_OFFBIG","","",N,N],[17,"_SC_V7_LP64_OFF64","","",N,N],[17,"_SC_V7_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",N,N],[17,"RLIM_SAVED_MAX","","",N,N],[17,"RLIM_SAVED_CUR","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"IFF_LOWER_UP","","",N,N],[17,"IFF_DORMANT","","",N,N],[17,"IFF_ECHO","","",N,N],[17,"IFF_TUN","","",N,N],[17,"IFF_TAP","","",N,N],[17,"IFF_NO_PI","","",N,N],[17,"TUN_READQ_SIZE","","",N,N],[17,"TUN_TUN_DEV","","",N,N],[17,"TUN_TAP_DEV","","",N,N],[17,"TUN_TYPE_MASK","","",N,N],[17,"IFF_ONE_QUEUE","","",N,N],[17,"IFF_VNET_HDR","","",N,N],[17,"IFF_TUN_EXCL","","",N,N],[17,"IFF_MULTI_QUEUE","","",N,N],[17,"IFF_ATTACH_QUEUE","","",N,N],[17,"IFF_DETACH_QUEUE","","",N,N],[17,"IFF_PERSIST","","",N,N],[17,"IFF_NOFILTER","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"ST_NODEV","","",N,N],[17,"ST_NOEXEC","","",N,N],[17,"ST_SYNCHRONOUS","","",N,N],[17,"ST_MANDLOCK","","",N,N],[17,"ST_WRITE","","",N,N],[17,"ST_APPEND","","",N,N],[17,"ST_IMMUTABLE","","",N,N],[17,"ST_NOATIME","","",N,N],[17,"ST_NODIRATIME","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"TCP_MD5SIG","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"RENAME_NOREPLACE","","",N,N],[17,"RENAME_EXCHANGE","","",N,N],[17,"RENAME_WHITEOUT","","",N,N],[17,"SCHED_OTHER","","",N,N],[17,"SCHED_FIFO","","",N,N],[17,"SCHED_RR","","",N,N],[17,"SCHED_BATCH","","",N,N],[17,"SCHED_IDLE","","",N,N],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP","","DCCP",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_MTP","","",N,N],[17,"IPPROTO_BEETPH","","",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_PIM","","Protocol indep. multicast",N,N],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_MH","","",N,N],[17,"IPPROTO_UDPLITE","","",N,N],[17,"IPPROTO_MPLS","","",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"AF_IB","","",N,N],[17,"AF_MPLS","","",N,N],[17,"AF_NFC","","",N,N],[17,"AF_VSOCK","","",N,N],[17,"PF_IB","","",N,N],[17,"PF_MPLS","","",N,N],[17,"PF_NFC","","",N,N],[17,"PF_VSOCK","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_INFO","","",N,N],[17,"MSG_STAT","","",N,N],[17,"MSG_INFO","","",N,N],[17,"MSG_NOERROR","","",N,N],[17,"MSG_EXCEPT","","",N,N],[17,"MSG_COPY","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHM_REMAP","","",N,N],[17,"SHM_EXEC","","",N,N],[17,"SHM_LOCK","","",N,N],[17,"SHM_UNLOCK","","",N,N],[17,"SHM_HUGETLB","","",N,N],[17,"SHM_NORESERVE","","",N,N],[17,"EPOLLRDHUP","","",N,N],[17,"EPOLLEXCLUSIVE","","",N,N],[17,"EPOLLONESHOT","","",N,N],[17,"QFMT_VFS_OLD","","",N,N],[17,"QFMT_VFS_V0","","",N,N],[17,"QFMT_VFS_V1","","",N,N],[17,"EFD_SEMAPHORE","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"RB_AUTOBOOT","","",N,N],[17,"RB_HALT_SYSTEM","","",N,N],[17,"RB_ENABLE_CAD","","",N,N],[17,"RB_DISABLE_CAD","","",N,N],[17,"RB_POWER_OFF","","",N,N],[17,"RB_SW_SUSPEND","","",N,N],[17,"RB_KEXEC","","",N,N],[17,"AI_PASSIVE","","",N,N],[17,"AI_CANONNAME","","",N,N],[17,"AI_NUMERICHOST","","",N,N],[17,"AI_V4MAPPED","","",N,N],[17,"AI_ALL","","",N,N],[17,"AI_ADDRCONFIG","","",N,N],[17,"AI_NUMERICSERV","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"NI_NUMERICHOST","","",N,N],[17,"NI_NUMERICSERV","","",N,N],[17,"NI_NOFQDN","","",N,N],[17,"NI_NAMEREQD","","",N,N],[17,"NI_DGRAM","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",N,N],[17,"SYNC_FILE_RANGE_WRITE","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"MREMAP_MAYMOVE","","",N,N],[17,"MREMAP_FIXED","","",N,N],[17,"PR_SET_PDEATHSIG","","",N,N],[17,"PR_GET_PDEATHSIG","","",N,N],[17,"PR_GET_DUMPABLE","","",N,N],[17,"PR_SET_DUMPABLE","","",N,N],[17,"PR_GET_UNALIGN","","",N,N],[17,"PR_SET_UNALIGN","","",N,N],[17,"PR_UNALIGN_NOPRINT","","",N,N],[17,"PR_UNALIGN_SIGBUS","","",N,N],[17,"PR_GET_KEEPCAPS","","",N,N],[17,"PR_SET_KEEPCAPS","","",N,N],[17,"PR_GET_FPEMU","","",N,N],[17,"PR_SET_FPEMU","","",N,N],[17,"PR_FPEMU_NOPRINT","","",N,N],[17,"PR_FPEMU_SIGFPE","","",N,N],[17,"PR_GET_FPEXC","","",N,N],[17,"PR_SET_FPEXC","","",N,N],[17,"PR_FP_EXC_SW_ENABLE","","",N,N],[17,"PR_FP_EXC_DIV","","",N,N],[17,"PR_FP_EXC_OVF","","",N,N],[17,"PR_FP_EXC_UND","","",N,N],[17,"PR_FP_EXC_RES","","",N,N],[17,"PR_FP_EXC_INV","","",N,N],[17,"PR_FP_EXC_DISABLED","","",N,N],[17,"PR_FP_EXC_NONRECOV","","",N,N],[17,"PR_FP_EXC_ASYNC","","",N,N],[17,"PR_FP_EXC_PRECISE","","",N,N],[17,"PR_GET_TIMING","","",N,N],[17,"PR_SET_TIMING","","",N,N],[17,"PR_TIMING_STATISTICAL","","",N,N],[17,"PR_TIMING_TIMESTAMP","","",N,N],[17,"PR_SET_NAME","","",N,N],[17,"PR_GET_NAME","","",N,N],[17,"PR_GET_ENDIAN","","",N,N],[17,"PR_SET_ENDIAN","","",N,N],[17,"PR_ENDIAN_BIG","","",N,N],[17,"PR_ENDIAN_LITTLE","","",N,N],[17,"PR_ENDIAN_PPC_LITTLE","","",N,N],[17,"PR_GET_SECCOMP","","",N,N],[17,"PR_SET_SECCOMP","","",N,N],[17,"PR_CAPBSET_READ","","",N,N],[17,"PR_CAPBSET_DROP","","",N,N],[17,"PR_GET_TSC","","",N,N],[17,"PR_SET_TSC","","",N,N],[17,"PR_TSC_ENABLE","","",N,N],[17,"PR_TSC_SIGSEGV","","",N,N],[17,"PR_GET_SECUREBITS","","",N,N],[17,"PR_SET_SECUREBITS","","",N,N],[17,"PR_SET_TIMERSLACK","","",N,N],[17,"PR_GET_TIMERSLACK","","",N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",N,N],[17,"PR_MCE_KILL","","",N,N],[17,"PR_MCE_KILL_CLEAR","","",N,N],[17,"PR_MCE_KILL_SET","","",N,N],[17,"PR_MCE_KILL_LATE","","",N,N],[17,"PR_MCE_KILL_EARLY","","",N,N],[17,"PR_MCE_KILL_DEFAULT","","",N,N],[17,"PR_MCE_KILL_GET","","",N,N],[17,"PR_SET_MM","","",N,N],[17,"PR_SET_MM_START_CODE","","",N,N],[17,"PR_SET_MM_END_CODE","","",N,N],[17,"PR_SET_MM_START_DATA","","",N,N],[17,"PR_SET_MM_END_DATA","","",N,N],[17,"PR_SET_MM_START_STACK","","",N,N],[17,"PR_SET_MM_START_BRK","","",N,N],[17,"PR_SET_MM_BRK","","",N,N],[17,"PR_SET_MM_ARG_START","","",N,N],[17,"PR_SET_MM_ARG_END","","",N,N],[17,"PR_SET_MM_ENV_START","","",N,N],[17,"PR_SET_MM_ENV_END","","",N,N],[17,"PR_SET_MM_AUXV","","",N,N],[17,"PR_SET_MM_EXE_FILE","","",N,N],[17,"PR_SET_MM_MAP","","",N,N],[17,"PR_SET_MM_MAP_SIZE","","",N,N],[17,"PR_SET_PTRACER","","",N,N],[17,"PR_SET_CHILD_SUBREAPER","","",N,N],[17,"PR_GET_CHILD_SUBREAPER","","",N,N],[17,"PR_SET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_TID_ADDRESS","","",N,N],[17,"PR_SET_THP_DISABLE","","",N,N],[17,"PR_GET_THP_DISABLE","","",N,N],[17,"PR_MPX_ENABLE_MANAGEMENT","","",N,N],[17,"PR_MPX_DISABLE_MANAGEMENT","","",N,N],[17,"PR_SET_FP_MODE","","",N,N],[17,"PR_GET_FP_MODE","","",N,N],[17,"PR_FP_MODE_FR","","",N,N],[17,"PR_FP_MODE_FRE","","",N,N],[17,"PR_CAP_AMBIENT","","",N,N],[17,"PR_CAP_AMBIENT_IS_SET","","",N,N],[17,"PR_CAP_AMBIENT_RAISE","","",N,N],[17,"PR_CAP_AMBIENT_LOWER","","",N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",N,N],[17,"GRND_NONBLOCK","","",N,N],[17,"GRND_RANDOM","","",N,N],[17,"SECCOMP_MODE_DISABLED","","",N,N],[17,"SECCOMP_MODE_STRICT","","",N,N],[17,"SECCOMP_MODE_FILTER","","",N,N],[17,"ITIMER_REAL","","",N,N],[17,"ITIMER_VIRTUAL","","",N,N],[17,"ITIMER_PROF","","",N,N],[17,"TFD_CLOEXEC","","",N,N],[17,"TFD_NONBLOCK","","",N,N],[17,"TFD_TIMER_ABSTIME","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"FALLOC_FL_KEEP_SIZE","","",N,N],[17,"FALLOC_FL_PUNCH_HOLE","","",N,N],[17,"FALLOC_FL_COLLAPSE_RANGE","","",N,N],[17,"FALLOC_FL_ZERO_RANGE","","",N,N],[17,"FALLOC_FL_INSERT_RANGE","","",N,N],[17,"FALLOC_FL_UNSHARE_RANGE","","",N,N],[17,"ENOATTR","","",N,N],[17,"SO_ORIGINAL_DST","","",N,N],[17,"IUTF8","","",N,N],[17,"CMSPAR","","",N,N],[17,"MFD_CLOEXEC","","",N,N],[17,"MFD_ALLOW_SEALING","","",N,N],[17,"PT_NULL","","",N,N],[17,"PT_LOAD","","",N,N],[17,"PT_DYNAMIC","","",N,N],[17,"PT_INTERP","","",N,N],[17,"PT_NOTE","","",N,N],[17,"PT_SHLIB","","",N,N],[17,"PT_PHDR","","",N,N],[17,"PT_TLS","","",N,N],[17,"PT_NUM","","",N,N],[17,"PT_LOOS","","",N,N],[17,"PT_GNU_EH_FRAME","","",N,N],[17,"PT_GNU_STACK","","",N,N],[17,"PT_GNU_RELRO","","",N,N],[17,"ETH_ALEN","","",N,N],[17,"ETH_HLEN","","",N,N],[17,"ETH_ZLEN","","",N,N],[17,"ETH_DATA_LEN","","",N,N],[17,"ETH_FRAME_LEN","","",N,N],[17,"ETH_FCS_LEN","","",N,N],[17,"ETH_P_LOOP","","",N,N],[17,"ETH_P_PUP","","",N,N],[17,"ETH_P_PUPAT","","",N,N],[17,"ETH_P_IP","","",N,N],[17,"ETH_P_X25","","",N,N],[17,"ETH_P_ARP","","",N,N],[17,"ETH_P_BPQ","","",N,N],[17,"ETH_P_IEEEPUP","","",N,N],[17,"ETH_P_IEEEPUPAT","","",N,N],[17,"ETH_P_BATMAN","","",N,N],[17,"ETH_P_DEC","","",N,N],[17,"ETH_P_DNA_DL","","",N,N],[17,"ETH_P_DNA_RC","","",N,N],[17,"ETH_P_DNA_RT","","",N,N],[17,"ETH_P_LAT","","",N,N],[17,"ETH_P_DIAG","","",N,N],[17,"ETH_P_CUST","","",N,N],[17,"ETH_P_SCA","","",N,N],[17,"ETH_P_TEB","","",N,N],[17,"ETH_P_RARP","","",N,N],[17,"ETH_P_ATALK","","",N,N],[17,"ETH_P_AARP","","",N,N],[17,"ETH_P_8021Q","","",N,N],[17,"ETH_P_IPX","","",N,N],[17,"ETH_P_IPV6","","",N,N],[17,"ETH_P_PAUSE","","",N,N],[17,"ETH_P_SLOW","","",N,N],[17,"ETH_P_WCCP","","",N,N],[17,"ETH_P_MPLS_UC","","",N,N],[17,"ETH_P_MPLS_MC","","",N,N],[17,"ETH_P_ATMMPOA","","",N,N],[17,"ETH_P_PPP_DISC","","",N,N],[17,"ETH_P_PPP_SES","","",N,N],[17,"ETH_P_LINK_CTL","","",N,N],[17,"ETH_P_ATMFATE","","",N,N],[17,"ETH_P_PAE","","",N,N],[17,"ETH_P_AOE","","",N,N],[17,"ETH_P_8021AD","","",N,N],[17,"ETH_P_802_EX1","","",N,N],[17,"ETH_P_TIPC","","",N,N],[17,"ETH_P_MACSEC","","",N,N],[17,"ETH_P_8021AH","","",N,N],[17,"ETH_P_MVRP","","",N,N],[17,"ETH_P_1588","","",N,N],[17,"ETH_P_PRP","","",N,N],[17,"ETH_P_FCOE","","",N,N],[17,"ETH_P_TDLS","","",N,N],[17,"ETH_P_FIP","","",N,N],[17,"ETH_P_80221","","",N,N],[17,"ETH_P_LOOPBACK","","",N,N],[17,"ETH_P_QINQ1","","",N,N],[17,"ETH_P_QINQ2","","",N,N],[17,"ETH_P_QINQ3","","",N,N],[17,"ETH_P_EDSA","","",N,N],[17,"ETH_P_AF_IUCV","","",N,N],[17,"ETH_P_802_3_MIN","","",N,N],[17,"ETH_P_802_3","","",N,N],[17,"ETH_P_AX25","","",N,N],[17,"ETH_P_ALL","","",N,N],[17,"ETH_P_802_2","","",N,N],[17,"ETH_P_SNAP","","",N,N],[17,"ETH_P_DDCMP","","",N,N],[17,"ETH_P_WAN_PPP","","",N,N],[17,"ETH_P_PPP_MP","","",N,N],[17,"ETH_P_LOCALTALK","","",N,N],[17,"ETH_P_CANFD","","",N,N],[17,"ETH_P_PPPTALK","","",N,N],[17,"ETH_P_TR_802_2","","",N,N],[17,"ETH_P_MOBITEX","","",N,N],[17,"ETH_P_CONTROL","","",N,N],[17,"ETH_P_IRDA","","",N,N],[17,"ETH_P_ECONET","","",N,N],[17,"ETH_P_HDLC","","",N,N],[17,"ETH_P_ARCNET","","",N,N],[17,"ETH_P_DSA","","",N,N],[17,"ETH_P_TRAILER","","",N,N],[17,"ETH_P_PHONET","","",N,N],[17,"ETH_P_IEEE802154","","",N,N],[17,"ETH_P_CAIF","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",N,N],[17,"POSIX_SPAWN_SETSCHEDULER","","",N,N],[17,"NLMSG_NOOP","","",N,N],[17,"NLMSG_ERROR","","",N,N],[17,"NLMSG_DONE","","",N,N],[17,"NLMSG_OVERRUN","","",N,N],[17,"NLMSG_MIN_TYPE","","",N,N],[17,"GENL_NAMSIZ","","",N,N],[17,"GENL_MIN_ID","","",N,N],[17,"GENL_MAX_ID","","",N,N],[17,"GENL_ADMIN_PERM","","",N,N],[17,"GENL_CMD_CAP_DO","","",N,N],[17,"GENL_CMD_CAP_DUMP","","",N,N],[17,"GENL_CMD_CAP_HASPOL","","",N,N],[17,"GENL_ID_CTRL","","",N,N],[17,"CTRL_CMD_UNSPEC","","",N,N],[17,"CTRL_CMD_NEWFAMILY","","",N,N],[17,"CTRL_CMD_DELFAMILY","","",N,N],[17,"CTRL_CMD_GETFAMILY","","",N,N],[17,"CTRL_CMD_NEWOPS","","",N,N],[17,"CTRL_CMD_DELOPS","","",N,N],[17,"CTRL_CMD_GETOPS","","",N,N],[17,"CTRL_CMD_NEWMCAST_GRP","","",N,N],[17,"CTRL_CMD_DELMCAST_GRP","","",N,N],[17,"CTRL_CMD_GETMCAST_GRP","","",N,N],[17,"CTRL_ATTR_UNSPEC","","",N,N],[17,"CTRL_ATTR_FAMILY_ID","","",N,N],[17,"CTRL_ATTR_FAMILY_NAME","","",N,N],[17,"CTRL_ATTR_VERSION","","",N,N],[17,"CTRL_ATTR_HDRSIZE","","",N,N],[17,"CTRL_ATTR_MAXATTR","","",N,N],[17,"CTRL_ATTR_OPS","","",N,N],[17,"CTRL_ATTR_MCAST_GROUPS","","",N,N],[17,"CTRL_ATTR_OP_UNSPEC","","",N,N],[17,"CTRL_ATTR_OP_ID","","",N,N],[17,"CTRL_ATTR_OP_FLAGS","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_ID","","",N,N],[17,"PACKET_ADD_MEMBERSHIP","","",N,N],[17,"PACKET_DROP_MEMBERSHIP","","",N,N],[17,"PACKET_MR_MULTICAST","","",N,N],[17,"PACKET_MR_PROMISC","","",N,N],[17,"PACKET_MR_ALLMULTI","","",N,N],[17,"PACKET_MR_UNICAST","","",N,N],[17,"NF_DROP","","",N,N],[17,"NF_ACCEPT","","",N,N],[17,"NF_STOLEN","","",N,N],[17,"NF_QUEUE","","",N,N],[17,"NF_REPEAT","","",N,N],[17,"NF_STOP","","",N,N],[17,"NF_MAX_VERDICT","","",N,N],[17,"NF_VERDICT_MASK","","",N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",N,N],[17,"NF_VERDICT_QMASK","","",N,N],[17,"NF_VERDICT_QBITS","","",N,N],[17,"NF_VERDICT_BITS","","",N,N],[17,"NF_INET_PRE_ROUTING","","",N,N],[17,"NF_INET_LOCAL_IN","","",N,N],[17,"NF_INET_FORWARD","","",N,N],[17,"NF_INET_LOCAL_OUT","","",N,N],[17,"NF_INET_POST_ROUTING","","",N,N],[17,"NF_INET_NUMHOOKS","","",N,N],[17,"NFPROTO_UNSPEC","","",N,N],[17,"NFPROTO_IPV4","","",N,N],[17,"NFPROTO_ARP","","",N,N],[17,"NFPROTO_BRIDGE","","",N,N],[17,"NFPROTO_IPV6","","",N,N],[17,"NFPROTO_DECNET","","",N,N],[17,"NFPROTO_NUMPROTO","","",N,N],[17,"NF_IP_PRE_ROUTING","","",N,N],[17,"NF_IP_LOCAL_IN","","",N,N],[17,"NF_IP_FORWARD","","",N,N],[17,"NF_IP_LOCAL_OUT","","",N,N],[17,"NF_IP_POST_ROUTING","","",N,N],[17,"NF_IP_NUMHOOKS","","",N,N],[17,"NF_IP_PRI_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP_PRI_RAW","","",N,N],[17,"NF_IP_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK","","",N,N],[17,"NF_IP_PRI_MANGLE","","",N,N],[17,"NF_IP_PRI_NAT_DST","","",N,N],[17,"NF_IP_PRI_FILTER","","",N,N],[17,"NF_IP_PRI_SECURITY","","",N,N],[17,"NF_IP_PRI_NAT_SRC","","",N,N],[17,"NF_IP_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",N,N],[17,"NF_IP_PRI_LAST","","",N,N],[17,"NF_IP6_PRE_ROUTING","","",N,N],[17,"NF_IP6_LOCAL_IN","","",N,N],[17,"NF_IP6_FORWARD","","",N,N],[17,"NF_IP6_LOCAL_OUT","","",N,N],[17,"NF_IP6_POST_ROUTING","","",N,N],[17,"NF_IP6_NUMHOOKS","","",N,N],[17,"NF_IP6_PRI_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP6_PRI_RAW","","",N,N],[17,"NF_IP6_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK","","",N,N],[17,"NF_IP6_PRI_MANGLE","","",N,N],[17,"NF_IP6_PRI_NAT_DST","","",N,N],[17,"NF_IP6_PRI_FILTER","","",N,N],[17,"NF_IP6_PRI_SECURITY","","",N,N],[17,"NF_IP6_PRI_NAT_SRC","","",N,N],[17,"NF_IP6_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP6_PRI_LAST","","",N,N],[17,"SIOCADDRT","","",N,N],[17,"SIOCDELRT","","",N,N],[17,"SIOCGIFNAME","","",N,N],[17,"SIOCSIFLINK","","",N,N],[17,"SIOCGIFCONF","","",N,N],[17,"SIOCGIFFLAGS","","",N,N],[17,"SIOCSIFFLAGS","","",N,N],[17,"SIOCGIFADDR","","",N,N],[17,"SIOCSIFADDR","","",N,N],[17,"SIOCGIFDSTADDR","","",N,N],[17,"SIOCSIFDSTADDR","","",N,N],[17,"SIOCGIFBRDADDR","","",N,N],[17,"SIOCSIFBRDADDR","","",N,N],[17,"SIOCGIFNETMASK","","",N,N],[17,"SIOCSIFNETMASK","","",N,N],[17,"SIOCGIFMETRIC","","",N,N],[17,"SIOCSIFMETRIC","","",N,N],[17,"SIOCGIFMEM","","",N,N],[17,"SIOCSIFMEM","","",N,N],[17,"SIOCGIFMTU","","",N,N],[17,"SIOCSIFMTU","","",N,N],[17,"SIOCSIFHWADDR","","",N,N],[17,"SIOCGIFENCAP","","",N,N],[17,"SIOCSIFENCAP","","",N,N],[17,"SIOCGIFHWADDR","","",N,N],[17,"SIOCGIFSLAVE","","",N,N],[17,"SIOCSIFSLAVE","","",N,N],[17,"SIOCADDMULTI","","",N,N],[17,"SIOCDELMULTI","","",N,N],[17,"SIOCDARP","","",N,N],[17,"SIOCGARP","","",N,N],[17,"SIOCSARP","","",N,N],[17,"SIOCDRARP","","",N,N],[17,"SIOCGRARP","","",N,N],[17,"SIOCSRARP","","",N,N],[17,"SIOCGIFMAP","","",N,N],[17,"SIOCSIFMAP","","",N,N],[17,"IPTOS_TOS_MASK","","",N,N],[17,"IPTOS_PREC_MASK","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REINSTATE","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_MTU","","",N,N],[17,"RTF_MSS","","",N,N],[17,"RTF_WINDOW","","",N,N],[17,"RTF_IRTT","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_NOFORWARD","","",N,N],[17,"RTF_THROW","","",N,N],[17,"RTF_NOPMTUDISC","","",N,N],[17,"RTF_DEFAULT","","",N,N],[17,"RTF_ALLONLINK","","",N,N],[17,"RTF_ADDRCONF","","",N,N],[17,"RTF_LINKRT","","",N,N],[17,"RTF_NONEXTHOP","","",N,N],[17,"RTF_CACHE","","",N,N],[17,"RTF_FLOW","","",N,N],[17,"RTF_POLICY","","",N,N],[17,"RTCF_VALVE","","",N,N],[17,"RTCF_MASQ","","",N,N],[17,"RTCF_NAT","","",N,N],[17,"RTCF_DOREDIRECT","","",N,N],[17,"RTCF_LOG","","",N,N],[17,"RTCF_DIRECTSRC","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_INTERFACE","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_NAT","","",N,N],[17,"RTF_ADDRCLASSMASK","","",N,N],[17,"RT_CLASS_UNSPEC","","",N,N],[17,"RT_CLASS_DEFAULT","","",N,N],[17,"RT_CLASS_MAIN","","",N,N],[17,"RT_CLASS_LOCAL","","",N,N],[17,"RT_CLASS_MAX","","",N,N],[17,"RTMSG_OVERRUN","","",N,N],[17,"RTMSG_NEWDEVICE","","",N,N],[17,"RTMSG_DELDEVICE","","",N,N],[17,"RTMSG_NEWROUTE","","",N,N],[17,"RTMSG_DELROUTE","","",N,N],[17,"RTMSG_NEWRULE","","",N,N],[17,"RTMSG_DELRULE","","",N,N],[17,"RTMSG_CONTROL","","",N,N],[17,"RTMSG_AR_FAILED","","",N,N],[17,"MAX_ADDR_LEN","","",N,N],[17,"ARPD_UPDATE","","",N,N],[17,"ARPD_LOOKUP","","",N,N],[17,"ARPD_FLUSH","","",N,N],[17,"ATF_MAGIC","","",N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",N,N],[17,"__UT_LINESIZE","","",N,N],[17,"__UT_NAMESIZE","","",N,N],[17,"__UT_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RLIMIT_RTTIME","","",N,N],[17,"RLIMIT_NLIMITS","","",N,N],[17,"SOCK_NONBLOCK","","",N,N],[17,"SOL_RXRPC","","",N,N],[17,"SOL_PPPOL2TP","","",N,N],[17,"SOL_BLUETOOTH","","",N,N],[17,"SOL_PNPIPE","","",N,N],[17,"SOL_RDS","","",N,N],[17,"SOL_IUCV","","",N,N],[17,"SOL_CAIF","","",N,N],[17,"SOL_ALG","","",N,N],[17,"SOL_NFC","","",N,N],[17,"MSG_TRYHARD","","",N,N],[17,"LC_PAPER","","",N,N],[17,"LC_NAME","","",N,N],[17,"LC_ADDRESS","","",N,N],[17,"LC_TELEPHONE","","",N,N],[17,"LC_MEASUREMENT","","",N,N],[17,"LC_IDENTIFICATION","","",N,N],[17,"LC_PAPER_MASK","","",N,N],[17,"LC_NAME_MASK","","",N,N],[17,"LC_ADDRESS_MASK","","",N,N],[17,"LC_TELEPHONE_MASK","","",N,N],[17,"LC_MEASUREMENT_MASK","","",N,N],[17,"LC_IDENTIFICATION_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"MAP_DENYWRITE","","",N,N],[17,"MAP_EXECUTABLE","","",N,N],[17,"MAP_POPULATE","","",N,N],[17,"MAP_NONBLOCK","","",N,N],[17,"MAP_STACK","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EUCLEAN","","",N,N],[17,"ENOTNAM","","",N,N],[17,"ENAVAIL","","",N,N],[17,"EISNAM","","",N,N],[17,"EREMOTEIO","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"SOCK_DCCP","","",N,N],[17,"SOCK_PACKET","","",N,N],[17,"TCP_COOKIE_TRANSACTIONS","","",N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",N,N],[17,"TCP_THIN_DUPACK","","",N,N],[17,"TCP_USER_TIMEOUT","","",N,N],[17,"TCP_REPAIR","","",N,N],[17,"TCP_REPAIR_QUEUE","","",N,N],[17,"TCP_QUEUE_SEQ","","",N,N],[17,"TCP_REPAIR_OPTIONS","","",N,N],[17,"TCP_FASTOPEN","","",N,N],[17,"TCP_TIMESTAMP","","",N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",N,N],[17,"DCCP_SOCKOPT_SERVICE","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_L","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_R","","",N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",N,N],[17,"DCCP_SOCKOPT_CCID","","",N,N],[17,"DCCP_SOCKOPT_TX_CCID","","",N,N],[17,"DCCP_SOCKOPT_RX_CCID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGEV_THREAD_ID","","",N,N],[17,"BUFSIZ","","",N,N],[17,"TMP_MAX","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"POSIX_FADV_DONTNEED","","",N,N],[17,"POSIX_FADV_NOREUSE","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_EQUIV_CLASS_MAX","","",N,N],[17,"_SC_CHARCLASS_NAME_MAX","","",N,N],[17,"_SC_PII","","",N,N],[17,"_SC_PII_XTI","","",N,N],[17,"_SC_PII_SOCKET","","",N,N],[17,"_SC_PII_INTERNET","","",N,N],[17,"_SC_PII_OSI","","",N,N],[17,"_SC_POLL","","",N,N],[17,"_SC_SELECT","","",N,N],[17,"_SC_PII_INTERNET_STREAM","","",N,N],[17,"_SC_PII_INTERNET_DGRAM","","",N,N],[17,"_SC_PII_OSI_COTS","","",N,N],[17,"_SC_PII_OSI_CLTS","","",N,N],[17,"_SC_PII_OSI_M","","",N,N],[17,"_SC_T_IOV_MAX","","",N,N],[17,"_SC_2_C_VERSION","","",N,N],[17,"_SC_CHAR_BIT","","",N,N],[17,"_SC_CHAR_MAX","","",N,N],[17,"_SC_CHAR_MIN","","",N,N],[17,"_SC_INT_MAX","","",N,N],[17,"_SC_INT_MIN","","",N,N],[17,"_SC_LONG_BIT","","",N,N],[17,"_SC_WORD_BIT","","",N,N],[17,"_SC_MB_LEN_MAX","","",N,N],[17,"_SC_SSIZE_MAX","","",N,N],[17,"_SC_SCHAR_MAX","","",N,N],[17,"_SC_SCHAR_MIN","","",N,N],[17,"_SC_SHRT_MAX","","",N,N],[17,"_SC_SHRT_MIN","","",N,N],[17,"_SC_UCHAR_MAX","","",N,N],[17,"_SC_UINT_MAX","","",N,N],[17,"_SC_ULONG_MAX","","",N,N],[17,"_SC_USHRT_MAX","","",N,N],[17,"_SC_NL_ARGMAX","","",N,N],[17,"_SC_NL_LANGMAX","","",N,N],[17,"_SC_NL_MSGMAX","","",N,N],[17,"_SC_NL_NMAX","","",N,N],[17,"_SC_NL_SETMAX","","",N,N],[17,"_SC_NL_TEXTMAX","","",N,N],[17,"_SC_BASE","","",N,N],[17,"_SC_C_LANG_SUPPORT","","",N,N],[17,"_SC_C_LANG_SUPPORT_R","","",N,N],[17,"_SC_DEVICE_IO","","",N,N],[17,"_SC_DEVICE_SPECIFIC","","",N,N],[17,"_SC_DEVICE_SPECIFIC_R","","",N,N],[17,"_SC_FD_MGMT","","",N,N],[17,"_SC_FIFO","","",N,N],[17,"_SC_PIPE","","",N,N],[17,"_SC_FILE_ATTRIBUTES","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_FILE_SYSTEM","","",N,N],[17,"_SC_MULTI_PROCESS","","",N,N],[17,"_SC_SINGLE_PROCESS","","",N,N],[17,"_SC_NETWORKING","","",N,N],[17,"_SC_REGEX_VERSION","","",N,N],[17,"_SC_SIGNALS","","",N,N],[17,"_SC_SYSTEM_DATABASE","","",N,N],[17,"_SC_SYSTEM_DATABASE_R","","",N,N],[17,"_SC_USER_GROUPS","","",N,N],[17,"_SC_USER_GROUPS_R","","",N,N],[17,"_SC_LEVEL1_ICACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"ST_RELATIME","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"ADFS_SUPER_MAGIC","","",N,N],[17,"AFFS_SUPER_MAGIC","","",N,N],[17,"CODA_SUPER_MAGIC","","",N,N],[17,"CRAMFS_MAGIC","","",N,N],[17,"EFS_SUPER_MAGIC","","",N,N],[17,"EXT2_SUPER_MAGIC","","",N,N],[17,"EXT3_SUPER_MAGIC","","",N,N],[17,"EXT4_SUPER_MAGIC","","",N,N],[17,"HPFS_SUPER_MAGIC","","",N,N],[17,"HUGETLBFS_MAGIC","","",N,N],[17,"ISOFS_SUPER_MAGIC","","",N,N],[17,"JFFS2_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC2","","",N,N],[17,"MINIX2_SUPER_MAGIC","","",N,N],[17,"MINIX2_SUPER_MAGIC2","","",N,N],[17,"MSDOS_SUPER_MAGIC","","",N,N],[17,"NCP_SUPER_MAGIC","","",N,N],[17,"NFS_SUPER_MAGIC","","",N,N],[17,"OPENPROM_SUPER_MAGIC","","",N,N],[17,"PROC_SUPER_MAGIC","","",N,N],[17,"QNX4_SUPER_MAGIC","","",N,N],[17,"REISERFS_SUPER_MAGIC","","",N,N],[17,"SMB_SUPER_MAGIC","","",N,N],[17,"TMPFS_MAGIC","","",N,N],[17,"USBDEVICE_SUPER_MAGIC","","",N,N],[17,"VEOF","","",N,N],[17,"CPU_SETSIZE","","",N,N],[17,"PTRACE_TRACEME","","",N,N],[17,"PTRACE_PEEKTEXT","","",N,N],[17,"PTRACE_PEEKDATA","","",N,N],[17,"PTRACE_PEEKUSER","","",N,N],[17,"PTRACE_POKETEXT","","",N,N],[17,"PTRACE_POKEDATA","","",N,N],[17,"PTRACE_POKEUSER","","",N,N],[17,"PTRACE_CONT","","",N,N],[17,"PTRACE_KILL","","",N,N],[17,"PTRACE_SINGLESTEP","","",N,N],[17,"PTRACE_ATTACH","","",N,N],[17,"PTRACE_SYSCALL","","",N,N],[17,"PTRACE_SETOPTIONS","","",N,N],[17,"PTRACE_GETEVENTMSG","","",N,N],[17,"PTRACE_GETSIGINFO","","",N,N],[17,"PTRACE_SETSIGINFO","","",N,N],[17,"PTRACE_GETREGSET","","",N,N],[17,"PTRACE_SETREGSET","","",N,N],[17,"PTRACE_SEIZE","","",N,N],[17,"PTRACE_INTERRUPT","","",N,N],[17,"PTRACE_LISTEN","","",N,N],[17,"PTRACE_PEEKSIGINFO","","",N,N],[17,"EPOLLWAKEUP","","",N,N],[17,"MAP_HUGETLB","","",N,N],[17,"SEEK_DATA","","",N,N],[17,"SEEK_HOLE","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"TIOCLINUX","","",N,N],[17,"TIOCGSERIAL","","",N,N],[17,"RTLD_DEEPBIND","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"LINUX_REBOOT_MAGIC1","","",N,N],[17,"LINUX_REBOOT_MAGIC2","","",N,N],[17,"LINUX_REBOOT_MAGIC2A","","",N,N],[17,"LINUX_REBOOT_MAGIC2B","","",N,N],[17,"LINUX_REBOOT_MAGIC2C","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART","","",N,N],[17,"LINUX_REBOOT_CMD_HALT","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_ON","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART2","","",N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",N,N],[17,"LINUX_REBOOT_CMD_KEXEC","","",N,N],[17,"NETLINK_ROUTE","","",N,N],[17,"NETLINK_UNUSED","","",N,N],[17,"NETLINK_USERSOCK","","",N,N],[17,"NETLINK_FIREWALL","","",N,N],[17,"NETLINK_SOCK_DIAG","","",N,N],[17,"NETLINK_NFLOG","","",N,N],[17,"NETLINK_XFRM","","",N,N],[17,"NETLINK_SELINUX","","",N,N],[17,"NETLINK_ISCSI","","",N,N],[17,"NETLINK_AUDIT","","",N,N],[17,"NETLINK_FIB_LOOKUP","","",N,N],[17,"NETLINK_CONNECTOR","","",N,N],[17,"NETLINK_NETFILTER","","",N,N],[17,"NETLINK_IP6_FW","","",N,N],[17,"NETLINK_DNRTMSG","","",N,N],[17,"NETLINK_KOBJECT_UEVENT","","",N,N],[17,"NETLINK_GENERIC","","",N,N],[17,"NETLINK_SCSITRANSPORT","","",N,N],[17,"NETLINK_ECRYPTFS","","",N,N],[17,"NETLINK_RDMA","","",N,N],[17,"NETLINK_CRYPTO","","",N,N],[17,"NETLINK_INET_DIAG","","",N,N],[17,"MAX_LINKS","","",N,N],[17,"NLM_F_REQUEST","","",N,N],[17,"NLM_F_MULTI","","",N,N],[17,"NLM_F_ACK","","",N,N],[17,"NLM_F_ECHO","","",N,N],[17,"NLM_F_DUMP_INTR","","",N,N],[17,"NLM_F_DUMP_FILTERED","","",N,N],[17,"NLM_F_ROOT","","",N,N],[17,"NLM_F_MATCH","","",N,N],[17,"NLM_F_ATOMIC","","",N,N],[17,"NLM_F_DUMP","","",N,N],[17,"NLM_F_REPLACE","","",N,N],[17,"NLM_F_EXCL","","",N,N],[17,"NLM_F_CREATE","","",N,N],[17,"NLM_F_APPEND","","",N,N],[17,"NETLINK_ADD_MEMBERSHIP","","",N,N],[17,"NETLINK_DROP_MEMBERSHIP","","",N,N],[17,"NETLINK_PKTINFO","","",N,N],[17,"NETLINK_BROADCAST_ERROR","","",N,N],[17,"NETLINK_NO_ENOBUFS","","",N,N],[17,"NETLINK_RX_RING","","",N,N],[17,"NETLINK_TX_RING","","",N,N],[17,"NETLINK_LISTEN_ALL_NSID","","",N,N],[17,"NETLINK_LIST_MEMBERSHIPS","","",N,N],[17,"NETLINK_CAP_ACK","","",N,N],[17,"NLA_F_NESTED","","",N,N],[17,"NLA_F_NET_BYTEORDER","","",N,N],[17,"NLA_TYPE_MASK","","",N,N],[17,"NLA_ALIGNTO","","",N,N],[17,"GENL_UNS_ADMIN_PERM","","",N,N],[17,"GENL_ID_VFS_DQUOT","","",N,N],[17,"GENL_ID_PMCRAID","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"NF_NETDEV_INGRESS","","",N,N],[17,"NF_NETDEV_NUMHOOKS","","",N,N],[17,"NFPROTO_INET","","",N,N],[17,"NFPROTO_NETDEV","","",N,N],[17,"NFT_TABLE_MAXNAMELEN","","",N,N],[17,"NFT_CHAIN_MAXNAMELEN","","",N,N],[17,"NFT_SET_MAXNAMELEN","","",N,N],[17,"NFT_OBJ_MAXNAMELEN","","",N,N],[17,"NFT_USERDATA_MAXLEN","","",N,N],[17,"NFT_REG_VERDICT","","",N,N],[17,"NFT_REG_1","","",N,N],[17,"NFT_REG_2","","",N,N],[17,"NFT_REG_3","","",N,N],[17,"NFT_REG_4","","",N,N],[17,"__NFT_REG_MAX","","",N,N],[17,"NFT_REG32_00","","",N,N],[17,"NFT_REG32_01","","",N,N],[17,"NFT_REG32_02","","",N,N],[17,"NFT_REG32_03","","",N,N],[17,"NFT_REG32_04","","",N,N],[17,"NFT_REG32_05","","",N,N],[17,"NFT_REG32_06","","",N,N],[17,"NFT_REG32_07","","",N,N],[17,"NFT_REG32_08","","",N,N],[17,"NFT_REG32_09","","",N,N],[17,"NFT_REG32_10","","",N,N],[17,"NFT_REG32_11","","",N,N],[17,"NFT_REG32_12","","",N,N],[17,"NFT_REG32_13","","",N,N],[17,"NFT_REG32_14","","",N,N],[17,"NFT_REG32_15","","",N,N],[17,"NFT_REG_SIZE","","",N,N],[17,"NFT_REG32_SIZE","","",N,N],[17,"NFT_CONTINUE","","",N,N],[17,"NFT_BREAK","","",N,N],[17,"NFT_JUMP","","",N,N],[17,"NFT_GOTO","","",N,N],[17,"NFT_RETURN","","",N,N],[17,"NFT_MSG_NEWTABLE","","",N,N],[17,"NFT_MSG_GETTABLE","","",N,N],[17,"NFT_MSG_DELTABLE","","",N,N],[17,"NFT_MSG_NEWCHAIN","","",N,N],[17,"NFT_MSG_GETCHAIN","","",N,N],[17,"NFT_MSG_DELCHAIN","","",N,N],[17,"NFT_MSG_NEWRULE","","",N,N],[17,"NFT_MSG_GETRULE","","",N,N],[17,"NFT_MSG_DELRULE","","",N,N],[17,"NFT_MSG_NEWSET","","",N,N],[17,"NFT_MSG_GETSET","","",N,N],[17,"NFT_MSG_DELSET","","",N,N],[17,"NFT_MSG_NEWSETELEM","","",N,N],[17,"NFT_MSG_GETSETELEM","","",N,N],[17,"NFT_MSG_DELSETELEM","","",N,N],[17,"NFT_MSG_NEWGEN","","",N,N],[17,"NFT_MSG_GETGEN","","",N,N],[17,"NFT_MSG_TRACE","","",N,N],[17,"NFT_MSG_NEWOBJ","","",N,N],[17,"NFT_MSG_GETOBJ","","",N,N],[17,"NFT_MSG_DELOBJ","","",N,N],[17,"NFT_MSG_GETOBJ_RESET","","",N,N],[17,"NFT_MSG_MAX","","",N,N],[17,"NFT_SET_ANONYMOUS","","",N,N],[17,"NFT_SET_CONSTANT","","",N,N],[17,"NFT_SET_INTERVAL","","",N,N],[17,"NFT_SET_MAP","","",N,N],[17,"NFT_SET_TIMEOUT","","",N,N],[17,"NFT_SET_EVAL","","",N,N],[17,"NFT_SET_POL_PERFORMANCE","","",N,N],[17,"NFT_SET_POL_MEMORY","","",N,N],[17,"NFT_SET_ELEM_INTERVAL_END","","",N,N],[17,"NFT_DATA_VALUE","","",N,N],[17,"NFT_DATA_VERDICT","","",N,N],[17,"NFT_DATA_RESERVED_MASK","","",N,N],[17,"NFT_DATA_VALUE_MAXLEN","","",N,N],[17,"NFT_BYTEORDER_NTOH","","",N,N],[17,"NFT_BYTEORDER_HTON","","",N,N],[17,"NFT_CMP_EQ","","",N,N],[17,"NFT_CMP_NEQ","","",N,N],[17,"NFT_CMP_LT","","",N,N],[17,"NFT_CMP_LTE","","",N,N],[17,"NFT_CMP_GT","","",N,N],[17,"NFT_CMP_GTE","","",N,N],[17,"NFT_RANGE_EQ","","",N,N],[17,"NFT_RANGE_NEQ","","",N,N],[17,"NFT_LOOKUP_F_INV","","",N,N],[17,"NFT_DYNSET_OP_ADD","","",N,N],[17,"NFT_DYNSET_OP_UPDATE","","",N,N],[17,"NFT_DYNSET_F_INV","","",N,N],[17,"NFT_PAYLOAD_LL_HEADER","","",N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",N,N],[17,"NFT_PAYLOAD_CSUM_NONE","","",N,N],[17,"NFT_PAYLOAD_CSUM_INET","","",N,N],[17,"NFT_META_LEN","","",N,N],[17,"NFT_META_PROTOCOL","","",N,N],[17,"NFT_META_PRIORITY","","",N,N],[17,"NFT_META_MARK","","",N,N],[17,"NFT_META_IIF","","",N,N],[17,"NFT_META_OIF","","",N,N],[17,"NFT_META_IIFNAME","","",N,N],[17,"NFT_META_OIFNAME","","",N,N],[17,"NFT_META_IIFTYPE","","",N,N],[17,"NFT_META_OIFTYPE","","",N,N],[17,"NFT_META_SKUID","","",N,N],[17,"NFT_META_SKGID","","",N,N],[17,"NFT_META_NFTRACE","","",N,N],[17,"NFT_META_RTCLASSID","","",N,N],[17,"NFT_META_SECMARK","","",N,N],[17,"NFT_META_NFPROTO","","",N,N],[17,"NFT_META_L4PROTO","","",N,N],[17,"NFT_META_BRI_IIFNAME","","",N,N],[17,"NFT_META_BRI_OIFNAME","","",N,N],[17,"NFT_META_PKTTYPE","","",N,N],[17,"NFT_META_CPU","","",N,N],[17,"NFT_META_IIFGROUP","","",N,N],[17,"NFT_META_OIFGROUP","","",N,N],[17,"NFT_META_CGROUP","","",N,N],[17,"NFT_META_PRANDOM","","",N,N],[17,"NFT_CT_STATE","","",N,N],[17,"NFT_CT_DIRECTION","","",N,N],[17,"NFT_CT_STATUS","","",N,N],[17,"NFT_CT_MARK","","",N,N],[17,"NFT_CT_SECMARK","","",N,N],[17,"NFT_CT_EXPIRATION","","",N,N],[17,"NFT_CT_HELPER","","",N,N],[17,"NFT_CT_L3PROTOCOL","","",N,N],[17,"NFT_CT_SRC","","",N,N],[17,"NFT_CT_DST","","",N,N],[17,"NFT_CT_PROTOCOL","","",N,N],[17,"NFT_CT_PROTO_SRC","","",N,N],[17,"NFT_CT_PROTO_DST","","",N,N],[17,"NFT_CT_LABELS","","",N,N],[17,"NFT_CT_PKTS","","",N,N],[17,"NFT_CT_BYTES","","",N,N],[17,"NFT_LIMIT_PKTS","","",N,N],[17,"NFT_LIMIT_PKT_BYTES","","",N,N],[17,"NFT_LIMIT_F_INV","","",N,N],[17,"NFT_QUEUE_FLAG_BYPASS","","",N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",N,N],[17,"NFT_QUEUE_FLAG_MASK","","",N,N],[17,"NFT_QUOTA_F_INV","","",N,N],[17,"NFT_REJECT_ICMP_UNREACH","","",N,N],[17,"NFT_REJECT_TCP_RST","","",N,N],[17,"NFT_REJECT_ICMPX_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",N,N],[17,"NFT_NAT_SNAT","","",N,N],[17,"NFT_NAT_DNAT","","",N,N],[17,"NFT_TRACETYPE_UNSPEC","","",N,N],[17,"NFT_TRACETYPE_POLICY","","",N,N],[17,"NFT_TRACETYPE_RETURN","","",N,N],[17,"NFT_TRACETYPE_RULE","","",N,N],[17,"NFT_NG_INCREMENTAL","","",N,N],[17,"NFT_NG_RANDOM","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",N,N],[17,"O_LARGEFILE","","",N,N],[17,"TIOCGSOFTCAR","","",N,N],[17,"TIOCSSOFTCAR","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_RSYNC","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NOATIME","","",N,N],[17,"O_PATH","","",N,N],[17,"O_TMPFILE","","",N,N],[17,"MAP_GROWSDOWN","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"ELOOP","","",N,N],[17,"ENOMSG","","",N,N],[17,"EIDRM","","",N,N],[17,"ECHRNG","","",N,N],[17,"EL2NSYNC","","",N,N],[17,"EL3HLT","","",N,N],[17,"EL3RST","","",N,N],[17,"ELNRNG","","",N,N],[17,"EUNATCH","","",N,N],[17,"ENOCSI","","",N,N],[17,"EL2HLT","","",N,N],[17,"EBADE","","",N,N],[17,"EBADR","","",N,N],[17,"EXFULL","","",N,N],[17,"ENOANO","","",N,N],[17,"EBADRQC","","",N,N],[17,"EBADSLT","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"ENOTUNIQ","","",N,N],[17,"EBADFD","","",N,N],[17,"EBADMSG","","",N,N],[17,"EREMCHG","","",N,N],[17,"ELIBACC","","",N,N],[17,"ELIBBAD","","",N,N],[17,"ELIBSCN","","",N,N],[17,"ELIBMAX","","",N,N],[17,"ELIBEXEC","","",N,N],[17,"EILSEQ","","",N,N],[17,"ERESTART","","",N,N],[17,"ESTRPIPE","","",N,N],[17,"EUSERS","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"EALREADY","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"ESTALE","","",N,N],[17,"EDQUOT","","",N,N],[17,"ENOMEDIUM","","",N,N],[17,"EMEDIUMTYPE","","",N,N],[17,"ECANCELED","","",N,N],[17,"ENOKEY","","",N,N],[17,"EKEYEXPIRED","","",N,N],[17,"EKEYREVOKED","","",N,N],[17,"EKEYREJECTED","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EHWPOISON","","",N,N],[17,"ERFKILL","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDBUFFORCE","","",N,N],[17,"SO_RCVBUFFORCE","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_NO_CHECK","","",N,N],[17,"SO_PRIORITY","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_BSDCOMPAT","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_PASSCRED","","",N,N],[17,"SO_PEERCRED","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_SECURITY_AUTHENTICATION","","",N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",N,N],[17,"SO_BINDTODEVICE","","",N,N],[17,"SO_ATTACH_FILTER","","",N,N],[17,"SO_DETACH_FILTER","","",N,N],[17,"SO_GET_FILTER","","",N,N],[17,"SO_PEERNAME","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_PEERSEC","","",N,N],[17,"SO_PASSSEC","","",N,N],[17,"SO_TIMESTAMPNS","","",N,N],[17,"SCM_TIMESTAMPNS","","",N,N],[17,"SO_MARK","","",N,N],[17,"SO_TIMESTAMPING","","",N,N],[17,"SCM_TIMESTAMPING","","",N,N],[17,"SO_PROTOCOL","","",N,N],[17,"SO_DOMAIN","","",N,N],[17,"SO_RXQ_OVFL","","",N,N],[17,"SO_WIFI_STATUS","","",N,N],[17,"SCM_WIFI_STATUS","","",N,N],[17,"SO_PEEK_OFF","","",N,N],[17,"SO_NOFCS","","",N,N],[17,"SO_LOCK_FILTER","","",N,N],[17,"SO_SELECT_ERR_QUEUE","","",N,N],[17,"SO_BUSY_POLL","","",N,N],[17,"SO_MAX_PACING_RATE","","",N,N],[17,"SO_BPF_EXTENSIONS","","",N,N],[17,"SO_INCOMING_CPU","","",N,N],[17,"SO_ATTACH_BPF","","",N,N],[17,"SO_DETACH_BPF","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGSTKFLT","","",N,N],[17,"SIGUNUSED","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGPWR","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"PTRACE_DETACH","","",N,N],[17,"EFD_NONBLOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"SFD_NONBLOCK","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCCONS","","",N,N],[17,"SFD_CLOEXEC","","",N,N],[17,"NCCS","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"EBFONT","","",N,N],[17,"ENOSTR","","",N,N],[17,"ENODATA","","",N,N],[17,"ETIME","","",N,N],[17,"ENOSR","","",N,N],[17,"ENONET","","",N,N],[17,"ENOPKG","","",N,N],[17,"EREMOTE","","",N,N],[17,"ENOLINK","","",N,N],[17,"EADV","","",N,N],[17,"ESRMNT","","",N,N],[17,"ECOMM","","",N,N],[17,"EPROTO","","",N,N],[17,"EDOTDOT","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"EPOLL_CLOEXEC","","",N,N],[17,"EFD_CLOEXEC","","",N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"O_DIRECT","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"MAP_LOCKED","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_32BIT","","",N,N],[17,"EDEADLOCK","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PTRACE_GETFPREGS","","",N,N],[17,"PTRACE_SETFPREGS","","",N,N],[17,"PTRACE_GETFPXREGS","","",N,N],[17,"PTRACE_SETFPXREGS","","",N,N],[17,"PTRACE_GETREGS","","",N,N],[17,"PTRACE_SETREGS","","",N,N],[17,"PTRACE_PEEKSIGINFO_SHARED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"MINSIGSTKSZ","","",N,N],[17,"CBAUD","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"TAB3","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF1","","",N,N],[17,"BS1","","",N,N],[17,"VT1","","",N,N],[17,"VWERASE","","",N,N],[17,"VREPRINT","","",N,N],[17,"VSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VDISCARD","","",N,N],[17,"VTIME","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"ONLCR","","",N,N],[17,"CSIZE","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"CIBAUD","","",N,N],[17,"CBAUDEX","","",N,N],[17,"VSWTC","","",N,N],[17,"OLCUC","","",N,N],[17,"NLDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"XTABS","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"BOTHER","","",N,N],[17,"B57600","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"B460800","","",N,N],[17,"B500000","","",N,N],[17,"B576000","","",N,N],[17,"B921600","","",N,N],[17,"B1000000","","",N,N],[17,"B1152000","","",N,N],[17,"B1500000","","",N,N],[17,"B2000000","","",N,N],[17,"B2500000","","",N,N],[17,"B3000000","","",N,N],[17,"B3500000","","",N,N],[17,"B4000000","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VMIN","","",N,N],[17,"IEXTEN","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"EXTPROC","","",N,N],[17,"TCGETS","","",N,N],[17,"TCSETS","","",N,N],[17,"TCSETSW","","",N,N],[17,"TCSETSF","","",N,N],[17,"TCGETA","","",N,N],[17,"TCSETA","","",N,N],[17,"TCSETAW","","",N,N],[17,"TCSETAF","","",N,N],[17,"TCSBRK","","",N,N],[17,"TCXONC","","",N,N],[17,"TCFLSH","","",N,N],[17,"TIOCINQ","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"FIONREAD","","",N,N],[17,"R15","","",N,N],[17,"R14","","",N,N],[17,"R13","","",N,N],[17,"R12","","",N,N],[17,"RBP","","",N,N],[17,"RBX","","",N,N],[17,"R11","","",N,N],[17,"R10","","",N,N],[17,"R9","","",N,N],[17,"R8","","",N,N],[17,"RAX","","",N,N],[17,"RCX","","",N,N],[17,"RDX","","",N,N],[17,"RSI","","",N,N],[17,"RDI","","",N,N],[17,"ORIG_RAX","","",N,N],[17,"RIP","","",N,N],[17,"CS","","",N,N],[17,"EFLAGS","","",N,N],[17,"RSP","","",N,N],[17,"SS","","",N,N],[17,"FS_BASE","","",N,N],[17,"GS_BASE","","",N,N],[17,"DS","","",N,N],[17,"ES","","",N,N],[17,"FS","","",N,N],[17,"GS","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"SYS_read","","",N,N],[17,"SYS_write","","",N,N],[17,"SYS_open","","",N,N],[17,"SYS_close","","",N,N],[17,"SYS_stat","","",N,N],[17,"SYS_fstat","","",N,N],[17,"SYS_lstat","","",N,N],[17,"SYS_poll","","",N,N],[17,"SYS_lseek","","",N,N],[17,"SYS_mmap","","",N,N],[17,"SYS_mprotect","","",N,N],[17,"SYS_munmap","","",N,N],[17,"SYS_brk","","",N,N],[17,"SYS_rt_sigaction","","",N,N],[17,"SYS_rt_sigprocmask","","",N,N],[17,"SYS_rt_sigreturn","","",N,N],[17,"SYS_ioctl","","",N,N],[17,"SYS_pread64","","",N,N],[17,"SYS_pwrite64","","",N,N],[17,"SYS_readv","","",N,N],[17,"SYS_writev","","",N,N],[17,"SYS_access","","",N,N],[17,"SYS_pipe","","",N,N],[17,"SYS_select","","",N,N],[17,"SYS_sched_yield","","",N,N],[17,"SYS_mremap","","",N,N],[17,"SYS_msync","","",N,N],[17,"SYS_mincore","","",N,N],[17,"SYS_madvise","","",N,N],[17,"SYS_shmget","","",N,N],[17,"SYS_shmat","","",N,N],[17,"SYS_shmctl","","",N,N],[17,"SYS_dup","","",N,N],[17,"SYS_dup2","","",N,N],[17,"SYS_pause","","",N,N],[17,"SYS_nanosleep","","",N,N],[17,"SYS_getitimer","","",N,N],[17,"SYS_alarm","","",N,N],[17,"SYS_setitimer","","",N,N],[17,"SYS_getpid","","",N,N],[17,"SYS_sendfile","","",N,N],[17,"SYS_socket","","",N,N],[17,"SYS_connect","","",N,N],[17,"SYS_accept","","",N,N],[17,"SYS_sendto","","",N,N],[17,"SYS_recvfrom","","",N,N],[17,"SYS_sendmsg","","",N,N],[17,"SYS_recvmsg","","",N,N],[17,"SYS_shutdown","","",N,N],[17,"SYS_bind","","",N,N],[17,"SYS_listen","","",N,N],[17,"SYS_getsockname","","",N,N],[17,"SYS_getpeername","","",N,N],[17,"SYS_socketpair","","",N,N],[17,"SYS_setsockopt","","",N,N],[17,"SYS_getsockopt","","",N,N],[17,"SYS_clone","","",N,N],[17,"SYS_fork","","",N,N],[17,"SYS_vfork","","",N,N],[17,"SYS_execve","","",N,N],[17,"SYS_exit","","",N,N],[17,"SYS_wait4","","",N,N],[17,"SYS_kill","","",N,N],[17,"SYS_uname","","",N,N],[17,"SYS_semget","","",N,N],[17,"SYS_semop","","",N,N],[17,"SYS_semctl","","",N,N],[17,"SYS_shmdt","","",N,N],[17,"SYS_msgget","","",N,N],[17,"SYS_msgsnd","","",N,N],[17,"SYS_msgrcv","","",N,N],[17,"SYS_msgctl","","",N,N],[17,"SYS_fcntl","","",N,N],[17,"SYS_flock","","",N,N],[17,"SYS_fsync","","",N,N],[17,"SYS_fdatasync","","",N,N],[17,"SYS_truncate","","",N,N],[17,"SYS_ftruncate","","",N,N],[17,"SYS_getdents","","",N,N],[17,"SYS_getcwd","","",N,N],[17,"SYS_chdir","","",N,N],[17,"SYS_fchdir","","",N,N],[17,"SYS_rename","","",N,N],[17,"SYS_mkdir","","",N,N],[17,"SYS_rmdir","","",N,N],[17,"SYS_creat","","",N,N],[17,"SYS_link","","",N,N],[17,"SYS_unlink","","",N,N],[17,"SYS_symlink","","",N,N],[17,"SYS_readlink","","",N,N],[17,"SYS_chmod","","",N,N],[17,"SYS_fchmod","","",N,N],[17,"SYS_chown","","",N,N],[17,"SYS_fchown","","",N,N],[17,"SYS_lchown","","",N,N],[17,"SYS_umask","","",N,N],[17,"SYS_gettimeofday","","",N,N],[17,"SYS_getrlimit","","",N,N],[17,"SYS_getrusage","","",N,N],[17,"SYS_sysinfo","","",N,N],[17,"SYS_times","","",N,N],[17,"SYS_ptrace","","",N,N],[17,"SYS_getuid","","",N,N],[17,"SYS_syslog","","",N,N],[17,"SYS_getgid","","",N,N],[17,"SYS_setuid","","",N,N],[17,"SYS_setgid","","",N,N],[17,"SYS_geteuid","","",N,N],[17,"SYS_getegid","","",N,N],[17,"SYS_setpgid","","",N,N],[17,"SYS_getppid","","",N,N],[17,"SYS_getpgrp","","",N,N],[17,"SYS_setsid","","",N,N],[17,"SYS_setreuid","","",N,N],[17,"SYS_setregid","","",N,N],[17,"SYS_getgroups","","",N,N],[17,"SYS_setgroups","","",N,N],[17,"SYS_setresuid","","",N,N],[17,"SYS_getresuid","","",N,N],[17,"SYS_setresgid","","",N,N],[17,"SYS_getresgid","","",N,N],[17,"SYS_getpgid","","",N,N],[17,"SYS_setfsuid","","",N,N],[17,"SYS_setfsgid","","",N,N],[17,"SYS_getsid","","",N,N],[17,"SYS_capget","","",N,N],[17,"SYS_capset","","",N,N],[17,"SYS_rt_sigpending","","",N,N],[17,"SYS_rt_sigtimedwait","","",N,N],[17,"SYS_rt_sigqueueinfo","","",N,N],[17,"SYS_rt_sigsuspend","","",N,N],[17,"SYS_sigaltstack","","",N,N],[17,"SYS_utime","","",N,N],[17,"SYS_mknod","","",N,N],[17,"SYS_uselib","","",N,N],[17,"SYS_personality","","",N,N],[17,"SYS_ustat","","",N,N],[17,"SYS_statfs","","",N,N],[17,"SYS_fstatfs","","",N,N],[17,"SYS_sysfs","","",N,N],[17,"SYS_getpriority","","",N,N],[17,"SYS_setpriority","","",N,N],[17,"SYS_sched_setparam","","",N,N],[17,"SYS_sched_getparam","","",N,N],[17,"SYS_sched_setscheduler","","",N,N],[17,"SYS_sched_getscheduler","","",N,N],[17,"SYS_sched_get_priority_max","","",N,N],[17,"SYS_sched_get_priority_min","","",N,N],[17,"SYS_sched_rr_get_interval","","",N,N],[17,"SYS_mlock","","",N,N],[17,"SYS_munlock","","",N,N],[17,"SYS_mlockall","","",N,N],[17,"SYS_munlockall","","",N,N],[17,"SYS_vhangup","","",N,N],[17,"SYS_modify_ldt","","",N,N],[17,"SYS_pivot_root","","",N,N],[17,"SYS__sysctl","","",N,N],[17,"SYS_prctl","","",N,N],[17,"SYS_arch_prctl","","",N,N],[17,"SYS_adjtimex","","",N,N],[17,"SYS_setrlimit","","",N,N],[17,"SYS_chroot","","",N,N],[17,"SYS_sync","","",N,N],[17,"SYS_acct","","",N,N],[17,"SYS_settimeofday","","",N,N],[17,"SYS_mount","","",N,N],[17,"SYS_umount2","","",N,N],[17,"SYS_swapon","","",N,N],[17,"SYS_swapoff","","",N,N],[17,"SYS_reboot","","",N,N],[17,"SYS_sethostname","","",N,N],[17,"SYS_setdomainname","","",N,N],[17,"SYS_iopl","","",N,N],[17,"SYS_ioperm","","",N,N],[17,"SYS_create_module","","",N,N],[17,"SYS_init_module","","",N,N],[17,"SYS_delete_module","","",N,N],[17,"SYS_get_kernel_syms","","",N,N],[17,"SYS_query_module","","",N,N],[17,"SYS_quotactl","","",N,N],[17,"SYS_nfsservctl","","",N,N],[17,"SYS_getpmsg","","",N,N],[17,"SYS_putpmsg","","",N,N],[17,"SYS_afs_syscall","","",N,N],[17,"SYS_tuxcall","","",N,N],[17,"SYS_security","","",N,N],[17,"SYS_gettid","","",N,N],[17,"SYS_readahead","","",N,N],[17,"SYS_setxattr","","",N,N],[17,"SYS_lsetxattr","","",N,N],[17,"SYS_fsetxattr","","",N,N],[17,"SYS_getxattr","","",N,N],[17,"SYS_lgetxattr","","",N,N],[17,"SYS_fgetxattr","","",N,N],[17,"SYS_listxattr","","",N,N],[17,"SYS_llistxattr","","",N,N],[17,"SYS_flistxattr","","",N,N],[17,"SYS_removexattr","","",N,N],[17,"SYS_lremovexattr","","",N,N],[17,"SYS_fremovexattr","","",N,N],[17,"SYS_tkill","","",N,N],[17,"SYS_time","","",N,N],[17,"SYS_futex","","",N,N],[17,"SYS_sched_setaffinity","","",N,N],[17,"SYS_sched_getaffinity","","",N,N],[17,"SYS_set_thread_area","","",N,N],[17,"SYS_io_setup","","",N,N],[17,"SYS_io_destroy","","",N,N],[17,"SYS_io_getevents","","",N,N],[17,"SYS_io_submit","","",N,N],[17,"SYS_io_cancel","","",N,N],[17,"SYS_get_thread_area","","",N,N],[17,"SYS_lookup_dcookie","","",N,N],[17,"SYS_epoll_create","","",N,N],[17,"SYS_epoll_ctl_old","","",N,N],[17,"SYS_epoll_wait_old","","",N,N],[17,"SYS_remap_file_pages","","",N,N],[17,"SYS_getdents64","","",N,N],[17,"SYS_set_tid_address","","",N,N],[17,"SYS_restart_syscall","","",N,N],[17,"SYS_semtimedop","","",N,N],[17,"SYS_fadvise64","","",N,N],[17,"SYS_timer_create","","",N,N],[17,"SYS_timer_settime","","",N,N],[17,"SYS_timer_gettime","","",N,N],[17,"SYS_timer_getoverrun","","",N,N],[17,"SYS_timer_delete","","",N,N],[17,"SYS_clock_settime","","",N,N],[17,"SYS_clock_gettime","","",N,N],[17,"SYS_clock_getres","","",N,N],[17,"SYS_clock_nanosleep","","",N,N],[17,"SYS_exit_group","","",N,N],[17,"SYS_epoll_wait","","",N,N],[17,"SYS_epoll_ctl","","",N,N],[17,"SYS_tgkill","","",N,N],[17,"SYS_utimes","","",N,N],[17,"SYS_vserver","","",N,N],[17,"SYS_mbind","","",N,N],[17,"SYS_set_mempolicy","","",N,N],[17,"SYS_get_mempolicy","","",N,N],[17,"SYS_mq_open","","",N,N],[17,"SYS_mq_unlink","","",N,N],[17,"SYS_mq_timedsend","","",N,N],[17,"SYS_mq_timedreceive","","",N,N],[17,"SYS_mq_notify","","",N,N],[17,"SYS_mq_getsetattr","","",N,N],[17,"SYS_kexec_load","","",N,N],[17,"SYS_waitid","","",N,N],[17,"SYS_add_key","","",N,N],[17,"SYS_request_key","","",N,N],[17,"SYS_keyctl","","",N,N],[17,"SYS_ioprio_set","","",N,N],[17,"SYS_ioprio_get","","",N,N],[17,"SYS_inotify_init","","",N,N],[17,"SYS_inotify_add_watch","","",N,N],[17,"SYS_inotify_rm_watch","","",N,N],[17,"SYS_migrate_pages","","",N,N],[17,"SYS_openat","","",N,N],[17,"SYS_mkdirat","","",N,N],[17,"SYS_mknodat","","",N,N],[17,"SYS_fchownat","","",N,N],[17,"SYS_futimesat","","",N,N],[17,"SYS_newfstatat","","",N,N],[17,"SYS_unlinkat","","",N,N],[17,"SYS_renameat","","",N,N],[17,"SYS_linkat","","",N,N],[17,"SYS_symlinkat","","",N,N],[17,"SYS_readlinkat","","",N,N],[17,"SYS_fchmodat","","",N,N],[17,"SYS_faccessat","","",N,N],[17,"SYS_pselect6","","",N,N],[17,"SYS_ppoll","","",N,N],[17,"SYS_unshare","","",N,N],[17,"SYS_set_robust_list","","",N,N],[17,"SYS_get_robust_list","","",N,N],[17,"SYS_splice","","",N,N],[17,"SYS_tee","","",N,N],[17,"SYS_sync_file_range","","",N,N],[17,"SYS_vmsplice","","",N,N],[17,"SYS_move_pages","","",N,N],[17,"SYS_utimensat","","",N,N],[17,"SYS_epoll_pwait","","",N,N],[17,"SYS_signalfd","","",N,N],[17,"SYS_timerfd_create","","",N,N],[17,"SYS_eventfd","","",N,N],[17,"SYS_fallocate","","",N,N],[17,"SYS_timerfd_settime","","",N,N],[17,"SYS_timerfd_gettime","","",N,N],[17,"SYS_accept4","","",N,N],[17,"SYS_signalfd4","","",N,N],[17,"SYS_eventfd2","","",N,N],[17,"SYS_epoll_create1","","",N,N],[17,"SYS_dup3","","",N,N],[17,"SYS_pipe2","","",N,N],[17,"SYS_inotify_init1","","",N,N],[17,"SYS_preadv","","",N,N],[17,"SYS_pwritev","","",N,N],[17,"SYS_rt_tgsigqueueinfo","","",N,N],[17,"SYS_perf_event_open","","",N,N],[17,"SYS_recvmmsg","","",N,N],[17,"SYS_fanotify_init","","",N,N],[17,"SYS_fanotify_mark","","",N,N],[17,"SYS_prlimit64","","",N,N],[17,"SYS_name_to_handle_at","","",N,N],[17,"SYS_open_by_handle_at","","",N,N],[17,"SYS_clock_adjtime","","",N,N],[17,"SYS_syncfs","","",N,N],[17,"SYS_sendmmsg","","",N,N],[17,"SYS_setns","","",N,N],[17,"SYS_getcpu","","",N,N],[17,"SYS_process_vm_readv","","",N,N],[17,"SYS_process_vm_writev","","",N,N],[17,"SYS_kcmp","","",N,N],[17,"SYS_finit_module","","",N,N],[17,"SYS_sched_setattr","","",N,N],[17,"SYS_sched_getattr","","",N,N],[17,"SYS_renameat2","","",N,N],[17,"SYS_seccomp","","",N,N],[17,"SYS_getrandom","","",N,N],[17,"SYS_memfd_create","","",N,N],[17,"SYS_kexec_file_load","","",N,N],[17,"SYS_bpf","","",N,N],[17,"SYS_execveat","","",N,N],[17,"SYS_userfaultfd","","",N,N],[17,"SYS_membarrier","","",N,N],[17,"SYS_mlock2","","",N,N],[17,"SYS_copy_file_range","","",N,N],[17,"SYS_preadv2","","",N,N],[17,"SYS_pwritev2","","",N,N],[17,"SYS_pkey_mprotect","","",N,N],[17,"SYS_pkey_alloc","","",N,N],[17,"SYS_pkey_free","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["in_addr"]]],[11,"clone","","",7,[[["self"]],["in6_addr"]]],[11,"clone","","",8,[[["self"]],["ip_mreq"]]],[11,"clone","","",9,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",10,[[["self"]],["hostent"]]],[11,"clone","","",11,[[["self"]],["iovec"]]],[11,"clone","","",12,[[["self"]],["pollfd"]]],[11,"clone","","",13,[[["self"]],["winsize"]]],[11,"clone","","",14,[[["self"]],["linger"]]],[11,"clone","","",15,[[["self"]],["sigval"]]],[11,"clone","","",16,[[["self"]],["itimerval"]]],[11,"clone","","",17,[[["self"]],["tms"]]],[11,"clone","","",18,[[["self"]],["servent"]]],[11,"clone","","",19,[[["self"]],["protoent"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["sockaddr_un"]]],[11,"clone","","",24,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",25,[[["self"]],["addrinfo"]]],[11,"clone","","",26,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",27,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",116,[[["self"]],["fd_set"]]],[11,"clone","","",28,[[["self"]],["tm"]]],[11,"clone","","",29,[[["self"]],["sched_param"]]],[11,"clone","","",30,[[["self"]],["dl_info"]]],[11,"clone","","",31,[[["self"]],["epoll_event"]]],[11,"clone","","",32,[[["self"]],["utsname"]]],[11,"clone","","",33,[[["self"]],["lconv"]]],[11,"clone","","",34,[[["self"]],["sigevent"]]],[11,"clone","","",35,[[["self"]],["in_pktinfo"]]],[11,"clone","","",36,[[["self"]],["ifaddrs"]]],[11,"clone","","",117,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",37,[[["self"]],["arpreq"]]],[11,"clone","","",38,[[["self"]],["arpreq_old"]]],[11,"clone","","",39,[[["self"]],["arphdr"]]],[11,"clone","","",40,[[["self"]],["dirent"]]],[11,"clone","","",41,[[["self"]],["dirent64"]]],[11,"clone","","",42,[[["self"]],["rlimit64"]]],[11,"clone","","",43,[[["self"]],["glob_t"]]],[11,"clone","","",118,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",119,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",120,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",121,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",122,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",123,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",44,[[["self"]],["passwd"]]],[11,"clone","","",45,[[["self"]],["spwd"]]],[11,"clone","","",46,[[["self"]],["dqblk"]]],[11,"clone","","",47,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",48,[[["self"]],["itimerspec"]]],[11,"clone","","",124,[[["self"]],["fsid_t"]]],[11,"clone","","",49,[[["self"]],["mq_attr"]]],[11,"clone","","",50,[[["self"]],["packet_mreq"]]],[11,"clone","","",125,[[["self"]],["cpu_set_t"]]],[11,"clone","","",51,[[["self"]],["if_nameindex"]]],[11,"clone","","",52,[[["self"]],["msginfo"]]],[11,"clone","","",53,[[["self"]],["mmsghdr"]]],[11,"clone","","",54,[[["self"]],["sembuf"]]],[11,"clone","","",55,[[["self"]],["input_event"]]],[11,"clone","","",56,[[["self"]],["input_id"]]],[11,"clone","","",57,[[["self"]],["input_absinfo"]]],[11,"clone","","",58,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",59,[[["self"]],["input_mask"]]],[11,"clone","","",60,[[["self"]],["ff_replay"]]],[11,"clone","","",61,[[["self"]],["ff_trigger"]]],[11,"clone","","",62,[[["self"]],["ff_envelope"]]],[11,"clone","","",63,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",64,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",65,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",66,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",67,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",68,[[["self"]],["ff_effect"]]],[11,"clone","","",69,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",70,[[["self"]],["elf32_phdr"]]],[11,"clone","","",71,[[["self"]],["elf64_phdr"]]],[11,"clone","","",72,[[["self"]],["ucred"]]],[11,"clone","","",73,[[["self"]],["mntent"]]],[11,"clone","","",126,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",127,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",74,[[["self"]],["genlmsghdr"]]],[11,"clone","","",75,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",76,[[["self"]],["arpd_request"]]],[11,"clone","","",77,[[["self"]],["aiocb"]]],[11,"clone","","",78,[[["self"]],["__exit_status"]]],[11,"clone","","",79,[[["self"]],["__timeval"]]],[11,"clone","","",80,[[["self"]],["utmpx"]]],[11,"clone","","",81,[[["self"]],["sigaction"]]],[11,"clone","","",82,[[["self"]],["stack_t"]]],[11,"clone","","",83,[[["self"]],["siginfo_t"]]],[11,"clone","","",84,[[["self"]],["glob64_t"]]],[11,"clone","","",85,[[["self"]],["statfs"]]],[11,"clone","","",86,[[["self"]],["msghdr"]]],[11,"clone","","",87,[[["self"]],["cmsghdr"]]],[11,"clone","","",88,[[["self"]],["termios"]]],[11,"clone","","",89,[[["self"]],["flock"]]],[11,"clone","","",128,[[["self"]],["sem_t"]]],[11,"clone","","",90,[[["self"]],["mallinfo"]]],[11,"clone","","",91,[[["self"]],["nlmsghdr"]]],[11,"clone","","",92,[[["self"]],["nlmsgerr"]]],[11,"clone","","",93,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",94,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",95,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",96,[[["self"]],["nlattr"]]],[11,"clone","","",97,[[["self"]],["rtentry"]]],[11,"clone","","",129,[[["self"]],["sigset_t"]]],[11,"clone","","",98,[[["self"]],["sysinfo"]]],[11,"clone","","",99,[[["self"]],["msqid_ds"]]],[11,"clone","","",100,[[["self"]],["stat"]]],[11,"clone","","",101,[[["self"]],["stat64"]]],[11,"clone","","",102,[[["self"]],["statfs64"]]],[11,"clone","","",103,[[["self"]],["statvfs64"]]],[11,"clone","","",130,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",104,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",105,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",106,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",107,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",108,[[["self"]],["user_regs_struct"]]],[11,"clone","","",109,[[["self"]],["user"]]],[11,"clone","","",110,[[["self"]],["mcontext_t"]]],[11,"clone","","",111,[[["self"]],["ucontext_t"]]],[11,"clone","","",112,[[["self"]],["ipc_perm"]]],[11,"clone","","",113,[[["self"]],["shmid_ds"]]],[11,"clone","","",114,[[["self"]],["termios2"]]],[11,"clone","","",115,[[["self"]],["statvfs"]]]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"statvfs"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"sem_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[4,"c_void"],[4,"FILE"],[4,"fpos_t"],[4,"DIR"],[4,"locale_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["libflate"]={"doc":"A Rust implementation of DEFLATE algorithm and related…","items":[[0,"deflate","libflate","The encoder and decoder of the DEFLATE format and algorithm.",N,N],[3,"Decoder","libflate::deflate","DEFLATE decoder.",N,N],[3,"EncodeOptions","","Options for a DEFLATE encoder.",N,N],[3,"Encoder","","DEFLATE encoder.",N,N],[11,"new","","Makes a new decoder instance.",0,[[["r"]],["self"]]],[11,"as_inner_ref","","Returns the immutable reference to the inner stream.",0,[[["self"]],["r"]]],[11,"as_inner_mut","","Returns the mutable reference to the inner stream.",0,[[["self"]],["r"]]],[11,"into_inner","","Unwraps this `Decoder`, returning the underlying reader.",0,[[["self"]],["r"]]],[11,"new","","Makes a default instance.",1,[[],["self"]]],[11,"with_lz77","","Specifies the LZ77 encoder used to compress input data.",1,[[["e"]],["self"]]],[11,"no_compression","","Disables LZ77 compression.",1,[[["self"]],["self"]]],[11,"block_size","","Specifies the hint of the size of a DEFLATE block.",1,[[["self"],["usize"]],["self"]]],[11,"fixed_huffman_codes","","Specifies to compress with fixed huffman codes.",1,[[["self"]],["self"]]],[11,"new","","Makes a new encoder instance.",2,[[["w"]],["self"]]],[11,"with_options","","Makes a new encoder instance with specified options.",2,[[["w"],["encodeoptions"]],["self"]]],[11,"finish","","Flushes internal buffer and returns the inner stream.",2,[[["self"]],["finish",["error"]]]],[11,"as_inner_ref","","Returns the immutable reference to the inner stream.",2,[[["self"]],["w"]]],[11,"as_inner_mut","","Returns the mutable reference to the inner stream.",2,[[["self"]],["w"]]],[11,"into_inner","","Unwraps the `Encoder`, returning the inner stream.",2,[[["self"]],["w"]]],[17,"DEFAULT_BLOCK_SIZE","","The default size of a DEFLATE block.",N,N],[0,"finish","libflate","`Finish` and related types.",N,N],[3,"Finish","libflate::finish","`Finish` is a type that represents a value which may have…",N,N],[3,"AutoFinish","","A wrapper struct that completes the processing of the…",N,N],[3,"AutoFinishUnchecked","","A wrapper struct that completes the processing of the…",N,N],[8,"Complete","","This trait allows to complete an I/O related processing.",N,N],[10,"complete","","Completes the current processing and returns the result.",3,[[["self"]],["result"]]],[11,"new","","Makes a new instance.",4,[[["t"],["option"]],["self"]]],[11,"unwrap","","Unwraps the instance.",4,N],[11,"into_result","","Converts from `Finish<T, E>` to `Result<T, E>`.",4,[[["self"]],["result"]]],[11,"as_result","","Converts from `Finish<T, E>` to `Result<&T, &E>`.",4,[[["self"]],["result"]]],[11,"new","","Makes a new `AutoFinish` instance.",5,[[["t"]],["self"]]],[11,"into_inner","","Unwraps this `AutoFinish` instance, returning the…",5,[[["self"]],["t"]]],[11,"new","","Makes a new `AutoFinishUnchecked` instance.",6,[[["t"]],["self"]]],[11,"into_inner","","Unwraps this `AutoFinishUnchecked` instance, returning the…",6,[[["self"]],["t"]]],[0,"gzip","libflate","The encoder and decoder of the GZIP format.",N,N],[3,"HeaderBuilder","libflate::gzip","GZIP header builder.",N,N],[3,"Header","","GZIP Header.",N,N],[3,"ExtraField","","Extra field of a GZIP header.",N,N],[12,"id","","ID of the extra field.",7,N],[12,"data","","Data of the extra field.",7,N],[3,"EncodeOptions","","Options for a GZIP encoder.",N,N],[3,"Encoder","","GZIP encoder.",N,N],[3,"Decoder","","GZIP decoder.",N,N],[3,"MultiDecoder","","A decoder that decodes all members in a GZIP stream.",N,N],[4,"CompressionLevel","","Compression levels defined by the GZIP format.",N,N],[13,"Fastest","","Compressor used fastest algorithm.",8,N],[13,"Slowest","","Compressor used maximum compression, slowest algorithm.",8,N],[13,"Unknown","","No information about compression method.",8,N],[4,"Os","","OS type.",N,N],[13,"Fat","","FAT filesystem (MS-DOS, OS/2, NT/Win32)",9,N],[13,"Amiga","","Amiga",9,N],[13,"Vms","","VMS (or OpenVMS)",9,N],[13,"Unix","","Unix",9,N],[13,"VmCms","","VM/CMS",9,N],[13,"AtariTos","","Atari TOS",9,N],[13,"Hpfs","","HPFS filesystem (OS/2, NT)",9,N],[13,"Macintosh","","Macintosh",9,N],[13,"ZSystem","","Z-System",9,N],[13,"CpM","","CP/M",9,N],[13,"Tops20","","TOPS-20",9,N],[13,"Ntfs","","NTFS filesystem (NT)",9,N],[13,"Qdos","","QDOS",9,N],[13,"AcornRiscos","","Acorn RISCOS",9,N],[13,"Unknown","","Unknown",9,N],[13,"Undefined","","Undefined value in RFC-1952",9,N],[11,"new","","Makes a new builder instance.",10,[[],["self"]]],[11,"modification_time","","Sets the modification time (UNIX timestamp).",10,[[["self"],["u32"]],["self"]]],[11,"os","","Sets the OS type.",10,[[["self"],["os"]],["self"]]],[11,"text","","Indicates the encoding data is a ASCII text.",10,[[["self"]],["self"]]],[11,"verify","","Specifies toe verify header bytes using CRC-16.",10,[[["self"]],["self"]]],[11,"extra_field","","Sets the extra field.",10,[[["self"],["extrafield"]],["self"]]],[11,"filename","","Sets the file name.",10,[[["self"],["cstring"]],["self"]]],[11,"comment","","Sets the comment.",10,[[["self"],["cstring"]],["self"]]],[11,"finish","","Returns the result header.",10,[[["self"]],["header"]]],[11,"modification_time","","Returns the modification time (UNIX timestamp).",11,[[["self"]],["u32"]]],[11,"compression_level","","Returns the compression level.",11,[[["self"]],["compressionlevel"]]],[11,"os","","Returns the OS type.",11,[[["self"]],["os"]]],[11,"is_text","","Returns `true` if the stream is probably ASCII text,…",11,[[["self"]],["bool"]]],[11,"is_verified","","Returns `true` if the header bytes is verified by CRC-16,…",11,[[["self"]],["bool"]]],[11,"extra_field","","Returns the extra field.",11,[[["self"]],["option",["extrafield"]]]],[11,"filename","","Returns the file name.",11,[[["self"]],["option",["cstring"]]]],[11,"comment","","Returns the comment.",11,[[["self"]],["option",["cstring"]]]],[11,"new","","Makes a default instance.",12,[[],["self"]]],[11,"with_lz77","","Specifies the LZ77 encoder used to compress input data.",12,[[["e"]],["self"]]],[11,"no_compression","","Disables LZ77 compression.",12,[[["self"]],["self"]]],[11,"header","","Sets the GZIP header which will be written to the output…",12,[[["self"],["header"]],["self"]]],[11,"block_size","","Specifies the hint of the size of a DEFLATE block.",12,[[["self"],["usize"]],["self"]]],[11,"fixed_huffman_codes","","Specifies to compress with fixed huffman codes.",12,[[["self"]],["self"]]],[11,"new","","Makes a new encoder instance.",13,[[["w"]],["result"]]],[11,"with_options","","Makes a new encoder instance with specified options.",13,[[["w"],["encodeoptions"]],["result"]]],[11,"header","","Returns the header of the GZIP stream.",13,[[["self"]],["header"]]],[11,"finish","","Writes the GZIP trailer and returns the inner stream.",13,[[["self"]],["finish",["error"]]]],[11,"as_inner_ref","","Returns the immutable reference to the inner stream.",13,[[["self"]],["w"]]],[11,"as_inner_mut","","Returns the mutable reference to the inner stream.",13,[[["self"]],["w"]]],[11,"into_inner","","Unwraps the `Encoder`, returning the inner stream.",13,[[["self"]],["w"]]],[11,"new","","Makes a new decoder instance.",14,[[["r"]],["result"]]],[11,"header","","Returns the header of the GZIP stream.",14,[[["self"]],["header"]]],[11,"as_inner_ref","","Returns the immutable reference to the inner stream.",14,[[["self"]],["r"]]],[11,"as_inner_mut","","Returns the mutable reference to the inner stream.",14,[[["self"]],["r"]]],[11,"into_inner","","Unwraps this `Decoder`, returning the underlying reader.",14,[[["self"]],["r"]]],[11,"new","","Makes a new decoder instance.",15,[[["r"]],["result"]]],[11,"header","","Returns the header of the current member in the GZIP stream.",15,[[["self"]],["header"]]],[11,"as_inner_ref","","Returns the immutable reference to the inner stream.",15,[[["self"]],["r"]]],[11,"as_inner_mut","","Returns the mutable reference to the inner stream.",15,[[["self"]],["r"]]],[11,"into_inner","","Unwraps this `MultiDecoder`, returning the underlying…",15,[[["self"]],["r"]]],[0,"lz77","libflate","The interface and implementations of LZ77 compression…",N,N],[3,"DefaultLz77Encoder","libflate::lz77","A `Lz77Encode` implementation used by default.",N,N],[3,"NoCompressionLz77Encoder","","A no compression implementation of `LZ77Encode` trait.",N,N],[4,"Code","","A LZ77 encoded data.",N,N],[13,"Literal","","Literal byte.",16,N],[13,"Pointer","","Backward pointer to shared data.",16,N],[12,"length","libflate::lz77::Code","Length of the shared data. The values must be limited to…",16,N],[12,"backward_distance","","Distance between current position and start position of…",16,N],[4,"CompressionLevel","libflate::lz77","Compression level.",N,N],[13,"None","","No compression.",17,N],[13,"Fast","","Best speed.",17,N],[13,"Balance","","Balanced between speed and size.",17,N],[13,"Best","","Best compression.",17,N],[11,"new","","Makes a new encoder instance.",18,[[],["self"]]],[11,"with_window_size","","Makes a new encoder instance with specified window size.",18,[[["u16"]],["self"]]],[17,"MAX_LENGTH","","Maximum length of sharable bytes in a pointer.",N,N],[17,"MAX_DISTANCE","","Maximum backward distance of a pointer.",N,N],[17,"MAX_WINDOW_SIZE","","Maximum size of a sliding window.",N,N],[8,"Sink","","The `Sink` trait represents a consumer of LZ77 encoded data.",N,N],[10,"consume","","Consumes a LZ77 encoded `Code`.",19,[[["self"],["code"]]]],[8,"Lz77Encode","","The `LZ77Encode` trait defines the interface of LZ77…",N,N],[10,"encode","","Encodes a buffer and writes result LZ77 codes to `sink`.",20,N],[10,"flush","","Flushes the encoder, ensuring that all intermediately…",20,[[["self"],["s"]]]],[11,"compression_level","","Returns the compression level of the encoder.",20,[[["self"]],["compressionlevel"]]],[11,"window_size","","Returns the window size of the encoder.",20,[[["self"]],["u16"]]],[11,"new","","Makes a new encoder instance.",21,[[],["self"]]],[0,"non_blocking","libflate","Implementations that can handle non-blocking I/O.",N,N],[0,"deflate","libflate::non_blocking","The decoder of the DEFLATE format and algorithm.",N,N],[3,"Decoder","libflate::non_blocking::deflate","DEFLATE decoder which supports non-blocking I/O.",N,N],[11,"new","","Makes a new decoder instance.",22,[[["r"]],["self"]]],[11,"as_inner_ref","","Returns the immutable reference to the inner stream.",22,[[["self"]],["r"]]],[11,"as_inner_mut","","Returns the mutable reference to the inner stream.",22,[[["self"]],["r"]]],[11,"into_inner","","Unwraps this `Decoder`, returning the underlying reader.",22,[[["self"]],["r"]]],[0,"gzip","libflate::non_blocking","The encoder and decoder of the GZIP format.",N,N],[3,"Decoder","libflate::non_blocking::gzip","GZIP decoder which supports non-blocking I/O.",N,N],[11,"new","","Makes a new decoder instance.",23,[[["r"]],["self"]]],[11,"header","","Returns the header of the GZIP stream.",23,[[["self"]],["result",["header"]]]],[11,"as_inner_ref","","Returns the immutable reference to the inner stream.",23,[[["self"]],["r"]]],[11,"as_inner_mut","","Returns the mutable reference to the inner stream.",23,[[["self"]],["r"]]],[11,"into_inner","","Unwraps this `Decoder`, returning the underlying reader.",23,[[["self"]],["r"]]],[0,"zlib","libflate::non_blocking","The encoder and decoder of the ZLIB format.",N,N],[3,"Decoder","libflate::non_blocking::zlib","ZLIB decoder which supports non-blocking I/O.",N,N],[11,"new","","Makes a new decoder instance.",24,[[["r"]],["self"]]],[11,"header","","Returns the header of the ZLIB stream.",24,[[["self"]],["result",["header"]]]],[11,"as_inner_ref","","Returns the immutable reference to the inner stream.",24,[[["self"]],["r"]]],[11,"as_inner_mut","","Returns the mutable reference to the inner stream.",24,[[["self"]],["r"]]],[11,"into_inner","","Unwraps this `Decoder`, returning the underlying reader.",24,[[["self"]],["r"]]],[0,"zlib","libflate","The encoder and decoder of the ZLIB format.",N,N],[3,"Header","libflate::zlib","ZLIB header.",N,N],[3,"Decoder","","ZLIB decoder.",N,N],[3,"EncodeOptions","","Options for a ZLIB encoder.",N,N],[3,"Encoder","","ZLIB encoder.",N,N],[4,"CompressionLevel","","Compression levels defined by the ZLIB format.",N,N],[13,"Fastest","","Compressor used fastest algorithm.",25,N],[13,"Fast","","Compressor used fast algorithm.",25,N],[13,"Default","","Compressor used default algorithm.",25,N],[13,"Slowest","","Compressor used maximum compression, slowest algorithm.",25,N],[4,"Lz77WindowSize","","LZ77 Window sizes defined by the ZLIB format.",N,N],[13,"B256","","256 bytes",26,N],[13,"B512","","512 btyes",26,N],[13,"KB1","","1 kilobyte",26,N],[13,"KB2","","2 kilobytes",26,N],[13,"KB4","","4 kitobytes",26,N],[13,"KB8","","8 kitobytes",26,N],[13,"KB16","","16 kitobytes",26,N],[13,"KB32","","32 kitobytes",26,N],[11,"from_u16","","Converts from `u16` to Lz77WindowSize`.",26,[[["u16"]],["self"]]],[11,"to_u16","","Converts from `Lz77WindowSize` to `u16`.",26,[[["self"]],["u16"]]],[11,"window_size","","Returns the LZ77 window size stored in the header.",27,[[["self"]],["lz77windowsize"]]],[11,"compression_level","","Returns the compression level stored in the header.",27,[[["self"]],["compressionlevel"]]],[11,"new","","Makes a new decoder instance.",28,[[["r"]],["result"]]],[11,"header","","Returns the header of the ZLIB stream.",28,[[["self"]],["header"]]],[11,"as_inner_ref","","Returns the immutable reference to the inner stream.",28,[[["self"]],["r"]]],[11,"as_inner_mut","","Returns the mutable reference to the inner stream.",28,[[["self"]],["r"]]],[11,"into_inner","","Unwraps this `Decoder`, returning the underlying reader.",28,[[["self"]],["r"]]],[11,"new","","Makes a default instance.",29,[[],["self"]]],[11,"with_lz77","","Specifies the LZ77 encoder used to compress input data.",29,[[["e"]],["self"]]],[11,"no_compression","","Disables LZ77 compression.",29,[[["self"]],["self"]]],[11,"block_size","","Specifies the hint of the size of a DEFLATE block.",29,[[["self"],["usize"]],["self"]]],[11,"fixed_huffman_codes","","Specifies to compress with fixed huffman codes.",29,[[["self"]],["self"]]],[11,"new","","Makes a new encoder instance.",30,[[["w"]],["result"]]],[11,"with_options","","Makes a new encoder instance with specified options.",30,[[["w"],["encodeoptions"]],["result"]]],[11,"header","","Returns the header of the ZLIB stream.",30,[[["self"]],["header"]]],[11,"finish","","Writes the ZLIB trailer and returns the inner stream.",30,[[["self"]],["finish",["error"]]]],[11,"as_inner_ref","","Returns the immutable reference to the inner stream.",30,[[["self"]],["w"]]],[11,"as_inner_mut","","Returns the mutable reference to the inner stream.",30,[[["self"]],["w"]]],[11,"into_inner","","Unwraps the `Encoder`, returning the inner stream.",30,[[["self"]],["w"]]],[11,"from","libflate::deflate","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","libflate::finish","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","libflate::gzip","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","libflate::lz77","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","libflate::non_blocking::deflate","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","libflate::non_blocking::gzip","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","libflate::non_blocking::zlib","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","libflate::zlib","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"complete","libflate::deflate","",2,[[["self"]],["result"]]],[11,"complete","libflate::gzip","",13,[[["self"]],["result"]]],[11,"complete","libflate::zlib","",30,[[["self"]],["result"]]],[11,"encode","libflate::lz77","",18,N],[11,"flush","","",18,[[["self"],["s"]]]],[11,"window_size","","",18,[[["self"]],["u16"]]],[11,"encode","","",21,N],[11,"flush","","",21,[[["self"],["s"]]]],[11,"compression_level","","",21,[[["self"]],["compressionlevel"]]],[11,"eq","libflate::deflate","",1,[[["self"],["encodeoptions"]],["bool"]]],[11,"ne","","",1,[[["self"],["encodeoptions"]],["bool"]]],[11,"eq","libflate::finish","",4,[[["self"],["finish"]],["bool"]]],[11,"ne","","",4,[[["self"],["finish"]],["bool"]]],[11,"eq","libflate::gzip","",8,[[["self"],["compressionlevel"]],["bool"]]],[11,"eq","","",7,[[["self"],["extrafield"]],["bool"]]],[11,"ne","","",7,[[["self"],["extrafield"]],["bool"]]],[11,"eq","","",9,[[["self"],["os"]],["bool"]]],[11,"ne","","",9,[[["self"],["os"]],["bool"]]],[11,"eq","libflate::lz77","",16,[[["self"],["code"]],["bool"]]],[11,"ne","","",16,[[["self"],["code"]],["bool"]]],[11,"eq","","",17,[[["self"],["compressionlevel"]],["bool"]]],[11,"eq","libflate::zlib","",25,[[["self"],["compressionlevel"]],["bool"]]],[11,"eq","","",26,[[["self"],["lz77windowsize"]],["bool"]]],[11,"eq","","",27,[[["self"],["header"]],["bool"]]],[11,"ne","","",27,[[["self"],["header"]],["bool"]]],[11,"default","libflate::deflate","",1,[[],["self"]]],[11,"default","libflate::finish","",4,[[],["finish"]]],[11,"default","libflate::gzip","",10,[[],["self"]]],[11,"default","","",12,[[],["self"]]],[11,"default","libflate::lz77","",18,[[],["self"]]],[11,"default","","",21,[[],["nocompressionlz77encoder"]]],[11,"default","libflate::zlib","",29,[[],["self"]]],[11,"cmp","libflate::finish","",4,[[["self"],["finish"]],["ordering"]]],[11,"cmp","libflate::zlib","",25,[[["self"],["compressionlevel"]],["ordering"]]],[11,"cmp","","",26,[[["self"],["lz77windowsize"]],["ordering"]]],[11,"clone","libflate::deflate","",1,[[["self"]],["encodeoptions"]]],[11,"clone","libflate::finish","",4,[[["self"]],["finish"]]],[11,"clone","libflate::gzip","",8,[[["self"]],["compressionlevel"]]],[11,"clone","","",10,[[["self"]],["headerbuilder"]]],[11,"clone","","",11,[[["self"]],["header"]]],[11,"clone","","",7,[[["self"]],["extrafield"]]],[11,"clone","","",9,[[["self"]],["os"]]],[11,"clone","libflate::lz77","",16,[[["self"]],["code"]]],[11,"clone","","",17,[[["self"]],["compressionlevel"]]],[11,"clone","libflate::zlib","",25,[[["self"]],["compressionlevel"]]],[11,"clone","","",26,[[["self"]],["lz77windowsize"]]],[11,"clone","","",27,[[["self"]],["header"]]],[11,"from","libflate::gzip","",8,[[["compressionlevel"]],["self"]]],[11,"from","libflate::zlib","",25,[[["compressionlevel"]],["self"]]],[11,"drop","libflate::finish","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"partial_cmp","","",4,[[["self"],["finish"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["finish"]],["bool"]]],[11,"le","","",4,[[["self"],["finish"]],["bool"]]],[11,"gt","","",4,[[["self"],["finish"]],["bool"]]],[11,"ge","","",4,[[["self"],["finish"]],["bool"]]],[11,"partial_cmp","libflate::zlib","",25,[[["self"],["compressionlevel"]],["option",["ordering"]]]],[11,"partial_cmp","","",26,[[["self"],["lz77windowsize"]],["option",["ordering"]]]],[11,"fmt","libflate::deflate","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","libflate::finish","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","libflate::gzip","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","libflate::lz77","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","libflate::non_blocking::deflate","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","libflate::non_blocking::gzip","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","libflate::non_blocking::zlib","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","libflate::zlib","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","libflate::finish","",5,N],[11,"deref_mut","","",6,N],[11,"hash","libflate::deflate","",1,N],[11,"hash","libflate::finish","",4,N],[11,"hash","libflate::gzip","",8,N],[11,"hash","","",7,N],[11,"hash","","",9,N],[11,"hash","libflate::lz77","",16,N],[11,"hash","","",17,N],[11,"hash","libflate::zlib","",25,N],[11,"hash","","",26,N],[11,"hash","","",27,N],[11,"deref","libflate::finish","",5,N],[11,"deref","","",6,N],[11,"read","libflate::deflate","",0,N],[11,"read","libflate::gzip","",14,N],[11,"read","","",15,N],[11,"read","libflate::non_blocking::deflate","",22,N],[11,"read","libflate::non_blocking::gzip","",23,N],[11,"read","libflate::non_blocking::zlib","",24,N],[11,"read","libflate::zlib","",28,N],[11,"write","libflate::deflate","",2,N],[11,"flush","","",2,[[["self"]],["result"]]],[11,"write","libflate::finish","",5,N],[11,"flush","","",5,[[["self"]],["result"]]],[11,"write","","",6,N],[11,"flush","","",6,[[["self"]],["result"]]],[11,"write","libflate::gzip","",13,N],[11,"flush","","",13,[[["self"]],["result"]]],[11,"write","libflate::zlib","",30,N],[11,"flush","","",30,[[["self"]],["result"]]]],"paths":[[3,"Decoder"],[3,"EncodeOptions"],[3,"Encoder"],[8,"Complete"],[3,"Finish"],[3,"AutoFinish"],[3,"AutoFinishUnchecked"],[3,"ExtraField"],[4,"CompressionLevel"],[4,"Os"],[3,"HeaderBuilder"],[3,"Header"],[3,"EncodeOptions"],[3,"Encoder"],[3,"Decoder"],[3,"MultiDecoder"],[4,"Code"],[4,"CompressionLevel"],[3,"DefaultLz77Encoder"],[8,"Sink"],[8,"Lz77Encode"],[3,"NoCompressionLz77Encoder"],[3,"Decoder"],[3,"Decoder"],[3,"Decoder"],[4,"CompressionLevel"],[4,"Lz77WindowSize"],[3,"Header"],[3,"Decoder"],[3,"EncodeOptions"],[3,"Encoder"]]};
searchIndex["lock_api"]={"doc":"This library provides type-safe and fully-featured `Mutex`…","items":[[3,"GuardSend","lock_api","Marker type which indicates that the Guard type for a lock…",N,N],[3,"GuardNoSend","","Marker type which indicates that the Guard type for a lock…",N,N],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared…",N,N],[3,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When…",N,N],[3,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which…",N,N],[3,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",N,N],[3,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant…",N,N],[3,"MappedReentrantMutexGuard","","An RAII mutex guard returned by…",N,N],[3,"RwLock","","A reader-writer lock",N,N],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",N,N],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",N,N],[3,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access…",N,N],[3,"MappedRwLockReadGuard","","An RAII read lock guard returned by…",N,N],[3,"MappedRwLockWriteGuard","","An RAII write lock guard returned by…",N,N],[11,"new","","Creates a new mutex in an unlocked state ready for use.",0,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,[[["self"]],["t"]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is…",0,[[["self"]],["mutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",0,[[["self"]],["option",["mutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,[[["self"]],["t"]]],[11,"force_unlock","","Forcibly unlocks the mutex.",0,[[["self"]]]],[11,"raw","","Returns the underlying raw mutex object.",0,[[["self"]],["r"]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock procotol.",0,[[["self"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",0,N],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",0,N],[11,"mutex","","Returns a reference to the original `Mutex` object.",1,[[["self"]],["mutex"]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the…",1,[[["self"],["f"]],["mappedmutexguard"]]],[11,"try_map","","Attempts to make a new `MappedMutexGuard` for a component…",1,[[["self"],["f"]],["result",["mappedmutexguard"]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",1,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",1,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",1,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",1,[[["self"]]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the…",2,[[["self"],["f"]],["mappedmutexguard"]]],[11,"try_map","","Attempts to make a new `MappedMutexGuard` for a component…",2,[[["self"],["f"]],["result",["mappedmutexguard"]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",2,[[["self"]]]],[11,"new","","Creates a new reentrant mutex in an unlocked state ready…",3,[[["t"]],["reentrantmutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",3,[[["self"]],["t"]]],[11,"lock","","Acquires a reentrant mutex, blocking the current thread…",3,[[["self"]],["reentrantmutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",3,[[["self"]],["option",["reentrantmutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",3,[[["self"]],["t"]]],[11,"force_unlock","","Forcibly unlocks the mutex.",3,[[["self"]]]],[11,"raw","","Returns the underlying raw mutex object.",3,[[["self"]],["r"]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock procotol.",3,[[["self"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",3,N],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",3,N],[11,"remutex","","Returns a reference to the original `ReentrantMutex` object.",4,[[["self"]],["reentrantmutex"]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of…",4,[[["self"],["f"]],["mappedreentrantmutexguard"]]],[11,"try_map","","Attempts to make a new `MappedReentrantMutexGuard` for a…",4,[[["self"],["f"]],["result",["mappedreentrantmutexguard"]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",4,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",4,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",4,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",4,[[["self"]]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of…",5,[[["self"],["f"]],["mappedreentrantmutexguard"]]],[11,"try_map","","Attempts to make a new `MappedReentrantMutexGuard` for a…",5,[[["self"],["f"]],["result",["mappedreentrantmutexguard"]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",5,[[["self"]]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",6,[[["t"]],["rwlock"]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",6,[[["self"]],["t"]]],[11,"read","","Locks this `RwLock` with shared read access, blocking the…",6,[[["self"]],["rwlockreadguard"]]],[11,"try_read","","Attempts to acquire this `RwLock` with shared read access.",6,[[["self"]],["option",["rwlockreadguard"]]]],[11,"write","","Locks this `RwLock` with exclusive write access, blocking…",6,[[["self"]],["rwlockwriteguard"]]],[11,"try_write","","Attempts to lock this `RwLock` with exclusive write access.",6,[[["self"]],["option",["rwlockwriteguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],["t"]]],[11,"force_unlock_read","","Forcibly unlocks a read lock.",6,[[["self"]]]],[11,"force_unlock_write","","Forcibly unlocks a write lock.",6,[[["self"]]]],[11,"raw","","Returns the underlying raw reader-writer lock object.",6,[[["self"]],["r"]]],[11,"force_unlock_read_fair","","Forcibly unlocks a read lock using a fair unlock procotol.",6,[[["self"]]]],[11,"force_unlock_write_fair","","Forcibly unlocks a write lock using a fair unlock procotol.",6,[[["self"]]]],[11,"try_read_for","","Attempts to acquire this `RwLock` with shared read access…",6,N],[11,"try_read_until","","Attempts to acquire this `RwLock` with shared read access…",6,N],[11,"try_write_for","","Attempts to acquire this `RwLock` with exclusive write…",6,N],[11,"try_write_until","","Attempts to acquire this `RwLock` with exclusive write…",6,N],[11,"read_recursive","","Locks this `RwLock` with shared read access, blocking the…",6,[[["self"]],["rwlockreadguard"]]],[11,"try_read_recursive","","Attempts to acquire this `RwLock` with shared read access.",6,[[["self"]],["option",["rwlockreadguard"]]]],[11,"try_read_recursive_for","","Attempts to acquire this `RwLock` with shared read access…",6,N],[11,"try_read_recursive_until","","Attempts to acquire this `RwLock` with shared read access…",6,N],[11,"upgradable_read","","Locks this `RwLock` with upgradable read access, blocking…",6,[[["self"]],["rwlockupgradablereadguard"]]],[11,"try_upgradable_read","","Attempts to acquire this `RwLock` with upgradable read…",6,[[["self"]],["option",["rwlockupgradablereadguard"]]]],[11,"try_upgradable_read_for","","Attempts to acquire this `RwLock` with upgradable read…",6,N],[11,"try_upgradable_read_until","","Attempts to acquire this `RwLock` with upgradable read…",6,N],[11,"rwlock","","Returns a reference to the original reader-writer lock…",7,[[["self"]],["rwlock"]]],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the…",7,[[["self"],["f"]],["mappedrwlockreadguard"]]],[11,"try_map","","Attempts to make a new `MappedRwLockReadGuard` for a…",7,[[["self"],["f"]],["result",["mappedrwlockreadguard"]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",7,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",7,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",7,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",7,[[["self"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",8,[[["self"]],["rwlock"]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the…",8,[[["self"],["f"]],["mappedrwlockwriteguard"]]],[11,"try_map","","Attempts to make a new `MappedRwLockWriteGuard` for a…",8,[[["self"],["f"]],["result",["mappedrwlockwriteguard"]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",8,[[["self"],["f"]],["u"]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock…",8,[[["self"]],["rwlockreadguard"]]],[11,"downgrade_to_upgradable","","Atomically downgrades a write lock into an upgradable read…",8,[[["self"]],["rwlockupgradablereadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",8,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",8,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",8,[[["self"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",9,[[["self"]],["rwlock"]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",9,[[["self"],["f"]],["u"]]],[11,"upgrade","","Atomically upgrades an upgradable read lock lock into a…",9,[[["self"]],["rwlockwriteguard"]]],[11,"try_upgrade","","Tries to atomically upgrade an upgradable read lock into a…",9,[[["self"]],["result",["rwlockwriteguard"]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",9,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",9,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",9,[[["self"]]]],[11,"downgrade","","Atomically downgrades an upgradable read lock lock into a…",9,[[["self"]],["rwlockreadguard"]]],[11,"try_upgrade_for","","Tries to atomically upgrade an upgradable read lock into a…",9,N],[11,"try_upgrade_until","","Tries to atomically upgrade an upgradable read lock into a…",9,N],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the…",10,[[["self"],["f"]],["mappedrwlockreadguard"]]],[11,"try_map","","Attempts to make a new `MappedRwLockReadGuard` for a…",10,[[["self"],["f"]],["result",["mappedrwlockreadguard"]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",10,[[["self"]]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the…",11,[[["self"],["f"]],["mappedrwlockwriteguard"]]],[11,"try_map","","Attempts to make a new `MappedRwLockWriteGuard` for a…",11,[[["self"],["f"]],["result",["mappedrwlockwriteguard"]]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock…",11,[[["self"]],["mappedrwlockreadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",11,[[["self"]]]],[8,"RawMutex","","Basic operations for a mutex.",N,N],[18,"INIT","","Initial value for an unlocked mutex.",12,N],[16,"GuardMarker","","Marker type which determines whether a lock guard should…",12,N],[10,"lock","","Acquires this mutex, blocking the current thread until it…",12,[[["self"]]]],[10,"try_lock","","Attempts to acquire this mutex without blocking.",12,[[["self"]],["bool"]]],[10,"unlock","","Unlocks this mutex.",12,[[["self"]]]],[8,"RawMutexFair","","Additional methods for mutexes which support fair unlocking.",N,N],[10,"unlock_fair","","Unlocks this mutex using a fair unlock protocol.",13,[[["self"]]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",13,[[["self"]]]],[8,"RawMutexTimed","","Additional methods for mutexes which support locking with…",N,N],[16,"Duration","","Duration type used for `try_lock_for`.",14,N],[16,"Instant","","Instant type used for `try_lock_until`.",14,N],[10,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",14,N],[10,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",14,N],[8,"GetThreadId","","Helper trait which returns a non-zero thread ID.",N,N],[18,"INIT","","Initial value.",15,N],[10,"nonzero_thread_id","","Returns a non-zero thread ID which identifies the current…",15,[[["self"]],["usize"]]],[8,"RawRwLock","","Basic operations for a reader-writer lock.",N,N],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,N],[16,"GuardMarker","","Marker type which determines whether a lock guard should…",16,N],[10,"lock_shared","","Acquires a shared lock, blocking the current thread until…",16,[[["self"]]]],[10,"try_lock_shared","","Attempts to acquire a shared lock without blocking.",16,[[["self"]],["bool"]]],[10,"unlock_shared","","Releases a shared lock.",16,[[["self"]]]],[10,"lock_exclusive","","Acquires an exclusive lock, blocking the current thread…",16,[[["self"]]]],[10,"try_lock_exclusive","","Attempts to acquire an exclusive lock without blocking.",16,[[["self"]],["bool"]]],[10,"unlock_exclusive","","Releases an exclusive lock.",16,[[["self"]]]],[8,"RawRwLockFair","","Additional methods for RwLocks which support fair unlocking.",N,N],[10,"unlock_shared_fair","","Releases a shared lock using a fair unlock protocol.",17,[[["self"]]]],[10,"unlock_exclusive_fair","","Releases an exclusive lock using a fair unlock protocol.",17,[[["self"]]]],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if…",17,[[["self"]]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread…",17,[[["self"]]]],[8,"RawRwLockDowngrade","","Additional methods for RwLocks which support atomically…",N,N],[10,"downgrade","","Atomically downgrades an exclusive lock into a shared lock…",18,[[["self"]]]],[8,"RawRwLockTimed","","Additional methods for RwLocks which support locking with…",N,N],[16,"Duration","","Duration type used for `try_lock_for`.",19,N],[16,"Instant","","Instant type used for `try_lock_until`.",19,N],[10,"try_lock_shared_for","","Attempts to acquire a shared lock until a timeout is…",19,N],[10,"try_lock_shared_until","","Attempts to acquire a shared lock until a timeout is…",19,N],[10,"try_lock_exclusive_for","","Attempts to acquire an exclusive lock until a timeout is…",19,N],[10,"try_lock_exclusive_until","","Attempts to acquire an exclusive lock until a timeout is…",19,N],[8,"RawRwLockRecursive","","Additional methods for RwLocks which support recursive…",N,N],[10,"lock_shared_recursive","","Acquires a shared lock without deadlocking in case of a…",20,[[["self"]]]],[10,"try_lock_shared_recursive","","Attempts to acquire a shared lock without deadlocking in…",20,[[["self"]],["bool"]]],[8,"RawRwLockRecursiveTimed","","Additional methods for RwLocks which support recursive…",N,N],[10,"try_lock_shared_recursive_for","","Attempts to acquire a shared lock until a timeout is…",21,N],[10,"try_lock_shared_recursive_until","","Attempts to acquire a shared lock until a timeout is…",21,N],[8,"RawRwLockUpgrade","","Additional methods for RwLocks which support atomically…",N,N],[10,"lock_upgradable","","Acquires an upgradable lock, blocking the current thread…",22,[[["self"]]]],[10,"try_lock_upgradable","","Attempts to acquire an upgradable lock without blocking.",22,[[["self"]],["bool"]]],[10,"unlock_upgradable","","Releases an upgradable lock.",22,[[["self"]]]],[10,"upgrade","","Upgrades an upgradable lock to an exclusive lock.",22,[[["self"]]]],[10,"try_upgrade","","Attempts to upgrade an upgradable lock to an exclusive…",22,[[["self"]],["bool"]]],[8,"RawRwLockUpgradeFair","","Additional methods for RwLocks which support upgradable…",N,N],[10,"unlock_upgradable_fair","","Releases an upgradable lock using a fair unlock protocol.",23,[[["self"]]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread…",23,[[["self"]]]],[8,"RawRwLockUpgradeDowngrade","","Additional methods for RwLocks which support upgradable…",N,N],[10,"downgrade_upgradable","","Downgrades an upgradable lock to a shared lock.",24,[[["self"]]]],[10,"downgrade_to_upgradable","","Downgrades an exclusive lock to an upgradable lock.",24,[[["self"]]]],[8,"RawRwLockUpgradeTimed","","Additional methods for RwLocks which support upgradable…",N,N],[10,"try_lock_upgradable_for","","Attempts to acquire an upgradable lock until a timeout is…",25,N],[10,"try_lock_upgradable_until","","Attempts to acquire an upgradable lock until a timeout is…",25,N],[10,"try_upgrade_for","","Attempts to upgrade an upgradable lock to an exclusive…",25,N],[10,"try_upgrade_until","","Attempts to upgrade an upgradable lock to an exclusive…",25,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"from","","",0,[[["t"]],["mutex"]]],[11,"from","","",3,[[["t"]],["reentrantmutex"]]],[11,"from","","",6,[[["t"]],["rwlock"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref","","",5,[[["self"]],["t"]]],[11,"deref","","",7,[[["self"]],["t"]]],[11,"deref","","",8,[[["self"]],["t"]]],[11,"deref","","",9,[[["self"]],["t"]]],[11,"deref","","",10,[[["self"]],["t"]]],[11,"deref","","",11,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",8,[[["self"]],["t"]]],[11,"deref_mut","","",11,[[["self"]],["t"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"drop","","",8,[[["self"]]]],[11,"drop","","",9,[[["self"]]]],[11,"drop","","",10,[[["self"]]]],[11,"drop","","",11,[[["self"]]]],[11,"default","","",0,[[],["mutex"]]],[11,"default","","",3,[[],["reentrantmutex"]]],[11,"default","","",6,[[],["rwlock"]]],[18,"INIT","","Initial value for an unlocked mutex.",12,N],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",13,[[["self"]]]],[18,"INIT","","Initial value.",15,N],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,N],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if…",17,[[["self"]]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread…",17,[[["self"]]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread…",23,[[["self"]]]]],"paths":[[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawMutex"],[8,"RawMutexFair"],[8,"RawMutexTimed"],[8,"GetThreadId"],[8,"RawRwLock"],[8,"RawRwLockFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursive"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgrade"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockUpgradeTimed"],[3,"GuardSend"],[3,"GuardNoSend"]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","items":[[3,"Record","log","The \"payload\" of a log message.",N,N],[3,"RecordBuilder","","Builder for `Record`.",N,N],[3,"Metadata","","Metadata about a log message.",N,N],[3,"MetadataBuilder","","Builder for `Metadata`.",N,N],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",N,N],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",N,N],[4,"Level","","An enum representing the available verbosity levels of the…",N,N],[13,"Error","","The \"error\" level.",0,N],[13,"Warn","","The \"warn\" level.",0,N],[13,"Info","","The \"info\" level.",0,N],[13,"Debug","","The \"debug\" level.",0,N],[13,"Trace","","The \"trace\" level.",0,N],[4,"LevelFilter","","An enum representing the available verbosity level filters…",N,N],[13,"Off","","A level lower than all log levels.",1,N],[13,"Error","","Corresponds to the `Error` log level.",1,N],[13,"Warn","","Corresponds to the `Warn` log level.",1,N],[13,"Info","","Corresponds to the `Info` log level.",1,N],[13,"Debug","","Corresponds to the `Debug` log level.",1,N],[13,"Trace","","Corresponds to the `Trace` log level.",1,N],[5,"set_max_level","","Sets the global maximum log level.",N,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",N,[[],["levelfilter"]]],[5,"set_boxed_logger","","Sets the global logger to a `Box<Log>`.",N,[[["box",["log"]]],["result",["setloggererror"]]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",N,[[["log"]],["result",["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",N,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",N,N],[8,"Log","","A trait encapsulating the operations required of a logger.",N,N],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["self"],["record"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],["option",["level"]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],["option",["str"]]]],[11,"file","","The source file containing the message.",3,[[["self"]],["option",["str"]]]],[11,"line","","The line containing the message.",3,[[["self"]],["option",["u32"]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["self"],["arguments"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["self"],["option",["str"]]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["self"],["option",["str"]]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["self"],["option",["u32"]]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",N,N],[14,"error","","Logs a message at the error level.",N,N],[14,"warn","","Logs a message at the warn level.",N,N],[14,"info","","Logs a message at the info level.",N,N],[14,"debug","","Logs a message at the debug level.",N,N],[14,"trace","","Logs a message at the trace level.",N,N],[14,"log_enabled","","Determines if a message logged at the specified level in…",N,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["level"]],["bool"]]],[11,"eq","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["level"]],["bool"]]],[11,"eq","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ne","","",5,[[["self"],["metadata"]],["bool"]]],[11,"eq","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ne","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"eq","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"ne","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"cmp","","",0,[[["self"],["level"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["levelfilter"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["metadata"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["metadatabuilder"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]],[11,"partial_cmp","","",0,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["level"]],["bool"]]],[11,"le","","",0,[[["self"],["level"]],["bool"]]],[11,"gt","","",0,[[["self"],["level"]],["bool"]]],[11,"ge","","",0,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["level"]],["bool"]]],[11,"le","","",1,[[["self"],["level"]],["bool"]]],[11,"gt","","",1,[[["self"],["level"]],["bool"]]],[11,"ge","","",1,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["metadata"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"le","","",5,[[["self"],["metadata"]],["bool"]]],[11,"gt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ge","","",5,[[["self"],["metadata"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["metadatabuilder"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"le","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"gt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ge","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",5,N],[11,"hash","","",6,N],[11,"from_str","","",0,[[["str"]],["result",["level"]]]],[11,"from_str","","",1,[[["str"]],["result",["levelfilter"]]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]]],"paths":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["matches"]={"doc":"","items":[[14,"matches","matches","Check if an expression matches a refutable pattern.",N,N],[14,"assert_matches","","Assert that an expression matches a refutable pattern.",N,N],[14,"debug_assert_matches","","Assert that an expression matches a refutable pattern…",N,N]],"paths":[]};
searchIndex["mdbook"]={"doc":"mdBook","items":[[4,"BookItem","mdbook","Enum representing any type of item which can be added to a…",N,N],[13,"Chapter","","A nested chapter.",0,N],[13,"Separator","","A section separator.",0,N],[0,"book","","The internal representation of a book and infrastructure…",N,N],[3,"Book","mdbook::book","A dumb tree structure representing a book.",N,N],[12,"sections","","The sections in this book.",1,N],[3,"BookItems","","A depth-first iterator over the items in a book.",N,N],[3,"Chapter","","The representation of a \"chapter\", usually mapping to a…",N,N],[12,"name","","The chapter's name.",2,N],[12,"content","","The chapter's contents.",2,N],[12,"number","","The chapter's section number, if it has one.",2,N],[12,"sub_items","","Nested items.",2,N],[12,"path","","The chapter's location, relative to the `SUMMARY.md` file.",2,N],[12,"parent_names","","An ordered list of the names of each chapter above this…",2,N],[3,"BookBuilder","","A helper for setting up a new book and its directory…",N,N],[3,"Link","","A struct representing an entry in the `SUMMARY.md`,…",N,N],[12,"name","","The name of the chapter.",3,N],[12,"location","","The location of the chapter's source file, taking the…",3,N],[12,"number","","The section number, if this chapter is in the numbered…",3,N],[12,"nested_items","","Any nested items this chapter may contain.",3,N],[3,"SectionNumber","","A section number like \"1.2.3\", basically just a newtype'd…",N,N],[12,"0","","",4,N],[3,"Summary","","The parsed `SUMMARY.md`, specifying how the book should be…",N,N],[12,"title","","An optional title for the `SUMMARY.md`, currently just…",5,N],[12,"prefix_chapters","","Chapters before the main text (e.g. an introduction).",5,N],[12,"numbered_chapters","","The main chapters in the document.",5,N],[12,"suffix_chapters","","Items which come after the main document (e.g. a…",5,N],[3,"MDBook","","The object used to manage and build a book.",N,N],[12,"root","","The book's root directory.",6,N],[12,"config","","The configuration used to tweak now a book is built.",6,N],[12,"book","","A representation of the book's contents in memory.",6,N],[4,"BookItem","","Enum representing any type of item which can be added to a…",N,N],[13,"Chapter","","A nested chapter.",0,N],[13,"Separator","","A section separator.",0,N],[4,"SummaryItem","","An item in `SUMMARY.md` which could be either a separator…",N,N],[13,"Link","","A link to a chapter.",7,N],[13,"Separator","","A separator (`---`).",7,N],[5,"load_book","","Load a book into memory from its `src/` directory.",N,[[["p"],["buildconfig"]],["result",["book"]]]],[5,"parse_summary","","Parse the text from a `SUMMARY.md` file into a sort of…",N,[[["str"]],["result",["summary"]]]],[11,"new","","Create an empty book.",1,[[],["self"]]],[11,"iter","","Get a depth-first iterator over the items in the book.",1,[[["self"]],["bookitems"]]],[11,"for_each_mut","","Recursively apply a closure to each item in the book,…",1,[[["self"],["f"]]]],[11,"push_item","","Append a `BookItem` to the `Book`.",1,[[["self"],["i"]],["self"]]],[11,"new","","Create a new chapter with the provided content.",2,[[["str"],["string"],["p"],["vec",["string"]]],["chapter"]]],[11,"new","","Create a new `BookBuilder` which will generate a book in…",8,[[["p"]],["bookbuilder"]]],[11,"with_config","","Set the `Config` to be used.",8,[[["self"],["config"]],["bookbuilder"]]],[11,"config","","Get the config used by the `BookBuilder`.",8,[[["self"]],["config"]]],[11,"copy_theme","","Should the theme be copied into the generated book (so…",8,[[["self"],["bool"]],["bookbuilder"]]],[11,"create_gitignore","","Should we create a `.gitignore` file?",8,[[["self"],["bool"]],["bookbuilder"]]],[11,"build","","Generate the actual book. This will:",8,[[["self"]],["result",["mdbook"]]]],[11,"new","","Create a new link with no nested items.",3,[[["s"],["p"]],["link"]]],[11,"load","","Load a book from its root directory on disk.",6,[[["p"]],["result",["mdbook"]]]],[11,"load_with_config","","Load a book from its root directory using a custom config.",6,[[["p"],["config"]],["result",["mdbook"]]]],[11,"iter","","Returns a flat depth-first iterator over the elements of…",6,[[["self"]],["bookitems"]]],[11,"init","","`init()` gives you a `BookBuilder` which you can use to…",6,[[["p"]],["bookbuilder"]]],[11,"build","","Tells the renderer to build our book and put it in the…",6,[[["self"]],["result"]]],[11,"with_renderer","","You can change the default renderer to another one by…",6,[[["self"],["r"]],["self"]]],[11,"with_preprecessor","","Register a `Preprocessor` to be used when rendering the…",6,[[["self"],["p"]],["self"]]],[11,"test","","Run `rustdoc` tests on the book, linking against the…",6,[[["self"],["vec",["str"]]],["result"]]],[11,"build_dir_for","","The logic for determining where a backend should put its…",6,[[["self"],["str"]],["pathbuf"]]],[11,"source_dir","","Get the directory containing this book's source files.",6,[[["self"]],["pathbuf"]]],[11,"theme_dir","","Get the directory containing the theme resources for the…",6,[[["self"]],["pathbuf"]]],[0,"config","mdbook","Mdbook's configuration system.",N,N],[3,"Config","mdbook::config","The overall configuration object for MDBook, essentially…",N,N],[12,"book","","Metadata about the book.",9,N],[12,"build","","Information about the build environment.",9,N],[3,"BookConfig","","Configuration options which are specific to the book and…",N,N],[12,"title","","The book's title.",10,N],[12,"authors","","The book's authors.",10,N],[12,"description","","An optional description for the book.",10,N],[12,"src","","Location of the book source relative to the book's root…",10,N],[12,"multilingual","","Does this book support more than one language?",10,N],[3,"BuildConfig","","Configuration for the build procedure.",N,N],[12,"build_dir","","Where to put built artefacts relative to the book's root…",11,N],[12,"create_missing","","Should non-existent markdown files specified in…",11,N],[12,"use_default_preprocessors","","Should the default preprocessors always be used when they…",11,N],[3,"HtmlConfig","","Configuration for the HTML renderer.",N,N],[12,"theme","","The theme directory, if specified.",12,N],[12,"curly_quotes","","Use \"smart quotes\" instead of the usual `\"` character.",12,N],[12,"mathjax_support","","Should mathjax be enabled?",12,N],[12,"google_analytics","","An optional google analytics code.",12,N],[12,"additional_css","","Additional CSS stylesheets to include in the rendered…",12,N],[12,"additional_js","","Additional JS scripts to include at the bottom of the…",12,N],[12,"playpen","","Playpen settings.",12,N],[12,"no_section_label","","Should section labels be rendered?",12,N],[12,"search","","Search settings. If `None`, the default will be used.",12,N],[3,"Playpen","","Configuration for tweaking how the the HTML renderer…",N,N],[12,"editable","","Should playpen snippets be editable? Default: `false`.",13,N],[12,"copy_js","","Copy JavaScript files for the editor to the output…",13,N],[3,"Search","","Configuration of the search functionality of the HTML…",N,N],[12,"enable","","Enable the search feature. Default: `true`.",14,N],[12,"limit_results","","Maximum number of visible results. Default: `30`.",14,N],[12,"teaser_word_count","","The number of words used for a search result teaser.…",14,N],[12,"use_boolean_and","","Define the logical link between multiple search words. If…",14,N],[12,"boost_title","","Boost factor for the search result score if a search word…",14,N],[12,"boost_hierarchy","","Boost factor for the search result score if a search word…",14,N],[12,"boost_paragraph","","Boost factor for the search result score if a search word…",14,N],[12,"expand","","True if the searchword `micro` should match `microwave`.…",14,N],[12,"heading_split_level","","Documents are split into smaller parts, seperated by…",14,N],[12,"copy_js","","Copy JavaScript files for the search functionality to the…",14,N],[11,"from_str","","Load a `Config` from some string.",9,[[["str"]],["result",["config"]]]],[11,"from_disk","","Load the configuration file from disk.",9,[[["p"]],["result",["config"]]]],[11,"update_from_env","","Updates the `Config` from the available environment…",9,[[["self"]]]],[11,"get","","Fetch an arbitrary item from the `Config` as a…",9,[[["self"],["str"]],["option",["value"]]]],[11,"get_mut","","Fetch a value from the `Config` so you can mutate it.",9,[[["self"],["str"]],["option",["value"]]]],[11,"get_deserialized","","Convenience function to fetch a value from the config and…",9,[[["self"],["s"]],["result"]]],[11,"set","","Set a config key, clobbering any existing values along the…",9,[[["self"],["i"],["s"]],["result"]]],[11,"get_renderer","","Get the table associated with a particular renderer.",9,[[["self"],["i"]],["option",["table"]]]],[11,"get_preprocessor","","Get the table associated with a particular preprocessor.",9,[[["self"],["i"]],["option",["table"]]]],[11,"theme_dir","","Returns the directory of theme from the provided root…",12,[[["self"],["pathbuf"]],["pathbuf"]]],[0,"preprocess","mdbook","Book preprocessing.",N,N],[3,"IndexPreprocessor","mdbook::preprocess","A preprocessor for converting file name `README.md` to…",N,N],[3,"LinkPreprocessor","","A preprocessor for expanding the `{{# playpen}}` and `{{#…",N,N],[3,"CmdPreprocessor","","A custom preprocessor which will shell out to a 3rd-party…",N,N],[3,"PreprocessorContext","","Extra information for a `Preprocessor` to give them more…",N,N],[12,"root","","The location of the book directory on disk.",15,N],[12,"config","","The book configuration (`book.toml`).",15,N],[12,"renderer","","The `Renderer` this preprocessor is being used with.",15,N],[12,"mdbook_version","","The calling `mdbook` version.",15,N],[11,"new","","Create a new `IndexPreprocessor`.",16,[[],["self"]]],[11,"new","","Create a new `LinkPreprocessor`.",17,[[],["self"]]],[11,"new","","Create a new `CmdPreprocessor`.",18,[[["string"],["string"]],["cmdpreprocessor"]]],[11,"parse_input","","A convenience function custom preprocessors can use to…",18,[[["r"]],["result"]]],[11,"cmd","","The command this `Preprocessor` will invoke.",18,[[["self"]],["str"]]],[8,"Preprocessor","","An operation which is run immediately after loading a book…",N,N],[10,"name","","Get the `Preprocessor`'s name.",19,[[["self"]],["str"]]],[10,"run","","Run this `Preprocessor`, allowing it to update the book…",19,[[["self"],["preprocessorcontext"],["book"]],["result",["book"]]]],[11,"supports_renderer","","A hint to `MDBook` whether this preprocessor is compatible…",19,[[["self"],["str"]],["bool"]]],[0,"renderer","mdbook","`mdbook`'s low level rendering interface.",N,N],[3,"HtmlHandlebars","mdbook::renderer","",N,N],[3,"RenderContext","","The context provided to all renderers.",N,N],[12,"version","","Which version of `mdbook` did this come from (as written…",20,N],[12,"root","","The book's root directory.",20,N],[12,"book","","A loaded representation of the book itself.",20,N],[12,"config","","The loaded configuration file.",20,N],[12,"destination","","Where the renderer must put any build artefacts generated.…",20,N],[3,"CmdRenderer","","A generic renderer which will shell out to an arbitrary…",N,N],[11,"new","","",21,[[],["self"]]],[8,"Renderer","","An arbitrary `mdbook` backend.",N,N],[10,"name","","The `Renderer`'s name.",22,[[["self"]],["str"]]],[10,"render","","Invoke the `Renderer`, passing in all the necessary…",22,[[["self"],["rendercontext"]],["result"]]],[11,"new","","Create a new `RenderContext`.",20,[[["p"],["book"],["config"],["q"]],["rendercontext"]]],[11,"source_dir","","Get the source directory's (absolute) path on disk.",20,[[["self"]],["pathbuf"]]],[11,"from_json","","Load a `RenderContext` from its JSON representation.",20,[[["r"]],["result",["rendercontext"]]]],[11,"new","","Create a new `CmdRenderer` which will invoke the provided…",23,[[["string"],["string"]],["cmdrenderer"]]],[0,"theme","mdbook","",N,N],[3,"Theme","mdbook::theme","The `Theme` struct should be used instead of the static…",N,N],[12,"index","","",24,N],[12,"header","","",24,N],[12,"chrome_css","","",24,N],[12,"general_css","","",24,N],[12,"print_css","","",24,N],[12,"variables_css","","",24,N],[12,"favicon","","",24,N],[12,"js","","",24,N],[12,"highlight_css","","",24,N],[12,"tomorrow_night_css","","",24,N],[12,"ayu_highlight_css","","",24,N],[12,"highlight_js","","",24,N],[12,"clipboard_js","","",24,N],[0,"playpen_editor","","Theme dependencies for the playpen editor.",N,N],[7,"JS","mdbook::theme::playpen_editor","",N,N],[7,"ACE_JS","","",N,N],[7,"MODE_RUST_JS","","",N,N],[7,"THEME_DAWN_JS","","",N,N],[7,"THEME_TOMORROW_NIGHT_JS","","",N,N],[7,"INDEX","mdbook::theme","",N,N],[7,"HEADER","","",N,N],[7,"CHROME_CSS","","",N,N],[7,"GENERAL_CSS","","",N,N],[7,"PRINT_CSS","","",N,N],[7,"VARIABLES_CSS","","",N,N],[7,"FAVICON","","",N,N],[7,"JS","","",N,N],[7,"HIGHLIGHT_JS","","",N,N],[7,"TOMORROW_NIGHT_CSS","","",N,N],[7,"HIGHLIGHT_CSS","","",N,N],[7,"AYU_HIGHLIGHT_CSS","","",N,N],[7,"CLIPBOARD_JS","","",N,N],[7,"FONT_AWESOME","","",N,N],[7,"FONT_AWESOME_EOT","","",N,N],[7,"FONT_AWESOME_SVG","","",N,N],[7,"FONT_AWESOME_TTF","","",N,N],[7,"FONT_AWESOME_WOFF","","",N,N],[7,"FONT_AWESOME_WOFF2","","",N,N],[7,"FONT_AWESOME_OTF","","",N,N],[11,"new","","Creates a `Theme` from the given `theme_dir`. If a file is…",24,[[["p"]],["self"]]],[0,"utils","mdbook","",N,N],[5,"take_lines","mdbook::utils","Take a range of lines from a string.",N,[[["str"],["r"]],["string"]]],[5,"collapse_whitespace","","Replaces multiple consecutive whitespace characters with a…",N,[[["str"]],["cow",["str"]]]],[5,"normalize_id","","Convert the given string to a valid HTML element ID",N,[[["str"]],["string"]]],[5,"id_from_content","","Generate an ID for use with anchors which is derived from…",N,[[["str"]],["string"]]],[5,"render_markdown","","Wrapper around the pulldown-cmark parser for rendering…",N,[[["str"],["bool"]],["string"]]],[5,"log_backtrace","","Prints a \"backtrace\" of some `Error`.",N,[[["error"]]]],[0,"fs","","",N,N],[5,"file_to_string","mdbook::utils::fs","Takes a path to a file and try to read the file into a…",N,[[["p"]],["result",["string"]]]],[5,"normalize_path","","Naively replaces any path seperator with a forward-slash '/'",N,[[["str"]],["string"]]],[5,"write_file","","Write the given data to a file, creating it first if…",N,N],[5,"path_to_root","","Takes a path and returns a path containing just enough…",N,[[["p"]],["string"]]],[5,"create_file","","This function creates a file and returns it. But before…",N,[[["path"]],["result",["file"]]]],[5,"remove_dir_content","","Removes all the content of a directory but not the…",N,[[["path"]],["result"]]],[5,"copy_files_except_ext","","Copies all files of a directory to another one except the…",N,N],[8,"RangeArgument","mdbook::utils","",N,N],[10,"start","","",25,[[["self"]],["option"]]],[10,"end","","",25,[[["self"]],["option"]]],[0,"errors","mdbook","The error types used through out this crate.",N,N],[3,"Error","mdbook::errors","The Error type.",N,N],[12,"0","","The kind of the error.",26,N],[4,"ErrorKind","","The kind of an error.",N,N],[13,"Msg","","A convenient variant for String.",27,N],[13,"TomlQuery","","A TomlQuery error",27,N],[13,"Io","","A wrapper around `std::io::Error`",27,N],[13,"HandlebarsRender","","Handlebars rendering failed",27,N],[13,"HandlebarsTemplate","","Unable to parse the template",27,N],[13,"Utf8","","Invalid UTF-8",27,N],[13,"SerdeJson","","JSON conversion failed",27,N],[13,"Subprocess","","A subprocess exited with an unsuccessful return code.",27,N],[13,"ParseError","","An error was encountered while parsing the `SUMMARY.md`…",27,N],[13,"ReservedFilenameError","","The user tried to use a reserved filename.",27,N],[6,"Result","","Convenient wrapper around `std::Result`.",N,N],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",N,N],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",28,[[["self"],["f"]],["result",["error"]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",26,[[["errorkind"]],["error"]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",26,[[["e"],["k"]],["error"]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",26,[[["box",["error"]],["k"]],["error"]]],[11,"kind","","Returns the kind of the error.",26,[[["self"]],["errorkind"]]],[11,"iter","","Iterates over the error chain.",26,[[["self"]],["iter"]]],[11,"backtrace","","Returns the backtrace associated with this error.",26,[[["self"]],["option",["backtrace"]]]],[11,"chain_err","","Extends the error chain with a new entry.",26,[[["self"],["f"]],["error"]]],[11,"description","","A short description of the error. This method is identical…",26,[[["self"]],["str"]]],[11,"description","","A string describing the error kind.",27,[[["self"]],["str"]]],[17,"MDBOOK_VERSION","mdbook","The current version of `mdbook`.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","mdbook::book","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",29,[[["self"]],["i"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","mdbook::config","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","mdbook::preprocess","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","mdbook::renderer","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","mdbook::theme","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"to_string","mdbook::errors","",26,[[["self"]],["string"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"name","mdbook::preprocess","",16,[[["self"]],["str"]]],[11,"run","","",16,[[["self"],["preprocessorcontext"],["book"]],["result",["book"]]]],[11,"name","","",17,[[["self"]],["str"]]],[11,"run","","",17,[[["self"],["preprocessorcontext"],["book"]],["result",["book"]]]],[11,"name","","",18,[[["self"]],["str"]]],[11,"run","","",18,[[["self"],["preprocessorcontext"],["book"]],["result",["book"]]]],[11,"supports_renderer","","",18,[[["self"],["str"]],["bool"]]],[11,"name","mdbook::renderer","",21,[[["self"]],["str"]]],[11,"render","","",21,[[["self"],["rendercontext"]],["result"]]],[11,"name","","",23,[[["self"]],["str"]]],[11,"render","","",23,[[["self"],["rendercontext"]],["result"]]],[11,"next","mdbook::book","",29,[[["self"]],["option"]]],[11,"eq","","",1,[[["self"],["book"]],["bool"]]],[11,"ne","","",1,[[["self"],["book"]],["bool"]]],[11,"eq","mdbook","",0,[[["self"],["bookitem"]],["bool"]]],[11,"ne","","",0,[[["self"],["bookitem"]],["bool"]]],[11,"eq","mdbook::book","",2,[[["self"],["chapter"]],["bool"]]],[11,"ne","","",2,[[["self"],["chapter"]],["bool"]]],[11,"eq","","",8,[[["self"],["bookbuilder"]],["bool"]]],[11,"ne","","",8,[[["self"],["bookbuilder"]],["bool"]]],[11,"eq","","",5,[[["self"],["summary"]],["bool"]]],[11,"ne","","",5,[[["self"],["summary"]],["bool"]]],[11,"eq","","",3,[[["self"],["link"]],["bool"]]],[11,"ne","","",3,[[["self"],["link"]],["bool"]]],[11,"eq","","",7,[[["self"],["summaryitem"]],["bool"]]],[11,"ne","","",7,[[["self"],["summaryitem"]],["bool"]]],[11,"eq","","",4,[[["self"],["sectionnumber"]],["bool"]]],[11,"ne","","",4,[[["self"],["sectionnumber"]],["bool"]]],[11,"eq","mdbook::config","",9,[[["self"],["config"]],["bool"]]],[11,"ne","","",9,[[["self"],["config"]],["bool"]]],[11,"eq","","",10,[[["self"],["bookconfig"]],["bool"]]],[11,"ne","","",10,[[["self"],["bookconfig"]],["bool"]]],[11,"eq","","",11,[[["self"],["buildconfig"]],["bool"]]],[11,"ne","","",11,[[["self"],["buildconfig"]],["bool"]]],[11,"eq","","",12,[[["self"],["htmlconfig"]],["bool"]]],[11,"ne","","",12,[[["self"],["htmlconfig"]],["bool"]]],[11,"eq","","",13,[[["self"],["playpen"]],["bool"]]],[11,"ne","","",13,[[["self"],["playpen"]],["bool"]]],[11,"eq","","",14,[[["self"],["search"]],["bool"]]],[11,"ne","","",14,[[["self"],["search"]],["bool"]]],[11,"eq","mdbook::preprocess","",18,[[["self"],["cmdpreprocessor"]],["bool"]]],[11,"ne","","",18,[[["self"],["cmdpreprocessor"]],["bool"]]],[11,"eq","","",15,[[["self"],["preprocessorcontext"]],["bool"]]],[11,"ne","","",15,[[["self"],["preprocessorcontext"]],["bool"]]],[11,"eq","mdbook::renderer","",20,[[["self"],["rendercontext"]],["bool"]]],[11,"ne","","",20,[[["self"],["rendercontext"]],["bool"]]],[11,"eq","","",23,[[["self"],["cmdrenderer"]],["bool"]]],[11,"ne","","",23,[[["self"],["cmdrenderer"]],["bool"]]],[11,"eq","mdbook::theme","",24,[[["self"],["theme"]],["bool"]]],[11,"ne","","",24,[[["self"],["theme"]],["bool"]]],[11,"default","mdbook::book","",1,[[],["book"]]],[11,"default","","",2,[[],["chapter"]]],[11,"default","","",5,[[],["summary"]]],[11,"default","","",3,[[],["self"]]],[11,"default","","",4,[[],["sectionnumber"]]],[11,"default","mdbook::config","",9,[[],["config"]]],[11,"default","","",10,[[],["bookconfig"]]],[11,"default","","",11,[[],["buildconfig"]]],[11,"default","","",12,[[],["htmlconfig"]]],[11,"default","","",13,[[],["playpen"]]],[11,"default","","",14,[[],["search"]]],[11,"default","mdbook::renderer","",21,[[],["htmlhandlebars"]]],[11,"default","mdbook::theme","",24,[[],["theme"]]],[11,"clone","mdbook::book","",1,[[["self"]],["book"]]],[11,"clone","mdbook","",0,[[["self"]],["bookitem"]]],[11,"clone","mdbook::book","",2,[[["self"]],["chapter"]]],[11,"clone","","",8,[[["self"]],["bookbuilder"]]],[11,"clone","","",5,[[["self"]],["summary"]]],[11,"clone","","",3,[[["self"]],["link"]]],[11,"clone","","",7,[[["self"]],["summaryitem"]]],[11,"clone","","",4,[[["self"]],["sectionnumber"]]],[11,"clone","mdbook::config","",9,[[["self"]],["config"]]],[11,"clone","","",10,[[["self"]],["bookconfig"]]],[11,"clone","","",11,[[["self"]],["buildconfig"]]],[11,"clone","","",12,[[["self"]],["htmlconfig"]]],[11,"clone","","",13,[[["self"]],["playpen"]]],[11,"clone","","",14,[[["self"]],["search"]]],[11,"clone","mdbook::preprocess","",18,[[["self"]],["cmdpreprocessor"]]],[11,"clone","","",15,[[["self"]],["preprocessorcontext"]]],[11,"clone","mdbook::renderer","",20,[[["self"]],["rendercontext"]]],[11,"clone","","",23,[[["self"]],["cmdrenderer"]]],[11,"from","mdbook","",0,[[["chapter"]],["bookitem"]]],[11,"from","mdbook::book","",7,[[["link"]],["summaryitem"]]],[11,"from","mdbook::errors","",26,[[["error"]],["self"]]],[11,"from","","",26,[[["error"]],["self"]]],[11,"from","","",26,[[["rendererror"]],["self"]]],[11,"from","","",26,[[["box",["templateerror"]]],["self"]]],[11,"from","","",26,[[["fromutf8error"]],["self"]]],[11,"from","","",26,[[["error"]],["self"]]],[11,"from","","",26,[[["errorkind"]],["self"]]],[11,"from","","",26,[[["str"]],["self"]]],[11,"from","","",26,[[["string"]],["self"]]],[11,"from","","",27,[[["errorkind"]],["self"]]],[11,"from","","",27,[[["str"]],["self"]]],[11,"from","","",27,[[["string"]],["self"]]],[11,"from","","",27,[[["error"]],["self"]]],[11,"from","","",26,[[["templateerror"]],["error"]]],[11,"fmt","mdbook::book","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook::book","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook::config","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook::preprocess","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook::renderer","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook::theme","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook::errors","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook::book","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook::errors","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","mdbook::book","",4,N],[11,"deref","","",4,N],[11,"from_iter","","",4,[[["i"]],["self"]]],[11,"description","mdbook::errors","",26,[[["self"]],["str"]]],[11,"cause","","",26,[[["self"]],["option",["error"]]]],[11,"new","","",26,[[["errorkind"],["state"]],["error"]]],[11,"from_kind","","",26,N],[11,"with_chain","","",26,[[["e"],["k"]],["self"]]],[11,"kind","","",26,N],[11,"iter","","",26,[[["self"]],["iter"]]],[11,"chain_err","","",26,[[["self"],["f"]],["self"]]],[11,"backtrace","","",26,[[["self"]],["option",["backtrace"]]]],[11,"extract_backtrace","","",26,[[["error"]],["option",["internalbacktrace"]]]],[11,"serialize","mdbook::book","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","mdbook","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","mdbook::book","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","mdbook::config","",9,[[["self"],["s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","mdbook::preprocess","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","mdbook::renderer","",20,[[["self"],["__s"]],["result"]]],[11,"deserialize","mdbook::book","",1,[[["__d"]],["result"]]],[11,"deserialize","mdbook","",0,[[["__d"]],["result"]]],[11,"deserialize","mdbook::book","",2,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","mdbook::config","",9,[[["d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"deserialize","","",13,[[["__d"]],["result"]]],[11,"deserialize","","",14,[[["__d"]],["result"]]],[11,"deserialize","mdbook::preprocess","",15,[[["__d"]],["result"]]],[11,"deserialize","mdbook::renderer","",20,[[["__d"]],["result"]]]],"paths":[[4,"BookItem"],[3,"Book"],[3,"Chapter"],[3,"Link"],[3,"SectionNumber"],[3,"Summary"],[3,"MDBook"],[4,"SummaryItem"],[3,"BookBuilder"],[3,"Config"],[3,"BookConfig"],[3,"BuildConfig"],[3,"HtmlConfig"],[3,"Playpen"],[3,"Search"],[3,"PreprocessorContext"],[3,"IndexPreprocessor"],[3,"LinkPreprocessor"],[3,"CmdPreprocessor"],[8,"Preprocessor"],[3,"RenderContext"],[3,"HtmlHandlebars"],[8,"Renderer"],[3,"CmdRenderer"],[3,"Theme"],[8,"RangeArgument"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[3,"BookItems"]]};
searchIndex["mdbook_linkcheck"]={"doc":"A `mdbook` backend which will check all links in a…","items":[[3,"Config","mdbook_linkcheck","The configuration options available with this backend.",N,N],[12,"follow_web_links","","If a link on the internet is encountered, should we still…",0,N],[12,"traverse_parent_directories","","Are we allowed to link to files outside of the book's…",0,N],[12,"exclude","","",0,N],[3,"Link","","Information about a link in one of the book's chapters.",N,N],[12,"url","","",1,N],[12,"offset","","",1,N],[12,"chapter","","",1,N],[5,"check_links","","The main entrypoint for this crate.",N,[[["rendercontext"]],["result",["error"]]]],[11,"should_skip","","",0,[[["self"],["str"]],["bool"]]],[0,"errors","","",N,N],[3,"BrokenLinks","mdbook_linkcheck::errors","The error which were generated while checking links.",N,N],[3,"Links","","An iterator over all the links in [`BrokenLinks`].",N,N],[3,"EmptyLink","","The user specified a file which doesn't exist.",N,N],[12,"chapter","","",2,N],[12,"line","","",2,N],[3,"UnsuccessfulStatus","","Received an unsuccessful status code when fetching a…",N,N],[12,"url","","",3,N],[12,"code","","",3,N],[12,"chapter","","",3,N],[12,"line","","",3,N],[3,"FileNotFound","","The user specified a file which doesn't exist.",N,N],[12,"path","","",4,N],[12,"chapter","","",4,N],[12,"line","","",4,N],[3,"HttpError","","An error occurred while trying to fetch the link from the…",N,N],[12,"url","","",5,N],[12,"chapter","","",5,N],[12,"line","","",5,N],[12,"error","","",5,N],[3,"ForbiddenPath","","",N,N],[12,"path","","",6,N],[12,"chapter","","",6,N],[12,"line","","",6,N],[8,"BrokenLink","","Some arbitrary broken link which occurs at a specific line…",N,N],[10,"chapter","","Which chapter it was in.",7,[[["self"]],["path"]]],[10,"line","","The line this error occurred on.",7,[[["self"]],["usize"]]],[10,"as_fail","","",7,[[["self"]],["fail"]]],[11,"links","","",8,N],[11,"line_number","mdbook_linkcheck","",1,[[["self"]],["usize"]]],[17,"COMPATIBLE_MDBOOK_VERSIONS","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","mdbook_linkcheck::errors","",8,[[["self"]],["string"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"as_fail","","",8,[[["self"]],["fail"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"par_bridge","","",9,[[["self"]],["iterbridge"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"as_fail","","",2,[[["self"]],["fail"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"as_fail","","",3,[[["self"]],["fail"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"as_fail","","",4,[[["self"]],["fail"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"as_fail","","",5,[[["self"]],["fail"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"as_fail","","",6,[[["self"]],["fail"]]],[11,"line","","",2,[[["self"]],["usize"]]],[11,"chapter","","",2,[[["self"]],["path"]]],[11,"as_fail","","",2,[[["self"]],["fail"]]],[11,"line","","",4,[[["self"]],["usize"]]],[11,"chapter","","",4,[[["self"]],["path"]]],[11,"as_fail","","",4,[[["self"]],["fail"]]],[11,"line","","",5,[[["self"]],["usize"]]],[11,"chapter","","",5,[[["self"]],["path"]]],[11,"as_fail","","",5,[[["self"]],["fail"]]],[11,"line","","",3,[[["self"]],["usize"]]],[11,"chapter","","",3,[[["self"]],["path"]]],[11,"as_fail","","",3,[[["self"]],["fail"]]],[11,"line","","",6,[[["self"]],["usize"]]],[11,"chapter","","",6,[[["self"]],["path"]]],[11,"as_fail","","",6,[[["self"]],["fail"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"eq","mdbook_linkcheck","",0,[[["self"],["config"]],["bool"]]],[11,"eq","mdbook_linkcheck::errors","",2,[[["self"],["emptylink"]],["bool"]]],[11,"ne","","",2,[[["self"],["emptylink"]],["bool"]]],[11,"eq","","",3,[[["self"],["unsuccessfulstatus"]],["bool"]]],[11,"ne","","",3,[[["self"],["unsuccessfulstatus"]],["bool"]]],[11,"eq","","",4,[[["self"],["filenotfound"]],["bool"]]],[11,"ne","","",4,[[["self"],["filenotfound"]],["bool"]]],[11,"eq","","",6,[[["self"],["forbiddenpath"]],["bool"]]],[11,"ne","","",6,[[["self"],["forbiddenpath"]],["bool"]]],[11,"eq","mdbook_linkcheck","",1,[[["self"],["link"]],["bool"]]],[11,"ne","","",1,[[["self"],["link"]],["bool"]]],[11,"into_iter","mdbook_linkcheck::errors","",8,N],[11,"default","mdbook_linkcheck","",0,[[],["config"]]],[11,"clone","","",0,[[["self"]],["config"]]],[11,"clone","mdbook_linkcheck::errors","",2,[[["self"]],["emptylink"]]],[11,"clone","","",3,[[["self"]],["unsuccessfulstatus"]]],[11,"clone","","",4,[[["self"]],["filenotfound"]]],[11,"clone","","",6,[[["self"]],["forbiddenpath"]]],[11,"clone","mdbook_linkcheck","",1,[[["self"]],["link"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook_linkcheck::errors","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook_linkcheck","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook_linkcheck::errors","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","mdbook_linkcheck","",1,[[["self"],["formatter"]],["result"]]],[11,"from_iter","mdbook_linkcheck::errors","",8,[[["i"]],["brokenlinks"]]],[11,"cause","","",8,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",8,[[["self"]],["option",["backtrace"]]]],[11,"cause","","",2,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",2,[[["self"]],["option",["backtrace"]]]],[11,"cause","","",3,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",3,[[["self"]],["option",["backtrace"]]]],[11,"cause","","",4,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",4,[[["self"]],["option",["backtrace"]]]],[11,"cause","","",5,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",5,[[["self"]],["option",["backtrace"]]]],[11,"cause","","",6,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",6,[[["self"]],["option",["backtrace"]]]],[11,"serialize","mdbook_linkcheck","",0,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"from_par_iter","mdbook_linkcheck::errors","",8,[[["i"]],["self"]]]],"paths":[[3,"Config"],[3,"Link"],[3,"EmptyLink"],[3,"UnsuccessfulStatus"],[3,"FileNotFound"],[3,"HttpError"],[3,"ForbiddenPath"],[8,"BrokenLink"],[3,"BrokenLinks"],[3,"Links"]]};
searchIndex["memchr"]={"doc":"The `memchr` crate provides heavily optimized routines for…","items":[[3,"Memchr","memchr","An iterator for `memchr`.",N,N],[3,"Memchr2","","An iterator for `memchr2`.",N,N],[3,"Memchr3","","An iterator for `memchr3`.",N,N],[5,"memchr_iter","","An iterator over all occurrences of the needle in a…",N,N],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a…",N,N],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a…",N,N],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a…",N,N],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a…",N,N],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a…",N,N],[5,"memchr","","Search for the first occurrence of a byte in a slice.",N,N],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",N,N],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",N,N],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",N,N],[5,"memrchr2","","Like `memrchr`, but searches for two bytes instead of one.",N,N],[5,"memrchr3","","Like `memrchr`, but searches for three bytes instead of one.",N,N],[11,"new","","Creates a new iterator that yields all positions of needle…",0,N],[11,"new","","Creates a new iterator that yields all positions of needle…",1,N],[11,"new","","Create a new `Memchr3` that's initialized to zero with a…",2,N],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"next","","",0,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",0,N],[11,"next","","",1,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",2,N],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],["option"]]]],"paths":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["memoffset"]={"doc":"A crate used for calculating offsets of struct members and…","items":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",N,N],[14,"span_of","","Produces a range instance representing the sub-slice…",N,N]],"paths":[]};
searchIndex["mime"]={"doc":"Mime","items":[[3,"Mime","mime","A parsed mime or media type.",N,N],[3,"Name","","A section of a `Mime`.",N,N],[3,"FromStrError","","An error when parsing a `Mime` from a string.",N,N],[3,"Params","","An iterator over the parameters of a MIME.",N,N],[17,"STAR","","",N,N],[17,"TEXT","","text",N,N],[17,"IMAGE","","image",N,N],[17,"AUDIO","","audio",N,N],[17,"VIDEO","","video",N,N],[17,"APPLICATION","","application",N,N],[17,"MULTIPART","","multipart",N,N],[17,"MESSAGE","","message",N,N],[17,"MODEL","","model",N,N],[17,"FONT","","font",N,N],[17,"PLAIN","","plain",N,N],[17,"HTML","","html",N,N],[17,"XML","","xml",N,N],[17,"JAVASCRIPT","","javascript",N,N],[17,"CSS","","css",N,N],[17,"CSV","","csv",N,N],[17,"EVENT_STREAM","","event-stream",N,N],[17,"VCARD","","vcard",N,N],[17,"JSON","","json",N,N],[17,"WWW_FORM_URLENCODED","","x-www-form-urlencoded",N,N],[17,"MSGPACK","","msgpack",N,N],[17,"OCTET_STREAM","","octet-stream",N,N],[17,"PDF","","pdf",N,N],[17,"WOFF","","woff",N,N],[17,"WOFF2","","woff2",N,N],[17,"FORM_DATA","","form-data",N,N],[17,"BMP","","bmp",N,N],[17,"GIF","","gif",N,N],[17,"JPEG","","jpeg",N,N],[17,"PNG","","png",N,N],[17,"SVG","","svg",N,N],[17,"BASIC","","basic",N,N],[17,"MPEG","","mpeg",N,N],[17,"MP4","","mp4",N,N],[17,"OGG","","ogg",N,N],[17,"CHARSET","","charset",N,N],[17,"BOUNDARY","","boundary",N,N],[17,"UTF_8","","utf-8",N,N],[17,"STAR_STAR","","`*/*`",N,N],[17,"TEXT_STAR","","`text/*`",N,N],[17,"TEXT_PLAIN","","`text/plain`",N,N],[17,"TEXT_PLAIN_UTF_8","","`text/plain; charset=utf-8`",N,N],[17,"TEXT_HTML","","`text/html`",N,N],[17,"TEXT_HTML_UTF_8","","`text/html; charset=utf-8`",N,N],[17,"TEXT_CSS","","`text/css`",N,N],[17,"TEXT_CSS_UTF_8","","`text/css; charset=utf-8`",N,N],[17,"TEXT_JAVASCRIPT","","`text/javascript`",N,N],[17,"TEXT_XML","","`text/xml`",N,N],[17,"TEXT_EVENT_STREAM","","`text/event-stream`",N,N],[17,"TEXT_CSV","","`text/csv`",N,N],[17,"TEXT_CSV_UTF_8","","`text/csv; charset=utf-8`",N,N],[17,"TEXT_TAB_SEPARATED_VALUES","","`text/tab-separated-values`",N,N],[17,"TEXT_TAB_SEPARATED_VALUES_UTF_8","","`text/tab-separated-values; charset=utf-8`",N,N],[17,"TEXT_VCARD","","`text/vcard`",N,N],[17,"IMAGE_STAR","","`image/*`",N,N],[17,"IMAGE_JPEG","","`image/jpeg`",N,N],[17,"IMAGE_GIF","","`image/gif`",N,N],[17,"IMAGE_PNG","","`image/png`",N,N],[17,"IMAGE_BMP","","`image/bmp`",N,N],[17,"IMAGE_SVG","","`image/svg+xml`",N,N],[17,"FONT_WOFF","","`font/woff`",N,N],[17,"FONT_WOFF2","","`font/woff2`",N,N],[17,"APPLICATION_JSON","","`application/json`",N,N],[17,"APPLICATION_JAVASCRIPT","","`application/javascript`",N,N],[17,"APPLICATION_JAVASCRIPT_UTF_8","","`application/javascript; charset=utf-8`",N,N],[17,"APPLICATION_WWW_FORM_URLENCODED","","`application/x-www-form-urlencoded`",N,N],[17,"APPLICATION_OCTET_STREAM","","`application/octet-stream`",N,N],[17,"APPLICATION_MSGPACK","","`application/msgpack`",N,N],[17,"APPLICATION_PDF","","`application/pdf`",N,N],[17,"MULTIPART_FORM_DATA","","`multipart/form-data`",N,N],[11,"type_","","Get the top level media type for this `Mime`.",0,[[["self"]],["name"]]],[11,"subtype","","Get the subtype of this `Mime`.",0,[[["self"]],["name"]]],[11,"suffix","","Get an optional +suffix for this `Mime`.",0,[[["self"]],["option",["name"]]]],[11,"get_param","","Look up a parameter by name.",0,[[["self"],["n"]],["option",["name"]]]],[11,"params","","Returns an iterator over the parameters.",0,[[["self"]],["params"]]],[11,"as_str","","Get the value of this `Name` as a string.",1,[[["self"]],["str"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,N],[11,"eq","","",1,[[["self"],["name"]],["bool"]]],[11,"ne","","",1,[[["self"],["name"]],["bool"]]],[11,"eq","","",0,[[["self"],["mime"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",1,[[["self"],["str"]],["bool"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",1,[[["self"]],["str"]]],[11,"cmp","","",1,[[["self"],["name"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["mime"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["mime"]]],[11,"clone","","",1,[[["self"]],["name"]]],[11,"partial_cmp","","",1,[[["self"],["name"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["name"]],["bool"]]],[11,"le","","",1,[[["self"],["name"]],["bool"]]],[11,"gt","","",1,[[["self"],["name"]],["bool"]]],[11,"ge","","",1,[[["self"],["name"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["mime"]],["option",["ordering"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"hash","","",0,[[["self"],["t"]]]],[11,"from_str","","",0,[[["str"]],["result",["mime"]]]],[11,"description","","",2,[[["self"]],["str"]]]],"paths":[[3,"Mime"],[3,"Name"],[3,"FromStrError"],[3,"Params"]]};
searchIndex["mime_guess"]={"doc":"Guessing of MIME types by file extension.","items":[[3,"Mime","mime_guess","A parsed mime or media type.",N,N],[5,"guess_mime_type","","Guess the MIME type of `path` by its extension (as defined…",N,[[["p"]],["mime"]]],[5,"guess_mime_type_opt","","Guess the MIME type of `path` by its extension (as defined…",N,[[["p"]],["option",["mime"]]]],[5,"get_mime_type","","Get the MIME type associated with a file extension.",N,[[["str"]],["mime"]]],[5,"get_mime_type_opt","","Get the MIME type associated with a file extension.",N,[[["str"]],["option",["mime"]]]],[5,"get_mime_type_str","","Get the MIME type string associated with a file extension.…",N,[[["str"]],["option",["str"]]]],[5,"get_mime_extensions","","Get a list of known extensions for a given `Mime`.",N,[[["mime"]],["option"]]],[5,"get_mime_extensions_str","","Get a list of known extensions for a MIME type string.",N,[[["str"]],["option"]]],[5,"get_extensions","","Get the extensions for a given top-level and sub-level of…",N,[[["str"],["str"]],["option"]]],[5,"octet_stream","","Get the MIME type for `application/octet-stream` (generic…",N,[[],["mime"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"hash","","",0,N],[11,"from_str","","",0,[[["str"]],["result",["mime"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",0,[[["self"],["mime"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"clone","","",0,[[["self"]],["mime"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"cmp","","",0,[[["self"],["mime"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["mime"]],["option",["ordering"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"type_","","Get the top level media type for this `Mime`.",0,[[["self"]],["name"]]],[11,"subtype","","Get the subtype of this `Mime`.",0,[[["self"]],["name"]]],[11,"suffix","","Get an optional +suffix for this `Mime`.",0,[[["self"]],["option",["name"]]]],[11,"get_param","","Look up a parameter by name.",0,[[["self"],["n"]],["option",["name"]]]],[11,"params","","Returns an iterator over the parameters.",0,[[["self"]],["params"]]]],"paths":[[3,"Mime"]]};
searchIndex["mio"]={"doc":"A fast, low-level IO library for Rust focusing on…","items":[[3,"Poll","mio","Polls for readiness events on all registered values.",N,N],[3,"Registration","","Handle to a user space `Poll` registration.",N,N],[3,"SetReadiness","","Updates the readiness state of the associated…",N,N],[3,"PollOpt","","Options supplied when registering an `Evented` handle with…",N,N],[3,"Ready","","A set of readiness event kinds",N,N],[3,"Token","","Associates readiness notifications with [`Evented`] handles.",N,N],[12,"0","","",0,N],[3,"Events","","A collection of readiness events.",N,N],[11,"empty","","Return a `PollOpt` representing no set options.",1,[[],["pollopt"]]],[11,"edge","","Return a `PollOpt` representing edge-triggered…",1,[[],["pollopt"]]],[11,"level","","Return a `PollOpt` representing level-triggered…",1,[[],["pollopt"]]],[11,"oneshot","","Return a `PollOpt` representing oneshot notifications.",1,[[],["pollopt"]]],[11,"is_edge","","Returns true if the options include edge-triggered…",1,[[["self"]],["bool"]]],[11,"is_level","","Returns true if the options include level-triggered…",1,[[["self"]],["bool"]]],[11,"is_oneshot","","Returns true if the options includes oneshot.",1,[[["self"]],["bool"]]],[11,"contains","","Returns true if `self` is a superset of `other`.",1,[[["self"],["pollopt"]],["bool"]]],[11,"insert","","Adds all options represented by `other` into `self`.",1,[[["self"],["pollopt"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",1,[[["self"],["pollopt"]]]],[11,"empty","","Returns the empty `Ready` set.",2,[[],["ready"]]],[11,"readable","","Returns a `Ready` representing readable readiness.",2,[[],["ready"]]],[11,"writable","","Returns a `Ready` representing writable readiness.",2,[[],["ready"]]],[11,"all","","Returns a `Ready` representing readiness for all operations.",2,[[],["ready"]]],[11,"is_empty","","Returns true if `Ready` is the empty set",2,[[["self"]],["bool"]]],[11,"is_readable","","Returns true if the value includes readable readiness",2,[[["self"]],["bool"]]],[11,"is_writable","","Returns true if the value includes writable readiness",2,[[["self"]],["bool"]]],[11,"insert","","Adds all readiness represented by `other` into `self`.",2,[[["self"],["t"]]]],[11,"remove","","Removes all options represented by `other` from `self`.",2,[[["self"],["t"]]]],[11,"contains","","Returns true if `self` is a superset of `other`.",2,[[["self"],["t"]],["bool"]]],[11,"from_usize","","Create a `Ready` instance using the given `usize`…",2,[[["usize"]],["ready"]]],[11,"as_usize","","Returns a `usize` representation of the `Ready` value.",2,[[["self"]],["usize"]]],[11,"new","","Return a new `Poll` handle.",3,[[],["result",["poll"]]]],[11,"register","","Register an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","Re-register an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","Deregister an `Evented` handle with the `Poll` instance.",3,[[["self"],["e"]],["result"]]],[11,"poll","","Wait for readiness events",3,[[["self"],["events"],["option",["duration"]]],["result",["usize"]]]],[11,"poll_interruptible","","Like `poll`, but may be interrupted by a signal",3,[[["self"],["events"],["option",["duration"]]],["result",["usize"]]]],[11,"with_capacity","","Return a new `Events` capable of holding up to `capacity`…",4,[[["usize"]],["events"]]],[11,"capacity","","Returns the number of `Event` values that `self` can hold.",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if `self` contains no `Event` values.",4,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the `Event` values.",4,[[["self"]],["iter"]]],[11,"clear","","Clearing all `Event` values from container explicitly.",4,[[["self"]]]],[11,"new2","","Create and return a new `Registration` and the associated…",5,N],[11,"readiness","","Returns the registration's current readiness.",6,[[["self"]],["ready"]]],[11,"set_readiness","","Set the registration's readiness",6,[[["self"],["ready"]],["result"]]],[0,"net","","Networking primitives",N,N],[3,"TcpListener","mio::net","A structure representing a socket server",N,N],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a…",N,N],[3,"UdpSocket","","A User Datagram Protocol socket.",N,N],[11,"connect","","Create a new TCP stream and issue a non-blocking connect…",7,[[["socketaddr"]],["result",["tcpstream"]]]],[11,"connect_stream","","Creates a new `TcpStream` from the pending socket inside…",7,[[["tcpstream"],["socketaddr"]],["result",["tcpstream"]]]],[11,"from_stream","","Creates a new `TcpStream` from a standard `net::TcpStream`.",7,[[["tcpstream"]],["result",["tcpstream"]]]],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP…",7,[[["self"]],["result",["socketaddr"]]]],[11,"local_addr","","Returns the socket address of the local half of this TCP…",7,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",7,[[["self"]],["result",["tcpstream"]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",7,[[["self"],["shutdown"]],["result"]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",7,[[["self"]],["result",["bool"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",7,[[["self"]],["result",["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",7,[[["self"]],["result",["usize"]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",7,[[["self"],["option",["duration"]]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",7,[[["self"]],["result",["option"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",7,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",7,[[["self"]],["result",["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",7,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",7,[[["self"]],["result",["bool"]]]],[11,"set_linger","","Sets the value for the `SO_LINGER` option on this socket.",7,[[["self"],["option",["duration"]]],["result"]]],[11,"linger","","Gets the value of the `SO_LINGER` option on this socket.",7,[[["self"]],["result",["option"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",7,[[["self"]],["result",["option"]]]],[11,"peek","","Receives data on the socket from the remote address to…",7,N],[11,"read_bufs","","Read in a list of buffers all at once.",7,N],[11,"write_bufs","","Write a list of buffers all at once.",7,N],[11,"bind","","Convenience method to bind a new TCP listener to the…",8,[[["socketaddr"]],["result",["tcplistener"]]]],[11,"from_std","","Creates a new `TcpListener` from an instance of a…",8,[[["tcplistener"]],["result",["tcplistener"]]]],[11,"accept","","Accepts a new `TcpStream`.",8,[[["self"]],["result"]]],[11,"accept_std","","Accepts a new `std::net::TcpStream`.",8,[[["self"]],["result"]]],[11,"local_addr","","Returns the local socket address of this listener.",8,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",8,[[["self"]],["result",["tcplistener"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",8,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",8,[[["self"]],["result",["u32"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",8,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",8,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",8,[[["self"]],["result",["option"]]]],[11,"bind","","Creates a UDP socket from the given address.",9,[[["socketaddr"]],["result",["udpsocket"]]]],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and…",9,[[["udpsocket"]],["result",["udpsocket"]]]],[11,"local_addr","","Returns the socket address that this socket was created…",9,[[["self"]],["result",["socketaddr"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",9,[[["self"]],["result",["udpsocket"]]]],[11,"send_to","","Sends data on the socket to the given address. On success,…",9,N],[11,"recv_from","","Receives data from the socket. On success, returns the…",9,N],[11,"send","","Sends data on the socket to the address previously bound…",9,N],[11,"recv","","Receives data from the socket previously bound with…",9,N],[11,"connect","","Connects the UDP socket setting the default destination…",9,[[["self"],["socketaddr"]],["result"]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"],["bool"]],["result"]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",9,[[["self"]],["result",["bool"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",9,[[["self"]],["result",["bool"]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",9,[[["self"],["u32"]],["result"]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",9,[[["self"]],["result",["u32"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",9,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",9,[[["self"]],["result",["bool"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",9,[[["self"],["u32"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",9,[[["self"]],["result",["u32"]]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",9,[[["self"],["ipv6addr"],["u32"]],["result"]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",9,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",9,[[["self"],["ipv6addr"],["u32"]],["result"]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",9,[[["self"],["bool"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",9,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",9,[[["self"]],["result",["option"]]]],[0,"event","mio","Readiness event types and utilities.",N,N],[3,"Events","mio::event","A collection of readiness events.",N,N],[3,"Iter","","[`Events`] iterator.",N,N],[3,"Event","","An readiness event returned by [`Poll::poll`].",N,N],[8,"Evented","","A value that may be registered with `Poll`",N,N],[10,"register","","Register `self` with the given `Poll` instance.",10,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[10,"reregister","","Re-register `self` with the given `Poll` instance.",10,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[10,"deregister","","Deregister `self` from the given `Poll` instance",10,[[["self"],["poll"]],["result"]]],[0,"unix","mio","Unix only extensions",N,N],[3,"EventedFd","mio::unix","Adapter for `RawFd` providing an [`Evented`] implementation.",N,N],[12,"0","","",11,N],[3,"UnixReady","","Unix specific extensions to `Ready`",N,N],[11,"from","mio","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","mio::event","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","mio::unix","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","mio::net","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"register","mio","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",5,[[["self"],["poll"]],["result"]]],[11,"register","mio::unix","",11,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",11,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",11,[[["self"],["poll"]],["result"]]],[11,"register","mio::net","",7,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",7,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",7,[[["self"],["poll"]],["result"]]],[11,"register","","",8,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",8,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",8,[[["self"],["poll"]],["result"]]],[11,"register","","",9,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",9,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",9,[[["self"],["poll"]],["result"]]],[11,"next","mio::event","",13,[[["self"]],["option",["event"]]]],[11,"eq","mio","",1,[[["self"],["pollopt"]],["bool"]]],[11,"ne","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"eq","","",2,[[["self"],["ready"]],["bool"]]],[11,"ne","","",2,[[["self"],["ready"]],["bool"]]],[11,"eq","mio::event","",12,[[["self"],["event"]],["bool"]]],[11,"ne","","",12,[[["self"],["event"]],["bool"]]],[11,"eq","mio::unix","",14,[[["self"],["unixready"]],["bool"]]],[11,"ne","","",14,[[["self"],["unixready"]],["bool"]]],[11,"eq","mio","",0,[[["self"],["token"]],["bool"]]],[11,"ne","","",0,[[["self"],["token"]],["bool"]]],[11,"into_iter","","",4,N],[11,"cmp","","",1,[[["self"],["pollopt"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["ready"]],["ordering"]]],[11,"cmp","mio::unix","",14,[[["self"],["unixready"]],["ordering"]]],[11,"cmp","mio","",0,[[["self"],["token"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["pollopt"]]],[11,"clone","","",2,[[["self"]],["ready"]]],[11,"clone","mio::event","",12,[[["self"]],["event"]]],[11,"clone","mio","",6,[[["self"]],["setreadiness"]]],[11,"clone","mio::event","",13,[[["self"]],["iter"]]],[11,"clone","mio::unix","",14,[[["self"]],["unixready"]]],[11,"clone","mio","",0,[[["self"]],["token"]]],[11,"from","mio::unix","",14,[[["ready"]],["unixready"]]],[11,"from","mio","",2,[[["unixready"]],["ready"]]],[11,"from","","",0,[[["usize"]],["token"]]],[11,"drop","","",5,[[["self"]]]],[11,"partial_cmp","","",1,[[["self"],["pollopt"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"le","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"gt","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"ge","","",1,[[["self"],["pollopt"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["ready"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["ready"]],["bool"]]],[11,"le","","",2,[[["self"],["ready"]],["bool"]]],[11,"gt","","",2,[[["self"],["ready"]],["bool"]]],[11,"ge","","",2,[[["self"],["ready"]],["bool"]]],[11,"partial_cmp","mio::unix","",14,[[["self"],["unixready"]],["option",["ordering"]]]],[11,"lt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"le","","",14,[[["self"],["unixready"]],["bool"]]],[11,"gt","","",14,[[["self"],["unixready"]],["bool"]]],[11,"ge","","",14,[[["self"],["unixready"]],["bool"]]],[11,"partial_cmp","mio","",0,[[["self"],["token"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["token"]],["bool"]]],[11,"le","","",0,[[["self"],["token"]],["bool"]]],[11,"gt","","",0,[[["self"],["token"]],["bool"]]],[11,"ge","","",0,[[["self"],["token"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::event","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::event","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::unix","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","mio::net","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","mio::unix","",14,[[["self"]],["ready"]]],[11,"hash","mio","",0,N],[11,"sub","","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"sub","","",2,[[["self"],["t"]],["ready"]]],[11,"sub","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"sub_assign","mio","",2,[[["self"],["t"]]]],[11,"bitand","","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitand","","",2,[[["self"],["t"]],["ready"]]],[11,"bitand","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitor","mio","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitor","","",2,[[["self"],["t"]],["ready"]]],[11,"bitor","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitxor","mio","",1,[[["self"],["pollopt"]],["pollopt"]]],[11,"bitxor","","",2,[[["self"],["t"]],["ready"]]],[11,"bitxor","mio::unix","",14,[[["self"],["unixready"]],["unixready"]]],[11,"bitand_assign","mio","",2,[[["self"],["t"]]]],[11,"bitor_assign","","",2,[[["self"],["t"]]]],[11,"bitxor_assign","","",2,[[["self"],["t"]]]],[11,"deref","mio::unix","",14,[[["self"]],["ready"]]],[11,"as_raw_fd","mio","",3,[[["self"]],["rawfd"]]],[11,"as_raw_fd","mio::net","",7,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",8,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",7,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",8,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",9,[[["self"]],["rawfd"]]],[11,"read","","",7,N],[11,"write","","",7,N],[11,"flush","","",7,[[["self"]],["result"]]],[11,"from_raw_fd","","",7,[[["rawfd"]],["tcpstream"]]],[11,"from_raw_fd","","",8,[[["rawfd"]],["tcplistener"]]],[11,"from_raw_fd","","",9,[[["rawfd"]],["udpsocket"]]],[11,"new","mio::event","Creates a new `Event` containing `readiness` and `token`",12,[[["ready"],["token"]],["event"]]],[11,"readiness","","Returns the event's readiness.",12,[[["self"]],["ready"]]],[11,"token","","Returns the event's token.",12,[[["self"]],["token"]]],[11,"error","mio::unix","Returns a `Ready` representing error readiness.",14,[[],["unixready"]]],[11,"hup","","Returns a `Ready` representing HUP readiness.",14,[[],["unixready"]]],[11,"priority","","Returns a `Ready` representing priority (`EPOLLPRI`)…",14,[[],["unixready"]]],[11,"is_error","","Returns true if the value includes error readiness",14,[[["self"]],["bool"]]],[11,"is_hup","","Returns true if the value includes HUP readiness",14,[[["self"]],["bool"]]],[11,"is_priority","","Returns true if `Ready` contains priority (`EPOLLPRI`)…",14,[[["self"]],["bool"]]]],"paths":[[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"Poll"],[3,"Events"],[3,"Registration"],[3,"SetReadiness"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[8,"Evented"],[3,"EventedFd"],[3,"Event"],[3,"Iter"],[3,"UnixReady"]]};
searchIndex["mio_uds"]={"doc":"MIO bindings for Unix Domain Sockets","items":[[3,"UnixStream","mio_uds","A Unix stream socket.",N,N],[3,"UnixListener","","A structure representing a Unix domain socket server.",N,N],[3,"UnixDatagram","","A Unix datagram socket.",N,N],[11,"bind","","Creates a Unix datagram socket bound to the given path.",0,[[["p"]],["result",["unixdatagram"]]]],[11,"from_datagram","","Consumes a standard library `UnixDatagram` and returns a…",0,[[["unixdatagram"]],["result",["unixdatagram"]]]],[11,"pair","","Create an unnamed pair of connected sockets.",0,[[],["result"]]],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any…",0,[[],["result",["unixdatagram"]]]],[11,"connect","","Connects the socket to the specified address.",0,[[["self"],["p"]],["result"]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",0,[[["self"]],["result",["unixdatagram"]]]],[11,"local_addr","","Returns the address of this socket.",0,[[["self"]],["result",["socketaddr"]]]],[11,"peer_addr","","Returns the address of this socket's peer.",0,[[["self"]],["result",["socketaddr"]]]],[11,"recv_from","","Receives data from the socket.",0,N],[11,"recv","","Receives data from the socket.",0,N],[11,"send_to","","Sends data on the socket to the specified address.",0,N],[11,"send","","Sends data on the socket to the socket's peer.",0,N],[11,"take_error","","Returns the value of the `SO_ERROR` option.",0,[[["self"]],["result",["option"]]]],[11,"shutdown","","Shut down the read, write, or both halves of this…",0,[[["self"],["shutdown"]],["result"]]],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",1,[[["p"]],["result",["unixlistener"]]]],[11,"from_listener","","Consumes a standard library `UnixListener` and returns a…",1,[[["unixlistener"]],["result",["unixlistener"]]]],[11,"accept","","Accepts a new incoming connection to this listener.",1,[[["self"]],["result",["option"]]]],[11,"accept_std","","Accepts a new incoming connection to this listener.",1,[[["self"]],["result",["option"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",1,[[["self"]],["result",["unixlistener"]]]],[11,"local_addr","","Returns the local socket address of this listener.",1,[[["self"]],["result",["socketaddr"]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",1,[[["self"]],["result",["option"]]]],[11,"connect","","Connects to the socket named by `path`.",2,[[["p"]],["result",["unixstream"]]]],[11,"from_stream","","Consumes a standard library `UnixStream` and returns a…",2,[[["unixstream"]],["result",["unixstream"]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",2,[[],["result"]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",2,[[["self"]],["result",["unixstream"]]]],[11,"local_addr","","Returns the socket address of the local half of this…",2,[[["self"]],["result",["socketaddr"]]]],[11,"peer_addr","","Returns the socket address of the remote half of this…",2,[[["self"]],["result",["socketaddr"]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",2,[[["self"]],["result",["option"]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",2,[[["self"],["shutdown"]],["result"]]],[11,"read_bufs","","Read in a list of buffers all at once.",2,N],[11,"write_bufs","","Write a list of buffers all at once.",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"as_raw_fd","","",0,[[["self"]],["i32"]]],[11,"as_raw_fd","","",1,[[["self"]],["i32"]]],[11,"as_raw_fd","","",2,[[["self"]],["i32"]]],[11,"into_raw_fd","","",0,[[["self"]],["i32"]]],[11,"into_raw_fd","","",1,[[["self"]],["i32"]]],[11,"into_raw_fd","","",2,[[["self"]],["i32"]]],[11,"read","","",2,N],[11,"write","","",2,N],[11,"flush","","",2,[[["self"]],["result"]]],[11,"from_raw_fd","","",0,[[["i32"]],["unixdatagram"]]],[11,"from_raw_fd","","",1,[[["i32"]],["unixlistener"]]],[11,"from_raw_fd","","",2,[[["i32"]],["unixstream"]]],[11,"register","","",0,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",0,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",0,[[["self"],["poll"]],["result"]]],[11,"register","","",1,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",1,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",1,[[["self"],["poll"]],["result"]]],[11,"register","","",2,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",2,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",2,[[["self"],["poll"]],["result"]]]],"paths":[[3,"UnixDatagram"],[3,"UnixListener"],[3,"UnixStream"]]};
searchIndex["native_tls"]={"doc":"An abstraction over platform-specific TLS implementations.","items":[[3,"Error","native_tls","An error returned from the TLS implementation.",N,N],[3,"Identity","","A cryptographic identity.",N,N],[3,"Certificate","","An X509 certificate.",N,N],[3,"MidHandshakeTlsStream","","A TLS stream which has been interrupted midway through the…",N,N],[3,"TlsConnectorBuilder","","A builder for `TlsConnector`s.",N,N],[3,"TlsConnector","","A builder for client-side TLS connections.",N,N],[3,"TlsAcceptorBuilder","","A builder for `TlsAcceptor`s.",N,N],[3,"TlsAcceptor","","A builder for server-side TLS connections.",N,N],[3,"TlsStream","","A stream managing a TLS session.",N,N],[4,"HandshakeError","","An error returned from `ClientBuilder::handshake`.",N,N],[13,"Failure","","A fatal error.",0,N],[13,"WouldBlock","","A stream interrupted midway through the handshake process…",0,N],[4,"Protocol","","SSL/TLS protocol versions.",N,N],[13,"Sslv3","","The SSL 3.0 protocol.",1,N],[13,"Tlsv10","","The TLS 1.0 protocol.",1,N],[13,"Tlsv11","","The TLS 1.1 protocol.",1,N],[13,"Tlsv12","","The TLS 1.2 protocol.",1,N],[6,"Result","","A typedef of the result-type returned by many methods.",N,N],[11,"from_pkcs12","","Parses a DER-formatted PKCS #12 archive, using the…",2,N],[11,"from_der","","Parses a DER-formatted X509 certificate.",3,N],[11,"from_pem","","Parses a PEM-formatted X509 certificate.",3,N],[11,"to_der","","Returns the DER-encoded representation of this certificate.",3,[[["self"]],["result",["vec"]]]],[11,"get_ref","","Returns a shared reference to the inner stream.",4,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",4,[[["self"]],["s"]]],[11,"handshake","","Restarts the handshake process.",4,[[["self"]],["result",["tlsstream","handshakeerror"]]]],[11,"identity","","Sets the identity to be used for client certificate…",5,[[["self"],["identity"]],["tlsconnectorbuilder"]]],[11,"min_protocol_version","","Sets the minimum supported protocol version.",5,[[["self"],["option",["protocol"]]],["tlsconnectorbuilder"]]],[11,"max_protocol_version","","Sets the maximum supported protocol version.",5,[[["self"],["option",["protocol"]]],["tlsconnectorbuilder"]]],[11,"add_root_certificate","","Adds a certificate to the set of roots that the connector…",5,[[["self"],["certificate"]],["tlsconnectorbuilder"]]],[11,"danger_accept_invalid_certs","","Controls the use of certificate validation.",5,[[["self"],["bool"]],["tlsconnectorbuilder"]]],[11,"use_sni","","Controls the use of Server Name Indication (SNI).",5,[[["self"],["bool"]],["tlsconnectorbuilder"]]],[11,"danger_accept_invalid_hostnames","","Controls the use of hostname verification.",5,[[["self"],["bool"]],["tlsconnectorbuilder"]]],[11,"build","","Creates a new `TlsConnector`.",5,[[["self"]],["result",["tlsconnector"]]]],[11,"new","","Returns a new connector with default settings.",6,[[],["result",["tlsconnector"]]]],[11,"builder","","Returns a new builder for a `TlsConnector`.",6,[[],["tlsconnectorbuilder"]]],[11,"connect","","Initiates a TLS handshake.",6,[[["self"],["str"],["s"]],["result",["tlsstream","handshakeerror"]]]],[11,"min_protocol_version","","Sets the minimum supported protocol version.",7,[[["self"],["option",["protocol"]]],["tlsacceptorbuilder"]]],[11,"max_protocol_version","","Sets the maximum supported protocol version.",7,[[["self"],["option",["protocol"]]],["tlsacceptorbuilder"]]],[11,"build","","Creates a new `TlsAcceptor`.",7,[[["self"]],["result",["tlsacceptor"]]]],[11,"new","","Creates a acceptor with default settings.",8,[[["identity"]],["result",["tlsacceptor"]]]],[11,"builder","","Returns a new builder for a `TlsAcceptor`.",8,[[["identity"]],["tlsacceptorbuilder"]]],[11,"accept","","Initiates a TLS handshake.",8,[[["self"],["s"]],["result",["tlsstream","handshakeerror"]]]],[11,"get_ref","","Returns a shared reference to the inner stream.",9,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",9,[[["self"]],["s"]]],[11,"buffered_read_size","","Returns the number of bytes that can be read without…",9,[[["self"]],["result",["usize"]]]],[11,"peer_certificate","","Returns the peer's leaf certificate, if available.",9,[[["self"]],["result",["option"]]]],[11,"tls_server_end_point","","Returns the tls-server-end-point channel binding data as…",9,[[["self"]],["result",["option"]]]],[11,"shutdown","","Shuts down the TLS session.",9,[[["self"]],["result"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",3,[[["self"]],["certificate"]]],[11,"clone","","",1,[[["self"]],["protocol"]]],[11,"clone","","",6,[[["self"]],["tlsconnector"]]],[11,"clone","","",8,[[["self"]],["tlsacceptor"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"read","","",9,N],[11,"write","","",9,N],[11,"flush","","",9,[[["self"]],["result"]]],[11,"description","","",10,[[["self"]],["str"]]],[11,"cause","","",10,[[["self"]],["option",["error"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]]],"paths":[[4,"HandshakeError"],[4,"Protocol"],[3,"Identity"],[3,"Certificate"],[3,"MidHandshakeTlsStream"],[3,"TlsConnectorBuilder"],[3,"TlsConnector"],[3,"TlsAcceptorBuilder"],[3,"TlsAcceptor"],[3,"TlsStream"],[3,"Error"]]};
searchIndex["net2"]={"doc":"Extensions to `std::net` networking types.","items":[[3,"TcpBuilder","net2","An \"in progress\" TCP socket which has not yet been…",N,N],[3,"UdpBuilder","","An \"in progress\" UDP socket which has not yet been…",N,N],[11,"new_v4","","Constructs a new TcpBuilder with the `AF_INET` domain, the…",0,[[],["result",["tcpbuilder"]]]],[11,"new_v6","","Constructs a new TcpBuilder with the `AF_INET6` domain,…",0,[[],["result",["tcpbuilder"]]]],[11,"bind","","Binds this socket to the specified address.",0,[[["self"],["t"]],["result",["tcpbuilder"]]]],[11,"listen","","Mark a socket as ready to accept incoming connection…",0,[[["self"],["i32"]],["result",["tcplistener"]]]],[11,"connect","","Initiate a connection on this socket to the specified…",0,[[["self"],["t"]],["result",["tcpstream"]]]],[11,"to_tcp_stream","","Converts this builder into a `TcpStream`",0,[[["self"]],["result",["tcpstream"]]]],[11,"to_tcp_listener","","Converts this builder into a `TcpListener`",0,[[["self"]],["result",["tcplistener"]]]],[11,"local_addr","","Returns the address of the local half of this TCP socket.",0,[[["self"]],["result",["socketaddr"]]]],[11,"new_v4","","Constructs a new UdpBuilder with the `AF_INET` domain, the…",1,[[],["result",["udpbuilder"]]]],[11,"new_v6","","Constructs a new UdpBuilder with the `AF_INET6` domain,…",1,[[],["result",["udpbuilder"]]]],[11,"bind","","Binds this socket to the specified address.",1,[[["self"],["t"]],["result",["udpsocket"]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",0,[[["self"],["u32"]],["result"]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",0,[[["self"],["bool"]],["result"]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",0,[[["self"],["bool"]],["result"]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",0,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",0,[[["self"]],["result",["option"]]]],[11,"ttl","","Sets the value for the `IP_TTL` option on this socket.",1,[[["self"],["u32"]],["result"]]],[11,"only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"get_reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,[[["self"]],["result",["bool"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,[[["self"]],["result",["option"]]]],[0,"unix","","Unix-specific extensions to the `std::net` types.",N,N],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the `TcpBuilder` type in this…",N,N],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",2,[[["self"],["bool"]],["result"]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",2,[[["self"]],["result",["bool"]]]],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the `UdpBuilder` type in this…",N,N],[10,"reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",3,[[["self"],["bool"]],["result"]]],[10,"get_reuse_port","","Check the value of the `SO_REUSEPORT` option on this socket.",3,[[["self"]],["result",["bool"]]]],[8,"TcpStreamExt","net2","Extension methods for the standard [`TcpStream`…",N,N],[10,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",4,[[["self"]],["result",["bool"]]]],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",4,[[["self"]],["result",["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",4,[[["self"]],["result",["usize"]]]],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on…",4,[[["self"],["option",["u32"]]],["result"]]],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this…",4,[[["self"]],["result",["option"]]]],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",4,[[["self"],["option",["duration"]]],["result"]]],[10,"keepalive","","Returns whether keepalive messages are enabled on this…",4,[[["self"]],["result",["option"]]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["self"],["option",["u32"]]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",4,[[["self"],["option",["duration"]]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["self"],["option",["u32"]]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",4,[[["self"],["option",["duration"]]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",4,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",4,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",4,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",4,[[["self"]],["result",["bool"]]]],[10,"connect","","Executes a `connect` operation on this socket,…",4,[[["self"],["t"]],["result"]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",4,[[["self"]],["result",["option"]]]],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",4,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the…",4,[[["self"],["option",["duration"]]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the…",4,[[["self"]],["result",["option"]]]],[8,"TcpListenerExt","","Extension methods for the standard [`TcpListener`…",N,N],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",5,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",5,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",5,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",5,[[["self"]],["result",["bool"]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",5,[[["self"]],["result",["option"]]]],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",5,[[["self"],["bool"]],["result"]]],[10,"set_linger","","Sets the linger duration of this socket by setting the…",5,[[["self"],["option",["duration"]]],["result"]]],[10,"linger","","reads the linger duration for this socket by getting the…",5,[[["self"]],["result",["option"]]]],[8,"UdpSocketExt","","Extension methods for the standard [`UdpSocket`…",N,N],[10,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",6,[[["self"]],["result",["usize"]]]],[10,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"],["usize"]],["result"]]],[10,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",6,[[["self"]],["result",["usize"]]]],[10,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"],["bool"]],["result"]]],[10,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["self"],["u32"]],["result"]]],[10,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",6,[[["self"]],["result",["u32"]]]],[10,"set_multicast_hops_v6","","Sets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"],["u32"]],["result"]]],[10,"multicast_hops_v6","","Gets the value of the `IPV6_MULTICAST_HOPS` option for…",6,[[["self"]],["result",["u32"]]]],[10,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"],["bool"]],["result"]]],[10,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",6,[[["self"]],["result",["bool"]]]],[10,"set_multicast_if_v4","","Sets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"],["ipv4addr"]],["result"]]],[10,"multicast_if_v4","","Gets the value of the `IP_MULTICAST_IF` option for this…",6,[[["self"]],["result",["ipv4addr"]]]],[10,"set_multicast_if_v6","","Sets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"],["u32"]],["result"]]],[10,"multicast_if_v6","","Gets the value of the `IPV6_MULTICAST_IF` option for this…",6,[[["self"]],["result",["u32"]]]],[10,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",6,[[["self"],["u32"]],["result"]]],[10,"ttl","","Gets the value of the `IP_TTL` option for this socket.",6,[[["self"]],["result",["u32"]]]],[10,"set_unicast_hops_v6","","Sets the value for the `IPV6_UNICAST_HOPS` option on this…",6,[[["self"],["u32"]],["result"]]],[10,"unicast_hops_v6","","Gets the value of the `IPV6_UNICAST_HOPS` option for this…",6,[[["self"]],["result",["u32"]]]],[10,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",6,[[["self"],["bool"]],["result"]]],[10,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",6,[[["self"]],["result",["bool"]]]],[10,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[10,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",6,[[["self"],["ipv6addr"],["u32"]],["result"]]],[10,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",6,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[10,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",6,[[["self"],["ipv6addr"],["u32"]],["result"]]],[10,"set_read_timeout_ms","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["self"],["option",["u32"]]],["result"]]],[10,"set_read_timeout","","Sets the `SO_RCVTIMEO` option for this socket.",6,[[["self"],["option",["duration"]]],["result"]]],[10,"read_timeout_ms","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"read_timeout","","Gets the value of the `SO_RCVTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"set_write_timeout_ms","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["self"],["option",["u32"]]],["result"]]],[10,"set_write_timeout","","Sets the `SO_SNDTIMEO` option for this socket.",6,[[["self"],["option",["duration"]]],["result"]]],[10,"write_timeout_ms","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"write_timeout","","Gets the value of the `SO_SNDTIMEO` option for this socket.",6,[[["self"]],["result",["option"]]]],[10,"take_error","","Get the value of the `SO_ERROR` option on this socket.",6,[[["self"]],["result",["option"]]]],[10,"connect","","Connects this UDP socket to a remote address, allowing the…",6,[[["self"],["a"]],["result"]]],[10,"send","","Sends data on the socket to the remote address to which it…",6,N],[10,"recv","","Receives data on the socket from the remote address to…",6,N],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",6,[[["self"],["bool"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"reuse_port","","",0,[[["self"],["bool"]],["result"]]],[11,"get_reuse_port","","",0,[[["self"]],["result",["bool"]]]],[11,"reuse_port","","",1,[[["self"],["bool"]],["result"]]],[11,"get_reuse_port","","",1,[[["self"]],["result",["bool"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"as_raw_fd","","",0,[[["self"]],["c_int"]]],[11,"as_raw_fd","","",1,[[["self"]],["c_int"]]],[11,"from_raw_fd","","",0,[[["c_int"]],["tcpbuilder"]]],[11,"from_raw_fd","","",1,[[["c_int"]],["udpbuilder"]]]],"paths":[[3,"TcpBuilder"],[3,"UdpBuilder"],[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"]]};
searchIndex["nodrop"]={"doc":"The nodrop crate has the following cargo feature flags:","items":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",N,N],[11,"new","","Create a new NoDrop.",0,[[["t"]],["nodrop"]]],[11,"into_inner","","Extract the inner value.",0,[[["self"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]],["t"]]],[11,"deref_mut","","",0,[[["self"]],["t"]]],[11,"drop","","",0,[[["self"]]]]],"paths":[[3,"NoDrop"]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"paths":[]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","items":[[3,"IterBinomial","num_integer","An iterator over binomial coefficients.",N,N],[5,"sqrt","","Returns the truncated principal square root of an integer…",N,[[["t"]],["t"]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",N,[[["t"]],["t"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",N,[[["t"],["u32"]],["t"]]],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",N,[[["t"],["t"]],["t"]]],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[8,"Roots","","Provides methods to compute an integer's square root, cube…",N,N],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",0,[[["self"],["u32"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",0,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[["self"]],["self"]]],[8,"Integer","","",N,N],[10,"div_floor","","Floored integer division.",1,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,N],[11,"new","","For a given n, iterate over all binomial coefficients…",2,[[["t"]],["iterbinomial"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",0,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[["self"]],["self"]]]],"paths":[[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",N,N],[12,"kind","","",0,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",1,N],[13,"Invalid","","",1,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"bounds","","",N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",N,N],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",3,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",3,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",3,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",3,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",3,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",3,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",3,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",3,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",3,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",3,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",3,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",3,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",3,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",3,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",4,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",4,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",4,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",4,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",4,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",4,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",5,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[["self"]],["t"]]],[0,"float","num_traits","",N,N],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",N,N],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[["self"]],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[["self"]],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[["self"]],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[["self"]],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[["self"]],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[["self"]],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[["self"]],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[["self"]],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[["self"]],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[["self"]],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[["self"]],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[["self"]],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[["self"]],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[["self"],["self"]],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[["self"],["self"]],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[["self"]],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["self"],["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[["self"]],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",8,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",8,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",8,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",8,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",8,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",8,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",8,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",8,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",8,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",8,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",8,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",8,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",8,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",8,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",8,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",8,[[],["self"]]],[0,"identities","num_traits","",N,N],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",9,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",10,[[["self"]],["bool"]]],[0,"int","num_traits","",N,N],[8,"PrimInt","num_traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of…",11,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",11,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",11,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",11,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",11,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",11,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",11,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",11,[[["self"],["u32"]],["self"]]],[0,"ops","num_traits","",N,N],[0,"checked","num_traits::ops","",N,N],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",12,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[["self"],["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",N,N],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[["self"],["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",N,N],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",17,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If…",18,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If…",19,[[["self"],["u32"]],["option"]]],[0,"inv","num_traits::ops","",N,N],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",N,N],[16,"Output","","The result after applying the operator.",20,N],[10,"inv","","Returns the multiplicative inverse of `self`.",20,N],[0,"mul_add","num_traits::ops","",N,N],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",N,N],[16,"Output","","The resulting type after applying the fused multiply-add.",21,N],[10,"mul_add","","Performs the fused multiply-add operation.",21,N],[8,"MulAddAssign","","The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[["self"],["a"],["b"]]]],[0,"saturating","num_traits::ops","",N,N],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",23,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",23,[[["self"],["self"]],["self"]]],[0,"wrapping","num_traits::ops","",N,N],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",24,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",25,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",26,[[["self"],["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",N,N],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",27,[[["self"],["u32"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",N,N],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",28,[[["self"],["u32"]],["self"]]],[0,"pow","num_traits","",N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",N,[[["t"],["usize"]],["option"]]],[8,"Pow","","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",29,N],[10,"pow","","Returns `self` to the power `rhs`.",29,N],[0,"sign","num_traits","",N,N],[5,"abs","num_traits::sign","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs","","Computes the absolute value.",30,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",30,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",30,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",30,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",30,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr","","",31,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",31,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",N,N],[8,"NumRef","","The trait for `Num` types which also implement numeric…",N,N],[8,"RefNum","","The trait for references which implement numeric…",N,N],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",N,N],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",N,N],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"]]};
searchIndex["open"]={"doc":"Use this library to open a path or URL using the program…","items":[[5,"that","open","",N,[[["t"]],["result",["exitstatus"]]]]],"paths":[]};
searchIndex["openssl"]={"doc":"Bindings to OpenSSL","items":[[5,"init","openssl","",N,N],[0,"aes","","Low level AES IGE functionality",N,N],[3,"KeyError","openssl::aes","Provides Error handling for parsing keys.",N,N],[3,"AesKey","","The key used to encrypt or decrypt cipher blocks.",N,N],[5,"aes_ige","","Performs AES IGE encryption or decryption",N,N],[11,"new_encrypt","","Prepares a key for encryption.",0,N],[11,"new_decrypt","","Prepares a key for decryption.",0,N],[0,"asn1","openssl","Defines the format of certificiates",N,N],[3,"Asn1GeneralizedTime","openssl::asn1","Non-UTC representation of time",N,N],[3,"Asn1GeneralizedTimeRef","","Reference to a [`Asn1GeneralizedTime`]",N,N],[3,"Asn1Time","","Time storage and comparison",N,N],[3,"Asn1TimeRef","","Reference to an [`Asn1Time`]",N,N],[3,"Asn1String","","Primary ASN.1 type used by OpenSSL",N,N],[3,"Asn1StringRef","","Reference to [`Asn1String`]",N,N],[3,"Asn1Integer","","Numeric representation",N,N],[3,"Asn1IntegerRef","","Reference to [`Asn1Integer`]",N,N],[3,"Asn1BitString","","Sequence of bytes",N,N],[3,"Asn1BitStringRef","","Reference to [`Asn1BitString`]",N,N],[3,"Asn1Object","","Object Identifier",N,N],[3,"Asn1ObjectRef","","Reference to [`Asn1Object`]",N,N],[11,"days_from_now","","Creates a new time on specified interval in days from now",1,[[["u32"]],["result",["asn1time","errorstack"]]]],[11,"as_utf8","","Converts the ASN.1 underlying format to UTF8",2,[[["self"]],["result",["opensslstring","errorstack"]]]],[11,"as_slice","","Return the string as an array of bytes",2,N],[11,"len","","Return the length of the Asn1String (number of bytes)",2,[[["self"]],["usize"]]],[11,"get","","",3,[[["self"]],["i64"]]],[11,"to_bn","","Converts the integer to a `BigNum`.",3,[[["self"]],["result",["bignum","errorstack"]]]],[11,"set","","Sets the ASN.1 value to the value of a signed 32-bit…",3,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"as_slice","","Returns the Asn1BitString as a slice",4,N],[11,"len","","Length of Asn1BitString in number of bytes.",4,[[["self"]],["usize"]]],[11,"nid","","Returns the NID associated with this OID.",5,[[["self"]],["nid"]]],[0,"bn","openssl","BigNum implementation",N,N],[3,"MsbOption","openssl::bn","Options for the most significant bits of a randomly…",N,N],[3,"BigNumContext","","Temporary storage for BigNums on the secure heap",N,N],[3,"BigNumContextRef","","Reference to [`BigNumContext`]",N,N],[3,"BigNum","","Dynamically sized large number impelementation",N,N],[3,"BigNumRef","","Reference to a [`BigNum`]",N,N],[18,"MAYBE_ZERO","","The most significant bit of the number may be 0.",6,N],[18,"ONE","","The most significant bit of the number must be 1.",6,N],[18,"TWO_ONES","","The most significant two bits of the number must be 1.",6,N],[11,"new","","Returns a new `BigNumContext`.",7,[[],["result",["bignumcontext","errorstack"]]]],[11,"clear","","Erases the memory used by this `BigNum`, resetting its…",8,[[["self"]]]],[11,"add_word","","Adds a `u32` to `self`.",8,[[["self"],["u32"]],["result",["errorstack"]]]],[11,"sub_word","","Subtracts a `u32` from `self`.",8,[[["self"],["u32"]],["result",["errorstack"]]]],[11,"mul_word","","Multiplies a `u32` by `self`.",8,[[["self"],["u32"]],["result",["errorstack"]]]],[11,"div_word","","Divides `self` by a `u32`, returning the remainder.",8,[[["self"],["u32"]],["result",["u64","errorstack"]]]],[11,"mod_word","","Returns the result of `self` modulo `w`.",8,[[["self"],["u32"]],["result",["u64","errorstack"]]]],[11,"rand_range","","Places a cryptographically-secure pseudo-random…",8,[[["self"],["bignumref"]],["result",["errorstack"]]]],[11,"pseudo_rand_range","","The cryptographically weak counterpart to `rand_in_range`.",8,[[["self"],["bignumref"]],["result",["errorstack"]]]],[11,"set_bit","","Sets bit `n`. Equivalent to `self |= (1 << n)`.",8,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"clear_bit","","Clears bit `n`, setting it to 0. Equivalent to `self &=…",8,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"is_bit_set","","Returns `true` if the `n`th bit of `self` is set to 1,…",8,[[["self"],["i32"]],["bool"]]],[11,"mask_bits","","Truncates `self` to the lowest `n` bits.",8,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"lshift1","","Places `a << 1` in `self`.  Equivalent to `self * 2`.",8,[[["self"],["bignumref"]],["result",["errorstack"]]]],[11,"rshift1","","Places `a >> 1` in `self`. Equivalent to `self / 2`.",8,[[["self"],["bignumref"]],["result",["errorstack"]]]],[11,"checked_add","","Places `a + b` in `self`. [`core::ops::Add`] is also…",8,[[["self"],["bignumref"],["bignumref"]],["result",["errorstack"]]]],[11,"checked_sub","","Places `a - b` in `self`. [`core::ops::Sub`] is also…",8,[[["self"],["bignumref"],["bignumref"]],["result",["errorstack"]]]],[11,"lshift","","Places `a << n` in `self`.  Equivalent to `a * 2 ^ n`.",8,[[["self"],["bignumref"],["i32"]],["result",["errorstack"]]]],[11,"rshift","","Places `a >> n` in `self`. Equivalent to `a / 2 ^ n`.",8,[[["self"],["bignumref"],["i32"]],["result",["errorstack"]]]],[11,"to_owned","","Creates a new BigNum with the same value.",8,[[["self"]],["result",["bignum","errorstack"]]]],[11,"set_negative","","Sets the sign of `self`. Pass true to set `self` to a…",8,[[["self"],["bool"]]]],[11,"ucmp","","Compare the absolute values of `self` and `oth`.",8,[[["self"],["bignumref"]],["ordering"]]],[11,"is_negative","","Returns `true` if `self` is negative.",8,[[["self"]],["bool"]]],[11,"num_bits","","Returns the number of significant bits in `self`.",8,[[["self"]],["i32"]]],[11,"num_bytes","","Returns the size of `self` in bytes. Implemented natively.",8,[[["self"]],["i32"]]],[11,"rand","","Generates a cryptographically strong pseudo-random…",8,[[["self"],["i32"],["msboption"],["bool"]],["result",["errorstack"]]]],[11,"pseudo_rand","","The cryptographically weak counterpart to `rand`. Not…",8,[[["self"],["i32"],["msboption"],["bool"]],["result",["errorstack"]]]],[11,"generate_prime","","Generates a prime number, placing it in `self`.",8,[[["self"],["i32"],["bool"],["option",["bignumref"]],["option",["bignumref"]]],["result",["errorstack"]]]],[11,"checked_mul","","Places the result of `a * b` in `self`. [`core::ops::Mul`]…",8,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"checked_div","","Places the result of `a / b` in `self`. The remainder is…",8,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"checked_rem","","Places the result of `a % b` in `self`.",8,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"div_rem","","Places the result of `a / b` in `self` and `a % b` in `rem`.",8,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"sqr","","Places the result of `a²` in `self`.",8,[[["self"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"nnmod","","Places the result of `a mod m` in `self`. As opposed to…",8,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_add","","Places the result of `(a + b) mod m` in `self`.",8,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_sub","","Places the result of `(a - b) mod m` in `self`.",8,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_mul","","Places the result of `(a * b) mod m` in `self`.",8,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_sqr","","Places the result of `a² mod m` in `self`.",8,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"exp","","Places the result of `a^p` in `self`.",8,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_exp","","Places the result of `a^p mod m` in `self`.",8,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mod_inverse","","Places the inverse of `a` modulo `n` in `self`.",8,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"gcd","","Places the greatest common denominator of `a` and `b` in…",8,[[["self"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"is_prime","","Checks whether `self` is prime.",8,[[["self"],["i32"],["bignumcontextref"]],["result",["bool","errorstack"]]]],[11,"is_prime_fasttest","","Checks whether `self` is prime with optional trial division.",8,[[["self"],["i32"],["bignumcontextref"],["bool"]],["result",["bool","errorstack"]]]],[11,"to_vec","","Returns a big-endian byte vector representation of the…",8,[[["self"]],["vec",["u8"]]]],[11,"to_dec_str","","Returns a decimal string representation of `self`.",8,[[["self"]],["result",["opensslstring","errorstack"]]]],[11,"to_hex_str","","Returns a hexadecimal string representation of `self`.",8,[[["self"]],["result",["opensslstring","errorstack"]]]],[11,"to_asn1_integer","","Returns an `Asn1Integer` containing the value of `self`.",8,[[["self"]],["result",["asn1integer","errorstack"]]]],[11,"new","","Creates a new `BigNum` with the value 0.",9,[[],["result",["bignum","errorstack"]]]],[11,"from_u32","","Creates a new `BigNum` with the given value.",9,[[["u32"]],["result",["bignum","errorstack"]]]],[11,"from_dec_str","","Creates a `BigNum` from a decimal string.",9,[[["str"]],["result",["bignum","errorstack"]]]],[11,"from_hex_str","","Creates a `BigNum` from a hexadecimal string.",9,[[["str"]],["result",["bignum","errorstack"]]]],[11,"get_rfc2409_prime_768","","Returns a constant used in IKE as defined in [`RFC 2409`].…",9,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc2409_prime_1024","","Returns a constant used in IKE as defined in [`RFC 2409`].…",9,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_1536","","Returns a constant used in IKE as defined in [`RFC 3526`].…",9,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_2048","","Returns a constant used in IKE as defined in [`RFC 3526`].…",9,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_3072","","Returns a constant used in IKE as defined in [`RFC 3526`].…",9,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_4096","","Returns a constant used in IKE as defined in [`RFC 3526`].…",9,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_6144","","Returns a constant used in IKE as defined in [`RFC 3526`].…",9,[[],["result",["bignum","errorstack"]]]],[11,"get_rfc3526_prime_8192","","Returns a constant used in IKE as defined in [`RFC 3526`].…",9,[[],["result",["bignum","errorstack"]]]],[11,"from_slice","","Creates a new `BigNum` from an unsigned, big-endian…",9,N],[0,"cms","openssl","SMIME implementation using CMS",N,N],[3,"CMSOptions","openssl::cms","",N,N],[3,"CmsContentInfo","","High level CMS wrapper",N,N],[3,"CmsContentInfoRef","","Reference to [`CMSContentInfo`]",N,N],[18,"TEXT","","",10,N],[18,"CMS_NOCERTS","","",10,N],[18,"NO_CONTENT_VERIFY","","",10,N],[18,"NO_ATTR_VERIFY","","",10,N],[18,"NOSIGS","","",10,N],[18,"NOINTERN","","",10,N],[18,"NO_SIGNER_CERT_VERIFY","","",10,N],[18,"NOVERIFY","","",10,N],[18,"DETACHED","","",10,N],[18,"BINARY","","",10,N],[18,"NOATTR","","",10,N],[18,"NOSMIMECAP","","",10,N],[18,"NOOLDMIMETYPE","","",10,N],[18,"CRLFEOL","","",10,N],[18,"STREAM","","",10,N],[18,"NOCRL","","",10,N],[18,"PARTIAL","","",10,N],[18,"REUSE_DIGEST","","",10,N],[18,"USE_KEYID","","",10,N],[18,"DEBUG_DECRYPT","","",10,N],[11,"empty","","Returns an empty set of flags.",10,[[],["cmsoptions"]]],[11,"all","","Returns the set containing all flags.",10,[[],["cmsoptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[["self"]],["c_uint"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",10,[[["c_uint"]],["option",["cmsoptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",10,[[["c_uint"]],["cmsoptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",10,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",10,[[["self"],["cmsoptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",10,[[["self"],["cmsoptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["self"],["cmsoptions"]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["self"],["cmsoptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["self"],["cmsoptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",10,[[["self"],["cmsoptions"],["bool"]]]],[11,"decrypt","","Given the sender's private key, `pkey` and the recipient's…",11,[[["self"],["pkeyref"],["x509"]],["result",["vec","errorstack"]]]],[11,"to_der","","Serializes this CmsContentInfo using DER.",11,[[["self"]],["result",["vec","errorstack"]]]],[11,"smime_read_cms","","Parses a smime formatted `vec` of bytes into a…",12,N],[11,"sign","","Given a signing cert `signcert`, private key `pkey`, a…",12,[[["option",["x509ref"]],["option",["pkeyref"]],["option",["stackref"]],["option"],["cmsoptions"]],["result",["cmscontentinfo","errorstack"]]]],[0,"conf","openssl","Interface for processing OpenSSL configuration files.",N,N],[3,"ConfMethod","openssl::conf","",N,N],[3,"Conf","","",N,N],[3,"ConfRef","","",N,N],[11,"default","","Retrieve handle to the default OpenSSL configuration file…",13,[[],["confmethod"]]],[11,"from_ptr","","Construct from raw pointer.",13,N],[11,"as_ptr","","Convert to raw pointer.",13,N],[11,"new","","Create a configuration parser.",14,[[["confmethod"]],["result",["conf","errorstack"]]]],[0,"derive","openssl","Shared secret derivation.",N,N],[3,"Deriver","openssl::derive","A type used to derive a shared secret between two keys.",N,N],[11,"new","","Creates a new `Deriver` using the provided private key.",15,[[["pkeyref"]],["result",["deriver","errorstack"]]]],[11,"set_peer","","Sets the peer key used for secret derivation.",15,[[["self"],["pkeyref"]],["result",["errorstack"]]]],[11,"len","","Returns the size of the shared secret.",15,[[["self"]],["result",["usize","errorstack"]]]],[11,"derive","","Derives a shared secret between the two keys, writing it…",15,N],[11,"derive_to_vec","","A convenience function which derives a shared secret and…",15,[[["self"]],["result",["vec","errorstack"]]]],[0,"dh","openssl","",N,N],[3,"Dh","openssl::dh","",N,N],[3,"DhRef","","",N,N],[11,"params_to_pem","","Serializes the parameters into a PEM-encoded PKCS#3…",16,[[["self"]],["result",["vec","errorstack"]]]],[11,"params_to_der","","Serializes the parameters into a DER-encoded PKCS#3…",16,[[["self"]],["result",["vec","errorstack"]]]],[11,"from_params","","",17,[[["bignum"],["bignum"],["bignum"]],["result",["dh","errorstack"]]]],[11,"params_from_pem","","Deserializes a PEM-encoded PKCS#3 DHpararameters structure.",17,N],[11,"params_from_der","","Deserializes a DER-encoded PKCS#3 DHparameters structure.",17,N],[0,"dsa","openssl","Digital Signatures",N,N],[3,"Dsa","openssl::dsa","Object representing DSA keys.",N,N],[3,"DsaRef","","Reference to [`Dsa`].",N,N],[11,"public_key_to_pem","","Serialies the public key into a PEM-encoded…",18,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_der","","Serializes the public key into a DER-encoded…",18,[[["self"]],["result",["vec","errorstack"]]]],[11,"pub_key","","Returns a reference to the public key component of `self`.",18,[[["self"]],["bignumref"]]],[11,"priv_key","","Returns a reference to the private key component of `self`.",18,[[["self"]],["bignumref"]]],[11,"size","","Returns the maximum size of the signature output by `self`…",18,[[["self"]],["u32"]]],[11,"p","","Returns the DSA prime parameter of `self`.",18,[[["self"]],["bignumref"]]],[11,"q","","Returns the DSA sub-prime parameter of `self`.",18,[[["self"]],["bignumref"]]],[11,"g","","Returns the DSA base parameter of `self`.",18,[[["self"]],["bignumref"]]],[11,"generate","","Generate a DSA key pair.",19,[[["u32"]],["result",["dsa","errorstack"]]]],[11,"from_private_components","","Create a DSA key pair with the given parameters",19,[[["bignum"],["bignum"],["bignum"],["bignum"],["bignum"]],["result",["dsa","errorstack"]]]],[11,"public_key_from_pem","","Decodes a PEM-encoded SubjectPublicKeyInfo structure…",19,N],[11,"public_key_from_der","","Decodes a DER-encoded SubjectPublicKeyInfo structure…",19,N],[11,"from_public_components","","Create a new DSA key with only public components.",19,[[["bignum"],["bignum"],["bignum"],["bignum"]],["result",["dsa","errorstack"]]]],[0,"ec","openssl","Elliptic Curve",N,N],[3,"PointConversionForm","openssl::ec","Compressed or Uncompressed conversion",N,N],[3,"Asn1Flag","","Named Curve or Explicit",N,N],[3,"EcGroup","","Describes the curve",N,N],[3,"EcGroupRef","","Reference to [`EcGroup`]",N,N],[3,"EcPoint","","Represents a point on the curve",N,N],[3,"EcPointRef","","Reference to [`EcPoint`]",N,N],[3,"EcKey","","Public and optional Private key on the given curve",N,N],[3,"EcKeyRef","","Reference to [`EcKey`]",N,N],[18,"COMPRESSED","","Compressed conversion from point value.",20,N],[18,"UNCOMPRESSED","","Uncompressed conversion from point value.",20,N],[18,"HYBRID","","Performs both compressed and uncompressed conversions.",20,N],[18,"EXPLICIT_CURVE","","Curve defined using polynomial parameters",21,N],[18,"NAMED_CURVE","","Standard Curves",21,N],[11,"from_curve_name","","Returns the group of a standard named curve.",22,[[["nid"]],["result",["ecgroup","errorstack"]]]],[11,"components_gfp","","Places the components of a curve over a prime field in the…",23,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"components_gf2m","","Places the components of a curve over a binary field in…",23,[[["self"],["bignumref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"degree","","Returns the degree of the curve.",23,[[["self"]],["u32"]]],[11,"order","","Places the order of the curve in the provided `BigNum`.",23,[[["self"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"set_asn1_flag","","Sets the flag determining if the group corresponds to a…",23,[[["self"],["asn1flag"]]]],[11,"add","","Computes `a + b`, storing the result in `self`.",24,[[["self"],["ecgroupref"],["ecpointref"],["ecpointref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mul","","Computes `q * m`, storing the result in `self`.",24,[[["self"],["ecgroupref"],["ecpointref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mul_generator","","Computes `generator * n`, storing the result ing `self`.",24,[[["self"],["ecgroupref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"mul_full","","Computes `generator * n + q * m`, storing the result in…",24,[[["self"],["ecgroupref"],["bignumref"],["ecpointref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"invert","","Inverts `self`.",24,[[["self"],["ecgroupref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"to_bytes","","Serializes the point to a binary representation.",24,[[["self"],["ecgroupref"],["pointconversionform"],["bignumcontextref"]],["result",["vec","errorstack"]]]],[11,"eq","","Determines if this point is equal to another.",24,[[["self"],["ecgroupref"],["ecpointref"],["bignumcontextref"]],["result",["bool","errorstack"]]]],[11,"affine_coordinates_gfp","","Place affine coordinates of a curve over a prime field in…",24,[[["self"],["ecgroupref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"affine_coordinates_gf2m","","Place affine coordinates of a curve over a binary field in…",24,[[["self"],["ecgroupref"],["bignumref"],["bignumref"],["bignumcontextref"]],["result",["errorstack"]]]],[11,"new","","Creates a new point on the specified curve.",25,[[["ecgroupref"]],["result",["ecpoint","errorstack"]]]],[11,"from_bytes","","Creates point from a binary representation",25,N],[11,"private_key_to_pem","","Serializes the private key to a PEM-encoded ECPrivateKey…",26,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_pem_passphrase","","Serializes the private key to a PEM-encoded encrypted…",26,N],[11,"private_key_to_der","","Serializes the private key into a DER-encoded ECPrivateKey…",26,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key","","Return [`EcPoint`] associated with the private key",26,[[["self"]],["bignumref"]]],[11,"public_key","","Returns the public key.",26,[[["self"]],["ecpointref"]]],[11,"group","","Return [`EcGroup`] of the `EcKey`",26,[[["self"]],["ecgroupref"]]],[11,"check_key","","Checks the key for validity.",26,[[["self"]],["result",["errorstack"]]]],[11,"from_curve_name","","Constructs an `EcKey` corresponding to a known curve.",27,[[["nid"]],["result",["eckey","errorstack"]]]],[11,"from_group","","Constructs an `EcKey` corresponding to a curve.",27,[[["ecgroupref"]],["result",["eckey","errorstack"]]]],[11,"from_public_key","","Constructs an `EcKey` from the specified group with the…",27,[[["ecgroupref"],["ecpointref"]],["result",["eckey","errorstack"]]]],[11,"from_public_key_affine_coordinates","","Constructs a public key from its affine coordinates.",27,[[["ecgroupref"],["bignumref"],["bignumref"]],["result",["eckey","errorstack"]]]],[11,"generate","","Generates a new public/private key pair on the specified…",27,[[["ecgroupref"]],["result",["eckey","errorstack"]]]],[11,"from_private_components","","Constructs an public/private key pair given a curve, a…",27,[[["ecgroupref"],["bignumref"],["ecpointref"]],["result",["eckey","errorstack"]]]],[11,"private_key_from_pem","","Deserializes a private key from a PEM-encoded ECPrivateKey…",27,N],[11,"private_key_from_pem_passphrase","","Deserializes a private key from a PEM-encoded encrypted…",27,N],[11,"private_key_from_pem_callback","","Deserializes a private key from a PEM-encoded encrypted…",27,N],[11,"private_key_from_der","","Decodes a DER-encoded elliptic curve private key structure.",27,N],[0,"ecdsa","openssl","Low level Elliptic Curve Digital Signature Algorithm…",N,N],[3,"EcdsaSig","openssl::ecdsa","A low level interface to ECDSA",N,N],[3,"EcdsaSigRef","","Reference to [`EcdsaSig`]",N,N],[11,"sign","","Computes a digital signature of the hash value `data`…",28,N],[11,"from_private_components","","Returns a new `EcdsaSig` by setting the `r` and `s` values…",28,[[["bignum"],["bignum"]],["result",["ecdsasig","errorstack"]]]],[11,"verify","","Verifies if the signature is a valid ECDSA signature using…",28,N],[11,"r","","Returns internal component: `r` of a `EcdsaSig`. (See…",28,[[["self"]],["bignumref"]]],[11,"s","","Returns internal components: `s` of a `EcdsaSig`. (See…",28,[[["self"]],["bignumref"]]],[11,"from_der","","Decodes a DER-encoded ECDSA signature.",28,N],[11,"to_der","","Serializes the ECDSA signature into a DER-encoded…",29,[[["self"]],["result",["vec","errorstack"]]]],[0,"error","openssl","Errors returned by OpenSSL library.",N,N],[3,"ErrorStack","openssl::error","Collection of [`Error`]s from OpenSSL.",N,N],[3,"Error","","An error reported from OpenSSL.",N,N],[11,"get","","Returns the contents of the OpenSSL error stack.",30,[[],["errorstack"]]],[11,"put","","Pushes the errors back onto the OpenSSL error stack.",30,[[["self"]]]],[11,"errors","","Returns the errors in the stack.",30,N],[11,"get","","Returns the first error on the OpenSSL error stack.",31,[[],["option",["error"]]]],[11,"put","","Pushes the error back onto the OpenSSL error stack.",31,[[["self"]]]],[11,"code","","Returns the raw OpenSSL error code for this error.",31,[[["self"]],["c_ulong"]]],[11,"library","","Returns the name of the library reporting the error, if…",31,[[["self"]],["option",["str"]]]],[11,"function","","Returns the name of the function reporting the error.",31,[[["self"]],["option",["str"]]]],[11,"reason","","Returns the reason for the error.",31,[[["self"]],["option",["str"]]]],[11,"file","","Returns the name of the source file which encountered the…",31,[[["self"]],["str"]]],[11,"line","","Returns the line in the source file which encountered the…",31,[[["self"]],["u32"]]],[11,"data","","Returns additional data describing the error.",31,[[["self"]],["option",["str"]]]],[0,"ex_data","openssl","",N,N],[3,"Index","openssl::ex_data","A slot in a type's \"extra data\" structure.",N,N],[11,"from_raw","","",32,[[["c_int"]],["index"]]],[11,"as_raw","","",32,[[["self"]],["c_int"]]],[0,"fips","openssl","FIPS 140-2 support.",N,N],[5,"enable","openssl::fips","Moves the library into or out of the FIPS 140-2 mode of…",N,[[["bool"]],["result",["errorstack"]]]],[5,"enabled","","Determines if the library is running in the FIPS 140-2…",N,[[],["bool"]]],[0,"hash","openssl","",N,N],[3,"MessageDigest","openssl::hash","",N,N],[3,"Hasher","","Provides message digest (hash) computation.",N,N],[3,"DigestBytes","","The resulting bytes of a digest.",N,N],[5,"hash","","Computes the hash of the `data` with the hash `t`.",N,N],[11,"from_ptr","","",33,N],[11,"from_nid","","Returns the `MessageDigest` corresponding to an `Nid`.",33,[[["nid"]],["option",["messagedigest"]]]],[11,"md5","","",33,[[],["messagedigest"]]],[11,"sha1","","",33,[[],["messagedigest"]]],[11,"sha224","","",33,[[],["messagedigest"]]],[11,"sha256","","",33,[[],["messagedigest"]]],[11,"sha384","","",33,[[],["messagedigest"]]],[11,"sha512","","",33,[[],["messagedigest"]]],[11,"ripemd160","","",33,[[],["messagedigest"]]],[11,"as_ptr","","",33,N],[11,"size","","The size of the digest in bytes",33,[[["self"]],["usize"]]],[11,"new","","Creates a new `Hasher` with the specified hash type.",34,[[["messagedigest"]],["result",["hasher","errorstack"]]]],[11,"update","","Feeds data into the hasher.",34,N],[11,"finish","","Returns the hash of the data written and resets the hasher.",34,[[["self"]],["result",["digestbytes","errorstack"]]]],[0,"memcmp","openssl","Utilities to safely compare cryptographic values.",N,N],[5,"eq","openssl::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",N,N],[0,"nid","openssl","A collection of numerical identifiers for OpenSSL objects.",N,N],[3,"SignatureAlgorithms","openssl::nid","The digest and public-key algorithms associated with a…",N,N],[12,"digest","","The signature's digest.",35,N],[12,"pkey","","The signature's public-key.",35,N],[3,"Nid","","A numerical identifier for an OpenSSL object.",N,N],[11,"from_raw","","Create a `Nid` from an integer representation.",36,[[["c_int"]],["nid"]]],[11,"as_raw","","Return the integer representation of a `Nid`.",36,[[["self"]],["c_int"]]],[11,"signature_algorithms","","Returns the `Nid`s of the digest and public key algorithms…",36,[[["self"]],["option",["signaturealgorithms"]]]],[11,"long_name","","Return the string representation of a `Nid` (long) This…",36,[[["self"]],["result",["str","errorstack"]]]],[11,"short_name","","Return the string representation of a `Nid` (short) This…",36,[[["self"]],["result",["str","errorstack"]]]],[18,"UNDEF","","",36,N],[18,"ITU_T","","",36,N],[18,"CCITT","","",36,N],[18,"ISO","","",36,N],[18,"JOINT_ISO_ITU_T","","",36,N],[18,"JOINT_ISO_CCITT","","",36,N],[18,"MEMBER_BODY","","",36,N],[18,"IDENTIFIED_ORGANIZATION","","",36,N],[18,"HMAC_MD5","","",36,N],[18,"HMAC_SHA1","","",36,N],[18,"CERTICOM_ARC","","",36,N],[18,"INTERNATIONAL_ORGANIZATIONS","","",36,N],[18,"WAP","","",36,N],[18,"WAP_WSG","","",36,N],[18,"SELECTED_ATTRIBUTE_TYPES","","",36,N],[18,"CLEARANCE","","",36,N],[18,"ISO_US","","",36,N],[18,"X9_57","","",36,N],[18,"X9CM","","",36,N],[18,"DSA","","",36,N],[18,"DSAWITHSHA1","","",36,N],[18,"ANSI_X9_62","","",36,N],[18,"X9_62_PRIME_FIELD","","",36,N],[18,"X9_62_CHARACTERISTIC_TWO_FIELD","","",36,N],[18,"X9_62_ID_CHARACTERISTIC_TWO_BASIS","","",36,N],[18,"X9_62_ONBASIS","","",36,N],[18,"X9_62_TPBASIS","","",36,N],[18,"X9_62_PPBASIS","","",36,N],[18,"X9_62_ID_ECPUBLICKEY","","",36,N],[18,"X9_62_C2PNB163V1","","",36,N],[18,"X9_62_C2PNB163V2","","",36,N],[18,"X9_62_C2PNB163V3","","",36,N],[18,"X9_62_C2PNB176V1","","",36,N],[18,"X9_62_C2TNB191V1","","",36,N],[18,"X9_62_C2TNB191V2","","",36,N],[18,"X9_62_C2TNB191V3","","",36,N],[18,"X9_62_C2ONB191V4","","",36,N],[18,"X9_62_C2ONB191V5","","",36,N],[18,"X9_62_C2PNB208W1","","",36,N],[18,"X9_62_C2TNB239V1","","",36,N],[18,"X9_62_C2TNB239V2","","",36,N],[18,"X9_62_C2TNB239V3","","",36,N],[18,"X9_62_C2ONB239V4","","",36,N],[18,"X9_62_C2ONB239V5","","",36,N],[18,"X9_62_C2PNB272W1","","",36,N],[18,"X9_62_C2PNB304W1","","",36,N],[18,"X9_62_C2TNB359V1","","",36,N],[18,"X9_62_C2PNB368W1","","",36,N],[18,"X9_62_C2TNB431R1","","",36,N],[18,"X9_62_PRIME192V1","","",36,N],[18,"X9_62_PRIME192V2","","",36,N],[18,"X9_62_PRIME192V3","","",36,N],[18,"X9_62_PRIME239V1","","",36,N],[18,"X9_62_PRIME239V2","","",36,N],[18,"X9_62_PRIME239V3","","",36,N],[18,"X9_62_PRIME256V1","","",36,N],[18,"ECDSA_WITH_SHA1","","",36,N],[18,"ECDSA_WITH_RECOMMENDED","","",36,N],[18,"ECDSA_WITH_SPECIFIED","","",36,N],[18,"ECDSA_WITH_SHA224","","",36,N],[18,"ECDSA_WITH_SHA256","","",36,N],[18,"ECDSA_WITH_SHA384","","",36,N],[18,"ECDSA_WITH_SHA512","","",36,N],[18,"SECP112R1","","",36,N],[18,"SECP112R2","","",36,N],[18,"SECP128R1","","",36,N],[18,"SECP128R2","","",36,N],[18,"SECP160K1","","",36,N],[18,"SECP160R1","","",36,N],[18,"SECP160R2","","",36,N],[18,"SECP192K1","","",36,N],[18,"SECP224K1","","",36,N],[18,"SECP224R1","","",36,N],[18,"SECP256K1","","",36,N],[18,"SECP384R1","","",36,N],[18,"SECP521R1","","",36,N],[18,"SECT113R1","","",36,N],[18,"SECT113R2","","",36,N],[18,"SECT131R1","","",36,N],[18,"SECT131R2","","",36,N],[18,"SECT163K1","","",36,N],[18,"SECT163R1","","",36,N],[18,"SECT163R2","","",36,N],[18,"SECT193R1","","",36,N],[18,"SECT193R2","","",36,N],[18,"SECT233K1","","",36,N],[18,"SECT233R1","","",36,N],[18,"SECT239K1","","",36,N],[18,"SECT283K1","","",36,N],[18,"SECT283R1","","",36,N],[18,"SECT409K1","","",36,N],[18,"SECT409R1","","",36,N],[18,"SECT571K1","","",36,N],[18,"SECT571R1","","",36,N],[18,"WAP_WSG_IDM_ECID_WTLS1","","",36,N],[18,"WAP_WSG_IDM_ECID_WTLS3","","",36,N],[18,"WAP_WSG_IDM_ECID_WTLS4","","",36,N],[18,"WAP_WSG_IDM_ECID_WTLS5","","",36,N],[18,"WAP_WSG_IDM_ECID_WTLS6","","",36,N],[18,"WAP_WSG_IDM_ECID_WTLS7","","",36,N],[18,"WAP_WSG_IDM_ECID_WTLS8","","",36,N],[18,"WAP_WSG_IDM_ECID_WTLS9","","",36,N],[18,"WAP_WSG_IDM_ECID_WTLS10","","",36,N],[18,"WAP_WSG_IDM_ECID_WTLS11","","",36,N],[18,"WAP_WSG_IDM_ECID_WTLS12","","",36,N],[18,"CAST5_CBC","","",36,N],[18,"CAST5_ECB","","",36,N],[18,"CAST5_CFB64","","",36,N],[18,"CAST5_OFB64","","",36,N],[18,"PBEWITHMD5ANDCAST5_CBC","","",36,N],[18,"ID_PASSWORDBASEDMAC","","",36,N],[18,"ID_DHBASEDMAC","","",36,N],[18,"RSADSI","","",36,N],[18,"PKCS","","",36,N],[18,"PKCS1","","",36,N],[18,"RSAENCRYPTION","","",36,N],[18,"MD2WITHRSAENCRYPTION","","",36,N],[18,"MD4WITHRSAENCRYPTION","","",36,N],[18,"MD5WITHRSAENCRYPTION","","",36,N],[18,"SHA1WITHRSAENCRYPTION","","",36,N],[18,"RSAESOAEP","","",36,N],[18,"MGF1","","",36,N],[18,"RSASSAPSS","","",36,N],[18,"SHA256WITHRSAENCRYPTION","","",36,N],[18,"SHA384WITHRSAENCRYPTION","","",36,N],[18,"SHA512WITHRSAENCRYPTION","","",36,N],[18,"SHA224WITHRSAENCRYPTION","","",36,N],[18,"PKCS3","","",36,N],[18,"DHKEYAGREEMENT","","",36,N],[18,"PKCS5","","",36,N],[18,"PBEWITHMD2ANDDES_CBC","","",36,N],[18,"PBEWITHMD5ANDDES_CBC","","",36,N],[18,"PBEWITHMD2ANDRC2_CBC","","",36,N],[18,"PBEWITHMD5ANDRC2_CBC","","",36,N],[18,"PBEWITHSHA1ANDDES_CBC","","",36,N],[18,"PBEWITHSHA1ANDRC2_CBC","","",36,N],[18,"ID_PBKDF2","","",36,N],[18,"PBES2","","",36,N],[18,"PBMAC1","","",36,N],[18,"PKCS7","","",36,N],[18,"PKCS7_DATA","","",36,N],[18,"PKCS7_SIGNED","","",36,N],[18,"PKCS7_ENVELOPED","","",36,N],[18,"PKCS7_SIGNEDANDENVELOPED","","",36,N],[18,"PKCS7_DIGEST","","",36,N],[18,"PKCS7_ENCRYPTED","","",36,N],[18,"PKCS9","","",36,N],[18,"PKCS9_EMAILADDRESS","","",36,N],[18,"PKCS9_UNSTRUCTUREDNAME","","",36,N],[18,"PKCS9_CONTENTTYPE","","",36,N],[18,"PKCS9_MESSAGEDIGEST","","",36,N],[18,"PKCS9_SIGNINGTIME","","",36,N],[18,"PKCS9_COUNTERSIGNATURE","","",36,N],[18,"PKCS9_CHALLENGEPASSWORD","","",36,N],[18,"PKCS9_UNSTRUCTUREDADDRESS","","",36,N],[18,"PKCS9_EXTCERTATTRIBUTES","","",36,N],[18,"EXT_REQ","","",36,N],[18,"SMIMECAPABILITIES","","",36,N],[18,"SMIME","","",36,N],[18,"ID_SMIME_MOD","","",36,N],[18,"ID_SMIME_CT","","",36,N],[18,"ID_SMIME_AA","","",36,N],[18,"ID_SMIME_ALG","","",36,N],[18,"ID_SMIME_CD","","",36,N],[18,"ID_SMIME_SPQ","","",36,N],[18,"ID_SMIME_CTI","","",36,N],[18,"ID_SMIME_MOD_CMS","","",36,N],[18,"ID_SMIME_MOD_ESS","","",36,N],[18,"ID_SMIME_MOD_OID","","",36,N],[18,"ID_SMIME_MOD_MSG_V3","","",36,N],[18,"ID_SMIME_MOD_ETS_ESIGNATURE_88","","",36,N],[18,"ID_SMIME_MOD_ETS_ESIGNATURE_97","","",36,N],[18,"ID_SMIME_MOD_ETS_ESIGPOLICY_88","","",36,N],[18,"ID_SMIME_MOD_ETS_ESIGPOLICY_97","","",36,N],[18,"ID_SMIME_CT_RECEIPT","","",36,N],[18,"ID_SMIME_CT_AUTHDATA","","",36,N],[18,"ID_SMIME_CT_PUBLISHCERT","","",36,N],[18,"ID_SMIME_CT_TSTINFO","","",36,N],[18,"ID_SMIME_CT_TDTINFO","","",36,N],[18,"ID_SMIME_CT_CONTENTINFO","","",36,N],[18,"ID_SMIME_CT_DVCSREQUESTDATA","","",36,N],[18,"ID_SMIME_CT_DVCSRESPONSEDATA","","",36,N],[18,"ID_SMIME_CT_COMPRESSEDDATA","","",36,N],[18,"ID_CT_ASCIITEXTWITHCRLF","","",36,N],[18,"ID_SMIME_AA_RECEIPTREQUEST","","",36,N],[18,"ID_SMIME_AA_SECURITYLABEL","","",36,N],[18,"ID_SMIME_AA_MLEXPANDHISTORY","","",36,N],[18,"ID_SMIME_AA_CONTENTHINT","","",36,N],[18,"ID_SMIME_AA_MSGSIGDIGEST","","",36,N],[18,"ID_SMIME_AA_ENCAPCONTENTTYPE","","",36,N],[18,"ID_SMIME_AA_CONTENTIDENTIFIER","","",36,N],[18,"ID_SMIME_AA_MACVALUE","","",36,N],[18,"ID_SMIME_AA_EQUIVALENTLABELS","","",36,N],[18,"ID_SMIME_AA_CONTENTREFERENCE","","",36,N],[18,"ID_SMIME_AA_ENCRYPKEYPREF","","",36,N],[18,"ID_SMIME_AA_SIGNINGCERTIFICATE","","",36,N],[18,"ID_SMIME_AA_SMIMEENCRYPTCERTS","","",36,N],[18,"ID_SMIME_AA_TIMESTAMPTOKEN","","",36,N],[18,"ID_SMIME_AA_ETS_SIGPOLICYID","","",36,N],[18,"ID_SMIME_AA_ETS_COMMITMENTTYPE","","",36,N],[18,"ID_SMIME_AA_ETS_SIGNERLOCATION","","",36,N],[18,"ID_SMIME_AA_ETS_SIGNERATTR","","",36,N],[18,"ID_SMIME_AA_ETS_OTHERSIGCERT","","",36,N],[18,"ID_SMIME_AA_ETS_CONTENTTIMESTAMP","","",36,N],[18,"ID_SMIME_AA_ETS_CERTIFICATEREFS","","",36,N],[18,"ID_SMIME_AA_ETS_REVOCATIONREFS","","",36,N],[18,"ID_SMIME_AA_ETS_CERTVALUES","","",36,N],[18,"ID_SMIME_AA_ETS_REVOCATIONVALUES","","",36,N],[18,"ID_SMIME_AA_ETS_ESCTIMESTAMP","","",36,N],[18,"ID_SMIME_AA_ETS_CERTCRLTIMESTAMP","","",36,N],[18,"ID_SMIME_AA_ETS_ARCHIVETIMESTAMP","","",36,N],[18,"ID_SMIME_AA_SIGNATURETYPE","","",36,N],[18,"ID_SMIME_AA_DVCS_DVC","","",36,N],[18,"ID_SMIME_ALG_ESDHWITH3DES","","",36,N],[18,"ID_SMIME_ALG_ESDHWITHRC2","","",36,N],[18,"ID_SMIME_ALG_3DESWRAP","","",36,N],[18,"ID_SMIME_ALG_RC2WRAP","","",36,N],[18,"ID_SMIME_ALG_ESDH","","",36,N],[18,"ID_SMIME_ALG_CMS3DESWRAP","","",36,N],[18,"ID_SMIME_ALG_CMSRC2WRAP","","",36,N],[18,"ID_ALG_PWRI_KEK","","",36,N],[18,"ID_SMIME_CD_LDAP","","",36,N],[18,"ID_SMIME_SPQ_ETS_SQT_URI","","",36,N],[18,"ID_SMIME_SPQ_ETS_SQT_UNOTICE","","",36,N],[18,"ID_SMIME_CTI_ETS_PROOFOFORIGIN","","",36,N],[18,"ID_SMIME_CTI_ETS_PROOFOFRECEIPT","","",36,N],[18,"ID_SMIME_CTI_ETS_PROOFOFDELIVERY","","",36,N],[18,"ID_SMIME_CTI_ETS_PROOFOFSENDER","","",36,N],[18,"ID_SMIME_CTI_ETS_PROOFOFAPPROVAL","","",36,N],[18,"ID_SMIME_CTI_ETS_PROOFOFCREATION","","",36,N],[18,"FRIENDLYNAME","","",36,N],[18,"LOCALKEYID","","",36,N],[18,"MS_CSP_NAME","","",36,N],[18,"LOCALKEYSET","","",36,N],[18,"X509CERTIFICATE","","",36,N],[18,"SDSICERTIFICATE","","",36,N],[18,"X509CRL","","",36,N],[18,"PBE_WITHSHA1AND128BITRC4","","",36,N],[18,"PBE_WITHSHA1AND40BITRC4","","",36,N],[18,"PBE_WITHSHA1AND3_KEY_TRIPLEDES_CBC","","",36,N],[18,"PBE_WITHSHA1AND2_KEY_TRIPLEDES_CBC","","",36,N],[18,"PBE_WITHSHA1AND128BITRC2_CBC","","",36,N],[18,"PBE_WITHSHA1AND40BITRC2_CBC","","",36,N],[18,"KEYBAG","","",36,N],[18,"PKCS8SHROUDEDKEYBAG","","",36,N],[18,"CERTBAG","","",36,N],[18,"CRLBAG","","",36,N],[18,"SECRETBAG","","",36,N],[18,"SAFECONTENTSBAG","","",36,N],[18,"MD2","","",36,N],[18,"MD4","","",36,N],[18,"MD5","","",36,N],[18,"MD5_SHA1","","",36,N],[18,"HMACWITHMD5","","",36,N],[18,"HMACWITHSHA1","","",36,N],[18,"HMACWITHSHA224","","",36,N],[18,"HMACWITHSHA256","","",36,N],[18,"HMACWITHSHA384","","",36,N],[18,"HMACWITHSHA512","","",36,N],[18,"RC2_CBC","","",36,N],[18,"RC2_ECB","","",36,N],[18,"RC2_CFB64","","",36,N],[18,"RC2_OFB64","","",36,N],[18,"RC2_40_CBC","","",36,N],[18,"RC2_64_CBC","","",36,N],[18,"RC4","","",36,N],[18,"RC4_40","","",36,N],[18,"DES_EDE3_CBC","","",36,N],[18,"RC5_CBC","","",36,N],[18,"RC5_ECB","","",36,N],[18,"RC5_CFB64","","",36,N],[18,"RC5_OFB64","","",36,N],[18,"MS_EXT_REQ","","",36,N],[18,"MS_CODE_IND","","",36,N],[18,"MS_CODE_COM","","",36,N],[18,"MS_CTL_SIGN","","",36,N],[18,"MS_SGC","","",36,N],[18,"MS_EFS","","",36,N],[18,"MS_SMARTCARD_LOGIN","","",36,N],[18,"MS_UPN","","",36,N],[18,"IDEA_CBC","","",36,N],[18,"IDEA_ECB","","",36,N],[18,"IDEA_CFB64","","",36,N],[18,"IDEA_OFB64","","",36,N],[18,"BF_CBC","","",36,N],[18,"BF_ECB","","",36,N],[18,"BF_CFB64","","",36,N],[18,"BF_OFB64","","",36,N],[18,"ID_PKIX","","",36,N],[18,"ID_PKIX_MOD","","",36,N],[18,"ID_PE","","",36,N],[18,"ID_QT","","",36,N],[18,"ID_KP","","",36,N],[18,"ID_IT","","",36,N],[18,"ID_PKIP","","",36,N],[18,"ID_ALG","","",36,N],[18,"ID_CMC","","",36,N],[18,"ID_ON","","",36,N],[18,"ID_PDA","","",36,N],[18,"ID_ACA","","",36,N],[18,"ID_QCS","","",36,N],[18,"ID_CCT","","",36,N],[18,"ID_PPL","","",36,N],[18,"ID_AD","","",36,N],[18,"ID_PKIX1_EXPLICIT_88","","",36,N],[18,"ID_PKIX1_IMPLICIT_88","","",36,N],[18,"ID_PKIX1_EXPLICIT_93","","",36,N],[18,"ID_PKIX1_IMPLICIT_93","","",36,N],[18,"ID_MOD_CRMF","","",36,N],[18,"ID_MOD_CMC","","",36,N],[18,"ID_MOD_KEA_PROFILE_88","","",36,N],[18,"ID_MOD_KEA_PROFILE_93","","",36,N],[18,"ID_MOD_CMP","","",36,N],[18,"ID_MOD_QUALIFIED_CERT_88","","",36,N],[18,"ID_MOD_QUALIFIED_CERT_93","","",36,N],[18,"ID_MOD_ATTRIBUTE_CERT","","",36,N],[18,"ID_MOD_TIMESTAMP_PROTOCOL","","",36,N],[18,"ID_MOD_OCSP","","",36,N],[18,"ID_MOD_DVCS","","",36,N],[18,"ID_MOD_CMP2000","","",36,N],[18,"INFO_ACCESS","","",36,N],[18,"BIOMETRICINFO","","",36,N],[18,"QCSTATEMENTS","","",36,N],[18,"AC_AUDITENTITY","","",36,N],[18,"AC_TARGETING","","",36,N],[18,"AACONTROLS","","",36,N],[18,"SBGP_IPADDRBLOCK","","",36,N],[18,"SBGP_AUTONOMOUSSYSNUM","","",36,N],[18,"SBGP_ROUTERIDENTIFIER","","",36,N],[18,"AC_PROXYING","","",36,N],[18,"SINFO_ACCESS","","",36,N],[18,"PROXYCERTINFO","","",36,N],[18,"ID_QT_CPS","","",36,N],[18,"ID_QT_UNOTICE","","",36,N],[18,"TEXTNOTICE","","",36,N],[18,"SERVER_AUTH","","",36,N],[18,"CLIENT_AUTH","","",36,N],[18,"CODE_SIGN","","",36,N],[18,"EMAIL_PROTECT","","",36,N],[18,"IPSECENDSYSTEM","","",36,N],[18,"IPSECTUNNEL","","",36,N],[18,"IPSECUSER","","",36,N],[18,"TIME_STAMP","","",36,N],[18,"OCSP_SIGN","","",36,N],[18,"DVCS","","",36,N],[18,"ID_IT_CAPROTENCCERT","","",36,N],[18,"ID_IT_SIGNKEYPAIRTYPES","","",36,N],[18,"ID_IT_ENCKEYPAIRTYPES","","",36,N],[18,"ID_IT_PREFERREDSYMMALG","","",36,N],[18,"ID_IT_CAKEYUPDATEINFO","","",36,N],[18,"ID_IT_CURRENTCRL","","",36,N],[18,"ID_IT_UNSUPPORTEDOIDS","","",36,N],[18,"ID_IT_SUBSCRIPTIONREQUEST","","",36,N],[18,"ID_IT_SUBSCRIPTIONRESPONSE","","",36,N],[18,"ID_IT_KEYPAIRPARAMREQ","","",36,N],[18,"ID_IT_KEYPAIRPARAMREP","","",36,N],[18,"ID_IT_REVPASSPHRASE","","",36,N],[18,"ID_IT_IMPLICITCONFIRM","","",36,N],[18,"ID_IT_CONFIRMWAITTIME","","",36,N],[18,"ID_IT_ORIGPKIMESSAGE","","",36,N],[18,"ID_IT_SUPPLANGTAGS","","",36,N],[18,"ID_REGCTRL","","",36,N],[18,"ID_REGINFO","","",36,N],[18,"ID_REGCTRL_REGTOKEN","","",36,N],[18,"ID_REGCTRL_AUTHENTICATOR","","",36,N],[18,"ID_REGCTRL_PKIPUBLICATIONINFO","","",36,N],[18,"ID_REGCTRL_PKIARCHIVEOPTIONS","","",36,N],[18,"ID_REGCTRL_OLDCERTID","","",36,N],[18,"ID_REGCTRL_PROTOCOLENCRKEY","","",36,N],[18,"ID_REGINFO_UTF8PAIRS","","",36,N],[18,"ID_REGINFO_CERTREQ","","",36,N],[18,"ID_ALG_DES40","","",36,N],[18,"ID_ALG_NOSIGNATURE","","",36,N],[18,"ID_ALG_DH_SIG_HMAC_SHA1","","",36,N],[18,"ID_ALG_DH_POP","","",36,N],[18,"ID_CMC_STATUSINFO","","",36,N],[18,"ID_CMC_IDENTIFICATION","","",36,N],[18,"ID_CMC_IDENTITYPROOF","","",36,N],[18,"ID_CMC_DATARETURN","","",36,N],[18,"ID_CMC_TRANSACTIONID","","",36,N],[18,"ID_CMC_SENDERNONCE","","",36,N],[18,"ID_CMC_RECIPIENTNONCE","","",36,N],[18,"ID_CMC_ADDEXTENSIONS","","",36,N],[18,"ID_CMC_ENCRYPTEDPOP","","",36,N],[18,"ID_CMC_DECRYPTEDPOP","","",36,N],[18,"ID_CMC_LRAPOPWITNESS","","",36,N],[18,"ID_CMC_GETCERT","","",36,N],[18,"ID_CMC_GETCRL","","",36,N],[18,"ID_CMC_REVOKEREQUEST","","",36,N],[18,"ID_CMC_REGINFO","","",36,N],[18,"ID_CMC_RESPONSEINFO","","",36,N],[18,"ID_CMC_QUERYPENDING","","",36,N],[18,"ID_CMC_POPLINKRANDOM","","",36,N],[18,"ID_CMC_POPLINKWITNESS","","",36,N],[18,"ID_CMC_CONFIRMCERTACCEPTANCE","","",36,N],[18,"ID_ON_PERSONALDATA","","",36,N],[18,"ID_ON_PERMANENTIDENTIFIER","","",36,N],[18,"ID_PDA_DATEOFBIRTH","","",36,N],[18,"ID_PDA_PLACEOFBIRTH","","",36,N],[18,"ID_PDA_GENDER","","",36,N],[18,"ID_PDA_COUNTRYOFCITIZENSHIP","","",36,N],[18,"ID_PDA_COUNTRYOFRESIDENCE","","",36,N],[18,"ID_ACA_AUTHENTICATIONINFO","","",36,N],[18,"ID_ACA_ACCESSIDENTITY","","",36,N],[18,"ID_ACA_CHARGINGIDENTITY","","",36,N],[18,"ID_ACA_GROUP","","",36,N],[18,"ID_ACA_ROLE","","",36,N],[18,"ID_ACA_ENCATTRS","","",36,N],[18,"ID_QCS_PKIXQCSYNTAX_V1","","",36,N],[18,"ID_CCT_CRS","","",36,N],[18,"ID_CCT_PKIDATA","","",36,N],[18,"ID_CCT_PKIRESPONSE","","",36,N],[18,"ID_PPL_ANYLANGUAGE","","",36,N],[18,"ID_PPL_INHERITALL","","",36,N],[18,"INDEPENDENT","","",36,N],[18,"AD_OCSP","","",36,N],[18,"AD_CA_ISSUERS","","",36,N],[18,"AD_TIMESTAMPING","","",36,N],[18,"AD_DVCS","","",36,N],[18,"CAREPOSITORY","","",36,N],[18,"ID_PKIX_OCSP_BASIC","","",36,N],[18,"ID_PKIX_OCSP_NONCE","","",36,N],[18,"ID_PKIX_OCSP_CRLID","","",36,N],[18,"ID_PKIX_OCSP_ACCEPTABLERESPONSES","","",36,N],[18,"ID_PKIX_OCSP_NOCHECK","","",36,N],[18,"ID_PKIX_OCSP_ARCHIVECUTOFF","","",36,N],[18,"ID_PKIX_OCSP_SERVICELOCATOR","","",36,N],[18,"ID_PKIX_OCSP_EXTENDEDSTATUS","","",36,N],[18,"ID_PKIX_OCSP_VALID","","",36,N],[18,"ID_PKIX_OCSP_PATH","","",36,N],[18,"ID_PKIX_OCSP_TRUSTROOT","","",36,N],[18,"ALGORITHM","","",36,N],[18,"MD5WITHRSA","","",36,N],[18,"DES_ECB","","",36,N],[18,"DES_CBC","","",36,N],[18,"DES_OFB64","","",36,N],[18,"DES_CFB64","","",36,N],[18,"RSASIGNATURE","","",36,N],[18,"DSA_2","","",36,N],[18,"DSAWITHSHA","","",36,N],[18,"SHAWITHRSAENCRYPTION","","",36,N],[18,"DES_EDE_ECB","","",36,N],[18,"DES_EDE3_ECB","","",36,N],[18,"DES_EDE_CBC","","",36,N],[18,"DES_EDE_CFB64","","",36,N],[18,"DES_EDE3_CFB64","","",36,N],[18,"DES_EDE_OFB64","","",36,N],[18,"DES_EDE3_OFB64","","",36,N],[18,"DESX_CBC","","",36,N],[18,"SHA","","",36,N],[18,"SHA1","","",36,N],[18,"DSAWITHSHA1_2","","",36,N],[18,"SHA1WITHRSA","","",36,N],[18,"RIPEMD160","","",36,N],[18,"RIPEMD160WITHRSA","","",36,N],[18,"SXNET","","",36,N],[18,"X500","","",36,N],[18,"X509","","",36,N],[18,"COMMONNAME","","",36,N],[18,"SURNAME","","",36,N],[18,"SERIALNUMBER","","",36,N],[18,"COUNTRYNAME","","",36,N],[18,"LOCALITYNAME","","",36,N],[18,"STATEORPROVINCENAME","","",36,N],[18,"STREETADDRESS","","",36,N],[18,"ORGANIZATIONNAME","","",36,N],[18,"ORGANIZATIONALUNITNAME","","",36,N],[18,"TITLE","","",36,N],[18,"DESCRIPTION","","",36,N],[18,"SEARCHGUIDE","","",36,N],[18,"BUSINESSCATEGORY","","",36,N],[18,"POSTALADDRESS","","",36,N],[18,"POSTALCODE","","",36,N],[18,"POSTOFFICEBOX","","",36,N],[18,"PHYSICALDELIVERYOFFICENAME","","",36,N],[18,"TELEPHONENUMBER","","",36,N],[18,"TELEXNUMBER","","",36,N],[18,"TELETEXTERMINALIDENTIFIER","","",36,N],[18,"FACSIMILETELEPHONENUMBER","","",36,N],[18,"X121ADDRESS","","",36,N],[18,"INTERNATIONALISDNNUMBER","","",36,N],[18,"REGISTEREDADDRESS","","",36,N],[18,"DESTINATIONINDICATOR","","",36,N],[18,"PREFERREDDELIVERYMETHOD","","",36,N],[18,"PRESENTATIONADDRESS","","",36,N],[18,"SUPPORTEDAPPLICATIONCONTEXT","","",36,N],[18,"MEMBER","","",36,N],[18,"OWNER","","",36,N],[18,"ROLEOCCUPANT","","",36,N],[18,"SEEALSO","","",36,N],[18,"USERPASSWORD","","",36,N],[18,"USERCERTIFICATE","","",36,N],[18,"CACERTIFICATE","","",36,N],[18,"AUTHORITYREVOCATIONLIST","","",36,N],[18,"CERTIFICATEREVOCATIONLIST","","",36,N],[18,"CROSSCERTIFICATEPAIR","","",36,N],[18,"NAME","","",36,N],[18,"GIVENNAME","","",36,N],[18,"INITIALS","","",36,N],[18,"GENERATIONQUALIFIER","","",36,N],[18,"X500UNIQUEIDENTIFIER","","",36,N],[18,"DNQUALIFIER","","",36,N],[18,"ENHANCEDSEARCHGUIDE","","",36,N],[18,"PROTOCOLINFORMATION","","",36,N],[18,"DISTINGUISHEDNAME","","",36,N],[18,"UNIQUEMEMBER","","",36,N],[18,"HOUSEIDENTIFIER","","",36,N],[18,"SUPPORTEDALGORITHMS","","",36,N],[18,"DELTAREVOCATIONLIST","","",36,N],[18,"DMDNAME","","",36,N],[18,"PSEUDONYM","","",36,N],[18,"ROLE","","",36,N],[18,"X500ALGORITHMS","","",36,N],[18,"RSA","","",36,N],[18,"MDC2WITHRSA","","",36,N],[18,"MDC2","","",36,N],[18,"ID_CE","","",36,N],[18,"SUBJECT_DIRECTORY_ATTRIBUTES","","",36,N],[18,"SUBJECT_KEY_IDENTIFIER","","",36,N],[18,"KEY_USAGE","","",36,N],[18,"PRIVATE_KEY_USAGE_PERIOD","","",36,N],[18,"SUBJECT_ALT_NAME","","",36,N],[18,"ISSUER_ALT_NAME","","",36,N],[18,"BASIC_CONSTRAINTS","","",36,N],[18,"CRL_NUMBER","","",36,N],[18,"CRL_REASON","","",36,N],[18,"INVALIDITY_DATE","","",36,N],[18,"DELTA_CRL","","",36,N],[18,"ISSUING_DISTRIBUTION_POINT","","",36,N],[18,"CERTIFICATE_ISSUER","","",36,N],[18,"NAME_CONSTRAINTS","","",36,N],[18,"CRL_DISTRIBUTION_POINTS","","",36,N],[18,"CERTIFICATE_POLICIES","","",36,N],[18,"ANY_POLICY","","",36,N],[18,"POLICY_MAPPINGS","","",36,N],[18,"AUTHORITY_KEY_IDENTIFIER","","",36,N],[18,"POLICY_CONSTRAINTS","","",36,N],[18,"EXT_KEY_USAGE","","",36,N],[18,"FRESHEST_CRL","","",36,N],[18,"INHIBIT_ANY_POLICY","","",36,N],[18,"TARGET_INFORMATION","","",36,N],[18,"NO_REV_AVAIL","","",36,N],[18,"ANYEXTENDEDKEYUSAGE","","",36,N],[18,"NETSCAPE","","",36,N],[18,"NETSCAPE_CERT_EXTENSION","","",36,N],[18,"NETSCAPE_DATA_TYPE","","",36,N],[18,"NETSCAPE_CERT_TYPE","","",36,N],[18,"NETSCAPE_BASE_URL","","",36,N],[18,"NETSCAPE_REVOCATION_URL","","",36,N],[18,"NETSCAPE_CA_REVOCATION_URL","","",36,N],[18,"NETSCAPE_RENEWAL_URL","","",36,N],[18,"NETSCAPE_CA_POLICY_URL","","",36,N],[18,"NETSCAPE_SSL_SERVER_NAME","","",36,N],[18,"NETSCAPE_COMMENT","","",36,N],[18,"NETSCAPE_CERT_SEQUENCE","","",36,N],[18,"NS_SGC","","",36,N],[18,"ORG","","",36,N],[18,"DOD","","",36,N],[18,"IANA","","",36,N],[18,"DIRECTORY","","",36,N],[18,"MANAGEMENT","","",36,N],[18,"EXPERIMENTAL","","",36,N],[18,"PRIVATE","","",36,N],[18,"SECURITY","","",36,N],[18,"SNMPV2","","",36,N],[18,"MAIL","","",36,N],[18,"ENTERPRISES","","",36,N],[18,"DCOBJECT","","",36,N],[18,"MIME_MHS","","",36,N],[18,"MIME_MHS_HEADINGS","","",36,N],[18,"MIME_MHS_BODIES","","",36,N],[18,"ID_HEX_PARTIAL_MESSAGE","","",36,N],[18,"ID_HEX_MULTIPART_MESSAGE","","",36,N],[18,"ZLIB_COMPRESSION","","",36,N],[18,"AES_128_ECB","","",36,N],[18,"AES_128_CBC","","",36,N],[18,"AES_128_OFB128","","",36,N],[18,"AES_128_CFB128","","",36,N],[18,"ID_AES128_WRAP","","",36,N],[18,"AES_128_GCM","","",36,N],[18,"AES_128_CCM","","",36,N],[18,"ID_AES128_WRAP_PAD","","",36,N],[18,"AES_192_ECB","","",36,N],[18,"AES_192_CBC","","",36,N],[18,"AES_192_OFB128","","",36,N],[18,"AES_192_CFB128","","",36,N],[18,"ID_AES192_WRAP","","",36,N],[18,"AES_192_GCM","","",36,N],[18,"AES_192_CCM","","",36,N],[18,"ID_AES192_WRAP_PAD","","",36,N],[18,"AES_256_ECB","","",36,N],[18,"AES_256_CBC","","",36,N],[18,"AES_256_OFB128","","",36,N],[18,"AES_256_CFB128","","",36,N],[18,"ID_AES256_WRAP","","",36,N],[18,"AES_256_GCM","","",36,N],[18,"AES_256_CCM","","",36,N],[18,"ID_AES256_WRAP_PAD","","",36,N],[18,"AES_128_CFB1","","",36,N],[18,"AES_192_CFB1","","",36,N],[18,"AES_256_CFB1","","",36,N],[18,"AES_128_CFB8","","",36,N],[18,"AES_192_CFB8","","",36,N],[18,"AES_256_CFB8","","",36,N],[18,"AES_128_CTR","","",36,N],[18,"AES_192_CTR","","",36,N],[18,"AES_256_CTR","","",36,N],[18,"AES_128_XTS","","",36,N],[18,"AES_256_XTS","","",36,N],[18,"DES_CFB1","","",36,N],[18,"DES_CFB8","","",36,N],[18,"DES_EDE3_CFB1","","",36,N],[18,"DES_EDE3_CFB8","","",36,N],[18,"SHA256","","",36,N],[18,"SHA384","","",36,N],[18,"SHA512","","",36,N],[18,"SHA224","","",36,N],[18,"DSA_WITH_SHA224","","",36,N],[18,"DSA_WITH_SHA256","","",36,N],[18,"HOLD_INSTRUCTION_CODE","","",36,N],[18,"HOLD_INSTRUCTION_NONE","","",36,N],[18,"HOLD_INSTRUCTION_CALL_ISSUER","","",36,N],[18,"HOLD_INSTRUCTION_REJECT","","",36,N],[18,"DATA","","",36,N],[18,"PSS","","",36,N],[18,"UCL","","",36,N],[18,"PILOT","","",36,N],[18,"PILOTATTRIBUTETYPE","","",36,N],[18,"PILOTATTRIBUTESYNTAX","","",36,N],[18,"PILOTOBJECTCLASS","","",36,N],[18,"PILOTGROUPS","","",36,N],[18,"IA5STRINGSYNTAX","","",36,N],[18,"CASEIGNOREIA5STRINGSYNTAX","","",36,N],[18,"PILOTOBJECT","","",36,N],[18,"PILOTPERSON","","",36,N],[18,"ACCOUNT","","",36,N],[18,"DOCUMENT","","",36,N],[18,"ROOM","","",36,N],[18,"DOCUMENTSERIES","","",36,N],[18,"DOMAIN","","",36,N],[18,"RFC822LOCALPART","","",36,N],[18,"DNSDOMAIN","","",36,N],[18,"DOMAINRELATEDOBJECT","","",36,N],[18,"FRIENDLYCOUNTRY","","",36,N],[18,"SIMPLESECURITYOBJECT","","",36,N],[18,"PILOTORGANIZATION","","",36,N],[18,"PILOTDSA","","",36,N],[18,"QUALITYLABELLEDDATA","","",36,N],[18,"USERID","","",36,N],[18,"TEXTENCODEDORADDRESS","","",36,N],[18,"RFC822MAILBOX","","",36,N],[18,"INFO","","",36,N],[18,"FAVOURITEDRINK","","",36,N],[18,"ROOMNUMBER","","",36,N],[18,"PHOTO","","",36,N],[18,"USERCLASS","","",36,N],[18,"HOST","","",36,N],[18,"MANAGER","","",36,N],[18,"DOCUMENTIDENTIFIER","","",36,N],[18,"DOCUMENTTITLE","","",36,N],[18,"DOCUMENTVERSION","","",36,N],[18,"DOCUMENTAUTHOR","","",36,N],[18,"DOCUMENTLOCATION","","",36,N],[18,"HOMETELEPHONENUMBER","","",36,N],[18,"SECRETARY","","",36,N],[18,"OTHERMAILBOX","","",36,N],[18,"LASTMODIFIEDTIME","","",36,N],[18,"LASTMODIFIEDBY","","",36,N],[18,"DOMAINCOMPONENT","","",36,N],[18,"ARECORD","","",36,N],[18,"PILOTATTRIBUTETYPE27","","",36,N],[18,"MXRECORD","","",36,N],[18,"NSRECORD","","",36,N],[18,"SOARECORD","","",36,N],[18,"CNAMERECORD","","",36,N],[18,"ASSOCIATEDDOMAIN","","",36,N],[18,"ASSOCIATEDNAME","","",36,N],[18,"HOMEPOSTALADDRESS","","",36,N],[18,"PERSONALTITLE","","",36,N],[18,"MOBILETELEPHONENUMBER","","",36,N],[18,"PAGERTELEPHONENUMBER","","",36,N],[18,"FRIENDLYCOUNTRYNAME","","",36,N],[18,"ORGANIZATIONALSTATUS","","",36,N],[18,"JANETMAILBOX","","",36,N],[18,"MAILPREFERENCEOPTION","","",36,N],[18,"BUILDINGNAME","","",36,N],[18,"DSAQUALITY","","",36,N],[18,"SINGLELEVELQUALITY","","",36,N],[18,"SUBTREEMINIMUMQUALITY","","",36,N],[18,"SUBTREEMAXIMUMQUALITY","","",36,N],[18,"PERSONALSIGNATURE","","",36,N],[18,"DITREDIRECT","","",36,N],[18,"AUDIO","","",36,N],[18,"DOCUMENTPUBLISHER","","",36,N],[18,"ID_SET","","",36,N],[18,"SET_CTYPE","","",36,N],[18,"SET_MSGEXT","","",36,N],[18,"SET_ATTR","","",36,N],[18,"SET_POLICY","","",36,N],[18,"SET_CERTEXT","","",36,N],[18,"SET_BRAND","","",36,N],[18,"SETCT_PANDATA","","",36,N],[18,"SETCT_PANTOKEN","","",36,N],[18,"SETCT_PANONLY","","",36,N],[18,"SETCT_OIDATA","","",36,N],[18,"SETCT_PI","","",36,N],[18,"SETCT_PIDATA","","",36,N],[18,"SETCT_PIDATAUNSIGNED","","",36,N],[18,"SETCT_HODINPUT","","",36,N],[18,"SETCT_AUTHRESBAGGAGE","","",36,N],[18,"SETCT_AUTHREVREQBAGGAGE","","",36,N],[18,"SETCT_AUTHREVRESBAGGAGE","","",36,N],[18,"SETCT_CAPTOKENSEQ","","",36,N],[18,"SETCT_PINITRESDATA","","",36,N],[18,"SETCT_PI_TBS","","",36,N],[18,"SETCT_PRESDATA","","",36,N],[18,"SETCT_AUTHREQTBS","","",36,N],[18,"SETCT_AUTHRESTBS","","",36,N],[18,"SETCT_AUTHRESTBSX","","",36,N],[18,"SETCT_AUTHTOKENTBS","","",36,N],[18,"SETCT_CAPTOKENDATA","","",36,N],[18,"SETCT_CAPTOKENTBS","","",36,N],[18,"SETCT_ACQCARDCODEMSG","","",36,N],[18,"SETCT_AUTHREVREQTBS","","",36,N],[18,"SETCT_AUTHREVRESDATA","","",36,N],[18,"SETCT_AUTHREVRESTBS","","",36,N],[18,"SETCT_CAPREQTBS","","",36,N],[18,"SETCT_CAPREQTBSX","","",36,N],[18,"SETCT_CAPRESDATA","","",36,N],[18,"SETCT_CAPREVREQTBS","","",36,N],[18,"SETCT_CAPREVREQTBSX","","",36,N],[18,"SETCT_CAPREVRESDATA","","",36,N],[18,"SETCT_CREDREQTBS","","",36,N],[18,"SETCT_CREDREQTBSX","","",36,N],[18,"SETCT_CREDRESDATA","","",36,N],[18,"SETCT_CREDREVREQTBS","","",36,N],[18,"SETCT_CREDREVREQTBSX","","",36,N],[18,"SETCT_CREDREVRESDATA","","",36,N],[18,"SETCT_PCERTREQDATA","","",36,N],[18,"SETCT_PCERTRESTBS","","",36,N],[18,"SETCT_BATCHADMINREQDATA","","",36,N],[18,"SETCT_BATCHADMINRESDATA","","",36,N],[18,"SETCT_CARDCINITRESTBS","","",36,N],[18,"SETCT_MEAQCINITRESTBS","","",36,N],[18,"SETCT_REGFORMRESTBS","","",36,N],[18,"SETCT_CERTREQDATA","","",36,N],[18,"SETCT_CERTREQTBS","","",36,N],[18,"SETCT_CERTRESDATA","","",36,N],[18,"SETCT_CERTINQREQTBS","","",36,N],[18,"SETCT_ERRORTBS","","",36,N],[18,"SETCT_PIDUALSIGNEDTBE","","",36,N],[18,"SETCT_PIUNSIGNEDTBE","","",36,N],[18,"SETCT_AUTHREQTBE","","",36,N],[18,"SETCT_AUTHRESTBE","","",36,N],[18,"SETCT_AUTHRESTBEX","","",36,N],[18,"SETCT_AUTHTOKENTBE","","",36,N],[18,"SETCT_CAPTOKENTBE","","",36,N],[18,"SETCT_CAPTOKENTBEX","","",36,N],[18,"SETCT_ACQCARDCODEMSGTBE","","",36,N],[18,"SETCT_AUTHREVREQTBE","","",36,N],[18,"SETCT_AUTHREVRESTBE","","",36,N],[18,"SETCT_AUTHREVRESTBEB","","",36,N],[18,"SETCT_CAPREQTBE","","",36,N],[18,"SETCT_CAPREQTBEX","","",36,N],[18,"SETCT_CAPRESTBE","","",36,N],[18,"SETCT_CAPREVREQTBE","","",36,N],[18,"SETCT_CAPREVREQTBEX","","",36,N],[18,"SETCT_CAPREVRESTBE","","",36,N],[18,"SETCT_CREDREQTBE","","",36,N],[18,"SETCT_CREDREQTBEX","","",36,N],[18,"SETCT_CREDRESTBE","","",36,N],[18,"SETCT_CREDREVREQTBE","","",36,N],[18,"SETCT_CREDREVREQTBEX","","",36,N],[18,"SETCT_CREDREVRESTBE","","",36,N],[18,"SETCT_BATCHADMINREQTBE","","",36,N],[18,"SETCT_BATCHADMINRESTBE","","",36,N],[18,"SETCT_REGFORMREQTBE","","",36,N],[18,"SETCT_CERTREQTBE","","",36,N],[18,"SETCT_CERTREQTBEX","","",36,N],[18,"SETCT_CERTRESTBE","","",36,N],[18,"SETCT_CRLNOTIFICATIONTBS","","",36,N],[18,"SETCT_CRLNOTIFICATIONRESTBS","","",36,N],[18,"SETCT_BCIDISTRIBUTIONTBS","","",36,N],[18,"SETEXT_GENCRYPT","","",36,N],[18,"SETEXT_MIAUTH","","",36,N],[18,"SETEXT_PINSECURE","","",36,N],[18,"SETEXT_PINANY","","",36,N],[18,"SETEXT_TRACK2","","",36,N],[18,"SETEXT_CV","","",36,N],[18,"SET_POLICY_ROOT","","",36,N],[18,"SETCEXT_HASHEDROOT","","",36,N],[18,"SETCEXT_CERTTYPE","","",36,N],[18,"SETCEXT_MERCHDATA","","",36,N],[18,"SETCEXT_CCERTREQUIRED","","",36,N],[18,"SETCEXT_TUNNELING","","",36,N],[18,"SETCEXT_SETEXT","","",36,N],[18,"SETCEXT_SETQUALF","","",36,N],[18,"SETCEXT_PGWYCAPABILITIES","","",36,N],[18,"SETCEXT_TOKENIDENTIFIER","","",36,N],[18,"SETCEXT_TRACK2DATA","","",36,N],[18,"SETCEXT_TOKENTYPE","","",36,N],[18,"SETCEXT_ISSUERCAPABILITIES","","",36,N],[18,"SETATTR_CERT","","",36,N],[18,"SETATTR_PGWYCAP","","",36,N],[18,"SETATTR_TOKENTYPE","","",36,N],[18,"SETATTR_ISSCAP","","",36,N],[18,"SET_ROOTKEYTHUMB","","",36,N],[18,"SET_ADDPOLICY","","",36,N],[18,"SETATTR_TOKEN_EMV","","",36,N],[18,"SETATTR_TOKEN_B0PRIME","","",36,N],[18,"SETATTR_ISSCAP_CVM","","",36,N],[18,"SETATTR_ISSCAP_T2","","",36,N],[18,"SETATTR_ISSCAP_SIG","","",36,N],[18,"SETATTR_GENCRYPTGRM","","",36,N],[18,"SETATTR_T2ENC","","",36,N],[18,"SETATTR_T2CLEARTXT","","",36,N],[18,"SETATTR_TOKICCSIG","","",36,N],[18,"SETATTR_SECDEVSIG","","",36,N],[18,"SET_BRAND_IATA_ATA","","",36,N],[18,"SET_BRAND_DINERS","","",36,N],[18,"SET_BRAND_AMERICANEXPRESS","","",36,N],[18,"SET_BRAND_JCB","","",36,N],[18,"SET_BRAND_VISA","","",36,N],[18,"SET_BRAND_MASTERCARD","","",36,N],[18,"SET_BRAND_NOVUS","","",36,N],[18,"DES_CDMF","","",36,N],[18,"RSAOAEPENCRYPTIONSET","","",36,N],[18,"IPSEC3","","",36,N],[18,"IPSEC4","","",36,N],[18,"WHIRLPOOL","","",36,N],[18,"CRYPTOPRO","","",36,N],[18,"CRYPTOCOM","","",36,N],[18,"ID_GOSTR3411_94_WITH_GOSTR3410_2001","","",36,N],[18,"ID_GOSTR3411_94_WITH_GOSTR3410_94","","",36,N],[18,"ID_GOSTR3411_94","","",36,N],[18,"ID_HMACGOSTR3411_94","","",36,N],[18,"ID_GOSTR3410_2001","","",36,N],[18,"ID_GOSTR3410_94","","",36,N],[18,"ID_GOST28147_89","","",36,N],[18,"GOST89_CNT","","",36,N],[18,"ID_GOST28147_89_MAC","","",36,N],[18,"ID_GOSTR3411_94_PRF","","",36,N],[18,"ID_GOSTR3410_2001DH","","",36,N],[18,"ID_GOSTR3410_94DH","","",36,N],[18,"ID_GOST28147_89_CRYPTOPRO_KEYMESHING","","",36,N],[18,"ID_GOST28147_89_NONE_KEYMESHING","","",36,N],[18,"ID_GOSTR3411_94_TESTPARAMSET","","",36,N],[18,"ID_GOSTR3411_94_CRYPTOPROPARAMSET","","",36,N],[18,"ID_GOST28147_89_TESTPARAMSET","","",36,N],[18,"ID_GOST28147_89_CRYPTOPRO_A_PARAMSET","","",36,N],[18,"ID_GOST28147_89_CRYPTOPRO_B_PARAMSET","","",36,N],[18,"ID_GOST28147_89_CRYPTOPRO_C_PARAMSET","","",36,N],[18,"ID_GOST28147_89_CRYPTOPRO_D_PARAMSET","","",36,N],[18,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_1_PARAMSET","","",36,N],[18,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_0_PARAMSET","","",36,N],[18,"ID_GOST28147_89_CRYPTOPRO_RIC_1_PARAMSET","","",36,N],[18,"ID_GOSTR3410_94_TESTPARAMSET","","",36,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_A_PARAMSET","","",36,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_B_PARAMSET","","",36,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_C_PARAMSET","","",36,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_D_PARAMSET","","",36,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_XCHA_PARAMSET","","",36,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_XCHB_PARAMSET","","",36,N],[18,"ID_GOSTR3410_94_CRYPTOPRO_XCHC_PARAMSET","","",36,N],[18,"ID_GOSTR3410_2001_TESTPARAMSET","","",36,N],[18,"ID_GOSTR3410_2001_CRYPTOPRO_A_PARAMSET","","",36,N],[18,"ID_GOSTR3410_2001_CRYPTOPRO_B_PARAMSET","","",36,N],[18,"ID_GOSTR3410_2001_CRYPTOPRO_C_PARAMSET","","",36,N],[18,"ID_GOSTR3410_2001_CRYPTOPRO_XCHA_PARAMSET","","",36,N],[18,"ID_GOSTR3410_2001_CRYPTOPRO_XCHB_PARAMSET","","",36,N],[18,"ID_GOSTR3410_94_A","","",36,N],[18,"ID_GOSTR3410_94_ABIS","","",36,N],[18,"ID_GOSTR3410_94_B","","",36,N],[18,"ID_GOSTR3410_94_BBIS","","",36,N],[18,"ID_GOST28147_89_CC","","",36,N],[18,"ID_GOSTR3410_94_CC","","",36,N],[18,"ID_GOSTR3410_2001_CC","","",36,N],[18,"ID_GOSTR3411_94_WITH_GOSTR3410_94_CC","","",36,N],[18,"ID_GOSTR3411_94_WITH_GOSTR3410_2001_CC","","",36,N],[18,"ID_GOSTR3410_2001_PARAMSET_CC","","",36,N],[18,"CAMELLIA_128_CBC","","",36,N],[18,"CAMELLIA_192_CBC","","",36,N],[18,"CAMELLIA_256_CBC","","",36,N],[18,"ID_CAMELLIA128_WRAP","","",36,N],[18,"ID_CAMELLIA192_WRAP","","",36,N],[18,"ID_CAMELLIA256_WRAP","","",36,N],[18,"CAMELLIA_128_ECB","","",36,N],[18,"CAMELLIA_128_OFB128","","",36,N],[18,"CAMELLIA_128_CFB128","","",36,N],[18,"CAMELLIA_192_ECB","","",36,N],[18,"CAMELLIA_192_OFB128","","",36,N],[18,"CAMELLIA_192_CFB128","","",36,N],[18,"CAMELLIA_256_ECB","","",36,N],[18,"CAMELLIA_256_OFB128","","",36,N],[18,"CAMELLIA_256_CFB128","","",36,N],[18,"CAMELLIA_128_CFB1","","",36,N],[18,"CAMELLIA_192_CFB1","","",36,N],[18,"CAMELLIA_256_CFB1","","",36,N],[18,"CAMELLIA_128_CFB8","","",36,N],[18,"CAMELLIA_192_CFB8","","",36,N],[18,"CAMELLIA_256_CFB8","","",36,N],[18,"KISA","","",36,N],[18,"SEED_ECB","","",36,N],[18,"SEED_CBC","","",36,N],[18,"SEED_CFB128","","",36,N],[18,"SEED_OFB128","","",36,N],[18,"HMAC","","",36,N],[18,"CMAC","","",36,N],[18,"RC4_HMAC_MD5","","",36,N],[18,"AES_128_CBC_HMAC_SHA1","","",36,N],[18,"AES_192_CBC_HMAC_SHA1","","",36,N],[18,"AES_256_CBC_HMAC_SHA1","","",36,N],[0,"ocsp","openssl","",N,N],[3,"OcspFlag","openssl::ocsp","",N,N],[3,"OcspResponseStatus","","",N,N],[3,"OcspCertStatus","","",N,N],[3,"OcspRevokedStatus","","",N,N],[3,"OcspStatus","","",N,N],[12,"status","","The overall status of the response.",37,N],[12,"reason","","If `status` is `CERT_STATUS_REVOKED`, the reason for the…",37,N],[12,"revocation_time","","If `status` is `CERT_STATUS_REVOKED`, the time at which…",37,N],[12,"this_update","","The time that this revocation check was performed.",37,N],[12,"next_update","","The time at which this revocation check expires.",37,N],[3,"OcspBasicResponse","","",N,N],[3,"OcspBasicResponseRef","","",N,N],[3,"OcspCertId","","",N,N],[3,"OcspCertIdRef","","",N,N],[3,"OcspResponse","","",N,N],[3,"OcspResponseRef","","",N,N],[3,"OcspRequest","","",N,N],[3,"OcspRequestRef","","",N,N],[3,"OcspOneReq","","",N,N],[3,"OcspOneReqRef","","",N,N],[18,"NO_CERTS","","",38,N],[18,"NO_INTERN","","",38,N],[18,"NO_CHAIN","","",38,N],[18,"NO_VERIFY","","",38,N],[18,"NO_EXPLICIT","","",38,N],[18,"NO_CA_SIGN","","",38,N],[18,"NO_DELEGATED","","",38,N],[18,"NO_CHECKS","","",38,N],[18,"TRUST_OTHER","","",38,N],[18,"RESPID_KEY","","",38,N],[18,"NO_TIME","","",38,N],[11,"empty","","Returns an empty set of flags.",38,[[],["ocspflag"]]],[11,"all","","Returns the set containing all flags.",38,[[],["ocspflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",38,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",38,[[["c_ulong"]],["option",["ocspflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",38,[[["c_ulong"]],["ocspflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",38,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",38,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",38,[[["self"],["ocspflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",38,[[["self"],["ocspflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",38,[[["self"],["ocspflag"]]]],[11,"remove","","Removes the specified flags in-place.",38,[[["self"],["ocspflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",38,[[["self"],["ocspflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",38,[[["self"],["ocspflag"],["bool"]]]],[11,"from_raw","","",39,[[["c_int"]],["ocspresponsestatus"]]],[11,"as_raw","","",39,[[["self"]],["c_int"]]],[18,"SUCCESSFUL","","",39,N],[18,"MALFORMED_REQUEST","","",39,N],[18,"INTERNAL_ERROR","","",39,N],[18,"TRY_LATER","","",39,N],[18,"SIG_REQUIRED","","",39,N],[18,"UNAUTHORIZED","","",39,N],[11,"from_raw","","",40,[[["c_int"]],["ocspcertstatus"]]],[11,"as_raw","","",40,[[["self"]],["c_int"]]],[18,"GOOD","","",40,N],[18,"REVOKED","","",40,N],[18,"UNKNOWN","","",40,N],[11,"from_raw","","",41,[[["c_int"]],["ocsprevokedstatus"]]],[11,"as_raw","","",41,[[["self"]],["c_int"]]],[18,"NO_STATUS","","",41,N],[18,"UNSPECIFIED","","",41,N],[18,"KEY_COMPROMISE","","",41,N],[18,"CA_COMPROMISE","","",41,N],[18,"AFFILIATION_CHANGED","","",41,N],[18,"STATUS_SUPERSEDED","","",41,N],[18,"STATUS_CESSATION_OF_OPERATION","","",41,N],[18,"STATUS_CERTIFICATE_HOLD","","",41,N],[18,"REMOVE_FROM_CRL","","",41,N],[11,"check_validity","","Checks validity of the `this_update` and `next_update`…",37,[[["self"],["u32"],["option",["u32"]]],["result",["errorstack"]]]],[11,"verify","","Verifies the validity of the response.",42,[[["self"],["stackref"],["x509storeref"],["ocspflag"]],["result",["errorstack"]]]],[11,"find_status","","Looks up the status for the specified certificate ID.",42,[[["self"],["ocspcertidref"]],["option",["ocspstatus"]]]],[11,"from_cert","","Constructs a certificate ID for certificate `subject`.",43,[[["messagedigest"],["x509ref"],["x509ref"]],["result",["ocspcertid","errorstack"]]]],[11,"create","","Creates an OCSP response from the status and optional body.",44,[[["ocspresponsestatus"],["option",["ocspbasicresponseref"]]],["result",["ocspresponse","errorstack"]]]],[11,"from_der","","Deserializes a DER-encoded OCSP response.",44,N],[11,"to_der","","Serializes the response to its standard DER encoding.",45,[[["self"]],["result",["vec","errorstack"]]]],[11,"status","","Returns the status of the response.",45,[[["self"]],["ocspresponsestatus"]]],[11,"basic","","Returns the basic response.",45,[[["self"]],["result",["ocspbasicresponse","errorstack"]]]],[11,"new","","",46,[[],["result",["ocsprequest","errorstack"]]]],[11,"from_der","","Deserializes a DER-encoded OCSP request.",46,N],[11,"to_der","","Serializes the request to its standard DER encoding.",47,[[["self"]],["result",["vec","errorstack"]]]],[11,"add_id","","",47,[[["self"],["ocspcertid"]],["result",["ocsponereqref","errorstack"]]]],[0,"pkcs12","openssl","PKCS #12 archives.",N,N],[3,"Pkcs12","openssl::pkcs12","",N,N],[3,"Pkcs12Ref","","",N,N],[3,"ParsedPkcs12","","",N,N],[12,"pkey","","",48,N],[12,"cert","","",48,N],[12,"chain","","",48,N],[3,"Pkcs12Builder","","",N,N],[11,"to_der","","Serializes the `Pkcs12` to its standard DER encoding.",49,[[["self"]],["result",["vec","errorstack"]]]],[11,"parse","","Extracts the contents of the `Pkcs12`.",49,[[["self"],["str"]],["result",["parsedpkcs12","errorstack"]]]],[11,"from_der","","Deserializes a DER-encoded PKCS#12 archive.",50,N],[11,"builder","","Creates a new builder for a protected pkcs12 certificate.",50,[[],["pkcs12builder"]]],[11,"key_algorithm","","The encryption algorithm that should be used for the key",51,[[["self"],["nid"]],["self"]]],[11,"cert_algorithm","","The encryption algorithm that should be used for the cert",51,[[["self"],["nid"]],["self"]]],[11,"key_iter","","Key iteration count, default is 2048 as of this writing",51,[[["self"],["u32"]],["self"]]],[11,"mac_iter","","MAC iteration count, default is the same as key_iter.",51,[[["self"],["u32"]],["self"]]],[11,"ca","","An additional set of certificates to include in the…",51,[[["self"],["stack",["x509"]]],["self"]]],[11,"build","","Builds the PKCS #12 object",51,[[["self"],["str"],["str"],["pkeyref"],["x509ref"]],["result",["pkcs12","errorstack"]]]],[0,"pkcs5","openssl","",N,N],[3,"KeyIvPair","openssl::pkcs5","",N,N],[12,"key","","",52,N],[12,"iv","","",52,N],[5,"bytes_to_key","","Derives a key and an IV from various parameters.",N,N],[5,"pbkdf2_hmac","","Derives a key from a password and salt using the…",N,N],[0,"pkcs7","openssl","",N,N],[3,"Pkcs7","openssl::pkcs7","A PKCS#7 structure.",N,N],[3,"Pkcs7Ref","","Reference to `Pkcs7`",N,N],[3,"Pkcs7Flags","","",N,N],[18,"TEXT","","",53,N],[18,"NOCERTS","","",53,N],[18,"NOSIGS","","",53,N],[18,"NOCHAIN","","",53,N],[18,"NOINTERN","","",53,N],[18,"NOVERIFY","","",53,N],[18,"DETACHED","","",53,N],[18,"BINARY","","",53,N],[18,"NOATTR","","",53,N],[18,"NOSMIMECAP","","",53,N],[18,"NOOLDMIMETYPE","","",53,N],[18,"CRLFEOL","","",53,N],[18,"STREAM","","",53,N],[18,"NOCRL","","",53,N],[18,"PARTIAL","","",53,N],[18,"REUSE_DIGEST","","",53,N],[11,"empty","","Returns an empty set of flags.",53,[[],["pkcs7flags"]]],[11,"all","","Returns the set containing all flags.",53,[[],["pkcs7flags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",53,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",53,[[["c_int"]],["option",["pkcs7flags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",53,[[["c_int"]],["pkcs7flags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",53,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",53,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",53,[[["self"],["pkcs7flags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",53,[[["self"],["pkcs7flags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",53,[[["self"],["pkcs7flags"]]]],[11,"remove","","Removes the specified flags in-place.",53,[[["self"],["pkcs7flags"]]]],[11,"toggle","","Toggles the specified flags in-place.",53,[[["self"],["pkcs7flags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",53,[[["self"],["pkcs7flags"],["bool"]]]],[11,"from_pem","","Deserializes a PEM-encoded PKCS#7 signature",54,N],[11,"from_smime","","Parses a message in S/MIME format.",54,N],[11,"encrypt","","Creates and returns a PKCS#7 `envelopedData` structure.",54,N],[11,"sign","","Creates and returns a PKCS#7 `signedData` structure.",54,N],[11,"to_smime","","Converts PKCS#7 structure to S/MIME format",55,N],[11,"to_pem","","Serializes the data into a PEM-encoded PKCS#7 structure.",55,[[["self"]],["result",["vec","errorstack"]]]],[11,"decrypt","","Decrypts data using the provided private key.",55,[[["self"],["pkeyref"],["x509ref"],["pkcs7flags"]],["result",["vec","errorstack"]]]],[11,"verify","","Verifies the PKCS#7 `signedData` structure contained by…",55,[[["self"],["stackref"],["x509storeref"],["option"],["option",["vec"]],["pkcs7flags"]],["result",["errorstack"]]]],[0,"pkey","openssl","Public/private key processing.",N,N],[3,"Id","openssl::pkey","An identifier of a kind of key.",N,N],[3,"PKey","","A public or private key.",N,N],[3,"PKeyRef","","Reference to `PKey`.",N,N],[4,"Params","","A tag type indicating that a key only has parameters.",N,N],[4,"Public","","A tag type indicating that a key only has public components.",N,N],[4,"Private","","A tag type indicating that a key has private components.",N,N],[8,"HasParams","","A trait indicating that a key has parameters.",N,N],[8,"HasPublic","","A trait indicating that a key has public components.",N,N],[8,"HasPrivate","","A trait indicating that a key has private components.",N,N],[11,"from_raw","","Creates a `Id` from an integer representation.",56,[[["c_int"]],["id"]]],[11,"as_raw","","Returns the integer representation of the `Id`.",56,[[["self"]],["c_int"]]],[18,"RSA","","",56,N],[18,"HMAC","","",56,N],[18,"DSA","","",56,N],[18,"DH","","",56,N],[18,"EC","","",56,N],[11,"rsa","","Returns a copy of the internal RSA key.",57,[[["self"]],["result",["rsa","errorstack"]]]],[11,"dsa","","Returns a copy of the internal DSA key.",57,[[["self"]],["result",["dsa","errorstack"]]]],[11,"dh","","Returns a copy of the internal DH key.",57,[[["self"]],["result",["dh","errorstack"]]]],[11,"ec_key","","Returns a copy of the internal elliptic curve key.",57,[[["self"]],["result",["eckey","errorstack"]]]],[11,"id","","Returns the `Id` that represents the type of this key.",57,[[["self"]],["id"]]],[11,"public_key_to_pem","","Serializes the public key into a PEM-encoded…",57,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_der","","Serializes the public key into a DER-encoded…",57,[[["self"]],["result",["vec","errorstack"]]]],[11,"bits","","Returns the size of the key.",57,[[["self"]],["u32"]]],[11,"public_eq","","Compares the public component of this key with another.",57,[[["self"],["pkeyref"]],["bool"]]],[11,"private_key_to_pem_pkcs8","","Serializes the private key to a PEM-encoded PKCS#8…",57,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_pem_pkcs8_passphrase","","Serializes the private key to a PEM-encoded PKCS#8…",57,N],[11,"private_key_to_der","","Serializes the private key to a DER-encoded key type…",57,[[["self"]],["result",["vec","errorstack"]]]],[11,"from_rsa","","Creates a new `PKey` containing an RSA key.",58,[[["rsa"]],["result",["pkey","errorstack"]]]],[11,"from_dsa","","Creates a new `PKey` containing a DSA key.",58,[[["dsa"]],["result",["pkey","errorstack"]]]],[11,"from_dh","","Creates a new `PKey` containing a Diffie-Hellman key.",58,[[["dh"]],["result",["pkey","errorstack"]]]],[11,"from_ec_key","","Creates a new `PKey` containing an elliptic curve key.",58,[[["eckey"]],["result",["pkey","errorstack"]]]],[11,"hmac","","Creates a new `PKey` containing an HMAC key.",58,N],[11,"private_key_from_pem","","Deserializes a private key from a PEM-encoded key type…",58,N],[11,"private_key_from_pem_passphrase","","Deserializes a private key from a PEM-encoded encrypted…",58,N],[11,"private_key_from_pem_callback","","Deserializes a private key from a PEM-encoded encrypted…",58,N],[11,"private_key_from_der","","Decodes a DER-encoded private key.",58,N],[11,"private_key_from_pkcs8_callback","","Deserializes a DER-formatted PKCS#8 private key, using a…",58,N],[11,"private_key_from_pkcs8_passphrase","","Deserializes a DER-formatted PKCS#8 private key, using the…",58,N],[11,"public_key_from_pem","","Decodes a PEM-encoded SubjectPublicKeyInfo structure.",58,N],[11,"public_key_from_der","","Decodes a DER-encoded SubjectPublicKeyInfo structure.",58,N],[0,"rand","openssl","Utilities for secure random number generation.",N,N],[5,"rand_bytes","openssl::rand","Fill buffer with cryptographically strong pseudo-random…",N,N],[0,"rsa","openssl","Rivest–Shamir–Adleman cryptosystem",N,N],[3,"Padding","openssl::rsa","Type of encryption padding to use.",N,N],[3,"Rsa","","An RSA key.",N,N],[3,"RsaRef","","Reference to `RSA`",N,N],[3,"RsaPrivateKeyBuilder","","",N,N],[11,"from_raw","","Creates a `Padding` from an integer representation.",59,[[["c_int"]],["padding"]]],[11,"as_raw","","Returns the integer representation of `Padding`.",59,[[["self"]],["c_int"]]],[18,"NONE","","",59,N],[18,"PKCS1","","",59,N],[18,"PKCS1_OAEP","","",59,N],[18,"PKCS1_PSS","","",59,N],[11,"private_key_to_pem","","Serializes the private key to a PEM-encoded PKCS#1…",60,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_key_to_pem_passphrase","","Serializes the private key to a PEM-encoded encrypted…",60,N],[11,"private_key_to_der","","Serializes the private key to a DER-encoded PKCS#1…",60,[[["self"]],["result",["vec","errorstack"]]]],[11,"private_decrypt","","Decrypts data using the private key, returning the number…",60,N],[11,"private_encrypt","","Encrypts data using the private key, returning the number…",60,N],[11,"d","","Returns a reference to the private exponent of the key.",60,[[["self"]],["bignumref"]]],[11,"p","","Returns a reference to the first factor of the exponent of…",60,[[["self"]],["option",["bignumref"]]]],[11,"q","","Returns a reference to the second factor of the exponent…",60,[[["self"]],["option",["bignumref"]]]],[11,"dmp1","","Returns a reference to the first exponent used for CRT…",60,[[["self"]],["option",["bignumref"]]]],[11,"dmq1","","Returns a reference to the second exponent used for CRT…",60,[[["self"]],["option",["bignumref"]]]],[11,"iqmp","","Returns a reference to the coefficient used for CRT…",60,[[["self"]],["option",["bignumref"]]]],[11,"public_key_to_pem","","Serializes the public key into a PEM-encoded…",60,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_der","","Serializes the public key into a DER-encoded…",60,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_pem_pkcs1","","Serializes the public key into a PEM-encoded PKCS#1…",60,[[["self"]],["result",["vec","errorstack"]]]],[11,"public_key_to_der_pkcs1","","Serializes the public key into a DER-encoded PKCS#1…",60,[[["self"]],["result",["vec","errorstack"]]]],[11,"size","","Returns the size of the modulus in bytes.",60,[[["self"]],["u32"]]],[11,"public_decrypt","","Decrypts data using the public key, returning the number…",60,N],[11,"public_encrypt","","Encrypts data using the public key, returning the number…",60,N],[11,"n","","Returns a reference to the modulus of the key.",60,[[["self"]],["bignumref"]]],[11,"e","","Returns a reference to the public exponent of the key.",60,[[["self"]],["bignumref"]]],[11,"from_public_components","","Creates a new RSA key with only public components.",61,[[["bignum"],["bignum"]],["result",["rsa","errorstack"]]]],[11,"public_key_from_pem","","Decodes a PEM-encoded SubjectPublicKeyInfo structure…",61,N],[11,"public_key_from_pem_pkcs1","","Decodes a PEM-encoded PKCS#1 RSAPublicKey structure.",61,N],[11,"public_key_from_der","","Decodes a DER-encoded SubjectPublicKeyInfo structure…",61,N],[11,"public_key_from_der_pkcs1","","Decodes a DER-encoded PKCS#1 RSAPublicKey structure.",61,N],[11,"new","","Creates a new `RsaPrivateKeyBuilder`.",62,[[["bignum"],["bignum"],["bignum"]],["result",["rsaprivatekeybuilder","errorstack"]]]],[11,"set_factors","","Sets the factors of the Rsa key.",62,[[["self"],["bignum"],["bignum"]],["result",["rsaprivatekeybuilder","errorstack"]]]],[11,"set_crt_params","","Sets the Chinese Remainder Theorem params of the Rsa key.",62,[[["self"],["bignum"],["bignum"],["bignum"]],["result",["rsaprivatekeybuilder","errorstack"]]]],[11,"build","","Returns the Rsa key.",62,[[["self"]],["rsa",["private"]]]],[11,"from_private_components","","Creates a new RSA key with private components (public…",61,[[["bignum"],["bignum"],["bignum"],["bignum"],["bignum"],["bignum"],["bignum"],["bignum"]],["result",["rsa","errorstack"]]]],[11,"generate","","Generates a public/private key pair with the specified size.",61,[[["u32"]],["result",["rsa","errorstack"]]]],[11,"private_key_from_pem","","Deserializes a private key from a PEM-encoded PKCS#1…",61,N],[11,"private_key_from_pem_passphrase","","Deserializes a private key from a PEM-encoded encrypted…",61,N],[11,"private_key_from_pem_callback","","Deserializes a private key from a PEM-encoded encrypted…",61,N],[11,"private_key_from_der","","Decodes a DER-encoded PKCS#1 RSAPrivateKey structure.",61,N],[0,"sha","openssl","The SHA family of hashes.",N,N],[3,"Sha1","openssl::sha","An object which calculates a SHA1 hash of some data.",N,N],[3,"Sha224","","An object which calculates a SHA224 hash of some data.",N,N],[3,"Sha256","","An object which calculates a SHA256 hash of some data.",N,N],[3,"Sha384","","An object which calculates a SHA384 hash of some data.",N,N],[3,"Sha512","","An object which calculates a SHA512 hash of some data.",N,N],[5,"sha1","","Computes the SHA1 hash of some data.",N,N],[5,"sha224","","Computes the SHA224 hash of some data.",N,N],[5,"sha256","","Computes the SHA256 hash of some data.",N,N],[5,"sha384","","Computes the SHA384 hash of some data.",N,N],[5,"sha512","","Computes the SHA512 hash of some data.",N,N],[11,"new","","Creates a new hasher.",63,[[],["sha1"]]],[11,"update","","Feeds some data into the hasher.",63,N],[11,"finish","","Returns the hash of the data.",63,N],[11,"new","","Creates a new hasher.",64,[[],["sha224"]]],[11,"update","","Feeds some data into the hasher.",64,N],[11,"finish","","Returns the hash of the data.",64,N],[11,"new","","Creates a new hasher.",65,[[],["sha256"]]],[11,"update","","Feeds some data into the hasher.",65,N],[11,"finish","","Returns the hash of the data.",65,N],[11,"new","","Creates a new hasher.",66,[[],["sha384"]]],[11,"update","","Feeds some data into the hasher.",66,N],[11,"finish","","Returns the hash of the data.",66,N],[11,"new","","Creates a new hasher.",67,[[],["sha512"]]],[11,"update","","Feeds some data into the hasher.",67,N],[11,"finish","","Returns the hash of the data.",67,N],[0,"sign","openssl","Message signatures.",N,N],[3,"RsaPssSaltlen","openssl::sign","Salt lengths that must be used with `set_rsa_pss_saltlen`.",N,N],[3,"Signer","","A type which computes cryptographic signatures of data.",N,N],[3,"Verifier","","",N,N],[11,"custom","","Sets the salt length to the given value.",68,[[["c_int"]],["rsapsssaltlen"]]],[18,"DIGEST_LENGTH","","The salt length is set to the digest length. Corresponds…",68,N],[18,"MAXIMUM_LENGTH","","The salt length is set to the maximum permissible value.…",68,N],[11,"new","","Creates a new `Signer`.",69,[[["messagedigest"],["pkeyref"]],["result",["signer","errorstack"]]]],[11,"new_without_digest","","Creates a new `Signer` without a digest.",69,[[["pkeyref"]],["result",["signer","errorstack"]]]],[11,"new_intern","","",69,[[["option",["messagedigest"]],["pkeyref"]],["result",["signer","errorstack"]]]],[11,"rsa_padding","","Returns the RSA padding mode in use.",69,[[["self"]],["result",["padding","errorstack"]]]],[11,"set_rsa_padding","","Sets the RSA padding mode.",69,[[["self"],["padding"]],["result",["errorstack"]]]],[11,"set_rsa_pss_saltlen","","Sets the RSA PSS salt length.",69,[[["self"],["rsapsssaltlen"]],["result",["errorstack"]]]],[11,"set_rsa_mgf1_md","","Sets the RSA MGF1 algorithm.",69,[[["self"],["messagedigest"]],["result",["errorstack"]]]],[11,"update","","Feeds more data into the `Signer`.",69,N],[11,"len","","Computes an upper bound on the signature length.",69,[[["self"]],["result",["usize","errorstack"]]]],[11,"sign","","Writes the signature into the provided buffer, returning…",69,N],[11,"sign_to_vec","","Returns the signature.",69,[[["self"]],["result",["vec","errorstack"]]]],[11,"new","","Creates a new `Verifier`.",70,[[["messagedigest"],["pkeyref"]],["result",["verifier","errorstack"]]]],[11,"rsa_padding","","Returns the RSA padding mode in use.",70,[[["self"]],["result",["padding","errorstack"]]]],[11,"set_rsa_padding","","Sets the RSA padding mode.",70,[[["self"],["padding"]],["result",["errorstack"]]]],[11,"set_rsa_pss_saltlen","","Sets the RSA PSS salt length.",70,[[["self"],["rsapsssaltlen"]],["result",["errorstack"]]]],[11,"set_rsa_mgf1_md","","Sets the RSA MGF1 algorithm.",70,[[["self"],["messagedigest"]],["result",["errorstack"]]]],[11,"update","","Feeds more data into the `Verifier`.",70,N],[11,"verify","","Determines if the data fed into the `Verifier` matches the…",70,N],[0,"srtp","openssl","",N,N],[3,"SrtpProtectionProfile","openssl::srtp","",N,N],[3,"SrtpProtectionProfileRef","","Reference to `SrtpProtectionProfile`.",N,N],[3,"SrtpProfileId","","An identifier of an SRTP protection profile.",N,N],[11,"id","","",71,[[["self"]],["srtpprofileid"]]],[11,"name","","",71,[[["self"]],["str"]]],[11,"from_raw","","Creates a `SrtpProfileId` from an integer representation.",72,[[["c_ulong"]],["srtpprofileid"]]],[11,"as_raw","","Returns the integer representation of `SrtpProfileId`.",72,[[["self"]],["c_ulong"]]],[18,"SRTP_AES128_CM_SHA1_80","","",72,N],[18,"SRTP_AES128_CM_SHA1_32","","",72,N],[18,"SRTP_AES128_F8_SHA1_80","","",72,N],[18,"SRTP_AES128_F8_SHA1_32","","",72,N],[18,"SRTP_NULL_SHA1_80","","",72,N],[18,"SRTP_NULL_SHA1_32","","",72,N],[0,"ssl","openssl","SSL/TLS support.",N,N],[3,"ConnectConfiguration","openssl::ssl","A type which allows for configuration of a client-side TLS…",N,N],[3,"SslAcceptor","","A type which wraps server-side streams in a TLS session.",N,N],[3,"SslAcceptorBuilder","","A builder for `SslAcceptor`s.",N,N],[3,"SslConnector","","A type which wraps client-side streams in a TLS session.",N,N],[3,"SslConnectorBuilder","","A builder for `SslConnector`s.",N,N],[3,"Error","","An SSL error.",N,N],[3,"ErrorCode","","An error code returned from SSL functions.",N,N],[3,"SslOptions","","Options controlling the behavior of an `SslContext`.",N,N],[3,"SslMode","","Options controlling the behavior of an `SslContext`.",N,N],[3,"SslMethod","","A type specifying the kind of protocol an `SslContext`…",N,N],[3,"SslVerifyMode","","Options controling the behavior of certificate verification.",N,N],[3,"SslSessionCacheMode","","Options controlling the behavior of session caching.",N,N],[3,"SslFiletype","","An identifier of the format of a certificate or key file.",N,N],[3,"StatusType","","An identifier of a certificate status type.",N,N],[3,"NameType","","An identifier of a session name type.",N,N],[3,"SniError","","An error returned from the SNI callback.",N,N],[3,"SslAlert","","An SSL/TLS alert.",N,N],[3,"SslVersion","","An SSL/TLS protocol version.",N,N],[3,"SslContextBuilder","","A builder for `SslContext`s.",N,N],[3,"SslContext","","A context object for TLS streams.",N,N],[3,"SslContextRef","","Reference to [`SslContext`]",N,N],[3,"CipherBits","","Information about the state of a cipher.",N,N],[12,"secret","","The number of secret bits used for the cipher.",73,N],[12,"algorithm","","The number of bits processed by the chosen algorithm.",73,N],[3,"SslCipher","","Information about a cipher.",N,N],[3,"SslCipherRef","","Reference to an [`SslCipher`].",N,N],[3,"SslSession","","An encoded SSL session.",N,N],[3,"SslSessionRef","","Reference to [`SslSession`].",N,N],[3,"Ssl","","The state of an SSL/TLS session.",N,N],[3,"SslRef","","Reference to an [`Ssl`].",N,N],[3,"MidHandshakeSslStream","","An SSL stream midway through the handshake process.",N,N],[3,"SslStream","","A TLS session over a stream.",N,N],[3,"SslStreamBuilder","","A partially constructed `SslStream`, useful for unusual…",N,N],[3,"ShutdownState","","The shutdown state of a session.",N,N],[4,"HandshakeError","","An error or intermediate state after a TLS handshake…",N,N],[13,"SetupFailure","","Setup failed.",74,N],[13,"Failure","","The handshake failed.",74,N],[13,"WouldBlock","","The handshake encountered a `WouldBlock` error midway…",74,N],[4,"ShutdownResult","","The result of a shutdown request.",N,N],[13,"Sent","","A close notify message has been sent to the peer.",75,N],[13,"Received","","A close notify response message has been received from the…",75,N],[5,"select_next_proto","","A standard implementation of protocol selection for…",N,N],[5,"SSL_CTX_up_ref","","",N,N],[5,"SSL_SESSION_get_master_key","","",N,N],[5,"SSL_is_server","","",N,N],[5,"SSL_SESSION_up_ref","","",N,N],[11,"builder","","Creates a new builder for TLS connections.",76,[[["sslmethod"]],["result",["sslconnectorbuilder","errorstack"]]]],[11,"connect","","Initiates a client-side TLS session on a stream.",76,[[["self"],["str"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"configure","","Returns a structure allowing for configuration of a single…",76,[[["self"]],["result",["connectconfiguration","errorstack"]]]],[11,"build","","Consumes the builder, returning an `SslConnector`.",77,[[["self"]],["sslconnector"]]],[11,"use_server_name_indication","","A builder-style version of `set_use_server_name_indication`.",78,[[["self"],["bool"]],["connectconfiguration"]]],[11,"set_use_server_name_indication","","Configures the use of Server Name Indication (SNI) when…",78,[[["self"],["bool"]]]],[11,"verify_hostname","","A builder-style version of `set_verify_hostname`.",78,[[["self"],["bool"]],["connectconfiguration"]]],[11,"set_verify_hostname","","Configures the use of hostname verification when connecting.",78,[[["self"],["bool"]]]],[11,"connect","","Initiates a client-side TLS session on a stream.",78,[[["self"],["str"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"mozilla_intermediate","","Creates a new builder configured to connect to non-legacy…",79,[[["sslmethod"]],["result",["sslacceptorbuilder","errorstack"]]]],[11,"mozilla_modern","","Creates a new builder configured to connect to modern…",79,[[["sslmethod"]],["result",["sslacceptorbuilder","errorstack"]]]],[11,"accept","","Initiates a server-side TLS session on a stream.",79,[[["self"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"build","","Consumes the builder, returning a `SslAcceptor`.",80,[[["self"]],["sslacceptor"]]],[11,"from_raw","","",81,[[["c_int"]],["errorcode"]]],[11,"as_raw","","",81,[[["self"]],["c_int"]]],[18,"ZERO_RETURN","","The SSL session has been closed.",81,N],[18,"WANT_READ","","An attempt to read data from the underlying socket…",81,N],[18,"WANT_WRITE","","An attempt to write data to the underlying socket returned…",81,N],[18,"SYSCALL","","A non-recoverable IO error occurred.",81,N],[18,"SSL","","An error occurred in the SSL library.",81,N],[11,"code","","",82,[[["self"]],["errorcode"]]],[11,"io_error","","",82,[[["self"]],["option",["error"]]]],[11,"into_io_error","","",82,[[["self"]],["result",["error","error"]]]],[11,"ssl_error","","",82,[[["self"]],["option",["errorstack"]]]],[18,"DONT_INSERT_EMPTY_FRAGMENTS","","Disables a countermeasure against an SSLv3/TLSv1.0…",83,N],[18,"ALL","","A \"reasonable default\" set of options which enables…",83,N],[18,"NO_QUERY_MTU","","Do not query the MTU.",83,N],[18,"COOKIE_EXCHANGE","","Enables Cookie Exchange as described in [RFC 4347 Section…",83,N],[18,"NO_TICKET","","Disables the use of session tickets for session resumption.",83,N],[18,"NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","Always start a new session when performing a renegotiation…",83,N],[18,"NO_COMPRESSION","","Disables the use of TLS compression.",83,N],[18,"ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","Allow legacy insecure renegotiation with servers or…",83,N],[18,"SINGLE_ECDH_USE","","Creates a new key for each session when using ECDHE.",83,N],[18,"SINGLE_DH_USE","","Creates a new key for each session when using DHE.",83,N],[18,"CIPHER_SERVER_PREFERENCE","","Use the server's preferences rather than the client's when…",83,N],[18,"TLS_ROLLBACK_BUG","","Disables version rollback attach detection.",83,N],[18,"NO_SSLV2","","Disables the use of SSLv2.",83,N],[18,"NO_SSLV3","","Disables the use of SSLv3.",83,N],[18,"NO_TLSV1","","Disables the use of TLSv1.0.",83,N],[18,"NO_TLSV1_1","","Disables the use of TLSv1.1.",83,N],[18,"NO_TLSV1_2","","Disables the use of TLSv1.2.",83,N],[11,"empty","","Returns an empty set of flags.",83,[[],["ssloptions"]]],[11,"all","","Returns the set containing all flags.",83,[[],["ssloptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",83,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",83,[[["c_ulong"]],["option",["ssloptions"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",83,[[["c_ulong"]],["ssloptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",83,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",83,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",83,[[["self"],["ssloptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",83,[[["self"],["ssloptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",83,[[["self"],["ssloptions"]]]],[11,"remove","","Removes the specified flags in-place.",83,[[["self"],["ssloptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",83,[[["self"],["ssloptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",83,[[["self"],["ssloptions"],["bool"]]]],[18,"ENABLE_PARTIAL_WRITE","","Enables \"short writes\".",84,N],[18,"ACCEPT_MOVING_WRITE_BUFFER","","Disables a check that the data buffer has not moved…",84,N],[18,"AUTO_RETRY","","Enables automatic retries after TLS session events such as…",84,N],[18,"NO_AUTO_CHAIN","","Disables automatic chain building when verifying a peer's…",84,N],[18,"RELEASE_BUFFERS","","Release memory buffers when the session does not need them.",84,N],[18,"SEND_FALLBACK_SCSV","","Sends the fake `TLS_FALLBACK_SCSV` cipher suite in the…",84,N],[11,"empty","","Returns an empty set of flags.",84,[[],["sslmode"]]],[11,"all","","Returns the set containing all flags.",84,[[],["sslmode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",84,[[["self"]],["c_long"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",84,[[["c_long"]],["option",["sslmode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",84,[[["c_long"]],["sslmode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",84,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",84,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",84,[[["self"],["sslmode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",84,[[["self"],["sslmode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",84,[[["self"],["sslmode"]]]],[11,"remove","","Removes the specified flags in-place.",84,[[["self"],["sslmode"]]]],[11,"toggle","","Toggles the specified flags in-place.",84,[[["self"],["sslmode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",84,[[["self"],["sslmode"],["bool"]]]],[11,"tls","","Support all versions of the TLS protocol.",85,[[],["sslmethod"]]],[11,"dtls","","Support all versions of the DTLS protocol.",85,[[],["sslmethod"]]],[11,"from_ptr","","Constructs an `SslMethod` from a pointer to the underlying…",85,N],[11,"as_ptr","","Returns a pointer to the underlying OpenSSL value.",85,N],[18,"PEER","","Verifies that the peer's certificate is trusted.",86,N],[18,"NONE","","Disables verification of the peer's certificate.",86,N],[18,"FAIL_IF_NO_PEER_CERT","","On the server side, abort the handshake if the client did…",86,N],[11,"empty","","Returns an empty set of flags.",86,[[],["sslverifymode"]]],[11,"all","","Returns the set containing all flags.",86,[[],["sslverifymode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",86,[[["self"]],["i32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",86,[[["i32"]],["option",["sslverifymode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",86,[[["i32"]],["sslverifymode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",86,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",86,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",86,[[["self"],["sslverifymode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",86,[[["self"],["sslverifymode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",86,[[["self"],["sslverifymode"]]]],[11,"remove","","Removes the specified flags in-place.",86,[[["self"],["sslverifymode"]]]],[11,"toggle","","Toggles the specified flags in-place.",86,[[["self"],["sslverifymode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",86,[[["self"],["sslverifymode"],["bool"]]]],[18,"OFF","","No session caching for the client or server takes place.",87,N],[18,"CLIENT","","Enable session caching on the client side.",87,N],[18,"SERVER","","Enable session caching on the server side.",87,N],[18,"BOTH","","Enable session caching on both the client and server side.",87,N],[18,"NO_AUTO_CLEAR","","Disable automatic removal of expired sessions from the…",87,N],[18,"NO_INTERNAL_LOOKUP","","Disable use of the internal session cache for session…",87,N],[18,"NO_INTERNAL_STORE","","Disable use of the internal session cache for session…",87,N],[18,"NO_INTERNAL","","Disable use of the internal session cache for storage and…",87,N],[11,"empty","","Returns an empty set of flags.",87,[[],["sslsessioncachemode"]]],[11,"all","","Returns the set containing all flags.",87,[[],["sslsessioncachemode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",87,[[["self"]],["c_long"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",87,[[["c_long"]],["option",["sslsessioncachemode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",87,[[["c_long"]],["sslsessioncachemode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",87,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",87,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",87,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",87,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",87,[[["self"],["sslsessioncachemode"]]]],[11,"remove","","Removes the specified flags in-place.",87,[[["self"],["sslsessioncachemode"]]]],[11,"toggle","","Toggles the specified flags in-place.",87,[[["self"],["sslsessioncachemode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",87,[[["self"],["sslsessioncachemode"],["bool"]]]],[11,"from_raw","","Constructs an `SslFiletype` from a raw OpenSSL value.",88,[[["c_int"]],["sslfiletype"]]],[11,"as_raw","","Returns the raw OpenSSL value represented by this type.",88,[[["self"]],["c_int"]]],[18,"PEM","","The PEM format.",88,N],[18,"ASN1","","The ASN1 format.",88,N],[11,"from_raw","","Constructs a `StatusType` from a raw OpenSSL value.",89,[[["c_int"]],["statustype"]]],[11,"as_raw","","Returns the raw OpenSSL value represented by this type.",89,[[["self"]],["c_int"]]],[18,"OCSP","","An OSCP status.",89,N],[11,"from_raw","","Constructs a `StatusType` from a raw OpenSSL value.",90,[[["c_int"]],["statustype"]]],[11,"as_raw","","Returns the raw OpenSSL value represented by this type.",90,[[["self"]],["c_int"]]],[18,"HOST_NAME","","A host name.",90,N],[18,"ALERT_FATAL","","Abort the handshake with a fatal alert.",91,N],[18,"ALERT_WARNING","","Send a warning alert to the client and continue the…",91,N],[18,"NOACK","","",91,N],[18,"UNRECOGNIZED_NAME","","Alert 112 - `unrecognized_name`.",92,N],[18,"ILLEGAL_PARAMETER","","",92,N],[18,"DECODE_ERROR","","",92,N],[18,"SSL3","","SSLv3",93,N],[18,"TLS1","","TLSv1.0",93,N],[18,"TLS1_1","","TLSv1.1",93,N],[18,"TLS1_2","","TLSv1.2",93,N],[11,"new","","Creates a new `SslContextBuilder`.",94,[[["sslmethod"]],["result",["sslcontextbuilder","errorstack"]]]],[11,"from_ptr","","Creates an `SslContextBuilder` from a pointer to a raw…",94,N],[11,"as_ptr","","Returns a pointer to the raw OpenSSL value.",94,N],[11,"set_verify","","Configures the certificate verification method for new…",94,[[["self"],["sslverifymode"]]]],[11,"set_verify_callback","","Configures the certificate verification method for new…",94,[[["self"],["sslverifymode"],["f"]]]],[11,"set_servername_callback","","Configures the server name indication (SNI) callback for…",94,[[["self"],["f"]]]],[11,"set_verify_depth","","Sets the certificate verification depth.",94,[[["self"],["u32"]]]],[11,"set_read_ahead","","Controls read ahead behavior.",94,[[["self"],["bool"]]]],[11,"set_mode","","Sets the mode used by the context, returning the previous…",94,[[["self"],["sslmode"]],["sslmode"]]],[11,"set_tmp_dh","","Sets the parameters to be used during ephemeral…",94,[[["self"],["dhref"]],["result",["errorstack"]]]],[11,"set_tmp_dh_callback","","Sets the callback which will generate parameters to be…",94,[[["self"],["f"]]]],[11,"set_tmp_ecdh","","Sets the parameters to be used during ephemeral elliptic…",94,[[["self"],["eckeyref"]],["result",["errorstack"]]]],[11,"set_tmp_ecdh_callback","","Sets the callback which will generate parameters to be…",94,[[["self"],["f"]]]],[11,"set_default_verify_paths","","Use the default locations of trusted certificates for…",94,[[["self"]],["result",["errorstack"]]]],[11,"set_ca_file","","Loads trusted root certificates from a file.",94,[[["self"],["p"]],["result",["errorstack"]]]],[11,"set_client_ca_list","","Sets the list of CA names sent to the client.",94,[[["self"],["stack",["x509name"]]]]],[11,"set_session_id_context","","Set the context identifier for sessions.",94,N],[11,"set_certificate_file","","Loads a leaf certificate from a file.",94,[[["self"],["p"],["sslfiletype"]],["result",["errorstack"]]]],[11,"set_certificate_chain_file","","Loads a certificate chain from a file.",94,[[["self"],["p"]],["result",["errorstack"]]]],[11,"set_certificate","","Sets the leaf certificate.",94,[[["self"],["x509ref"]],["result",["errorstack"]]]],[11,"add_extra_chain_cert","","Appends a certificate to the certificate chain.",94,[[["self"],["x509"]],["result",["errorstack"]]]],[11,"set_private_key_file","","Loads the private key from a file.",94,[[["self"],["p"],["sslfiletype"]],["result",["errorstack"]]]],[11,"set_private_key","","Sets the private key.",94,[[["self"],["pkeyref"]],["result",["errorstack"]]]],[11,"set_cipher_list","","Sets the list of supported ciphers for protocols before…",94,[[["self"],["str"]],["result",["errorstack"]]]],[11,"set_options","","Sets the options used by the context, returning the old set.",94,[[["self"],["ssloptions"]],["ssloptions"]]],[11,"options","","Returns the options used by the context.",94,[[["self"]],["ssloptions"]]],[11,"clear_options","","Clears the options used by the context, returning the old…",94,[[["self"],["ssloptions"]],["ssloptions"]]],[11,"set_tlsext_use_srtp","","Enables the DTLS extension \"use_srtp\" as defined in RFC5764.",94,[[["self"],["str"]],["result",["errorstack"]]]],[11,"check_private_key","","Checks for consistency between the private key and…",94,[[["self"]],["result",["errorstack"]]]],[11,"cert_store","","Returns a shared reference to the context's certificate…",94,[[["self"]],["x509storebuilderref"]]],[11,"cert_store_mut","","Returns a mutable reference to the context's certificate…",94,[[["self"]],["x509storebuilderref"]]],[11,"set_status_callback","","Sets the callback dealing with OCSP stapling.",94,[[["self"],["f"]],["result",["errorstack"]]]],[11,"set_psk_client_callback","","Sets the callback for providing an identity and pre-shared…",94,[[["self"],["f"]]]],[11,"set_psk_callback","","",94,[[["self"],["f"]]]],[11,"set_psk_server_callback","","Sets the callback for providing an identity and pre-shared…",94,[[["self"],["f"]]]],[11,"set_new_session_callback","","Sets the callback which is called when new sessions are…",94,[[["self"],["f"]]]],[11,"set_remove_session_callback","","Sets the callback which is called when sessions are…",94,[[["self"],["f"]]]],[11,"set_get_session_callback","","Sets the callback which is called when a client proposed…",94,[[["self"],["f"]]]],[11,"set_session_cache_mode","","Sets the session caching mode use for connections made…",94,[[["self"],["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"set_cookie_generate_cb","","Sets the callback for generating a DTLSv1 cookie",94,[[["self"],["f"]]]],[11,"set_cookie_verify_cb","","Sets the callback for verifying a DTLSv1 cookie",94,[[["self"],["f"]]]],[11,"set_ex_data","","Sets the extra data at the specified index.",94,[[["self"],["index",["sslcontext"]],["t"]]]],[11,"build","","Consumes the builder, returning a new `SslContext`.",94,[[["self"]],["sslcontext"]]],[11,"builder","","Creates a new builder object for an `SslContext`.",95,[[["sslmethod"]],["result",["sslcontextbuilder","errorstack"]]]],[11,"new_ex_index","","Returns a new extra data index.",95,[[],["result",["index","errorstack"]]]],[11,"cert_store","","Returns a shared reference to the certificate store used…",96,[[["self"]],["x509storeref"]]],[11,"extra_chain_certs","","Returns a shared reference to the stack of certificates…",96,[[["self"]],["stackref"]]],[11,"ex_data","","Returns a reference to the extra data at the specified…",96,[[["self"],["index",["sslcontext"]]],["option"]]],[11,"name","","Returns the name of the cipher.",97,[[["self"]],["str"]]],[11,"version","","Returns the SSL/TLS protocol version that first defined…",97,[[["self"]],["str"]]],[11,"bits","","Returns the number of bits used for the cipher.",97,[[["self"]],["cipherbits"]]],[11,"description","","Returns a textual description of the cipher.",97,[[["self"]],["string"]]],[11,"from_der","","Deserializes a DER-encoded session structure.",98,N],[11,"id","","Returns the SSL session ID.",99,N],[11,"master_key_len","","Returns the length of the master key.",99,[[["self"]],["usize"]]],[11,"master_key","","Copies the master key into the provided buffer.",99,N],[11,"to_der","","Serializes the session into a DER-encoded structure.",99,[[["self"]],["result",["vec","errorstack"]]]],[11,"new_ex_index","","Returns a new extra data index.",100,[[],["result",["index","errorstack"]]]],[11,"new","","Creates a new `Ssl`.",100,[[["sslcontext"]],["result",["ssl","errorstack"]]]],[11,"connect","","Initiates a client-side TLS handshake.",100,[[["self"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"accept","","Initiates a server-side TLS handshake.",100,[[["self"],["s"]],["result",["sslstream","handshakeerror"]]]],[11,"set_verify","","Like [`SslContextBuilder::set_verify`].",101,[[["self"],["sslverifymode"]]]],[11,"set_verify_callback","","Like [`SslContextBuilder::set_verify_callback`].",101,[[["self"],["sslverifymode"],["f"]]]],[11,"set_tmp_dh","","Like [`SslContextBuilder::set_tmp_dh`].",101,[[["self"],["dhref"]],["result",["errorstack"]]]],[11,"set_tmp_dh_callback","","Like [`SslContextBuilder::set_tmp_dh_callback`].",101,[[["self"],["f"]]]],[11,"set_tmp_ecdh","","Like [`SslContextBuilder::set_tmp_ecdh`].",101,[[["self"],["eckeyref"]],["result",["errorstack"]]]],[11,"set_tmp_ecdh_callback","","Like [`SslContextBuilder::set_tmp_ecdh_callback`].",101,[[["self"],["f"]]]],[11,"current_cipher","","Returns the current cipher if the session is active.",101,[[["self"]],["option",["sslcipherref"]]]],[11,"state_string","","Returns a short string describing the state of the session.",101,[[["self"]],["str"]]],[11,"state_string_long","","Returns a longer string describing the state of the session.",101,[[["self"]],["str"]]],[11,"set_hostname","","Sets the host name to be sent to the server for Server…",101,[[["self"],["str"]],["result",["errorstack"]]]],[11,"peer_certificate","","Returns the peer's certificate, if present.",101,[[["self"]],["option",["x509"]]]],[11,"peer_cert_chain","","Returns the certificate chain of the peer, if present.",101,[[["self"]],["option",["stackref"]]]],[11,"certificate","","Like [`SslContext::certificate`].",101,[[["self"]],["option",["x509ref"]]]],[11,"private_key","","Like [`SslContext::private_key`].",101,[[["self"]],["option",["pkeyref"]]]],[11,"version","","",101,[[["self"]],["str"]]],[11,"version2","","Returns the protocol version of the session.",101,[[["self"]],["option",["sslversion"]]]],[11,"version_str","","Returns a string describing the protocol version of the…",101,[[["self"]],["str"]]],[11,"set_tlsext_use_srtp","","Enables the DTLS extension \"use_srtp\" as defined in RFC5764.",101,[[["self"],["str"]],["result",["errorstack"]]]],[11,"srtp_profiles","","Gets all SRTP profiles that are enabled for handshake via…",101,[[["self"]],["option",["stackref"]]]],[11,"selected_srtp_profile","","Gets the SRTP profile selected by handshake.",101,[[["self"]],["option",["srtpprotectionprofileref"]]]],[11,"pending","","Returns the number of bytes remaining in the currently…",101,[[["self"]],["usize"]]],[11,"servername","","Returns the servername sent by the client via Server Name…",101,[[["self"],["nametype"]],["option",["str"]]]],[11,"servername_raw","","Returns the servername sent by the client via Server Name…",101,[[["self"],["nametype"]],["option"]]],[11,"set_ssl_context","","Changes the context corresponding to the current connection.",101,[[["self"],["sslcontextref"]],["result",["errorstack"]]]],[11,"ssl_context","","Returns the context corresponding to the current connection.",101,[[["self"]],["sslcontextref"]]],[11,"verify_result","","Returns the certificate verification result.",101,[[["self"]],["x509verifyresult"]]],[11,"session","","Returns a shared reference to the SSL session.",101,[[["self"]],["option",["sslsessionref"]]]],[11,"export_keying_material","","Derives keying material for application use in accordance…",101,N],[11,"set_session","","Sets the session to be used.",101,[[["self"],["sslsessionref"]],["result",["errorstack"]]]],[11,"session_reused","","Determines if the session provided to `set_session` was…",101,[[["self"]],["bool"]]],[11,"set_status_type","","Sets the status response a client wishes the server to…",101,[[["self"],["statustype"]],["result",["errorstack"]]]],[11,"ocsp_status","","Returns the server's OCSP response, if present.",101,[[["self"]],["option"]]],[11,"set_ocsp_status","","Sets the OCSP response to be returned to the client.",101,N],[11,"is_server","","Determines if this `Ssl` is configured for server-side or…",101,[[["self"]],["bool"]]],[11,"set_ex_data","","Sets the extra data at the specified index.",101,[[["self"],["index",["ssl"]],["t"]]]],[11,"ex_data","","Returns a reference to the extra data at the specified…",101,[[["self"],["index",["ssl"]]],["option"]]],[11,"ex_data_mut","","Returns a mutable reference to the extra data at the…",101,[[["self"],["index",["ssl"]]],["option"]]],[11,"finished","","Copies the contents of the last Finished message sent to…",101,N],[11,"peer_finished","","Copies the contents of the last Finished message received…",101,N],[11,"get_ref","","Returns a shared reference to the inner stream.",102,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",102,[[["self"]],["s"]]],[11,"ssl","","Returns a shared reference to the `Ssl` of the stream.",102,[[["self"]],["sslref"]]],[11,"error","","Returns the underlying error which interrupted this…",102,[[["self"]],["error"]]],[11,"into_error","","Consumes `self`, returning its error.",102,[[["self"]],["error"]]],[11,"handshake","","Restarts the handshake process.",102,[[["self"]],["result",["sslstream","handshakeerror"]]]],[11,"ssl_read","","Like `read`, but returns an `ssl::Error` rather than an…",103,N],[11,"ssl_write","","Like `write`, but returns an `ssl::Error` rather than an…",103,N],[11,"shutdown","","Shuts down the session.",103,[[["self"]],["result",["shutdownresult","error"]]]],[11,"get_shutdown","","Returns the session's shutdown state.",103,[[["self"]],["shutdownstate"]]],[11,"set_shutdown","","Sets the session's shutdown state.",103,[[["self"],["shutdownstate"]]]],[11,"get_ref","","Returns a shared reference to the underlying stream.",103,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the underlying stream.",103,[[["self"]],["s"]]],[11,"ssl","","Returns a shared reference to the `Ssl` object associated…",103,[[["self"]],["sslref"]]],[11,"new","","Begin creating an `SslStream` atop `stream`",104,[[["ssl"],["s"]],["self"]]],[11,"set_connect_state","","Configure as an outgoing stream from a client.",104,[[["self"]]]],[11,"set_accept_state","","Configure as an incoming stream to a server.",104,[[["self"]]]],[11,"connect","","See `Ssl::connect`",104,[[["self"]],["result",["sslstream","handshakeerror"]]]],[11,"accept","","See `Ssl::accept`",104,[[["self"]],["result",["sslstream","handshakeerror"]]]],[11,"handshake","","Initiates the handshake.",104,[[["self"]],["result",["sslstream","handshakeerror"]]]],[11,"get_ref","","Returns a shared reference to the underlying stream.",104,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the underlying stream.",104,[[["self"]],["s"]]],[11,"ssl","","Returns a shared reference to the `Ssl` object associated…",104,[[["self"]],["sslref"]]],[18,"SENT","","A close notify message has been sent to the peer.",105,N],[18,"RECEIVED","","A close notify message has been received from the peer.",105,N],[11,"empty","","Returns an empty set of flags.",105,[[],["shutdownstate"]]],[11,"all","","Returns the set containing all flags.",105,[[],["shutdownstate"]]],[11,"bits","","Returns the raw value of the flags currently stored.",105,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",105,[[["c_int"]],["option",["shutdownstate"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",105,[[["c_int"]],["shutdownstate"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",105,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",105,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",105,[[["self"],["shutdownstate"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",105,[[["self"],["shutdownstate"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",105,[[["self"],["shutdownstate"]]]],[11,"remove","","Removes the specified flags in-place.",105,[[["self"],["shutdownstate"]]]],[11,"toggle","","Toggles the specified flags in-place.",105,[[["self"],["shutdownstate"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",105,[[["self"],["shutdownstate"],["bool"]]]],[0,"stack","openssl","",N,N],[3,"Stack","openssl::stack","An owned stack of `T`.",N,N],[3,"IntoIter","","",N,N],[3,"StackRef","","",N,N],[3,"Iter","","An iterator over the stack's contents.",N,N],[3,"IterMut","","A mutable iterator over the stack's contents.",N,N],[8,"Stackable","","Trait implemented by types which can be placed in a stack.",N,N],[16,"StackType","","The C stack type for this element.",106,N],[11,"new","","",107,[[],["result",["stack","errorstack"]]]],[11,"len","","Returns the number of items in the stack",108,[[["self"]],["usize"]]],[11,"iter","","",108,[[["self"]],["iter"]]],[11,"iter_mut","","",108,[[["self"]],["itermut"]]],[11,"get","","Returns a reference to the element at the given index in…",108,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the element at the given…",108,[[["self"],["usize"]],["option"]]],[11,"push","","Pushes a value onto the top of the stack.",108,[[["self"],["t"]],["result",["errorstack"]]]],[11,"pop","","Removes the last element from the stack and returns it.",108,[[["self"]],["option"]]],[0,"string","openssl","",N,N],[3,"OpensslString","openssl::string","",N,N],[3,"OpensslStringRef","","",N,N],[0,"symm","openssl","High level interface to certain symmetric ciphers.",N,N],[3,"Cipher","openssl::symm","Represents a particular cipher algorithm.",N,N],[3,"Crypter","","Represents a symmetric cipher context.",N,N],[4,"Mode","","",N,N],[13,"Encrypt","","",109,N],[13,"Decrypt","","",109,N],[5,"encrypt","","Encrypts data in one go, and returns the encrypted data.",N,N],[5,"decrypt","","Decrypts data in one go, and returns the decrypted data.",N,N],[5,"encrypt_aead","","Like `encrypt`, but for AEAD ciphers such as AES GCM.",N,N],[5,"decrypt_aead","","Like `decrypt`, but for AEAD ciphers such as AES GCM.",N,N],[5,"EVP_CIPHER_iv_length","","",N,N],[5,"EVP_CIPHER_block_size","","",N,N],[5,"EVP_CIPHER_key_length","","",N,N],[11,"from_nid","","Looks up the cipher for a certain nid.",110,[[["nid"]],["option",["cipher"]]]],[11,"aes_128_ecb","","",110,[[],["cipher"]]],[11,"aes_128_cbc","","",110,[[],["cipher"]]],[11,"aes_128_xts","","",110,[[],["cipher"]]],[11,"aes_128_ctr","","",110,[[],["cipher"]]],[11,"aes_128_cfb1","","",110,[[],["cipher"]]],[11,"aes_128_cfb128","","",110,[[],["cipher"]]],[11,"aes_128_cfb8","","",110,[[],["cipher"]]],[11,"aes_128_gcm","","",110,[[],["cipher"]]],[11,"aes_128_ccm","","",110,[[],["cipher"]]],[11,"aes_256_ecb","","",110,[[],["cipher"]]],[11,"aes_256_cbc","","",110,[[],["cipher"]]],[11,"aes_256_xts","","",110,[[],["cipher"]]],[11,"aes_256_ctr","","",110,[[],["cipher"]]],[11,"aes_256_cfb1","","",110,[[],["cipher"]]],[11,"aes_256_cfb128","","",110,[[],["cipher"]]],[11,"aes_256_cfb8","","",110,[[],["cipher"]]],[11,"aes_256_gcm","","",110,[[],["cipher"]]],[11,"aes_256_ccm","","",110,[[],["cipher"]]],[11,"bf_cbc","","",110,[[],["cipher"]]],[11,"bf_ecb","","",110,[[],["cipher"]]],[11,"bf_cfb64","","",110,[[],["cipher"]]],[11,"bf_ofb","","",110,[[],["cipher"]]],[11,"des_cbc","","",110,[[],["cipher"]]],[11,"des_ecb","","",110,[[],["cipher"]]],[11,"des_ede3","","",110,[[],["cipher"]]],[11,"des_ede3_cbc","","",110,[[],["cipher"]]],[11,"rc4","","",110,[[],["cipher"]]],[11,"from_ptr","","",110,N],[11,"as_ptr","","",110,N],[11,"key_len","","Returns the length of keys used with this cipher.",110,[[["self"]],["usize"]]],[11,"iv_len","","Returns the length of the IV used with this cipher, or…",110,[[["self"]],["option",["usize"]]]],[11,"block_size","","Returns the block size of the cipher.",110,[[["self"]],["usize"]]],[11,"new","","Creates a new `Crypter`. The initialisation vector, `iv`,…",111,N],[11,"pad","","Enables or disables padding.",111,[[["self"],["bool"]]]],[11,"set_tag","","Sets the tag used to authenticate ciphertext in AEAD…",111,N],[11,"set_tag_len","","Sets the length of the authentication tag to generate in…",111,[[["self"],["usize"]],["result",["errorstack"]]]],[11,"set_data_len","","Feeds total plaintext length to the cipher.",111,[[["self"],["usize"]],["result",["errorstack"]]]],[11,"aad_update","","Feeds Additional Authenticated Data (AAD) through the…",111,N],[11,"update","","Feeds data from `input` through the cipher, writing…",111,N],[11,"finalize","","Finishes the encryption/decryption process, writing any…",111,N],[11,"get_tag","","Retrieves the authentication tag used to authenticate…",111,N],[0,"version","openssl","",N,N],[5,"number","openssl::version","OPENSSL_VERSION_NUMBER is a numeric release version…",N,[[],["i64"]]],[5,"version","","The text variant of the version number and the release…",N,[[],["str"]]],[5,"c_flags","","The compiler flags set for the compilation process in the…",N,[[],["str"]]],[5,"built_on","","The date of the build process in the form \"built on: ...\"…",N,[[],["str"]]],[5,"platform","","The \"Configure\" target of the library build in the form…",N,[[],["str"]]],[5,"dir","","The \"OPENSSLDIR\" setting of the library build in the form…",N,[[],["str"]]],[0,"x509","openssl","The standard defining the format of public key certificates.",N,N],[3,"X509StoreContext","openssl::x509","An `X509` certificate store context.",N,N],[3,"X509StoreContextRef","","Reference to `X509StoreContext`.",N,N],[3,"X509Builder","","A builder used to construct an `X509`.",N,N],[3,"X509","","An `X509` public key certificate.",N,N],[3,"X509Ref","","Reference to `X509`.",N,N],[3,"X509v3Context","","A context object required to construct certain `X509`…",N,N],[3,"X509Extension","","Permit additional fields to be added to an `X509` v3…",N,N],[3,"X509ExtensionRef","","Reference to `X509Extension`.",N,N],[3,"X509NameBuilder","","A builder used to construct an `X509Name`.",N,N],[3,"X509Name","","The names of an `X509` certificate.",N,N],[3,"X509NameRef","","Reference to `X509Name`.",N,N],[3,"X509NameEntries","","A type to destructure and examine an `X509Name`.",N,N],[3,"X509NameEntry","","A name entry associated with a `X509Name`.",N,N],[3,"X509NameEntryRef","","Reference to `X509NameEntry`.",N,N],[3,"X509ReqBuilder","","A builder used to construct an `X509Req`.",N,N],[3,"X509Req","","An `X509` certificate request.",N,N],[3,"X509ReqRef","","Reference to `X509Req`.",N,N],[3,"X509VerifyResult","","The result of peer certificate verification.",N,N],[3,"GeneralName","","An `X509` certificate alternative names.",N,N],[3,"GeneralNameRef","","Reference to `GeneralName`.",N,N],[3,"X509Algorithm","","An `X509` certificate signature algorithm.",N,N],[3,"X509AlgorithmRef","","Reference to `X509Algorithm`.",N,N],[0,"extension","","Add extensions to an `X509` certificate or certificate…",N,N],[3,"BasicConstraints","openssl::x509::extension","An extension which indicates whether a certificate is a CA…",N,N],[3,"KeyUsage","","An extension consisting of a list of names of the…",N,N],[3,"ExtendedKeyUsage","","An extension consisting of a list of usages indicating…",N,N],[3,"SubjectKeyIdentifier","","An extension that provides a means of identifying…",N,N],[3,"AuthorityKeyIdentifier","","An extension that provides a means of identifying the…",N,N],[3,"SubjectAlternativeName","","An extension that allows additional identities to be bound…",N,N],[11,"new","","Construct a new `BasicConstraints` extension.",112,[[],["basicconstraints"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be…",112,[[["self"]],["basicconstraints"]]],[11,"ca","","Sets the `ca` flag to `true`.",112,[[["self"]],["basicconstraints"]]],[11,"pathlen","","Sets the pathlen to an optional non-negative value. The…",112,[[["self"],["u32"]],["basicconstraints"]]],[11,"build","","Return the `BasicConstraints` extension as an…",112,[[["self"]],["result",["x509extension","errorstack"]]]],[11,"new","","Construct a new `KeyUsage` extension.",113,[[],["keyusage"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be…",113,[[["self"]],["keyusage"]]],[11,"digital_signature","","Sets the `digitalSignature` flag to `true`.",113,[[["self"]],["keyusage"]]],[11,"non_repudiation","","Sets the `nonRepudiation` flag to `true`.",113,[[["self"]],["keyusage"]]],[11,"key_encipherment","","Sets the `keyEncipherment` flag to `true`.",113,[[["self"]],["keyusage"]]],[11,"data_encipherment","","Sets the `dataEncipherment` flag to `true`.",113,[[["self"]],["keyusage"]]],[11,"key_agreement","","Sets the `keyAgreement` flag to `true`.",113,[[["self"]],["keyusage"]]],[11,"key_cert_sign","","Sets the `keyCertSign` flag to `true`.",113,[[["self"]],["keyusage"]]],[11,"crl_sign","","Sets the `cRLSign` flag to `true`.",113,[[["self"]],["keyusage"]]],[11,"encipher_only","","Sets the `encipherOnly` flag to `true`.",113,[[["self"]],["keyusage"]]],[11,"decipher_only","","Sets the `decipherOnly` flag to `true`.",113,[[["self"]],["keyusage"]]],[11,"build","","Return the `KeyUsage` extension as an `X509Extension`.",113,[[["self"]],["result",["x509extension","errorstack"]]]],[11,"new","","Construct a new `ExtendedKeyUsage` extension.",114,[[],["extendedkeyusage"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be…",114,[[["self"]],["extendedkeyusage"]]],[11,"server_auth","","Sets the `serverAuth` flag to `true`.",114,[[["self"]],["extendedkeyusage"]]],[11,"client_auth","","Sets the `clientAuth` flag to `true`.",114,[[["self"]],["extendedkeyusage"]]],[11,"code_signing","","Sets the `codeSigning` flag to `true`.",114,[[["self"]],["extendedkeyusage"]]],[11,"time_stamping","","Sets the `timeStamping` flag to `true`.",114,[[["self"]],["extendedkeyusage"]]],[11,"ms_code_ind","","Sets the `msCodeInd` flag to `true`.",114,[[["self"]],["extendedkeyusage"]]],[11,"ms_code_com","","Sets the `msCodeCom` flag to `true`.",114,[[["self"]],["extendedkeyusage"]]],[11,"ms_ctl_sign","","Sets the `msCTLSign` flag to `true`.",114,[[["self"]],["extendedkeyusage"]]],[11,"ms_sgc","","Sets the `msSGC` flag to `true`.",114,[[["self"]],["extendedkeyusage"]]],[11,"ms_efs","","Sets the `msEFS` flag to `true`.",114,[[["self"]],["extendedkeyusage"]]],[11,"ns_sgc","","Sets the `nsSGC` flag to `true`.",114,[[["self"]],["extendedkeyusage"]]],[11,"other","","Sets a flag not already defined.",114,[[["self"],["str"]],["extendedkeyusage"]]],[11,"build","","Return the `ExtendedKeyUsage` extension as an…",114,[[["self"]],["result",["x509extension","errorstack"]]]],[11,"new","","Construct a new `SubjectKeyIdentifier` extension.",115,[[],["subjectkeyidentifier"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be…",115,[[["self"]],["subjectkeyidentifier"]]],[11,"build","","Return a `SubjectKeyIdentifier` extension as an…",115,[[["self"],["x509v3context"]],["result",["x509extension","errorstack"]]]],[11,"new","","Construct a new `AuthorityKeyIdentifier` extension.",116,[[],["authoritykeyidentifier"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be…",116,[[["self"]],["authoritykeyidentifier"]]],[11,"keyid","","Sets the `keyid` flag.",116,[[["self"],["bool"]],["authoritykeyidentifier"]]],[11,"issuer","","Sets the `issuer` flag.",116,[[["self"],["bool"]],["authoritykeyidentifier"]]],[11,"build","","Return a `AuthorityKeyIdentifier` extension as an…",116,[[["self"],["x509v3context"]],["result",["x509extension","errorstack"]]]],[11,"new","","Construct a new `SubjectAlternativeName` extension.",117,[[],["subjectalternativename"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be…",117,[[["self"]],["subjectalternativename"]]],[11,"email","","Sets the `email` flag.",117,[[["self"],["str"]],["subjectalternativename"]]],[11,"uri","","Sets the `uri` flag.",117,[[["self"],["str"]],["subjectalternativename"]]],[11,"dns","","Sets the `dns` flag.",117,[[["self"],["str"]],["subjectalternativename"]]],[11,"rid","","Sets the `rid` flag.",117,[[["self"],["str"]],["subjectalternativename"]]],[11,"ip","","Sets the `ip` flag.",117,[[["self"],["str"]],["subjectalternativename"]]],[11,"dir_name","","Sets the `dirName` flag.",117,[[["self"],["str"]],["subjectalternativename"]]],[11,"other_name","","Sets the `otherName` flag.",117,[[["self"],["str"]],["subjectalternativename"]]],[11,"build","","Return a `SubjectAlternativeName` extension as an…",117,[[["self"],["x509v3context"]],["result",["x509extension","errorstack"]]]],[0,"store","openssl::x509","Describe a context in which to verify an `X509` certificate.",N,N],[3,"X509StoreBuilder","openssl::x509::store","A builder type used to construct an `X509Store`.",N,N],[3,"X509StoreBuilderRef","","Reference to an `X509StoreBuilder`.",N,N],[3,"X509Store","","A certificate store to hold trusted `X509` certificates.",N,N],[3,"X509StoreRef","","Reference to an `X509Store`.",N,N],[11,"new","","Returns a builder for a certificate store.",118,[[],["result",["x509storebuilder","errorstack"]]]],[11,"build","","Constructs the `X509Store`.",118,[[["self"]],["x509store"]]],[11,"add_cert","","Adds a certificate to the certificate store.",119,[[["self"],["x509"]],["result",["errorstack"]]]],[11,"set_default_paths","","Load certificates from their default locations.",119,[[["self"]],["result",["errorstack"]]]],[11,"ssl_idx","openssl::x509","Returns the index which can be used to obtain a reference…",120,[[],["result",["index","errorstack"]]]],[11,"new","","Creates a new `X509StoreContext` instance.",120,[[],["result",["x509storecontext","errorstack"]]]],[11,"ex_data","","Returns application data pertaining to an `X509` store…",121,[[["self"],["index",["x509storecontext"]]],["option"]]],[11,"error","","Returns the error code of the context.",121,[[["self"]],["x509verifyresult"]]],[11,"init","","Initializes this context with the given certificate,…",121,[[["self"],["x509storeref"],["x509ref"],["stackref"],["f"]],["result",["errorstack"]]]],[11,"verify_cert","","Verifies the stored certificate.",121,[[["self"]],["result",["bool","errorstack"]]]],[11,"set_error","","Set the error code of the context.",121,[[["self"],["x509verifyresult"]]]],[11,"current_cert","","Returns a reference to the certificate which caused the…",121,[[["self"]],["option",["x509ref"]]]],[11,"error_depth","","Returns a non-negative integer representing the depth in…",121,[[["self"]],["u32"]]],[11,"chain","","Returns a reference to a complete valid `X509` certificate…",121,[[["self"]],["option",["stackref"]]]],[11,"new","","Creates a new builder.",122,[[],["result",["x509builder","errorstack"]]]],[11,"set_not_after","","Sets the notAfter constraint on the certificate.",122,[[["self"],["asn1timeref"]],["result",["errorstack"]]]],[11,"set_not_before","","Sets the notBefore constraint on the certificate.",122,[[["self"],["asn1timeref"]],["result",["errorstack"]]]],[11,"set_version","","Sets the version of the certificate.",122,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"set_serial_number","","Sets the serial number of the certificate.",122,[[["self"],["asn1integerref"]],["result",["errorstack"]]]],[11,"set_issuer_name","","Sets the issuer name of the certificate.",122,[[["self"],["x509nameref"]],["result",["errorstack"]]]],[11,"set_subject_name","","Sets the subject name of the certificate.",122,[[["self"],["x509nameref"]],["result",["errorstack"]]]],[11,"set_pubkey","","Sets the public key associated with the certificate.",122,[[["self"],["pkeyref"]],["result",["errorstack"]]]],[11,"x509v3_context","","Returns a context object which is needed to create certain…",122,[[["self"],["option",["x509ref"]],["option",["confref"]]],["x509v3context"]]],[11,"append_extension","","Adds an X509 extension value to the certificate.",122,[[["self"],["x509extension"]],["result",["errorstack"]]]],[11,"sign","","Signs the certificate with a private key.",122,[[["self"],["pkeyref"],["messagedigest"]],["result",["errorstack"]]]],[11,"build","","Consumes the builder, returning the certificate.",122,[[["self"]],["x509"]]],[11,"subject_name","","Returns this certificate's subject name.",123,[[["self"]],["x509nameref"]]],[11,"issuer_name","","Returns this certificate's issuer name.",123,[[["self"]],["x509nameref"]]],[11,"subject_alt_names","","Returns this certificate's subject alternative name…",123,[[["self"]],["option",["stack"]]]],[11,"issuer_alt_names","","Returns this certificate's issuer alternative name…",123,[[["self"]],["option",["stack"]]]],[11,"public_key","","",123,[[["self"]],["result",["pkey","errorstack"]]]],[11,"digest","","Returns a digest of the DER representation of the…",123,[[["self"],["messagedigest"]],["result",["digestbytes","errorstack"]]]],[11,"fingerprint","","",123,[[["self"],["messagedigest"]],["result",["vec","errorstack"]]]],[11,"not_after","","Returns the certificate's Not After validity period.",123,[[["self"]],["asn1timeref"]]],[11,"not_before","","Returns the certificate's Not Before validity period.",123,[[["self"]],["asn1timeref"]]],[11,"signature","","Returns the certificate's signature",123,[[["self"]],["asn1bitstringref"]]],[11,"signature_algorithm","","Returns the certificate's signature algorithm.",123,[[["self"]],["x509algorithmref"]]],[11,"ocsp_responders","","Returns the list of OCSP responder URLs specified in the…",123,[[["self"]],["result",["stack","errorstack"]]]],[11,"issued","","Checks that this certificate issued `subject`.",123,[[["self"],["x509ref"]],["x509verifyresult"]]],[11,"serial_number","","Returns this certificate's serial number.",123,[[["self"]],["asn1integerref"]]],[11,"to_pem","","Serializes the certificate into a PEM-encoded X509…",123,[[["self"]],["result",["vec","errorstack"]]]],[11,"to_der","","Serializes the certificate into a DER-encoded X509…",123,[[["self"]],["result",["vec","errorstack"]]]],[11,"builder","","Returns a new builder.",124,[[],["result",["x509builder","errorstack"]]]],[11,"from_pem","","Deserializes a PEM-encoded X509 structure.",124,N],[11,"from_der","","Deserializes a DER-encoded X509 structure.",124,N],[11,"stack_from_pem","","Deserializes a list of PEM-formatted certificates.",124,N],[11,"as_ptr","","",125,N],[11,"new","","Constructs an X509 extension value. See `man…",126,[[["option",["confref"]],["option",["x509v3context"]],["str"],["str"]],["result",["x509extension","errorstack"]]]],[11,"new_nid","","Constructs an X509 extension value. See `man…",126,[[["option",["confref"]],["option",["x509v3context"]],["nid"],["str"]],["result",["x509extension","errorstack"]]]],[11,"new","","Creates a new builder.",127,[[],["result",["x509namebuilder","errorstack"]]]],[11,"append_entry_by_text","","Add a field entry by str.",127,[[["self"],["str"],["str"]],["result",["errorstack"]]]],[11,"append_entry_by_nid","","Add a field entry by NID.",127,[[["self"],["nid"],["str"]],["result",["errorstack"]]]],[11,"build","","Return an `X509Name`.",127,[[["self"]],["x509name"]]],[11,"builder","","Returns a new builder.",128,[[],["result",["x509namebuilder","errorstack"]]]],[11,"load_client_ca_file","","Loads subject names from a file containing PEM-formatted…",128,[[["p"]],["result",["stack","errorstack"]]]],[11,"entries_by_nid","","Returns the name entries by the nid.",129,[[["self"],["nid"]],["x509nameentries"]]],[11,"entries","","Returns an iterator over all `X509NameEntry` values",129,[[["self"]],["x509nameentries"]]],[11,"data","","Returns the field value of an `X509NameEntry`.",130,[[["self"]],["asn1stringref"]]],[11,"object","","Returns the `Asn1Object` value of an `X509NameEntry`. This…",130,[[["self"]],["asn1objectref"]]],[11,"new","","Returns a builder for a certificate request.",131,[[],["result",["x509reqbuilder","errorstack"]]]],[11,"set_version","","Set the numerical value of the version field.",131,[[["self"],["i32"]],["result",["errorstack"]]]],[11,"set_subject_name","","Set the issuer name.",131,[[["self"],["x509nameref"]],["result",["errorstack"]]]],[11,"set_pubkey","","Set the public key.",131,[[["self"],["pkeyref"]],["result",["errorstack"]]]],[11,"x509v3_context","","Return an `X509v3Context`. This context object can be used…",131,[[["self"],["option",["confref"]]],["x509v3context"]]],[11,"add_extensions","","Permits any number of extension fields to be added to the…",131,[[["self"],["stackref"]],["result",["errorstack"]]]],[11,"sign","","Sign the request using a private key.",131,[[["self"],["pkeyref"],["messagedigest"]],["result",["errorstack"]]]],[11,"build","","Returns the `X509Req`.",131,[[["self"]],["x509req"]]],[11,"builder","","A builder for `X509Req`.",132,[[],["result",["x509reqbuilder","errorstack"]]]],[11,"from_pem","","Deserializes a PEM-encoded PKCS#10 certificate request…",132,N],[11,"from_der","","Deserializes a DER-encoded PKCS#10 certificate request…",132,N],[11,"to_pem","","Serializes the certificate request to a PEM-encoded…",133,[[["self"]],["result",["vec","errorstack"]]]],[11,"to_der","","Serializes the certificate request to a DER-encoded…",133,[[["self"]],["result",["vec","errorstack"]]]],[11,"version","","Returns the numerical value of the version field of the…",133,[[["self"]],["i32"]]],[11,"subject_name","","Returns the subject name of the certificate request.",133,[[["self"]],["x509nameref"]]],[11,"public_key","","Returns the public key of the certificate request.",133,[[["self"]],["result",["pkey","errorstack"]]]],[11,"extensions","","Returns the extensions of the certificate request.",133,[[["self"]],["result",["stack","errorstack"]]]],[11,"from_raw","","Creates an `X509VerifyResult` from a raw error number.",134,[[["c_int"]],["x509verifyresult"]]],[11,"as_raw","","Return the integer representation of an `X509VerifyResult`.",134,[[["self"]],["c_int"]]],[11,"error_string","","Return a human readable error string from the verification…",134,[[["self"]],["str"]]],[18,"OK","","Successful peer certifiate verification.",134,N],[18,"APPLICATION_VERIFICATION","","Application verification failure.",134,N],[11,"email","","Returns the contents of this `GeneralName` if it is an…",135,[[["self"]],["option",["str"]]]],[11,"dnsname","","Returns the contents of this `GeneralName` if it is a…",135,[[["self"]],["option",["str"]]]],[11,"uri","","Returns the contents of this `GeneralName` if it is an…",135,[[["self"]],["option",["str"]]]],[11,"ipaddress","","Returns the contents of this `GeneralName` if it is an…",135,[[["self"]],["option"]]],[11,"object","","Returns the ASN.1 OID of this algorithm.",136,[[["self"]],["asn1objectref"]]],[11,"from","openssl::aes","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","openssl::asn1","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"to_string","","",139,[[["self"]],["string"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",140,[[["self"]],["string"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","openssl::bn","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","openssl::cms","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","openssl::conf","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"from","openssl::derive","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","openssl::dh","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","openssl::dsa","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","openssl::ec","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","openssl::ecdsa","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"to_string","openssl::error","",30,[[["self"]],["string"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","openssl::ex_data","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","openssl::hash","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"from","openssl::nid","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","openssl::ocsp","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"from","openssl::pkcs12","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","openssl::pkcs5","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","openssl::pkcs7","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","openssl::pkey","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"from","openssl::rsa","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","openssl::sha","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","openssl::sign","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","openssl::srtp","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","openssl::ssl","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"to_string","","",82,[[["self"]],["string"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"to_string","","",74,[[["self"]],["string"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_iter","openssl::stack","",107,[[["self"]],["i"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"into_iter","","",157,[[["self"]],["i"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"into_iter","","",158,[[["self"]],["i"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"into_iter","","",159,[[["self"]],["i"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"to_string","openssl::string","",160,[[["self"]],["string"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"to_string","","",161,[[["self"]],["string"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"from","openssl::symm","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","openssl::x509","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"into_iter","","",163,[[["self"]],["i"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"to_string","","",134,[[["self"]],["string"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","openssl::x509::extension","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","openssl::x509::store","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"next","openssl::stack","",157,[[["self"]],["option"]]],[11,"size_hint","","",157,N],[11,"next","","",158,[[["self"]],["option"]]],[11,"size_hint","","",158,N],[11,"next","","",159,[[["self"]],["option"]]],[11,"size_hint","","",159,N],[11,"next","openssl::x509","",163,[[["self"]],["option",["x509nameentryref"]]]],[11,"eq","openssl::bn","",8,[[["self"],["bignumref"]],["bool"]]],[11,"eq","","",8,[[["self"],["bignum"]],["bool"]]],[11,"eq","","",9,[[["self"],["bignum"]],["bool"]]],[11,"eq","","",9,[[["self"],["bignumref"]],["bool"]]],[11,"eq","openssl::cms","",10,[[["self"],["cmsoptions"]],["bool"]]],[11,"ne","","",10,[[["self"],["cmsoptions"]],["bool"]]],[11,"eq","openssl::nid","",36,[[["self"],["nid"]],["bool"]]],[11,"ne","","",36,[[["self"],["nid"]],["bool"]]],[11,"eq","openssl::ocsp","",38,[[["self"],["ocspflag"]],["bool"]]],[11,"ne","","",38,[[["self"],["ocspflag"]],["bool"]]],[11,"eq","","",39,[[["self"],["ocspresponsestatus"]],["bool"]]],[11,"ne","","",39,[[["self"],["ocspresponsestatus"]],["bool"]]],[11,"eq","","",40,[[["self"],["ocspcertstatus"]],["bool"]]],[11,"ne","","",40,[[["self"],["ocspcertstatus"]],["bool"]]],[11,"eq","","",41,[[["self"],["ocsprevokedstatus"]],["bool"]]],[11,"ne","","",41,[[["self"],["ocsprevokedstatus"]],["bool"]]],[11,"eq","openssl::pkcs5","",52,[[["self"],["keyivpair"]],["bool"]]],[11,"ne","","",52,[[["self"],["keyivpair"]],["bool"]]],[11,"eq","openssl::pkcs7","",53,[[["self"],["pkcs7flags"]],["bool"]]],[11,"ne","","",53,[[["self"],["pkcs7flags"]],["bool"]]],[11,"eq","openssl::pkey","",56,[[["self"],["id"]],["bool"]]],[11,"ne","","",56,[[["self"],["id"]],["bool"]]],[11,"eq","openssl::rsa","",59,[[["self"],["padding"]],["bool"]]],[11,"ne","","",59,[[["self"],["padding"]],["bool"]]],[11,"eq","openssl::srtp","",72,[[["self"],["srtpprofileid"]],["bool"]]],[11,"ne","","",72,[[["self"],["srtpprofileid"]],["bool"]]],[11,"eq","openssl::ssl","",81,[[["self"],["errorcode"]],["bool"]]],[11,"ne","","",81,[[["self"],["errorcode"]],["bool"]]],[11,"eq","","",83,[[["self"],["ssloptions"]],["bool"]]],[11,"ne","","",83,[[["self"],["ssloptions"]],["bool"]]],[11,"eq","","",84,[[["self"],["sslmode"]],["bool"]]],[11,"ne","","",84,[[["self"],["sslmode"]],["bool"]]],[11,"eq","","",86,[[["self"],["sslverifymode"]],["bool"]]],[11,"ne","","",86,[[["self"],["sslverifymode"]],["bool"]]],[11,"eq","","",87,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"ne","","",87,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"eq","","",91,[[["self"],["snierror"]],["bool"]]],[11,"ne","","",91,[[["self"],["snierror"]],["bool"]]],[11,"eq","","",92,[[["self"],["sslalert"]],["bool"]]],[11,"ne","","",92,[[["self"],["sslalert"]],["bool"]]],[11,"eq","","",93,[[["self"],["sslversion"]],["bool"]]],[11,"ne","","",93,[[["self"],["sslversion"]],["bool"]]],[11,"eq","","",75,[[["self"],["shutdownresult"]],["bool"]]],[11,"eq","","",105,[[["self"],["shutdownstate"]],["bool"]]],[11,"ne","","",105,[[["self"],["shutdownstate"]],["bool"]]],[11,"eq","openssl::symm","",110,[[["self"],["cipher"]],["bool"]]],[11,"ne","","",110,[[["self"],["cipher"]],["bool"]]],[11,"eq","openssl::x509","",134,[[["self"],["x509verifyresult"]],["bool"]]],[11,"ne","","",134,[[["self"],["x509verifyresult"]],["bool"]]],[11,"as_ref","openssl::asn1","",138,[[["self"]],["asn1generalizedtimeref"]]],[11,"as_ref","","",1,[[["self"]],["asn1timeref"]]],[11,"as_ref","","",141,[[["self"]],["asn1stringref"]]],[11,"as_ref","","",142,[[["self"]],["asn1integerref"]]],[11,"as_ref","","",143,[[["self"]],["asn1bitstringref"]]],[11,"as_ref","","",144,[[["self"]],["asn1objectref"]]],[11,"as_ref","openssl::bn","",7,[[["self"]],["bignumcontextref"]]],[11,"as_ref","","",9,[[["self"]],["bignumref"]]],[11,"as_ref","openssl::cms","",12,[[["self"]],["cmscontentinforef"]]],[11,"as_ref","openssl::conf","",14,[[["self"]],["confref"]]],[11,"as_ref","openssl::dh","",17,[[["self"]],["dhref"]]],[11,"as_ref","openssl::dsa","",19,[[["self"]],["dsaref"]]],[11,"as_ref","openssl::ec","",22,[[["self"]],["ecgroupref"]]],[11,"as_ref","","",25,[[["self"]],["ecpointref"]]],[11,"as_ref","","",27,[[["self"]],["eckeyref"]]],[11,"as_ref","openssl::ecdsa","",28,[[["self"]],["ecdsasigref"]]],[11,"as_ref","openssl::hash","",147,N],[11,"as_ref","openssl::ocsp","",148,[[["self"]],["ocspbasicresponseref"]]],[11,"as_ref","","",43,[[["self"]],["ocspcertidref"]]],[11,"as_ref","","",44,[[["self"]],["ocspresponseref"]]],[11,"as_ref","","",46,[[["self"]],["ocsprequestref"]]],[11,"as_ref","","",150,[[["self"]],["ocsponereqref"]]],[11,"as_ref","openssl::pkcs12","",50,[[["self"]],["pkcs12ref"]]],[11,"as_ref","openssl::pkcs7","",54,[[["self"]],["pkcs7ref"]]],[11,"as_ref","openssl::pkey","",58,[[["self"]],["pkeyref"]]],[11,"as_ref","openssl::rsa","",61,[[["self"]],["rsaref"]]],[11,"as_ref","openssl::srtp","",155,[[["self"]],["srtpprotectionprofileref"]]],[11,"as_ref","openssl::ssl","",95,[[["self"]],["sslcontextref"]]],[11,"as_ref","","",98,[[["self"]],["sslsessionref"]]],[11,"as_ref","","",100,[[["self"]],["sslref"]]],[11,"as_ref","openssl::stack","",107,[[["self"]],["stackref"]]],[11,"as_ref","openssl::string","",160,[[["self"]],["opensslstringref"]]],[11,"as_ref","openssl::x509::store","",118,[[["self"]],["x509storebuilderref"]]],[11,"as_ref","","",167,[[["self"]],["x509storeref"]]],[11,"as_ref","openssl::x509","",120,[[["self"]],["x509storecontextref"]]],[11,"as_ref","","",124,[[["self"]],["x509ref"]]],[11,"as_ref","","",123,[[["self"]],["x509ref"]]],[11,"as_ref","","",126,[[["self"]],["x509extensionref"]]],[11,"as_ref","","",128,[[["self"]],["x509nameref"]]],[11,"as_ref","","",164,[[["self"]],["x509nameentryref"]]],[11,"as_ref","","",132,[[["self"]],["x509reqref"]]],[11,"as_ref","","",165,[[["self"]],["generalnameref"]]],[11,"as_ref","","",166,[[["self"]],["x509algorithmref"]]],[11,"into_iter","openssl::stack","",107,[[["self"]],["intoiter"]]],[11,"cmp","openssl::bn","",8,[[["self"],["bignumref"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["bignum"]],["ordering"]]],[11,"cmp","openssl::cms","",10,[[["self"],["cmsoptions"]],["ordering"]]],[11,"cmp","openssl::ocsp","",38,[[["self"],["ocspflag"]],["ordering"]]],[11,"cmp","openssl::pkcs7","",53,[[["self"],["pkcs7flags"]],["ordering"]]],[11,"cmp","openssl::ssl","",83,[[["self"],["ssloptions"]],["ordering"]]],[11,"cmp","","",84,[[["self"],["sslmode"]],["ordering"]]],[11,"cmp","","",86,[[["self"],["sslverifymode"]],["ordering"]]],[11,"cmp","","",87,[[["self"],["sslsessioncachemode"]],["ordering"]]],[11,"cmp","","",105,[[["self"],["shutdownstate"]],["ordering"]]],[11,"clone","openssl::cms","",10,[[["self"]],["cmsoptions"]]],[11,"clone","openssl::ec","",20,[[["self"]],["pointconversionform"]]],[11,"clone","","",21,[[["self"]],["asn1flag"]]],[11,"clone","","",27,[[["self"]],["eckey"]]],[11,"clone","openssl::error","",30,[[["self"]],["errorstack"]]],[11,"clone","","",31,[[["self"]],["error"]]],[11,"clone","openssl::ex_data","",32,[[["self"]],["index"]]],[11,"clone","openssl::hash","",33,[[["self"]],["messagedigest"]]],[11,"clone","","",34,[[["self"]],["hasher"]]],[11,"clone","","",147,[[["self"]],["digestbytes"]]],[11,"clone","openssl::nid","",36,[[["self"]],["nid"]]],[11,"clone","openssl::ocsp","",38,[[["self"]],["ocspflag"]]],[11,"clone","","",39,[[["self"]],["ocspresponsestatus"]]],[11,"clone","","",40,[[["self"]],["ocspcertstatus"]]],[11,"clone","","",41,[[["self"]],["ocsprevokedstatus"]]],[11,"clone","openssl::pkcs5","",52,[[["self"]],["keyivpair"]]],[11,"clone","openssl::pkcs7","",53,[[["self"]],["pkcs7flags"]]],[11,"clone","openssl::pkey","",56,[[["self"]],["id"]]],[11,"clone","openssl::rsa","",59,[[["self"]],["padding"]]],[11,"clone","","",61,[[["self"]],["rsa"]]],[11,"clone","openssl::srtp","",72,[[["self"]],["srtpprofileid"]]],[11,"clone","openssl::ssl","",76,[[["self"]],["sslconnector"]]],[11,"clone","","",79,[[["self"]],["sslacceptor"]]],[11,"clone","","",81,[[["self"]],["errorcode"]]],[11,"clone","","",83,[[["self"]],["ssloptions"]]],[11,"clone","","",84,[[["self"]],["sslmode"]]],[11,"clone","","",85,[[["self"]],["sslmethod"]]],[11,"clone","","",86,[[["self"]],["sslverifymode"]]],[11,"clone","","",87,[[["self"]],["sslsessioncachemode"]]],[11,"clone","","",88,[[["self"]],["sslfiletype"]]],[11,"clone","","",89,[[["self"]],["statustype"]]],[11,"clone","","",90,[[["self"]],["nametype"]]],[11,"clone","","",91,[[["self"]],["snierror"]]],[11,"clone","","",92,[[["self"]],["sslalert"]]],[11,"clone","","",93,[[["self"]],["sslversion"]]],[11,"clone","","",95,[[["self"]],["self"]]],[11,"clone","","",98,[[["self"]],["sslsession"]]],[11,"clone","","",75,[[["self"]],["shutdownresult"]]],[11,"clone","","",105,[[["self"]],["shutdownstate"]]],[11,"clone","openssl::symm","",109,[[["self"]],["mode"]]],[11,"clone","","",110,[[["self"]],["cipher"]]],[11,"clone","openssl::x509","",124,[[["self"]],["x509"]]],[11,"clone","","",134,[[["self"]],["x509verifyresult"]]],[11,"extend","openssl::cms","",10,[[["self"],["t"]]]],[11,"extend","openssl::ocsp","",38,[[["self"],["t"]]]],[11,"extend","openssl::pkcs7","",53,[[["self"],["t"]]]],[11,"extend","openssl::ssl","",83,[[["self"],["t"]]]],[11,"extend","","",84,[[["self"],["t"]]]],[11,"extend","","",86,[[["self"],["t"]]]],[11,"extend","","",87,[[["self"],["t"]]]],[11,"extend","","",105,[[["self"],["t"]]]],[11,"from","","",82,[[["errorstack"]],["error"]]],[11,"from","","",74,[[["errorstack"]],["handshakeerror"]]],[11,"drop","openssl::asn1","",138,[[["self"]]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",141,[[["self"]]]],[11,"drop","","",142,[[["self"]]]],[11,"drop","","",143,[[["self"]]]],[11,"drop","","",144,[[["self"]]]],[11,"drop","openssl::bn","",7,[[["self"]]]],[11,"drop","","",9,[[["self"]]]],[11,"drop","openssl::cms","",12,[[["self"]]]],[11,"drop","openssl::conf","",14,[[["self"]]]],[11,"drop","openssl::dh","",17,[[["self"]]]],[11,"drop","openssl::dsa","",19,[[["self"]]]],[11,"drop","openssl::ec","",22,[[["self"]]]],[11,"drop","","",25,[[["self"]]]],[11,"drop","","",27,[[["self"]]]],[11,"drop","openssl::ecdsa","",28,[[["self"]]]],[11,"drop","openssl::hash","",34,[[["self"]]]],[11,"drop","openssl::ocsp","",148,[[["self"]]]],[11,"drop","","",43,[[["self"]]]],[11,"drop","","",44,[[["self"]]]],[11,"drop","","",46,[[["self"]]]],[11,"drop","","",150,[[["self"]]]],[11,"drop","openssl::pkcs12","",50,[[["self"]]]],[11,"drop","openssl::pkcs7","",54,[[["self"]]]],[11,"drop","openssl::pkey","",58,[[["self"]]]],[11,"drop","openssl::rsa","",61,[[["self"]]]],[11,"drop","openssl::sign","",69,[[["self"]]]],[11,"drop","","",70,[[["self"]]]],[11,"drop","openssl::srtp","",155,[[["self"]]]],[11,"drop","openssl::ssl","",95,[[["self"]]]],[11,"drop","","",98,[[["self"]]]],[11,"drop","","",100,[[["self"]]]],[11,"drop","","",103,[[["self"]]]],[11,"drop","openssl::stack","",107,[[["self"]]]],[11,"drop","","",157,[[["self"]]]],[11,"drop","openssl::string","",160,[[["self"]]]],[11,"drop","openssl::symm","",111,[[["self"]]]],[11,"drop","openssl::x509::store","",118,[[["self"]]]],[11,"drop","","",167,[[["self"]]]],[11,"drop","openssl::x509","",120,[[["self"]]]],[11,"drop","","",124,[[["self"]]]],[11,"drop","","",126,[[["self"]]]],[11,"drop","","",128,[[["self"]]]],[11,"drop","","",164,[[["self"]]]],[11,"drop","","",132,[[["self"]]]],[11,"drop","","",165,[[["self"]]]],[11,"drop","","",166,[[["self"]]]],[11,"to_owned","openssl::ec","",26,[[["self"]],["eckey"]]],[11,"to_owned","openssl::rsa","",60,[[["self"]],["rsa"]]],[11,"to_owned","openssl::ssl","",99,[[["self"]],["sslsession"]]],[11,"to_owned","openssl::x509","",123,[[["self"]],["x509"]]],[11,"partial_cmp","openssl::bn","",8,[[["self"],["bignumref"]],["option",["ordering"]]]],[11,"partial_cmp","","",8,[[["self"],["bignum"]],["option",["ordering"]]]],[11,"partial_cmp","","",9,[[["self"],["bignum"]],["option",["ordering"]]]],[11,"partial_cmp","","",9,[[["self"],["bignumref"]],["option",["ordering"]]]],[11,"partial_cmp","openssl::cms","",10,[[["self"],["cmsoptions"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["cmsoptions"]],["bool"]]],[11,"le","","",10,[[["self"],["cmsoptions"]],["bool"]]],[11,"gt","","",10,[[["self"],["cmsoptions"]],["bool"]]],[11,"ge","","",10,[[["self"],["cmsoptions"]],["bool"]]],[11,"partial_cmp","openssl::ocsp","",38,[[["self"],["ocspflag"]],["option",["ordering"]]]],[11,"lt","","",38,[[["self"],["ocspflag"]],["bool"]]],[11,"le","","",38,[[["self"],["ocspflag"]],["bool"]]],[11,"gt","","",38,[[["self"],["ocspflag"]],["bool"]]],[11,"ge","","",38,[[["self"],["ocspflag"]],["bool"]]],[11,"partial_cmp","openssl::pkcs7","",53,[[["self"],["pkcs7flags"]],["option",["ordering"]]]],[11,"lt","","",53,[[["self"],["pkcs7flags"]],["bool"]]],[11,"le","","",53,[[["self"],["pkcs7flags"]],["bool"]]],[11,"gt","","",53,[[["self"],["pkcs7flags"]],["bool"]]],[11,"ge","","",53,[[["self"],["pkcs7flags"]],["bool"]]],[11,"partial_cmp","openssl::ssl","",83,[[["self"],["ssloptions"]],["option",["ordering"]]]],[11,"lt","","",83,[[["self"],["ssloptions"]],["bool"]]],[11,"le","","",83,[[["self"],["ssloptions"]],["bool"]]],[11,"gt","","",83,[[["self"],["ssloptions"]],["bool"]]],[11,"ge","","",83,[[["self"],["ssloptions"]],["bool"]]],[11,"partial_cmp","","",84,[[["self"],["sslmode"]],["option",["ordering"]]]],[11,"lt","","",84,[[["self"],["sslmode"]],["bool"]]],[11,"le","","",84,[[["self"],["sslmode"]],["bool"]]],[11,"gt","","",84,[[["self"],["sslmode"]],["bool"]]],[11,"ge","","",84,[[["self"],["sslmode"]],["bool"]]],[11,"partial_cmp","","",86,[[["self"],["sslverifymode"]],["option",["ordering"]]]],[11,"lt","","",86,[[["self"],["sslverifymode"]],["bool"]]],[11,"le","","",86,[[["self"],["sslverifymode"]],["bool"]]],[11,"gt","","",86,[[["self"],["sslverifymode"]],["bool"]]],[11,"ge","","",86,[[["self"],["sslverifymode"]],["bool"]]],[11,"partial_cmp","","",87,[[["self"],["sslsessioncachemode"]],["option",["ordering"]]]],[11,"lt","","",87,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"le","","",87,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"gt","","",87,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"ge","","",87,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"partial_cmp","","",105,[[["self"],["shutdownstate"]],["option",["ordering"]]]],[11,"lt","","",105,[[["self"],["shutdownstate"]],["bool"]]],[11,"le","","",105,[[["self"],["shutdownstate"]],["bool"]]],[11,"gt","","",105,[[["self"],["shutdownstate"]],["bool"]]],[11,"ge","","",105,[[["self"],["shutdownstate"]],["bool"]]],[11,"fmt","openssl::cms","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ocsp","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkcs7","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ssl","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::aes","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::bn","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::cms","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::dsa","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::error","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::hash","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::nid","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ocsp","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkcs5","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkcs7","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkey","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::rsa","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::srtp","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ssl","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::string","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::x509","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::asn1","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::bn","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::error","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ssl","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::string","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::x509","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::cms","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ocsp","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkcs7","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ssl","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::cms","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ocsp","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkcs7","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ssl","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::cms","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ocsp","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkcs7","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ssl","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","openssl::asn1","",138,[[["self"]],["asn1generalizedtimeref"]]],[11,"deref_mut","","",1,[[["self"]],["asn1timeref"]]],[11,"deref_mut","","",141,[[["self"]],["asn1stringref"]]],[11,"deref_mut","","",142,[[["self"]],["asn1integerref"]]],[11,"deref_mut","","",143,[[["self"]],["asn1bitstringref"]]],[11,"deref_mut","","",144,[[["self"]],["asn1objectref"]]],[11,"deref_mut","openssl::bn","",7,[[["self"]],["bignumcontextref"]]],[11,"deref_mut","","",9,[[["self"]],["bignumref"]]],[11,"deref_mut","openssl::cms","",12,[[["self"]],["cmscontentinforef"]]],[11,"deref_mut","openssl::conf","",14,[[["self"]],["confref"]]],[11,"deref_mut","openssl::dh","",17,[[["self"]],["dhref"]]],[11,"deref_mut","openssl::dsa","",19,[[["self"]],["dsaref"]]],[11,"deref_mut","openssl::ec","",22,[[["self"]],["ecgroupref"]]],[11,"deref_mut","","",25,[[["self"]],["ecpointref"]]],[11,"deref_mut","","",27,[[["self"]],["eckeyref"]]],[11,"deref_mut","openssl::ecdsa","",28,[[["self"]],["ecdsasigref"]]],[11,"deref_mut","openssl::hash","",147,N],[11,"deref_mut","openssl::ocsp","",148,[[["self"]],["ocspbasicresponseref"]]],[11,"deref_mut","","",43,[[["self"]],["ocspcertidref"]]],[11,"deref_mut","","",44,[[["self"]],["ocspresponseref"]]],[11,"deref_mut","","",46,[[["self"]],["ocsprequestref"]]],[11,"deref_mut","","",150,[[["self"]],["ocsponereqref"]]],[11,"deref_mut","openssl::pkcs12","",50,[[["self"]],["pkcs12ref"]]],[11,"deref_mut","openssl::pkcs7","",54,[[["self"]],["pkcs7ref"]]],[11,"deref_mut","openssl::pkey","",58,[[["self"]],["pkeyref"]]],[11,"deref_mut","openssl::rsa","",61,[[["self"]],["rsaref"]]],[11,"deref_mut","openssl::srtp","",155,[[["self"]],["srtpprotectionprofileref"]]],[11,"deref_mut","openssl::ssl","",77,[[["self"]],["sslcontextbuilder"]]],[11,"deref_mut","","",78,[[["self"]],["sslref"]]],[11,"deref_mut","","",80,[[["self"]],["sslcontextbuilder"]]],[11,"deref_mut","","",95,[[["self"]],["sslcontextref"]]],[11,"deref_mut","","",156,[[["self"]],["sslcipherref"]]],[11,"deref_mut","","",98,[[["self"]],["sslsessionref"]]],[11,"deref_mut","","",100,[[["self"]],["sslref"]]],[11,"deref_mut","openssl::stack","",107,[[["self"]],["stackref"]]],[11,"deref_mut","openssl::string","",160,[[["self"]],["opensslstringref"]]],[11,"deref_mut","openssl::x509::store","",118,[[["self"]],["x509storebuilderref"]]],[11,"deref_mut","","",167,[[["self"]],["x509storeref"]]],[11,"deref_mut","openssl::x509","",120,[[["self"]],["x509storecontextref"]]],[11,"deref_mut","","",124,[[["self"]],["x509ref"]]],[11,"deref_mut","","",126,[[["self"]],["x509extensionref"]]],[11,"deref_mut","","",128,[[["self"]],["x509nameref"]]],[11,"deref_mut","","",164,[[["self"]],["x509nameentryref"]]],[11,"deref_mut","","",132,[[["self"]],["x509reqref"]]],[11,"deref_mut","","",165,[[["self"]],["generalnameref"]]],[11,"deref_mut","","",166,[[["self"]],["x509algorithmref"]]],[11,"hash","openssl::cms","",10,N],[11,"hash","openssl::nid","",36,N],[11,"hash","openssl::ocsp","",38,N],[11,"hash","openssl::pkcs5","",52,N],[11,"hash","openssl::pkcs7","",53,N],[11,"hash","openssl::ssl","",83,N],[11,"hash","","",84,N],[11,"hash","","",86,N],[11,"hash","","",87,N],[11,"hash","","",105,N],[11,"sub","openssl::cms","Returns the set difference of the two sets of flags.",10,[[["self"],["cmsoptions"]],["cmsoptions"]]],[11,"sub","openssl::ocsp","Returns the set difference of the two sets of flags.",38,[[["self"],["ocspflag"]],["ocspflag"]]],[11,"sub","openssl::pkcs7","Returns the set difference of the two sets of flags.",53,[[["self"],["pkcs7flags"]],["pkcs7flags"]]],[11,"sub","openssl::ssl","Returns the set difference of the two sets of flags.",83,[[["self"],["ssloptions"]],["ssloptions"]]],[11,"sub","","Returns the set difference of the two sets of flags.",84,[[["self"],["sslmode"]],["sslmode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",86,[[["self"],["sslverifymode"]],["sslverifymode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",87,[[["self"],["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",105,[[["self"],["shutdownstate"]],["shutdownstate"]]],[11,"neg","openssl::bn","",9,[[["self"]],["bignum"]]],[11,"sub_assign","openssl::cms","Disables all flags enabled in the set.",10,[[["self"],["cmsoptions"]]]],[11,"sub_assign","openssl::ocsp","Disables all flags enabled in the set.",38,[[["self"],["ocspflag"]]]],[11,"sub_assign","openssl::pkcs7","Disables all flags enabled in the set.",53,[[["self"],["pkcs7flags"]]]],[11,"sub_assign","openssl::ssl","Disables all flags enabled in the set.",83,[[["self"],["ssloptions"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",84,[[["self"],["sslmode"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",86,[[["self"],["sslverifymode"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",87,[[["self"],["sslsessioncachemode"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",105,[[["self"],["shutdownstate"]]]],[11,"not","openssl::cms","Returns the complement of this set of flags.",10,[[["self"]],["cmsoptions"]]],[11,"not","openssl::ocsp","Returns the complement of this set of flags.",38,[[["self"]],["ocspflag"]]],[11,"not","openssl::pkcs7","Returns the complement of this set of flags.",53,[[["self"]],["pkcs7flags"]]],[11,"not","openssl::ssl","Returns the complement of this set of flags.",83,[[["self"]],["ssloptions"]]],[11,"not","","Returns the complement of this set of flags.",84,[[["self"]],["sslmode"]]],[11,"not","","Returns the complement of this set of flags.",86,[[["self"]],["sslverifymode"]]],[11,"not","","Returns the complement of this set of flags.",87,[[["self"]],["sslsessioncachemode"]]],[11,"not","","Returns the complement of this set of flags.",105,[[["self"]],["shutdownstate"]]],[11,"bitand","openssl::cms","Returns the intersection between the two sets of flags.",10,[[["self"],["cmsoptions"]],["cmsoptions"]]],[11,"bitand","openssl::ocsp","Returns the intersection between the two sets of flags.",38,[[["self"],["ocspflag"]],["ocspflag"]]],[11,"bitand","openssl::pkcs7","Returns the intersection between the two sets of flags.",53,[[["self"],["pkcs7flags"]],["pkcs7flags"]]],[11,"bitand","openssl::ssl","Returns the intersection between the two sets of flags.",83,[[["self"],["ssloptions"]],["ssloptions"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",84,[[["self"],["sslmode"]],["sslmode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",86,[[["self"],["sslverifymode"]],["sslverifymode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",87,[[["self"],["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",105,[[["self"],["shutdownstate"]],["shutdownstate"]]],[11,"bitor","openssl::cms","Returns the union of the two sets of flags.",10,[[["self"],["cmsoptions"]],["cmsoptions"]]],[11,"bitor","openssl::ocsp","Returns the union of the two sets of flags.",38,[[["self"],["ocspflag"]],["ocspflag"]]],[11,"bitor","openssl::pkcs7","Returns the union of the two sets of flags.",53,[[["self"],["pkcs7flags"]],["pkcs7flags"]]],[11,"bitor","openssl::ssl","Returns the union of the two sets of flags.",83,[[["self"],["ssloptions"]],["ssloptions"]]],[11,"bitor","","Returns the union of the two sets of flags.",84,[[["self"],["sslmode"]],["sslmode"]]],[11,"bitor","","Returns the union of the two sets of flags.",86,[[["self"],["sslverifymode"]],["sslverifymode"]]],[11,"bitor","","Returns the union of the two sets of flags.",87,[[["self"],["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"bitor","","Returns the union of the two sets of flags.",105,[[["self"],["shutdownstate"]],["shutdownstate"]]],[11,"bitxor","openssl::cms","Returns the left flags, but with all the right flags…",10,[[["self"],["cmsoptions"]],["cmsoptions"]]],[11,"bitxor","openssl::ocsp","Returns the left flags, but with all the right flags…",38,[[["self"],["ocspflag"]],["ocspflag"]]],[11,"bitxor","openssl::pkcs7","Returns the left flags, but with all the right flags…",53,[[["self"],["pkcs7flags"]],["pkcs7flags"]]],[11,"bitxor","openssl::ssl","Returns the left flags, but with all the right flags…",83,[[["self"],["ssloptions"]],["ssloptions"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",84,[[["self"],["sslmode"]],["sslmode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",86,[[["self"],["sslverifymode"]],["sslverifymode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",87,[[["self"],["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",105,[[["self"],["shutdownstate"]],["shutdownstate"]]],[11,"bitand_assign","openssl::cms","Disables all flags disabled in the set.",10,[[["self"],["cmsoptions"]]]],[11,"bitand_assign","openssl::ocsp","Disables all flags disabled in the set.",38,[[["self"],["ocspflag"]]]],[11,"bitand_assign","openssl::pkcs7","Disables all flags disabled in the set.",53,[[["self"],["pkcs7flags"]]]],[11,"bitand_assign","openssl::ssl","Disables all flags disabled in the set.",83,[[["self"],["ssloptions"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",84,[[["self"],["sslmode"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",86,[[["self"],["sslverifymode"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",87,[[["self"],["sslsessioncachemode"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",105,[[["self"],["shutdownstate"]]]],[11,"bitor_assign","openssl::cms","Adds the set of flags.",10,[[["self"],["cmsoptions"]]]],[11,"bitor_assign","openssl::ocsp","Adds the set of flags.",38,[[["self"],["ocspflag"]]]],[11,"bitor_assign","openssl::pkcs7","Adds the set of flags.",53,[[["self"],["pkcs7flags"]]]],[11,"bitor_assign","openssl::ssl","Adds the set of flags.",83,[[["self"],["ssloptions"]]]],[11,"bitor_assign","","Adds the set of flags.",84,[[["self"],["sslmode"]]]],[11,"bitor_assign","","Adds the set of flags.",86,[[["self"],["sslverifymode"]]]],[11,"bitor_assign","","Adds the set of flags.",87,[[["self"],["sslsessioncachemode"]]]],[11,"bitor_assign","","Adds the set of flags.",105,[[["self"],["shutdownstate"]]]],[11,"bitxor_assign","openssl::cms","Toggles the set of flags.",10,[[["self"],["cmsoptions"]]]],[11,"bitxor_assign","openssl::ocsp","Toggles the set of flags.",38,[[["self"],["ocspflag"]]]],[11,"bitxor_assign","openssl::pkcs7","Toggles the set of flags.",53,[[["self"],["pkcs7flags"]]]],[11,"bitxor_assign","openssl::ssl","Toggles the set of flags.",83,[[["self"],["ssloptions"]]]],[11,"bitxor_assign","","Toggles the set of flags.",84,[[["self"],["sslmode"]]]],[11,"bitxor_assign","","Toggles the set of flags.",86,[[["self"],["sslverifymode"]]]],[11,"bitxor_assign","","Toggles the set of flags.",87,[[["self"],["sslsessioncachemode"]]]],[11,"bitxor_assign","","Toggles the set of flags.",105,[[["self"],["shutdownstate"]]]],[11,"deref","openssl::asn1","",138,[[["self"]],["asn1generalizedtimeref"]]],[11,"deref","","",1,[[["self"]],["asn1timeref"]]],[11,"deref","","",141,[[["self"]],["asn1stringref"]]],[11,"deref","","",142,[[["self"]],["asn1integerref"]]],[11,"deref","","",143,[[["self"]],["asn1bitstringref"]]],[11,"deref","","",144,[[["self"]],["asn1objectref"]]],[11,"deref","openssl::bn","",7,[[["self"]],["bignumcontextref"]]],[11,"deref","","",9,[[["self"]],["bignumref"]]],[11,"deref","openssl::cms","",12,[[["self"]],["cmscontentinforef"]]],[11,"deref","openssl::conf","",14,[[["self"]],["confref"]]],[11,"deref","openssl::dh","",17,[[["self"]],["dhref"]]],[11,"deref","openssl::dsa","",19,[[["self"]],["dsaref"]]],[11,"deref","openssl::ec","",22,[[["self"]],["ecgroupref"]]],[11,"deref","","",25,[[["self"]],["ecpointref"]]],[11,"deref","","",27,[[["self"]],["eckeyref"]]],[11,"deref","openssl::ecdsa","",28,[[["self"]],["ecdsasigref"]]],[11,"deref","openssl::hash","",147,N],[11,"deref","openssl::ocsp","",148,[[["self"]],["ocspbasicresponseref"]]],[11,"deref","","",43,[[["self"]],["ocspcertidref"]]],[11,"deref","","",44,[[["self"]],["ocspresponseref"]]],[11,"deref","","",46,[[["self"]],["ocsprequestref"]]],[11,"deref","","",150,[[["self"]],["ocsponereqref"]]],[11,"deref","openssl::pkcs12","",50,[[["self"]],["pkcs12ref"]]],[11,"deref","openssl::pkcs7","",54,[[["self"]],["pkcs7ref"]]],[11,"deref","openssl::pkey","",58,[[["self"]],["pkeyref"]]],[11,"deref","openssl::rsa","",61,[[["self"]],["rsaref"]]],[11,"deref","openssl::srtp","",155,[[["self"]],["srtpprotectionprofileref"]]],[11,"deref","openssl::ssl","",77,[[["self"]],["sslcontextbuilder"]]],[11,"deref","","",78,[[["self"]],["sslref"]]],[11,"deref","","",80,[[["self"]],["sslcontextbuilder"]]],[11,"deref","","",95,[[["self"]],["sslcontextref"]]],[11,"deref","","",156,[[["self"]],["sslcipherref"]]],[11,"deref","","",98,[[["self"]],["sslsessionref"]]],[11,"deref","","",100,[[["self"]],["sslref"]]],[11,"deref","openssl::stack","",107,[[["self"]],["stackref"]]],[11,"deref","openssl::string","",160,[[["self"]],["opensslstringref"]]],[11,"deref","","",161,[[["self"]],["str"]]],[11,"deref","openssl::x509::store","",118,[[["self"]],["x509storebuilderref"]]],[11,"deref","","",167,[[["self"]],["x509storeref"]]],[11,"deref","openssl::x509","",120,[[["self"]],["x509storecontextref"]]],[11,"deref","","",124,[[["self"]],["x509ref"]]],[11,"deref","","",126,[[["self"]],["x509extensionref"]]],[11,"deref","","",128,[[["self"]],["x509nameref"]]],[11,"deref","","",164,[[["self"]],["x509nameentryref"]]],[11,"deref","","",132,[[["self"]],["x509reqref"]]],[11,"deref","","",165,[[["self"]],["generalnameref"]]],[11,"deref","","",166,[[["self"]],["x509algorithmref"]]],[11,"index","openssl::stack","",108,N],[11,"index_mut","","",108,N],[11,"from_iter","openssl::cms","",10,[[["t"]],["cmsoptions"]]],[11,"from_iter","openssl::ocsp","",38,[[["t"]],["ocspflag"]]],[11,"from_iter","openssl::pkcs7","",53,[[["t"]],["pkcs7flags"]]],[11,"from_iter","openssl::ssl","",83,[[["t"]],["ssloptions"]]],[11,"from_iter","","",84,[[["t"]],["sslmode"]]],[11,"from_iter","","",86,[[["t"]],["sslverifymode"]]],[11,"from_iter","","",87,[[["t"]],["sslsessioncachemode"]]],[11,"from_iter","","",105,[[["t"]],["shutdownstate"]]],[11,"borrow","openssl::asn1","",138,[[["self"]],["asn1generalizedtimeref"]]],[11,"borrow","","",1,[[["self"]],["asn1timeref"]]],[11,"borrow","","",141,[[["self"]],["asn1stringref"]]],[11,"borrow","","",142,[[["self"]],["asn1integerref"]]],[11,"borrow","","",143,[[["self"]],["asn1bitstringref"]]],[11,"borrow","","",144,[[["self"]],["asn1objectref"]]],[11,"borrow","openssl::bn","",7,[[["self"]],["bignumcontextref"]]],[11,"borrow","","",9,[[["self"]],["bignumref"]]],[11,"borrow","openssl::cms","",12,[[["self"]],["cmscontentinforef"]]],[11,"borrow","openssl::conf","",14,[[["self"]],["confref"]]],[11,"borrow","openssl::dh","",17,[[["self"]],["dhref"]]],[11,"borrow","openssl::dsa","",19,[[["self"]],["dsaref"]]],[11,"borrow","openssl::ec","",22,[[["self"]],["ecgroupref"]]],[11,"borrow","","",25,[[["self"]],["ecpointref"]]],[11,"borrow","","",27,[[["self"]],["eckeyref"]]],[11,"borrow","openssl::ecdsa","",28,[[["self"]],["ecdsasigref"]]],[11,"borrow","openssl::ocsp","",148,[[["self"]],["ocspbasicresponseref"]]],[11,"borrow","","",43,[[["self"]],["ocspcertidref"]]],[11,"borrow","","",44,[[["self"]],["ocspresponseref"]]],[11,"borrow","","",46,[[["self"]],["ocsprequestref"]]],[11,"borrow","","",150,[[["self"]],["ocsponereqref"]]],[11,"borrow","openssl::pkcs12","",50,[[["self"]],["pkcs12ref"]]],[11,"borrow","openssl::pkcs7","",54,[[["self"]],["pkcs7ref"]]],[11,"borrow","openssl::pkey","",58,[[["self"]],["pkeyref"]]],[11,"borrow","openssl::rsa","",61,[[["self"]],["rsaref"]]],[11,"borrow","openssl::srtp","",155,[[["self"]],["srtpprotectionprofileref"]]],[11,"borrow","openssl::ssl","",95,[[["self"]],["sslcontextref"]]],[11,"borrow","","",98,[[["self"]],["sslsessionref"]]],[11,"borrow","","",100,[[["self"]],["sslref"]]],[11,"borrow","openssl::stack","",107,[[["self"]],["stackref"]]],[11,"borrow","openssl::string","",160,[[["self"]],["opensslstringref"]]],[11,"borrow","openssl::x509::store","",118,[[["self"]],["x509storebuilderref"]]],[11,"borrow","","",167,[[["self"]],["x509storeref"]]],[11,"borrow","openssl::x509","",120,[[["self"]],["x509storecontextref"]]],[11,"borrow","","",124,[[["self"]],["x509ref"]]],[11,"borrow","","",126,[[["self"]],["x509extensionref"]]],[11,"borrow","","",128,[[["self"]],["x509nameref"]]],[11,"borrow","","",164,[[["self"]],["x509nameentryref"]]],[11,"borrow","","",132,[[["self"]],["x509reqref"]]],[11,"borrow","","",165,[[["self"]],["generalnameref"]]],[11,"borrow","","",166,[[["self"]],["x509algorithmref"]]],[11,"read","openssl::ssl","",103,N],[11,"write","openssl::hash","",34,N],[11,"flush","","",34,[[["self"]],["result"]]],[11,"write","openssl::sign","",69,N],[11,"flush","","",69,[[["self"]],["result"]]],[11,"write","","",70,N],[11,"flush","","",70,[[["self"]],["result"]]],[11,"write","openssl::ssl","",103,N],[11,"flush","","",103,[[["self"]],["result"]]],[11,"description","openssl::error","",30,[[["self"]],["str"]]],[11,"description","","",31,[[["self"]],["str"]]],[11,"description","openssl::ssl","",82,[[["self"]],["str"]]],[11,"cause","","",82,[[["self"]],["option",["error"]]]],[11,"description","","",74,[[["self"]],["str"]]],[11,"cause","","",74,[[["self"]],["option",["stderror"]]]],[11,"description","openssl::x509","",134,[[["self"]],["str"]]],[11,"from_ptr","openssl::asn1","",138,N],[11,"as_ptr","","",138,N],[11,"from_ptr","","",1,N],[11,"as_ptr","","",1,N],[11,"from_ptr","","",141,N],[11,"as_ptr","","",141,N],[11,"from_ptr","","",142,N],[11,"as_ptr","","",142,N],[11,"from_ptr","","",143,N],[11,"as_ptr","","",143,N],[11,"from_ptr","","",144,N],[11,"as_ptr","","",144,N],[11,"from_ptr","openssl::bn","",7,N],[11,"as_ptr","","",7,N],[11,"from_ptr","","",9,N],[11,"as_ptr","","",9,N],[11,"from_ptr","openssl::cms","",12,N],[11,"as_ptr","","",12,N],[11,"from_ptr","openssl::conf","",14,N],[11,"as_ptr","","",14,N],[11,"from_ptr","openssl::dh","",17,N],[11,"as_ptr","","",17,N],[11,"from_ptr","openssl::dsa","",19,N],[11,"as_ptr","","",19,N],[11,"from_ptr","openssl::ec","",22,N],[11,"as_ptr","","",22,N],[11,"from_ptr","","",25,N],[11,"as_ptr","","",25,N],[11,"from_ptr","","",27,N],[11,"as_ptr","","",27,N],[11,"from_ptr","openssl::ecdsa","",28,N],[11,"as_ptr","","",28,N],[11,"from_ptr","openssl::ocsp","",148,N],[11,"as_ptr","","",148,N],[11,"from_ptr","","",43,N],[11,"as_ptr","","",43,N],[11,"from_ptr","","",44,N],[11,"as_ptr","","",44,N],[11,"from_ptr","","",46,N],[11,"as_ptr","","",46,N],[11,"from_ptr","","",150,N],[11,"as_ptr","","",150,N],[11,"from_ptr","openssl::pkcs12","",50,N],[11,"as_ptr","","",50,N],[11,"from_ptr","openssl::pkcs7","",54,N],[11,"as_ptr","","",54,N],[11,"from_ptr","openssl::pkey","",58,N],[11,"as_ptr","","",58,N],[11,"from_ptr","openssl::rsa","",61,N],[11,"as_ptr","","",61,N],[11,"from_ptr","openssl::srtp","",155,N],[11,"as_ptr","","",155,N],[11,"from_ptr","openssl::ssl","",95,N],[11,"as_ptr","","",95,N],[11,"from_ptr","","",156,N],[11,"as_ptr","","",156,N],[11,"from_ptr","","",98,N],[11,"as_ptr","","",98,N],[11,"from_ptr","","",100,N],[11,"as_ptr","","",100,N],[11,"from_ptr","openssl::stack","",107,N],[11,"as_ptr","","",107,N],[11,"from_ptr","openssl::string","",160,N],[11,"as_ptr","","",160,N],[11,"from_ptr","openssl::x509::store","",118,N],[11,"as_ptr","","",118,N],[11,"from_ptr","","",167,N],[11,"as_ptr","","",167,N],[11,"from_ptr","openssl::x509","",120,N],[11,"as_ptr","","",120,N],[11,"from_ptr","","",124,N],[11,"as_ptr","","",124,N],[11,"from_ptr","","",126,N],[11,"as_ptr","","",126,N],[11,"from_ptr","","",128,N],[11,"as_ptr","","",128,N],[11,"from_ptr","","",164,N],[11,"as_ptr","","",164,N],[11,"from_ptr","","",132,N],[11,"as_ptr","","",132,N],[11,"from_ptr","","",165,N],[11,"as_ptr","","",165,N],[11,"from_ptr","","",166,N],[11,"as_ptr","","",166,N]],"paths":[[3,"AesKey"],[3,"Asn1Time"],[3,"Asn1StringRef"],[3,"Asn1IntegerRef"],[3,"Asn1BitStringRef"],[3,"Asn1ObjectRef"],[3,"MsbOption"],[3,"BigNumContext"],[3,"BigNumRef"],[3,"BigNum"],[3,"CMSOptions"],[3,"CmsContentInfoRef"],[3,"CmsContentInfo"],[3,"ConfMethod"],[3,"Conf"],[3,"Deriver"],[3,"DhRef"],[3,"Dh"],[3,"DsaRef"],[3,"Dsa"],[3,"PointConversionForm"],[3,"Asn1Flag"],[3,"EcGroup"],[3,"EcGroupRef"],[3,"EcPointRef"],[3,"EcPoint"],[3,"EcKeyRef"],[3,"EcKey"],[3,"EcdsaSig"],[3,"EcdsaSigRef"],[3,"ErrorStack"],[3,"Error"],[3,"Index"],[3,"MessageDigest"],[3,"Hasher"],[3,"SignatureAlgorithms"],[3,"Nid"],[3,"OcspStatus"],[3,"OcspFlag"],[3,"OcspResponseStatus"],[3,"OcspCertStatus"],[3,"OcspRevokedStatus"],[3,"OcspBasicResponseRef"],[3,"OcspCertId"],[3,"OcspResponse"],[3,"OcspResponseRef"],[3,"OcspRequest"],[3,"OcspRequestRef"],[3,"ParsedPkcs12"],[3,"Pkcs12Ref"],[3,"Pkcs12"],[3,"Pkcs12Builder"],[3,"KeyIvPair"],[3,"Pkcs7Flags"],[3,"Pkcs7"],[3,"Pkcs7Ref"],[3,"Id"],[3,"PKeyRef"],[3,"PKey"],[3,"Padding"],[3,"RsaRef"],[3,"Rsa"],[3,"RsaPrivateKeyBuilder"],[3,"Sha1"],[3,"Sha224"],[3,"Sha256"],[3,"Sha384"],[3,"Sha512"],[3,"RsaPssSaltlen"],[3,"Signer"],[3,"Verifier"],[3,"SrtpProtectionProfileRef"],[3,"SrtpProfileId"],[3,"CipherBits"],[4,"HandshakeError"],[4,"ShutdownResult"],[3,"SslConnector"],[3,"SslConnectorBuilder"],[3,"ConnectConfiguration"],[3,"SslAcceptor"],[3,"SslAcceptorBuilder"],[3,"ErrorCode"],[3,"Error"],[3,"SslOptions"],[3,"SslMode"],[3,"SslMethod"],[3,"SslVerifyMode"],[3,"SslSessionCacheMode"],[3,"SslFiletype"],[3,"StatusType"],[3,"NameType"],[3,"SniError"],[3,"SslAlert"],[3,"SslVersion"],[3,"SslContextBuilder"],[3,"SslContext"],[3,"SslContextRef"],[3,"SslCipherRef"],[3,"SslSession"],[3,"SslSessionRef"],[3,"Ssl"],[3,"SslRef"],[3,"MidHandshakeSslStream"],[3,"SslStream"],[3,"SslStreamBuilder"],[3,"ShutdownState"],[8,"Stackable"],[3,"Stack"],[3,"StackRef"],[4,"Mode"],[3,"Cipher"],[3,"Crypter"],[3,"BasicConstraints"],[3,"KeyUsage"],[3,"ExtendedKeyUsage"],[3,"SubjectKeyIdentifier"],[3,"AuthorityKeyIdentifier"],[3,"SubjectAlternativeName"],[3,"X509StoreBuilder"],[3,"X509StoreBuilderRef"],[3,"X509StoreContext"],[3,"X509StoreContextRef"],[3,"X509Builder"],[3,"X509Ref"],[3,"X509"],[3,"X509v3Context"],[3,"X509Extension"],[3,"X509NameBuilder"],[3,"X509Name"],[3,"X509NameRef"],[3,"X509NameEntryRef"],[3,"X509ReqBuilder"],[3,"X509Req"],[3,"X509ReqRef"],[3,"X509VerifyResult"],[3,"GeneralNameRef"],[3,"X509AlgorithmRef"],[3,"KeyError"],[3,"Asn1GeneralizedTime"],[3,"Asn1GeneralizedTimeRef"],[3,"Asn1TimeRef"],[3,"Asn1String"],[3,"Asn1Integer"],[3,"Asn1BitString"],[3,"Asn1Object"],[3,"BigNumContextRef"],[3,"ConfRef"],[3,"DigestBytes"],[3,"OcspBasicResponse"],[3,"OcspCertIdRef"],[3,"OcspOneReq"],[3,"OcspOneReqRef"],[4,"Params"],[4,"Public"],[4,"Private"],[3,"SrtpProtectionProfile"],[3,"SslCipher"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"OpensslString"],[3,"OpensslStringRef"],[3,"X509ExtensionRef"],[3,"X509NameEntries"],[3,"X509NameEntry"],[3,"GeneralName"],[3,"X509Algorithm"],[3,"X509Store"],[3,"X509StoreRef"]]};
searchIndex["openssl_probe"]={"doc":"","items":[[3,"ProbeResult","openssl_probe","",N,N],[12,"cert_file","","",0,N],[12,"cert_dir","","",0,N],[5,"find_certs_dirs","","Probe the system for the directory in which CA…",N,[[],["vec",["pathbuf"]]]],[5,"init_ssl_cert_env_vars","","",N,[[]]],[5,"probe","","",N,[[],["proberesult"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[3,"ProbeResult"]]};
searchIndex["openssl_sys"]={"doc":"","items":[[3,"AES_KEY","openssl_sys","",N,N],[3,"ASN1_ENCODING","","",N,N],[12,"enc","","",0,N],[12,"len","","",0,N],[12,"modified","","",0,N],[3,"stack_st_ASN1_OBJECT","","",N,N],[12,"stack","","",1,N],[3,"BIO_METHOD","","",N,N],[12,"type_","","",2,N],[12,"name","","",2,N],[12,"bwrite","","",2,N],[12,"bread","","",2,N],[12,"bputs","","",2,N],[12,"bgets","","",2,N],[12,"ctrl","","",2,N],[12,"create","","",2,N],[12,"destroy","","",2,N],[12,"callback_ctrl","","",2,N],[3,"stack_st_void","","",N,N],[12,"stack","","",3,N],[3,"ECDSA_SIG","","",N,N],[12,"r","","",4,N],[12,"s","","",4,N],[3,"ERR_STRING_DATA","","",N,N],[12,"error","","",5,N],[12,"string","","",5,N],[3,"BIO","","",N,N],[12,"method","","",6,N],[12,"callback","","",6,N],[12,"cb_arg","","",6,N],[12,"init","","",6,N],[12,"shutdown","","",6,N],[12,"flags","","",6,N],[12,"retry_reason","","",6,N],[12,"num","","",6,N],[12,"ptr","","",6,N],[12,"next_bio","","",6,N],[12,"prev_bio","","",6,N],[12,"references","","",6,N],[12,"num_read","","",6,N],[12,"num_write","","",6,N],[12,"ex_data","","",6,N],[3,"BIGNUM","","",N,N],[12,"d","","",7,N],[12,"top","","",7,N],[12,"dmax","","",7,N],[12,"neg","","",7,N],[12,"flags","","",7,N],[3,"EVP_CIPHER","","",N,N],[12,"nid","","",8,N],[12,"block_size","","",8,N],[12,"key_len","","",8,N],[12,"iv_len","","",8,N],[12,"flags","","",8,N],[12,"init","","",8,N],[12,"do_cipher","","",8,N],[12,"cleanup","","",8,N],[12,"ctx_size","","",8,N],[12,"set_asn1_parameters","","",8,N],[12,"get_asn1_parameters","","",8,N],[12,"ctrl","","",8,N],[12,"app_data","","",8,N],[3,"EVP_MD_CTX","","",N,N],[3,"EVP_PKEY","","",N,N],[12,"type_","","",9,N],[12,"save_type","","",9,N],[12,"references","","",9,N],[12,"ameth","","",9,N],[12,"engine","","",9,N],[12,"pkey","","",9,N],[12,"save_parameters","","",9,N],[12,"attributes","","",9,N],[3,"HMAC_CTX","","",N,N],[3,"DH","","",N,N],[12,"pad","","",10,N],[12,"version","","",10,N],[12,"p","","",10,N],[12,"g","","",10,N],[12,"length","","",10,N],[12,"pub_key","","",10,N],[12,"priv_key","","",10,N],[12,"flags","","",10,N],[12,"method_mont_p","","",10,N],[12,"q","","",10,N],[12,"j","","",10,N],[12,"seed","","",10,N],[12,"seedlen","","",10,N],[12,"counter","","",10,N],[12,"references","","",10,N],[12,"ex_data","","",10,N],[12,"meth","","",10,N],[12,"engine","","",10,N],[3,"DSA","","",N,N],[12,"pad","","",11,N],[12,"version","","",11,N],[12,"write_params","","",11,N],[12,"p","","",11,N],[12,"q","","",11,N],[12,"g","","",11,N],[12,"pub_key","","",11,N],[12,"priv_key","","",11,N],[12,"kinv","","",11,N],[12,"r","","",11,N],[12,"flags","","",11,N],[12,"method_mont_p","","",11,N],[12,"references","","",11,N],[12,"ex_data","","",11,N],[12,"meth","","",11,N],[12,"engine","","",11,N],[3,"RSA","","",N,N],[12,"pad","","",12,N],[12,"version","","",12,N],[12,"meth","","",12,N],[12,"engine","","",12,N],[12,"n","","",12,N],[12,"e","","",12,N],[12,"d","","",12,N],[12,"p","","",12,N],[12,"q","","",12,N],[12,"dmp1","","",12,N],[12,"dmq1","","",12,N],[12,"iqmp","","",12,N],[12,"ex_data","","",12,N],[12,"references","","",12,N],[12,"flags","","",12,N],[12,"_method_mod_n","","",12,N],[12,"_method_mod_p","","",12,N],[12,"_method_mod_q","","",12,N],[12,"bignum_data","","",12,N],[12,"blinding","","",12,N],[12,"mt_blinding","","",12,N],[3,"X509","","",N,N],[12,"cert_info","","",13,N],[12,"sig_alg","","",13,N],[12,"signature","","",13,N],[12,"valid","","",13,N],[12,"references","","",13,N],[12,"name","","",13,N],[12,"ex_data","","",13,N],[12,"ex_pathlen","","",13,N],[12,"ex_pcpathlen","","",13,N],[12,"ex_flags","","",13,N],[12,"ex_kusage","","",13,N],[12,"ex_xkusage","","",13,N],[12,"ex_nscert","","",13,N],[3,"X509_ALGOR","","",N,N],[12,"algorithm","","",14,N],[3,"X509V3_CTX","","",N,N],[3,"SSL","","",N,N],[12,"server","","",15,N],[3,"SSL_CTX","","",N,N],[12,"references","","",16,N],[3,"SRP_CTX","","",N,N],[3,"CRYPTO_EX_DATA","","",N,N],[12,"sk","","",17,N],[12,"dummy","","",17,N],[3,"stack_st_OPENSSL_STRING","","",N,N],[12,"stack","","",18,N],[3,"SHA_CTX","","",N,N],[12,"h0","","",19,N],[12,"h1","","",19,N],[12,"h2","","",19,N],[12,"h3","","",19,N],[12,"h4","","",19,N],[12,"Nl","","",19,N],[12,"Nh","","",19,N],[12,"data","","",19,N],[12,"num","","",19,N],[3,"SHA256_CTX","","",N,N],[12,"h","","",20,N],[12,"Nl","","",20,N],[12,"Nh","","",20,N],[12,"data","","",20,N],[12,"num","","",20,N],[12,"md_len","","",20,N],[3,"SHA512_CTX","","",N,N],[12,"h","","",21,N],[12,"Nl","","",21,N],[12,"Nh","","",21,N],[12,"num","","",21,N],[12,"md_len","","",21,N],[3,"SSL_SESSION","","",N,N],[12,"master_key_length","","",22,N],[12,"master_key","","",22,N],[12,"references","","",22,N],[3,"stack_st_SSL_CIPHER","","",N,N],[12,"stack","","",23,N],[3,"SRTP_PROTECTION_PROFILE","","",N,N],[12,"name","","",24,N],[12,"id","","",24,N],[3,"stack_st_SRTP_PROTECTION_PROFILE","","",N,N],[12,"stack","","",25,N],[3,"_STACK","","",N,N],[12,"num","","",26,N],[12,"data","","",26,N],[12,"sorted","","",26,N],[12,"num_alloc","","",26,N],[12,"comp","","",26,N],[3,"X509_VAL","","",N,N],[12,"notBefore","","",27,N],[12,"notAfter","","",27,N],[3,"stack_st_X509_NAME","","",N,N],[12,"stack","","",28,N],[3,"stack_st_X509_EXTENSION","","",N,N],[12,"stack","","",29,N],[3,"stack_st_X509_ATTRIBUTE","","",N,N],[12,"stack","","",30,N],[3,"X509_REQ_INFO","","",N,N],[12,"enc","","",31,N],[12,"version","","",31,N],[12,"subject","","",31,N],[12,"attributes","","",31,N],[3,"X509_REQ","","",N,N],[12,"req_info","","",32,N],[3,"X509_CINF","","",N,N],[12,"validity","","",33,N],[12,"extensions","","",33,N],[3,"stack_st_X509","","",N,N],[12,"stack","","",34,N],[3,"GENERAL_NAME","","",N,N],[12,"type_","","",35,N],[12,"d","","",35,N],[3,"stack_st_GENERAL_NAME","","",N,N],[12,"stack","","",36,N],[4,"CMS_ContentInfo","","",N,N],[4,"point_conversion_form_t","","",N,N],[13,"POINT_CONVERSION_COMPRESSED","","",37,N],[13,"POINT_CONVERSION_UNCOMPRESSED","","",37,N],[13,"POINT_CONVERSION_HYBRID","","",37,N],[4,"EC_METHOD","","",N,N],[4,"EC_GROUP","","",N,N],[4,"EC_POINT","","",N,N],[4,"OCSP_CERTID","","",N,N],[4,"OCSP_ONEREQ","","",N,N],[4,"OCSP_REQUEST","","",N,N],[4,"OCSP_BASICRESP","","",N,N],[4,"ASN1_INTEGER","","",N,N],[4,"ASN1_GENERALIZEDTIME","","",N,N],[4,"ASN1_STRING","","",N,N],[4,"ASN1_BIT_STRING","","",N,N],[4,"ASN1_TIME","","",N,N],[4,"ASN1_TYPE","","",N,N],[4,"ASN1_OBJECT","","",N,N],[4,"ASN1_OCTET_STRING","","",N,N],[4,"bio_st","","",N,N],[4,"BN_BLINDING","","",N,N],[4,"BN_MONT_CTX","","",N,N],[4,"BN_CTX","","",N,N],[4,"BN_GENCB","","",N,N],[4,"EVP_CIPHER_CTX","","",N,N],[4,"EVP_MD","","",N,N],[4,"EVP_PKEY_ASN1_METHOD","","",N,N],[4,"EVP_PKEY_CTX","","",N,N],[4,"DH_METHOD","","",N,N],[4,"DSA_METHOD","","",N,N],[4,"RSA_METHOD","","",N,N],[4,"EC_KEY","","",N,N],[4,"X509_CRL","","",N,N],[4,"X509_NAME","","",N,N],[4,"X509_STORE","","",N,N],[4,"X509_STORE_CTX","","",N,N],[4,"CONF","","",N,N],[4,"ENGINE","","",N,N],[4,"COMP_METHOD","","",N,N],[4,"OCSP_RESPONSE","","",N,N],[4,"PKCS7_SIGNED","","",N,N],[4,"PKCS7_ENVELOPE","","",N,N],[4,"PKCS7_SIGN_ENVELOPE","","",N,N],[4,"PKCS7_DIGEST","","",N,N],[4,"PKCS7_ENCRYPT","","",N,N],[4,"PKCS7","","",N,N],[4,"PKCS12","","",N,N],[4,"SSL_METHOD","","",N,N],[4,"SSL_CIPHER","","",N,N],[4,"X509_NAME_ENTRY","","",N,N],[4,"X509_EXTENSION","","",N,N],[4,"CONF_METHOD","","",N,N],[5,"BIO_set_retry_read","","",N,N],[5,"BIO_set_retry_write","","",N,N],[5,"BIO_clear_retry_flags","","",N,N],[5,"BIO_get_mem_data","","",N,N],[5,"ERR_GET_LIB","","",N,[[["c_ulong"]],["c_int"]]],[5,"ERR_GET_FUNC","","",N,[[["c_ulong"]],["c_int"]]],[5,"ERR_GET_REASON","","",N,[[["c_ulong"]],["c_int"]]],[5,"EVP_get_digestbynid","","",N,N],[5,"EVP_PKEY_CTX_set_rsa_padding","","",N,N],[5,"EVP_PKEY_CTX_get_rsa_padding","","",N,N],[5,"EVP_PKEY_CTX_set_rsa_pss_saltlen","","",N,N],[5,"EVP_PKEY_CTX_set_rsa_mgf1_md","","",N,N],[5,"SSL_CTX_set_mode","","",N,N],[5,"SSL_CTX_get_options","","",N,N],[5,"SSL_CTX_set_options","","",N,N],[5,"SSL_CTX_clear_options","","",N,N],[5,"SSL_CTX_set_tmp_dh","","",N,N],[5,"SSL_CTX_set_tmp_ecdh","","",N,N],[5,"SSL_set_tmp_dh","","",N,N],[5,"SSL_set_tmp_ecdh","","",N,N],[5,"SSL_CTX_add_extra_chain_cert","","",N,N],[5,"SSL_CTX_get_extra_chain_certs","","",N,N],[5,"SSL_CTX_set_session_cache_mode","","",N,N],[5,"SSL_CTX_set_read_ahead","","",N,N],[5,"SSL_session_reused","","",N,N],[5,"SSL_set_tlsext_host_name","","",N,N],[5,"SSL_set_tlsext_status_type","","",N,N],[5,"SSL_get_tlsext_status_ocsp_resp","","",N,N],[5,"SSL_set_tlsext_status_ocsp_resp","","",N,N],[5,"SSL_CTX_set_tlsext_servername_callback","","",N,N],[5,"SSL_CTX_set_tlsext_servername_arg","","",N,N],[5,"SSL_CTX_set_tlsext_status_cb","","",N,N],[5,"SSL_CTX_set_tlsext_status_arg","","",N,N],[5,"init","","",N,[[]]],[5,"AES_set_encrypt_key","","",N,N],[5,"AES_set_decrypt_key","","",N,N],[5,"AES_ige_encrypt","","",N,N],[5,"ASN1_OBJECT_free","","",N,N],[5,"ASN1_STRING_type_new","","",N,N],[5,"ASN1_STRING_data","","",N,N],[5,"ASN1_BIT_STRING_free","","",N,N],[5,"ASN1_STRING_free","","",N,N],[5,"ASN1_STRING_length","","",N,N],[5,"ASN1_GENERALIZEDTIME_free","","",N,N],[5,"ASN1_GENERALIZEDTIME_print","","",N,N],[5,"ASN1_TIME_free","","",N,N],[5,"ASN1_TIME_print","","",N,N],[5,"ASN1_INTEGER_free","","",N,N],[5,"ASN1_INTEGER_get","","",N,N],[5,"ASN1_INTEGER_set","","",N,N],[5,"BN_to_ASN1_INTEGER","","",N,N],[5,"ASN1_INTEGER_to_BN","","",N,N],[5,"ASN1_STRING_to_UTF8","","",N,N],[5,"BIO_set_flags","","",N,N],[5,"BIO_clear_flags","","",N,N],[5,"BIO_s_file","","",N,N],[5,"BIO_new","","",N,N],[5,"BIO_new_fp","","",N,N],[5,"BIO_write","","",N,N],[5,"BIO_read","","",N,N],[5,"BIO_ctrl","","",N,N],[5,"BIO_free_all","","",N,N],[5,"BIO_s_mem","","",N,N],[5,"BIO_new_mem_buf","","",N,N],[5,"BIO_new_socket","","",N,N],[5,"BN_CTX_new","","",N,N],[5,"BN_CTX_free","","",N,N],[5,"BN_rand","","",N,N],[5,"BN_pseudo_rand","","",N,N],[5,"BN_rand_range","","",N,N],[5,"BN_pseudo_rand_range","","",N,N],[5,"BN_new","","",N,N],[5,"BN_num_bits","","",N,N],[5,"BN_clear_free","","",N,N],[5,"BN_bin2bn","","",N,N],[5,"BN_bn2bin","","",N,N],[5,"BN_sub","","",N,N],[5,"BN_add","","",N,N],[5,"BN_mul","","",N,N],[5,"BN_sqr","","",N,N],[5,"BN_set_negative","","",N,N],[5,"BN_div","","",N,N],[5,"BN_nnmod","","",N,N],[5,"BN_mod_add","","",N,N],[5,"BN_mod_sub","","",N,N],[5,"BN_mod_mul","","",N,N],[5,"BN_mod_sqr","","",N,N],[5,"BN_mod_word","","",N,N],[5,"BN_div_word","","",N,N],[5,"BN_mul_word","","",N,N],[5,"BN_add_word","","",N,N],[5,"BN_sub_word","","",N,N],[5,"BN_set_word","","",N,N],[5,"BN_cmp","","",N,N],[5,"BN_free","","",N,N],[5,"BN_is_bit_set","","",N,N],[5,"BN_lshift","","",N,N],[5,"BN_lshift1","","",N,N],[5,"BN_exp","","",N,N],[5,"BN_mod_exp","","",N,N],[5,"BN_mask_bits","","",N,N],[5,"BN_rshift","","",N,N],[5,"BN_rshift1","","",N,N],[5,"BN_bn2hex","","",N,N],[5,"BN_bn2dec","","",N,N],[5,"BN_hex2bn","","",N,N],[5,"BN_dec2bn","","",N,N],[5,"BN_gcd","","",N,N],[5,"BN_mod_inverse","","",N,N],[5,"BN_clear","","",N,N],[5,"BN_dup","","",N,N],[5,"BN_ucmp","","",N,N],[5,"BN_set_bit","","",N,N],[5,"BN_clear_bit","","",N,N],[5,"BN_generate_prime_ex","","",N,N],[5,"BN_is_prime_ex","","",N,N],[5,"BN_is_prime_fasttest_ex","","",N,N],[5,"get_rfc2409_prime_768","","",N,N],[5,"get_rfc2409_prime_1024","","",N,N],[5,"get_rfc3526_prime_1536","","",N,N],[5,"get_rfc3526_prime_2048","","",N,N],[5,"get_rfc3526_prime_3072","","",N,N],[5,"get_rfc3526_prime_4096","","",N,N],[5,"get_rfc3526_prime_6144","","",N,N],[5,"get_rfc3526_prime_8192","","",N,N],[5,"CMS_ContentInfo_free","","",N,N],[5,"i2d_CMS_ContentInfo","","",N,N],[5,"SMIME_read_CMS","","",N,N],[5,"CMS_sign","","",N,N],[5,"CMS_decrypt","","",N,N],[5,"NCONF_new","","",N,N],[5,"NCONF_default","","",N,N],[5,"NCONF_free","","",N,N],[5,"SSLeay","","",N,N],[5,"SSLeay_version","","",N,N],[5,"CRYPTO_num_locks","","",N,N],[5,"CRYPTO_set_locking_callback","","",N,N],[5,"CRYPTO_set_id_callback","","",N,N],[5,"CRYPTO_add_lock","","",N,N],[5,"CRYPTO_malloc","","",N,N],[5,"CRYPTO_free","","",N,N],[5,"FIPS_mode","","",N,N],[5,"FIPS_mode_set","","",N,N],[5,"CRYPTO_memcmp","","",N,N],[5,"DH_new","","",N,N],[5,"DH_free","","",N,N],[5,"d2i_DHparams","","",N,N],[5,"i2d_DHparams","","",N,N],[5,"DSA_new","","",N,N],[5,"DSA_free","","",N,N],[5,"DSA_size","","",N,N],[5,"DSA_sign","","",N,N],[5,"DSA_verify","","",N,N],[5,"d2i_DSAPublicKey","","",N,N],[5,"d2i_DSAPrivateKey","","",N,N],[5,"DSA_generate_parameters_ex","","",N,N],[5,"DSA_generate_key","","",N,N],[5,"i2d_DSAPublicKey","","",N,N],[5,"i2d_DSAPrivateKey","","",N,N],[5,"EC_GF2m_simple_method","","",N,N],[5,"EC_GROUP_new","","",N,N],[5,"EC_GROUP_free","","",N,N],[5,"EC_GROUP_get_order","","",N,N],[5,"EC_GROUP_set_asn1_flag","","",N,N],[5,"EC_GROUP_get_curve_GFp","","",N,N],[5,"EC_GROUP_get_curve_GF2m","","",N,N],[5,"EC_GROUP_get_degree","","",N,N],[5,"EC_GROUP_new_curve_GFp","","",N,N],[5,"EC_GROUP_new_curve_GF2m","","",N,N],[5,"EC_GROUP_new_by_curve_name","","",N,N],[5,"EC_POINT_new","","",N,N],[5,"EC_POINT_free","","",N,N],[5,"EC_POINT_get_affine_coordinates_GFp","","",N,N],[5,"EC_POINT_get_affine_coordinates_GF2m","","",N,N],[5,"EC_POINT_point2oct","","",N,N],[5,"EC_POINT_oct2point","","",N,N],[5,"EC_POINT_add","","",N,N],[5,"EC_POINT_invert","","",N,N],[5,"EC_POINT_cmp","","",N,N],[5,"EC_POINT_mul","","",N,N],[5,"EC_KEY_new","","",N,N],[5,"EC_KEY_new_by_curve_name","","",N,N],[5,"EC_KEY_free","","",N,N],[5,"EC_KEY_dup","","",N,N],[5,"EC_KEY_up_ref","","",N,N],[5,"EC_KEY_get0_group","","",N,N],[5,"EC_KEY_set_group","","",N,N],[5,"EC_KEY_get0_private_key","","",N,N],[5,"EC_KEY_set_private_key","","",N,N],[5,"EC_KEY_get0_public_key","","",N,N],[5,"EC_KEY_set_public_key","","",N,N],[5,"EC_KEY_generate_key","","",N,N],[5,"EC_KEY_check_key","","",N,N],[5,"EC_KEY_set_public_key_affine_coordinates","","",N,N],[5,"ECDSA_SIG_new","","",N,N],[5,"ECDSA_SIG_free","","",N,N],[5,"ECDSA_do_sign","","",N,N],[5,"ECDSA_do_verify","","",N,N],[5,"d2i_ECDSA_SIG","","",N,N],[5,"i2d_ECDSA_SIG","","",N,N],[5,"ERR_put_error","","",N,N],[5,"ERR_set_error_data","","",N,N],[5,"ERR_get_error","","",N,N],[5,"ERR_get_error_line_data","","",N,N],[5,"ERR_peek_last_error","","",N,N],[5,"ERR_clear_error","","",N,N],[5,"ERR_lib_error_string","","",N,N],[5,"ERR_func_error_string","","",N,N],[5,"ERR_reason_error_string","","",N,N],[5,"ERR_load_strings","","",N,N],[5,"ERR_load_crypto_strings","","",N,N],[5,"ERR_get_next_error_library","","",N,N],[5,"EVP_MD_size","","",N,N],[5,"EVP_MD_CTX_create","","",N,N],[5,"EVP_MD_CTX_destroy","","",N,N],[5,"EVP_DigestInit_ex","","",N,N],[5,"EVP_DigestUpdate","","",N,N],[5,"EVP_DigestFinal_ex","","",N,N],[5,"EVP_DigestInit","","",N,N],[5,"EVP_DigestFinal","","",N,N],[5,"EVP_BytesToKey","","",N,N],[5,"EVP_CipherInit","","",N,N],[5,"EVP_CipherInit_ex","","",N,N],[5,"EVP_CipherUpdate","","",N,N],[5,"EVP_CipherFinal","","",N,N],[5,"EVP_DigestSignInit","","",N,N],[5,"EVP_DigestSignFinal","","",N,N],[5,"EVP_DigestVerifyInit","","",N,N],[5,"EVP_DigestVerifyFinal","","",N,N],[5,"EVP_CIPHER_CTX_new","","",N,N],[5,"EVP_CIPHER_CTX_free","","",N,N],[5,"EVP_MD_CTX_copy_ex","","",N,N],[5,"EVP_CIPHER_CTX_set_key_length","","",N,N],[5,"EVP_CIPHER_CTX_set_padding","","",N,N],[5,"EVP_CIPHER_CTX_ctrl","","",N,N],[5,"EVP_md5","","",N,N],[5,"EVP_sha1","","",N,N],[5,"EVP_sha224","","",N,N],[5,"EVP_sha256","","",N,N],[5,"EVP_sha384","","",N,N],[5,"EVP_sha512","","",N,N],[5,"EVP_ripemd160","","",N,N],[5,"EVP_des_ecb","","",N,N],[5,"EVP_des_ede3","","",N,N],[5,"EVP_des_ede3_cbc","","",N,N],[5,"EVP_des_cbc","","",N,N],[5,"EVP_rc4","","",N,N],[5,"EVP_bf_ecb","","",N,N],[5,"EVP_bf_cbc","","",N,N],[5,"EVP_bf_cfb64","","",N,N],[5,"EVP_bf_ofb","","",N,N],[5,"EVP_aes_128_ecb","","",N,N],[5,"EVP_aes_128_cbc","","",N,N],[5,"EVP_aes_128_cfb1","","",N,N],[5,"EVP_aes_128_cfb8","","",N,N],[5,"EVP_aes_128_cfb128","","",N,N],[5,"EVP_aes_128_ctr","","",N,N],[5,"EVP_aes_128_ccm","","",N,N],[5,"EVP_aes_128_gcm","","",N,N],[5,"EVP_aes_128_xts","","",N,N],[5,"EVP_aes_256_ecb","","",N,N],[5,"EVP_aes_256_cbc","","",N,N],[5,"EVP_aes_256_cfb1","","",N,N],[5,"EVP_aes_256_cfb8","","",N,N],[5,"EVP_aes_256_cfb128","","",N,N],[5,"EVP_aes_256_ctr","","",N,N],[5,"EVP_aes_256_ccm","","",N,N],[5,"EVP_aes_256_gcm","","",N,N],[5,"EVP_aes_256_xts","","",N,N],[5,"OPENSSL_add_all_algorithms_noconf","","",N,N],[5,"EVP_get_digestbyname","","",N,N],[5,"EVP_get_cipherbyname","","",N,N],[5,"EVP_PKEY_id","","",N,N],[5,"EVP_PKEY_bits","","",N,N],[5,"EVP_PKEY_assign","","",N,N],[5,"EVP_PKEY_set1_RSA","","",N,N],[5,"EVP_PKEY_get1_RSA","","",N,N],[5,"EVP_PKEY_get1_DSA","","",N,N],[5,"EVP_PKEY_get1_DH","","",N,N],[5,"EVP_PKEY_get1_EC_KEY","","",N,N],[5,"EVP_PKEY_new","","",N,N],[5,"EVP_PKEY_free","","",N,N],[5,"d2i_AutoPrivateKey","","",N,N],[5,"EVP_PKEY_cmp","","",N,N],[5,"EVP_PKEY_copy_parameters","","",N,N],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",N,N],[5,"PKCS5_PBKDF2_HMAC","","",N,N],[5,"EVP_PKEY_CTX_new","","",N,N],[5,"EVP_PKEY_CTX_new_id","","",N,N],[5,"EVP_PKEY_CTX_free","","",N,N],[5,"EVP_PKEY_CTX_ctrl","","",N,N],[5,"EVP_PKEY_new_mac_key","","",N,N],[5,"EVP_PKEY_derive_init","","",N,N],[5,"EVP_PKEY_derive_set_peer","","",N,N],[5,"EVP_PKEY_derive","","",N,N],[5,"EVP_PKEY_keygen_init","","",N,N],[5,"EVP_PKEY_keygen","","",N,N],[5,"HMAC_CTX_init","","",N,N],[5,"HMAC_CTX_cleanup","","",N,N],[5,"HMAC_Init_ex","","",N,N],[5,"HMAC_Update","","",N,N],[5,"HMAC_Final","","",N,N],[5,"HMAC_CTX_copy","","",N,N],[5,"OBJ_nid2ln","","",N,N],[5,"OBJ_nid2sn","","",N,N],[5,"OBJ_obj2nid","","",N,N],[5,"OBJ_obj2txt","","",N,N],[5,"OBJ_find_sigid_algs","","",N,N],[5,"OCSP_cert_to_id","","",N,N],[5,"OCSP_request_add0_id","","",N,N],[5,"OCSP_resp_find_status","","",N,N],[5,"OCSP_check_validity","","",N,N],[5,"OCSP_response_status","","",N,N],[5,"OCSP_response_get1_basic","","",N,N],[5,"OCSP_response_create","","",N,N],[5,"OCSP_BASICRESP_new","","",N,N],[5,"OCSP_BASICRESP_free","","",N,N],[5,"OCSP_RESPONSE_new","","",N,N],[5,"OCSP_RESPONSE_free","","",N,N],[5,"i2d_OCSP_RESPONSE","","",N,N],[5,"d2i_OCSP_RESPONSE","","",N,N],[5,"OCSP_ONEREQ_free","","",N,N],[5,"OCSP_CERTID_free","","",N,N],[5,"OCSP_REQUEST_new","","",N,N],[5,"OCSP_REQUEST_free","","",N,N],[5,"i2d_OCSP_REQUEST","","",N,N],[5,"d2i_OCSP_REQUEST","","",N,N],[5,"OCSP_basic_verify","","",N,N],[5,"PEM_read_bio_X509","","",N,N],[5,"PEM_write_bio_X509","","",N,N],[5,"PEM_read_bio_X509_REQ","","",N,N],[5,"PEM_write_bio_X509_REQ","","",N,N],[5,"PEM_read_bio_RSAPrivateKey","","",N,N],[5,"PEM_write_bio_RSAPrivateKey","","",N,N],[5,"PEM_read_bio_RSAPublicKey","","",N,N],[5,"PEM_write_bio_RSAPublicKey","","",N,N],[5,"PEM_read_bio_RSA_PUBKEY","","",N,N],[5,"PEM_write_bio_RSA_PUBKEY","","",N,N],[5,"PEM_read_bio_DSAPrivateKey","","",N,N],[5,"PEM_write_bio_DSAPrivateKey","","",N,N],[5,"PEM_read_bio_DSA_PUBKEY","","",N,N],[5,"PEM_write_bio_DSA_PUBKEY","","",N,N],[5,"PEM_read_bio_ECPrivateKey","","",N,N],[5,"PEM_write_bio_ECPrivateKey","","",N,N],[5,"PEM_read_bio_DHparams","","",N,N],[5,"PEM_write_bio_DHparams","","",N,N],[5,"PEM_read_bio_PrivateKey","","",N,N],[5,"PEM_write_bio_PrivateKey","","",N,N],[5,"PEM_read_bio_PUBKEY","","",N,N],[5,"PEM_write_bio_PUBKEY","","",N,N],[5,"PEM_write_bio_PKCS8PrivateKey","","",N,N],[5,"d2i_PKCS8PrivateKey_bio","","",N,N],[5,"PEM_read_bio_PKCS7","","",N,N],[5,"PEM_write_bio_PKCS7","","",N,N],[5,"PKCS7_encrypt","","",N,N],[5,"PKCS7_verify","","",N,N],[5,"PKCS7_sign","","",N,N],[5,"PKCS7_decrypt","","",N,N],[5,"PKCS7_free","","",N,N],[5,"SMIME_write_PKCS7","","",N,N],[5,"SMIME_read_PKCS7","","",N,N],[5,"PKCS12_free","","",N,N],[5,"i2d_PKCS12","","",N,N],[5,"d2i_PKCS12","","",N,N],[5,"PKCS12_parse","","",N,N],[5,"PKCS12_create","","",N,N],[5,"i2d_PKCS12_bio","","",N,N],[5,"RAND_bytes","","",N,N],[5,"RAND_status","","",N,N],[5,"RSA_new","","",N,N],[5,"RSA_size","","",N,N],[5,"RSA_generate_key","","",N,N],[5,"RSA_generate_key_ex","","",N,N],[5,"RSA_public_encrypt","","",N,N],[5,"RSA_private_encrypt","","",N,N],[5,"RSA_public_decrypt","","",N,N],[5,"RSA_private_decrypt","","",N,N],[5,"RSA_free","","",N,N],[5,"RSA_up_ref","","",N,N],[5,"i2d_RSAPublicKey","","",N,N],[5,"d2i_RSAPublicKey","","",N,N],[5,"i2d_RSAPrivateKey","","",N,N],[5,"d2i_RSAPrivateKey","","",N,N],[5,"RSA_sign","","",N,N],[5,"RSA_verify","","",N,N],[5,"RSA_padding_check_PKCS1_type_2","","",N,N],[5,"SHA1_Init","","",N,N],[5,"SHA1_Update","","",N,N],[5,"SHA1_Final","","",N,N],[5,"SHA1","","",N,N],[5,"SHA224_Init","","",N,N],[5,"SHA224_Update","","",N,N],[5,"SHA224_Final","","",N,N],[5,"SHA224","","",N,N],[5,"SHA256_Init","","",N,N],[5,"SHA256_Update","","",N,N],[5,"SHA256_Final","","",N,N],[5,"SHA256","","",N,N],[5,"SHA384_Init","","",N,N],[5,"SHA384_Update","","",N,N],[5,"SHA384_Final","","",N,N],[5,"SHA384","","",N,N],[5,"SHA512_Init","","",N,N],[5,"SHA512_Update","","",N,N],[5,"SHA512_Final","","",N,N],[5,"SHA512","","",N,N],[5,"SSL_CTX_set_tlsext_use_srtp","","",N,N],[5,"SSL_set_tlsext_use_srtp","","",N,N],[5,"SSL_get_srtp_profiles","","",N,N],[5,"SSL_get_selected_srtp_profile","","",N,N],[5,"SSL_CTX_sess_set_new_cb","","",N,N],[5,"SSL_CTX_sess_set_remove_cb","","",N,N],[5,"SSL_CTX_sess_set_get_cb","","",N,N],[5,"SSL_CTX_set_cookie_generate_cb","","",N,N],[5,"SSL_CTX_set_cookie_verify_cb","","",N,N],[5,"SSL_CTX_set_next_protos_advertised_cb","","",N,N],[5,"SSL_CTX_set_next_proto_select_cb","","",N,N],[5,"SSL_get0_next_proto_negotiated","","",N,N],[5,"SSL_select_next_proto","","",N,N],[5,"SSL_CTX_set_psk_client_callback","","",N,N],[5,"SSL_CTX_set_psk_server_callback","","",N,N],[5,"SSL_get_finished","","",N,N],[5,"SSL_get_peer_finished","","",N,N],[5,"SSL_CTX_set_cipher_list","","",N,N],[5,"SSL_CTX_new","","",N,N],[5,"SSL_CTX_free","","",N,N],[5,"SSL_CTX_get_cert_store","","",N,N],[5,"SSL_get_current_cipher","","",N,N],[5,"SSL_CIPHER_get_bits","","",N,N],[5,"SSL_CIPHER_get_version","","",N,N],[5,"SSL_CIPHER_get_name","","",N,N],[5,"SSL_pending","","",N,N],[5,"SSL_set_bio","","",N,N],[5,"SSL_get_rbio","","",N,N],[5,"SSL_get_wbio","","",N,N],[5,"SSL_set_verify","","",N,N],[5,"SSL_CTX_use_PrivateKey","","",N,N],[5,"SSL_CTX_use_certificate","","",N,N],[5,"SSL_CTX_use_PrivateKey_file","","",N,N],[5,"SSL_CTX_use_certificate_file","","",N,N],[5,"SSL_CTX_use_certificate_chain_file","","",N,N],[5,"SSL_load_client_CA_file","","",N,N],[5,"SSL_load_error_strings","","",N,N],[5,"SSL_state_string","","",N,N],[5,"SSL_state_string_long","","",N,N],[5,"SSL_SESSION_get_id","","",N,N],[5,"SSL_SESSION_free","","",N,N],[5,"i2d_SSL_SESSION","","",N,N],[5,"SSL_set_session","","",N,N],[5,"d2i_SSL_SESSION","","",N,N],[5,"SSL_get_peer_certificate","","",N,N],[5,"SSL_get_peer_cert_chain","","",N,N],[5,"SSL_CTX_set_verify","","",N,N],[5,"SSL_CTX_set_verify_depth","","",N,N],[5,"SSL_CTX_check_private_key","","",N,N],[5,"SSL_CTX_set_session_id_context","","",N,N],[5,"SSL_new","","",N,N],[5,"SSL_free","","",N,N],[5,"SSL_accept","","",N,N],[5,"SSL_connect","","",N,N],[5,"SSL_read","","",N,N],[5,"SSL_write","","",N,N],[5,"SSL_ctrl","","",N,N],[5,"SSL_CTX_ctrl","","",N,N],[5,"SSL_CTX_callback_ctrl","","",N,N],[5,"SSLv3_method","","",N,N],[5,"SSLv23_method","","",N,N],[5,"TLSv1_method","","",N,N],[5,"TLSv1_1_method","","",N,N],[5,"TLSv1_2_method","","",N,N],[5,"DTLSv1_method","","",N,N],[5,"SSL_get_error","","",N,N],[5,"SSL_get_version","","",N,N],[5,"SSL_do_handshake","","",N,N],[5,"SSL_shutdown","","",N,N],[5,"SSL_CTX_set_client_CA_list","","",N,N],[5,"SSL_CTX_set_default_verify_paths","","",N,N],[5,"SSL_CTX_load_verify_locations","","",N,N],[5,"SSL_get_ssl_method","","",N,N],[5,"SSL_set_connect_state","","",N,N],[5,"SSL_set_accept_state","","",N,N],[5,"SSL_library_init","","",N,N],[5,"SSL_CIPHER_description","","",N,N],[5,"SSL_get_certificate","","",N,N],[5,"SSL_get_privatekey","","",N,N],[5,"SSL_set_shutdown","","",N,N],[5,"SSL_get_shutdown","","",N,N],[5,"SSL_version","","",N,N],[5,"SSL_get_session","","",N,N],[5,"SSL_get_SSL_CTX","","",N,N],[5,"SSL_set_SSL_CTX","","",N,N],[5,"SSL_get_verify_result","","",N,N],[5,"SSL_get_ex_new_index","","",N,N],[5,"SSL_set_ex_data","","",N,N],[5,"SSL_get_ex_data","","",N,N],[5,"SSL_CTX_get_ex_new_index","","",N,N],[5,"SSL_CTX_set_ex_data","","",N,N],[5,"SSL_CTX_get_ex_data","","",N,N],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",N,N],[5,"SSL_CTX_set_tmp_dh_callback","","",N,N],[5,"SSL_set_tmp_dh_callback","","",N,N],[5,"SSL_CTX_set_tmp_ecdh_callback","","",N,N],[5,"SSL_set_tmp_ecdh_callback","","",N,N],[5,"SSL_get_current_compression","","",N,N],[5,"SSL_COMP_get_name","","",N,N],[5,"sk_num","","",N,N],[5,"sk_value","","",N,N],[5,"sk_new_null","","",N,N],[5,"sk_free","","",N,N],[5,"sk_pop_free","","",N,N],[5,"sk_push","","",N,N],[5,"sk_pop","","",N,N],[5,"SSL_get_servername","","",N,N],[5,"SSL_export_keying_material","","",N,N],[5,"X509_verify_cert_error_string","","",N,N],[5,"X509_sign","","",N,N],[5,"X509_digest","","",N,N],[5,"X509_REQ_sign","","",N,N],[5,"i2d_X509_bio","","",N,N],[5,"i2d_X509_REQ_bio","","",N,N],[5,"i2d_PrivateKey_bio","","",N,N],[5,"i2d_PUBKEY_bio","","",N,N],[5,"i2d_PUBKEY","","",N,N],[5,"d2i_PUBKEY","","",N,N],[5,"d2i_RSA_PUBKEY","","",N,N],[5,"i2d_RSA_PUBKEY","","",N,N],[5,"d2i_DSA_PUBKEY","","",N,N],[5,"i2d_DSA_PUBKEY","","",N,N],[5,"i2d_PrivateKey","","",N,N],[5,"d2i_ECPrivateKey","","",N,N],[5,"i2d_ECPrivateKey","","",N,N],[5,"X509_gmtime_adj","","",N,N],[5,"X509_to_X509_REQ","","",N,N],[5,"X509_ALGOR_free","","",N,N],[5,"X509_REQ_new","","",N,N],[5,"X509_REQ_free","","",N,N],[5,"d2i_X509_REQ","","",N,N],[5,"i2d_X509_REQ","","",N,N],[5,"X509_EXTENSION_free","","",N,N],[5,"X509_NAME_ENTRY_free","","",N,N],[5,"X509_NAME_new","","",N,N],[5,"X509_NAME_free","","",N,N],[5,"X509_new","","",N,N],[5,"X509_free","","",N,N],[5,"i2d_X509","","",N,N],[5,"d2i_X509","","",N,N],[5,"X509_get_pubkey","","",N,N],[5,"X509_set_version","","",N,N],[5,"X509_set_serialNumber","","",N,N],[5,"X509_get_serialNumber","","",N,N],[5,"X509_set_issuer_name","","",N,N],[5,"X509_get_issuer_name","","",N,N],[5,"X509_set_subject_name","","",N,N],[5,"X509_get_subject_name","","",N,N],[5,"X509_set_notBefore","","",N,N],[5,"X509_set_notAfter","","",N,N],[5,"X509_REQ_set_version","","",N,N],[5,"X509_REQ_set_subject_name","","",N,N],[5,"X509_REQ_set_pubkey","","",N,N],[5,"X509_REQ_get_pubkey","","",N,N],[5,"X509_REQ_get_extensions","","",N,N],[5,"X509_REQ_add_extensions","","",N,N],[5,"X509_set_pubkey","","",N,N],[5,"X509_NAME_entry_count","","",N,N],[5,"X509_NAME_get_index_by_NID","","",N,N],[5,"X509_NAME_get_entry","","",N,N],[5,"X509_NAME_add_entry_by_NID","","",N,N],[5,"X509_NAME_ENTRY_get_object","","",N,N],[5,"X509_NAME_ENTRY_get_data","","",N,N],[5,"X509_NAME_add_entry_by_txt","","",N,N],[5,"X509_add_ext","","",N,N],[5,"X509_get_ext_d2i","","",N,N],[5,"X509_verify_cert","","",N,N],[5,"X509_STORE_new","","",N,N],[5,"X509_STORE_free","","",N,N],[5,"X509_STORE_CTX_new","","",N,N],[5,"X509_STORE_CTX_free","","",N,N],[5,"X509_STORE_CTX_init","","",N,N],[5,"X509_STORE_CTX_cleanup","","",N,N],[5,"X509_STORE_add_cert","","",N,N],[5,"X509_STORE_set_default_paths","","",N,N],[5,"X509_STORE_CTX_get_ex_data","","",N,N],[5,"X509_STORE_CTX_get_error","","",N,N],[5,"X509_STORE_CTX_set_error","","",N,N],[5,"X509_STORE_CTX_get_error_depth","","",N,N],[5,"X509_STORE_CTX_get_current_cert","","",N,N],[5,"X509_STORE_CTX_get_chain","","",N,N],[5,"GENERAL_NAME_free","","",N,N],[5,"X509V3_EXT_nconf_nid","","",N,N],[5,"X509V3_EXT_nconf","","",N,N],[5,"X509_check_issued","","",N,N],[5,"X509V3_set_nconf","","",N,N],[5,"X509V3_set_ctx","","",N,N],[5,"X509_get1_ocsp","","",N,N],[6,"bio_info_cb","","",N,N],[6,"BN_ULONG","","",N,N],[6,"CRYPTO_EX_new","","",N,N],[6,"CRYPTO_EX_dup","","",N,N],[6,"CRYPTO_EX_free","","",N,N],[6,"pem_password_cb","","",N,N],[6,"SHA_LONG","","",N,N],[6,"SHA_LONG64","","",N,N],[6,"tls_session_ticket_ext_cb_fn","","",N,N],[6,"tls_session_secret_cb_fn","","",N,N],[6,"GEN_SESSION_CB","","",N,N],[6,"PasswordCallback","","",N,N],[17,"AES_ENCRYPT","","",N,N],[17,"AES_DECRYPT","","",N,N],[17,"AES_MAXNR","","",N,N],[17,"AES_BLOCK_SIZE","","",N,N],[17,"V_ASN1_UTCTIME","","",N,N],[17,"V_ASN1_GENERALIZEDTIME","","",N,N],[17,"MBSTRING_FLAG","","",N,N],[17,"MBSTRING_UTF8","","",N,N],[17,"MBSTRING_ASC","","",N,N],[17,"MBSTRING_BMP","","",N,N],[17,"MBSTRING_UNIV","","",N,N],[17,"BIO_TYPE_NONE","","",N,N],[17,"BIO_CTRL_EOF","","",N,N],[17,"BIO_CTRL_INFO","","",N,N],[17,"BIO_CTRL_FLUSH","","",N,N],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",N,N],[17,"BIO_FLAGS_READ","","",N,N],[17,"BIO_FLAGS_WRITE","","",N,N],[17,"BIO_FLAGS_IO_SPECIAL","","",N,N],[17,"BIO_FLAGS_RWS","","",N,N],[17,"BIO_FLAGS_SHOULD_RETRY","","",N,N],[17,"CMS_TEXT","","",N,N],[17,"CMS_NOCERTS","","",N,N],[17,"CMS_NO_CONTENT_VERIFY","","",N,N],[17,"CMS_NO_ATTR_VERIFY","","",N,N],[17,"CMS_NOSIGS","","",N,N],[17,"CMS_NOINTERN","","",N,N],[17,"CMS_NO_SIGNER_CERT_VERIFY","","",N,N],[17,"CMS_NOVERIFY","","",N,N],[17,"CMS_DETACHED","","",N,N],[17,"CMS_BINARY","","",N,N],[17,"CMS_NOATTR","","",N,N],[17,"CMS_NOSMIMECAP","","",N,N],[17,"CMS_NOOLDMIMETYPE","","",N,N],[17,"CMS_CRLFEOL","","",N,N],[17,"CMS_STREAM","","",N,N],[17,"CMS_NOCRL","","",N,N],[17,"CMS_PARTIAL","","",N,N],[17,"CMS_REUSE_DIGEST","","",N,N],[17,"CMS_USE_KEYID","","",N,N],[17,"CMS_DEBUG_DECRYPT","","",N,N],[17,"CRYPTO_LOCK_X509","","",N,N],[17,"CRYPTO_LOCK_SSL_CTX","","",N,N],[17,"CRYPTO_LOCK_SSL_SESSION","","",N,N],[17,"SSLEAY_VERSION","","",N,N],[17,"SSLEAY_CFLAGS","","",N,N],[17,"SSLEAY_BUILT_ON","","",N,N],[17,"SSLEAY_PLATFORM","","",N,N],[17,"SSLEAY_DIR","","",N,N],[17,"CRYPTO_LOCK","","",N,N],[17,"DTLS1_COOKIE_LENGTH","","",N,N],[17,"OPENSSL_EC_NAMED_CURVE","","",N,N],[17,"ERR_TXT_MALLOCED","","",N,N],[17,"ERR_TXT_STRING","","",N,N],[17,"ERR_LIB_PEM","","",N,N],[17,"EVP_MAX_MD_SIZE","","",N,N],[17,"PKCS5_SALT_LEN","","",N,N],[17,"PKCS12_DEFAULT_ITER","","",N,N],[17,"EVP_PKEY_RSA","","",N,N],[17,"EVP_PKEY_DSA","","",N,N],[17,"EVP_PKEY_DH","","",N,N],[17,"EVP_PKEY_EC","","",N,N],[17,"EVP_PKEY_HMAC","","",N,N],[17,"EVP_PKEY_CMAC","","",N,N],[17,"EVP_CTRL_GCM_SET_IVLEN","","",N,N],[17,"EVP_CTRL_GCM_GET_TAG","","",N,N],[17,"EVP_CTRL_GCM_SET_TAG","","",N,N],[17,"EVP_PKEY_OP_KEYGEN","","",N,N],[17,"EVP_PKEY_OP_SIGN","","",N,N],[17,"EVP_PKEY_OP_VERIFY","","",N,N],[17,"EVP_PKEY_OP_VERIFYRECOVER","","",N,N],[17,"EVP_PKEY_OP_SIGNCTX","","",N,N],[17,"EVP_PKEY_OP_VERIFYCTX","","",N,N],[17,"EVP_PKEY_OP_ENCRYPT","","",N,N],[17,"EVP_PKEY_OP_DECRYPT","","",N,N],[17,"EVP_PKEY_OP_TYPE_SIG","","",N,N],[17,"EVP_PKEY_OP_TYPE_CRYPT","","",N,N],[17,"EVP_PKEY_CTRL_SET_MAC_KEY","","",N,N],[17,"EVP_PKEY_CTRL_CIPHER","","",N,N],[17,"EVP_PKEY_ALG_CTRL","","",N,N],[17,"NID_undef","","",N,N],[17,"NID_itu_t","","",N,N],[17,"NID_ccitt","","",N,N],[17,"NID_iso","","",N,N],[17,"NID_joint_iso_itu_t","","",N,N],[17,"NID_joint_iso_ccitt","","",N,N],[17,"NID_member_body","","",N,N],[17,"NID_identified_organization","","",N,N],[17,"NID_hmac_md5","","",N,N],[17,"NID_hmac_sha1","","",N,N],[17,"NID_certicom_arc","","",N,N],[17,"NID_international_organizations","","",N,N],[17,"NID_wap","","",N,N],[17,"NID_wap_wsg","","",N,N],[17,"NID_selected_attribute_types","","",N,N],[17,"NID_clearance","","",N,N],[17,"NID_ISO_US","","",N,N],[17,"NID_X9_57","","",N,N],[17,"NID_X9cm","","",N,N],[17,"NID_dsa","","",N,N],[17,"NID_dsaWithSHA1","","",N,N],[17,"NID_ansi_X9_62","","",N,N],[17,"NID_X9_62_prime_field","","",N,N],[17,"NID_X9_62_characteristic_two_field","","",N,N],[17,"NID_X9_62_id_characteristic_two_basis","","",N,N],[17,"NID_X9_62_onBasis","","",N,N],[17,"NID_X9_62_tpBasis","","",N,N],[17,"NID_X9_62_ppBasis","","",N,N],[17,"NID_X9_62_id_ecPublicKey","","",N,N],[17,"NID_X9_62_c2pnb163v1","","",N,N],[17,"NID_X9_62_c2pnb163v2","","",N,N],[17,"NID_X9_62_c2pnb163v3","","",N,N],[17,"NID_X9_62_c2pnb176v1","","",N,N],[17,"NID_X9_62_c2tnb191v1","","",N,N],[17,"NID_X9_62_c2tnb191v2","","",N,N],[17,"NID_X9_62_c2tnb191v3","","",N,N],[17,"NID_X9_62_c2onb191v4","","",N,N],[17,"NID_X9_62_c2onb191v5","","",N,N],[17,"NID_X9_62_c2pnb208w1","","",N,N],[17,"NID_X9_62_c2tnb239v1","","",N,N],[17,"NID_X9_62_c2tnb239v2","","",N,N],[17,"NID_X9_62_c2tnb239v3","","",N,N],[17,"NID_X9_62_c2onb239v4","","",N,N],[17,"NID_X9_62_c2onb239v5","","",N,N],[17,"NID_X9_62_c2pnb272w1","","",N,N],[17,"NID_X9_62_c2pnb304w1","","",N,N],[17,"NID_X9_62_c2tnb359v1","","",N,N],[17,"NID_X9_62_c2pnb368w1","","",N,N],[17,"NID_X9_62_c2tnb431r1","","",N,N],[17,"NID_X9_62_prime192v1","","",N,N],[17,"NID_X9_62_prime192v2","","",N,N],[17,"NID_X9_62_prime192v3","","",N,N],[17,"NID_X9_62_prime239v1","","",N,N],[17,"NID_X9_62_prime239v2","","",N,N],[17,"NID_X9_62_prime239v3","","",N,N],[17,"NID_X9_62_prime256v1","","",N,N],[17,"NID_ecdsa_with_SHA1","","",N,N],[17,"NID_ecdsa_with_Recommended","","",N,N],[17,"NID_ecdsa_with_Specified","","",N,N],[17,"NID_ecdsa_with_SHA224","","",N,N],[17,"NID_ecdsa_with_SHA256","","",N,N],[17,"NID_ecdsa_with_SHA384","","",N,N],[17,"NID_ecdsa_with_SHA512","","",N,N],[17,"NID_secp112r1","","",N,N],[17,"NID_secp112r2","","",N,N],[17,"NID_secp128r1","","",N,N],[17,"NID_secp128r2","","",N,N],[17,"NID_secp160k1","","",N,N],[17,"NID_secp160r1","","",N,N],[17,"NID_secp160r2","","",N,N],[17,"NID_secp192k1","","",N,N],[17,"NID_secp224k1","","",N,N],[17,"NID_secp224r1","","",N,N],[17,"NID_secp256k1","","",N,N],[17,"NID_secp384r1","","",N,N],[17,"NID_secp521r1","","",N,N],[17,"NID_sect113r1","","",N,N],[17,"NID_sect113r2","","",N,N],[17,"NID_sect131r1","","",N,N],[17,"NID_sect131r2","","",N,N],[17,"NID_sect163k1","","",N,N],[17,"NID_sect163r1","","",N,N],[17,"NID_sect163r2","","",N,N],[17,"NID_sect193r1","","",N,N],[17,"NID_sect193r2","","",N,N],[17,"NID_sect233k1","","",N,N],[17,"NID_sect233r1","","",N,N],[17,"NID_sect239k1","","",N,N],[17,"NID_sect283k1","","",N,N],[17,"NID_sect283r1","","",N,N],[17,"NID_sect409k1","","",N,N],[17,"NID_sect409r1","","",N,N],[17,"NID_sect571k1","","",N,N],[17,"NID_sect571r1","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls1","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls3","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls4","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls5","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls6","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls7","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls8","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls9","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls10","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls11","","",N,N],[17,"NID_wap_wsg_idm_ecid_wtls12","","",N,N],[17,"NID_cast5_cbc","","",N,N],[17,"NID_cast5_ecb","","",N,N],[17,"NID_cast5_cfb64","","",N,N],[17,"NID_cast5_ofb64","","",N,N],[17,"NID_pbeWithMD5AndCast5_CBC","","",N,N],[17,"NID_id_PasswordBasedMAC","","",N,N],[17,"NID_id_DHBasedMac","","",N,N],[17,"NID_rsadsi","","",N,N],[17,"NID_pkcs","","",N,N],[17,"NID_pkcs1","","",N,N],[17,"NID_rsaEncryption","","",N,N],[17,"NID_md2WithRSAEncryption","","",N,N],[17,"NID_md4WithRSAEncryption","","",N,N],[17,"NID_md5WithRSAEncryption","","",N,N],[17,"NID_sha1WithRSAEncryption","","",N,N],[17,"NID_rsaesOaep","","",N,N],[17,"NID_mgf1","","",N,N],[17,"NID_rsassaPss","","",N,N],[17,"NID_sha256WithRSAEncryption","","",N,N],[17,"NID_sha384WithRSAEncryption","","",N,N],[17,"NID_sha512WithRSAEncryption","","",N,N],[17,"NID_sha224WithRSAEncryption","","",N,N],[17,"NID_pkcs3","","",N,N],[17,"NID_dhKeyAgreement","","",N,N],[17,"NID_pkcs5","","",N,N],[17,"NID_pbeWithMD2AndDES_CBC","","",N,N],[17,"NID_pbeWithMD5AndDES_CBC","","",N,N],[17,"NID_pbeWithMD2AndRC2_CBC","","",N,N],[17,"NID_pbeWithMD5AndRC2_CBC","","",N,N],[17,"NID_pbeWithSHA1AndDES_CBC","","",N,N],[17,"NID_pbeWithSHA1AndRC2_CBC","","",N,N],[17,"NID_id_pbkdf2","","",N,N],[17,"NID_pbes2","","",N,N],[17,"NID_pbmac1","","",N,N],[17,"NID_pkcs7","","",N,N],[17,"NID_pkcs7_data","","",N,N],[17,"NID_pkcs7_signed","","",N,N],[17,"NID_pkcs7_enveloped","","",N,N],[17,"NID_pkcs7_signedAndEnveloped","","",N,N],[17,"NID_pkcs7_digest","","",N,N],[17,"NID_pkcs7_encrypted","","",N,N],[17,"NID_pkcs9","","",N,N],[17,"NID_pkcs9_emailAddress","","",N,N],[17,"NID_pkcs9_unstructuredName","","",N,N],[17,"NID_pkcs9_contentType","","",N,N],[17,"NID_pkcs9_messageDigest","","",N,N],[17,"NID_pkcs9_signingTime","","",N,N],[17,"NID_pkcs9_countersignature","","",N,N],[17,"NID_pkcs9_challengePassword","","",N,N],[17,"NID_pkcs9_unstructuredAddress","","",N,N],[17,"NID_pkcs9_extCertAttributes","","",N,N],[17,"NID_ext_req","","",N,N],[17,"NID_SMIMECapabilities","","",N,N],[17,"NID_SMIME","","",N,N],[17,"NID_id_smime_mod","","",N,N],[17,"NID_id_smime_ct","","",N,N],[17,"NID_id_smime_aa","","",N,N],[17,"NID_id_smime_alg","","",N,N],[17,"NID_id_smime_cd","","",N,N],[17,"NID_id_smime_spq","","",N,N],[17,"NID_id_smime_cti","","",N,N],[17,"NID_id_smime_mod_cms","","",N,N],[17,"NID_id_smime_mod_ess","","",N,N],[17,"NID_id_smime_mod_oid","","",N,N],[17,"NID_id_smime_mod_msg_v3","","",N,N],[17,"NID_id_smime_mod_ets_eSignature_88","","",N,N],[17,"NID_id_smime_mod_ets_eSignature_97","","",N,N],[17,"NID_id_smime_mod_ets_eSigPolicy_88","","",N,N],[17,"NID_id_smime_mod_ets_eSigPolicy_97","","",N,N],[17,"NID_id_smime_ct_receipt","","",N,N],[17,"NID_id_smime_ct_authData","","",N,N],[17,"NID_id_smime_ct_publishCert","","",N,N],[17,"NID_id_smime_ct_TSTInfo","","",N,N],[17,"NID_id_smime_ct_TDTInfo","","",N,N],[17,"NID_id_smime_ct_contentInfo","","",N,N],[17,"NID_id_smime_ct_DVCSRequestData","","",N,N],[17,"NID_id_smime_ct_DVCSResponseData","","",N,N],[17,"NID_id_smime_ct_compressedData","","",N,N],[17,"NID_id_ct_asciiTextWithCRLF","","",N,N],[17,"NID_id_smime_aa_receiptRequest","","",N,N],[17,"NID_id_smime_aa_securityLabel","","",N,N],[17,"NID_id_smime_aa_mlExpandHistory","","",N,N],[17,"NID_id_smime_aa_contentHint","","",N,N],[17,"NID_id_smime_aa_msgSigDigest","","",N,N],[17,"NID_id_smime_aa_encapContentType","","",N,N],[17,"NID_id_smime_aa_contentIdentifier","","",N,N],[17,"NID_id_smime_aa_macValue","","",N,N],[17,"NID_id_smime_aa_equivalentLabels","","",N,N],[17,"NID_id_smime_aa_contentReference","","",N,N],[17,"NID_id_smime_aa_encrypKeyPref","","",N,N],[17,"NID_id_smime_aa_signingCertificate","","",N,N],[17,"NID_id_smime_aa_smimeEncryptCerts","","",N,N],[17,"NID_id_smime_aa_timeStampToken","","",N,N],[17,"NID_id_smime_aa_ets_sigPolicyId","","",N,N],[17,"NID_id_smime_aa_ets_commitmentType","","",N,N],[17,"NID_id_smime_aa_ets_signerLocation","","",N,N],[17,"NID_id_smime_aa_ets_signerAttr","","",N,N],[17,"NID_id_smime_aa_ets_otherSigCert","","",N,N],[17,"NID_id_smime_aa_ets_contentTimestamp","","",N,N],[17,"NID_id_smime_aa_ets_CertificateRefs","","",N,N],[17,"NID_id_smime_aa_ets_RevocationRefs","","",N,N],[17,"NID_id_smime_aa_ets_certValues","","",N,N],[17,"NID_id_smime_aa_ets_revocationValues","","",N,N],[17,"NID_id_smime_aa_ets_escTimeStamp","","",N,N],[17,"NID_id_smime_aa_ets_certCRLTimestamp","","",N,N],[17,"NID_id_smime_aa_ets_archiveTimeStamp","","",N,N],[17,"NID_id_smime_aa_signatureType","","",N,N],[17,"NID_id_smime_aa_dvcs_dvc","","",N,N],[17,"NID_id_smime_alg_ESDHwith3DES","","",N,N],[17,"NID_id_smime_alg_ESDHwithRC2","","",N,N],[17,"NID_id_smime_alg_3DESwrap","","",N,N],[17,"NID_id_smime_alg_RC2wrap","","",N,N],[17,"NID_id_smime_alg_ESDH","","",N,N],[17,"NID_id_smime_alg_CMS3DESwrap","","",N,N],[17,"NID_id_smime_alg_CMSRC2wrap","","",N,N],[17,"NID_id_alg_PWRI_KEK","","",N,N],[17,"NID_id_smime_cd_ldap","","",N,N],[17,"NID_id_smime_spq_ets_sqt_uri","","",N,N],[17,"NID_id_smime_spq_ets_sqt_unotice","","",N,N],[17,"NID_id_smime_cti_ets_proofOfOrigin","","",N,N],[17,"NID_id_smime_cti_ets_proofOfReceipt","","",N,N],[17,"NID_id_smime_cti_ets_proofOfDelivery","","",N,N],[17,"NID_id_smime_cti_ets_proofOfSender","","",N,N],[17,"NID_id_smime_cti_ets_proofOfApproval","","",N,N],[17,"NID_id_smime_cti_ets_proofOfCreation","","",N,N],[17,"NID_friendlyName","","",N,N],[17,"NID_localKeyID","","",N,N],[17,"NID_ms_csp_name","","",N,N],[17,"NID_LocalKeySet","","",N,N],[17,"NID_x509Certificate","","",N,N],[17,"NID_sdsiCertificate","","",N,N],[17,"NID_x509Crl","","",N,N],[17,"NID_pbe_WithSHA1And128BitRC4","","",N,N],[17,"NID_pbe_WithSHA1And40BitRC4","","",N,N],[17,"NID_pbe_WithSHA1And3_Key_TripleDES_CBC","","",N,N],[17,"NID_pbe_WithSHA1And2_Key_TripleDES_CBC","","",N,N],[17,"NID_pbe_WithSHA1And128BitRC2_CBC","","",N,N],[17,"NID_pbe_WithSHA1And40BitRC2_CBC","","",N,N],[17,"NID_keyBag","","",N,N],[17,"NID_pkcs8ShroudedKeyBag","","",N,N],[17,"NID_certBag","","",N,N],[17,"NID_crlBag","","",N,N],[17,"NID_secretBag","","",N,N],[17,"NID_safeContentsBag","","",N,N],[17,"NID_md2","","",N,N],[17,"NID_md4","","",N,N],[17,"NID_md5","","",N,N],[17,"NID_md5_sha1","","",N,N],[17,"NID_hmacWithMD5","","",N,N],[17,"NID_hmacWithSHA1","","",N,N],[17,"NID_hmacWithSHA224","","",N,N],[17,"NID_hmacWithSHA256","","",N,N],[17,"NID_hmacWithSHA384","","",N,N],[17,"NID_hmacWithSHA512","","",N,N],[17,"NID_rc2_cbc","","",N,N],[17,"NID_rc2_ecb","","",N,N],[17,"NID_rc2_cfb64","","",N,N],[17,"NID_rc2_ofb64","","",N,N],[17,"NID_rc2_40_cbc","","",N,N],[17,"NID_rc2_64_cbc","","",N,N],[17,"NID_rc4","","",N,N],[17,"NID_rc4_40","","",N,N],[17,"NID_des_ede3_cbc","","",N,N],[17,"NID_rc5_cbc","","",N,N],[17,"NID_rc5_ecb","","",N,N],[17,"NID_rc5_cfb64","","",N,N],[17,"NID_rc5_ofb64","","",N,N],[17,"NID_ms_ext_req","","",N,N],[17,"NID_ms_code_ind","","",N,N],[17,"NID_ms_code_com","","",N,N],[17,"NID_ms_ctl_sign","","",N,N],[17,"NID_ms_sgc","","",N,N],[17,"NID_ms_efs","","",N,N],[17,"NID_ms_smartcard_login","","",N,N],[17,"NID_ms_upn","","",N,N],[17,"NID_idea_cbc","","",N,N],[17,"NID_idea_ecb","","",N,N],[17,"NID_idea_cfb64","","",N,N],[17,"NID_idea_ofb64","","",N,N],[17,"NID_bf_cbc","","",N,N],[17,"NID_bf_ecb","","",N,N],[17,"NID_bf_cfb64","","",N,N],[17,"NID_bf_ofb64","","",N,N],[17,"NID_id_pkix","","",N,N],[17,"NID_id_pkix_mod","","",N,N],[17,"NID_id_pe","","",N,N],[17,"NID_id_qt","","",N,N],[17,"NID_id_kp","","",N,N],[17,"NID_id_it","","",N,N],[17,"NID_id_pkip","","",N,N],[17,"NID_id_alg","","",N,N],[17,"NID_id_cmc","","",N,N],[17,"NID_id_on","","",N,N],[17,"NID_id_pda","","",N,N],[17,"NID_id_aca","","",N,N],[17,"NID_id_qcs","","",N,N],[17,"NID_id_cct","","",N,N],[17,"NID_id_ppl","","",N,N],[17,"NID_id_ad","","",N,N],[17,"NID_id_pkix1_explicit_88","","",N,N],[17,"NID_id_pkix1_implicit_88","","",N,N],[17,"NID_id_pkix1_explicit_93","","",N,N],[17,"NID_id_pkix1_implicit_93","","",N,N],[17,"NID_id_mod_crmf","","",N,N],[17,"NID_id_mod_cmc","","",N,N],[17,"NID_id_mod_kea_profile_88","","",N,N],[17,"NID_id_mod_kea_profile_93","","",N,N],[17,"NID_id_mod_cmp","","",N,N],[17,"NID_id_mod_qualified_cert_88","","",N,N],[17,"NID_id_mod_qualified_cert_93","","",N,N],[17,"NID_id_mod_attribute_cert","","",N,N],[17,"NID_id_mod_timestamp_protocol","","",N,N],[17,"NID_id_mod_ocsp","","",N,N],[17,"NID_id_mod_dvcs","","",N,N],[17,"NID_id_mod_cmp2000","","",N,N],[17,"NID_info_access","","",N,N],[17,"NID_biometricInfo","","",N,N],[17,"NID_qcStatements","","",N,N],[17,"NID_ac_auditEntity","","",N,N],[17,"NID_ac_targeting","","",N,N],[17,"NID_aaControls","","",N,N],[17,"NID_sbgp_ipAddrBlock","","",N,N],[17,"NID_sbgp_autonomousSysNum","","",N,N],[17,"NID_sbgp_routerIdentifier","","",N,N],[17,"NID_ac_proxying","","",N,N],[17,"NID_sinfo_access","","",N,N],[17,"NID_proxyCertInfo","","",N,N],[17,"NID_id_qt_cps","","",N,N],[17,"NID_id_qt_unotice","","",N,N],[17,"NID_textNotice","","",N,N],[17,"NID_server_auth","","",N,N],[17,"NID_client_auth","","",N,N],[17,"NID_code_sign","","",N,N],[17,"NID_email_protect","","",N,N],[17,"NID_ipsecEndSystem","","",N,N],[17,"NID_ipsecTunnel","","",N,N],[17,"NID_ipsecUser","","",N,N],[17,"NID_time_stamp","","",N,N],[17,"NID_OCSP_sign","","",N,N],[17,"NID_dvcs","","",N,N],[17,"NID_id_it_caProtEncCert","","",N,N],[17,"NID_id_it_signKeyPairTypes","","",N,N],[17,"NID_id_it_encKeyPairTypes","","",N,N],[17,"NID_id_it_preferredSymmAlg","","",N,N],[17,"NID_id_it_caKeyUpdateInfo","","",N,N],[17,"NID_id_it_currentCRL","","",N,N],[17,"NID_id_it_unsupportedOIDs","","",N,N],[17,"NID_id_it_subscriptionRequest","","",N,N],[17,"NID_id_it_subscriptionResponse","","",N,N],[17,"NID_id_it_keyPairParamReq","","",N,N],[17,"NID_id_it_keyPairParamRep","","",N,N],[17,"NID_id_it_revPassphrase","","",N,N],[17,"NID_id_it_implicitConfirm","","",N,N],[17,"NID_id_it_confirmWaitTime","","",N,N],[17,"NID_id_it_origPKIMessage","","",N,N],[17,"NID_id_it_suppLangTags","","",N,N],[17,"NID_id_regCtrl","","",N,N],[17,"NID_id_regInfo","","",N,N],[17,"NID_id_regCtrl_regToken","","",N,N],[17,"NID_id_regCtrl_authenticator","","",N,N],[17,"NID_id_regCtrl_pkiPublicationInfo","","",N,N],[17,"NID_id_regCtrl_pkiArchiveOptions","","",N,N],[17,"NID_id_regCtrl_oldCertID","","",N,N],[17,"NID_id_regCtrl_protocolEncrKey","","",N,N],[17,"NID_id_regInfo_utf8Pairs","","",N,N],[17,"NID_id_regInfo_certReq","","",N,N],[17,"NID_id_alg_des40","","",N,N],[17,"NID_id_alg_noSignature","","",N,N],[17,"NID_id_alg_dh_sig_hmac_sha1","","",N,N],[17,"NID_id_alg_dh_pop","","",N,N],[17,"NID_id_cmc_statusInfo","","",N,N],[17,"NID_id_cmc_identification","","",N,N],[17,"NID_id_cmc_identityProof","","",N,N],[17,"NID_id_cmc_dataReturn","","",N,N],[17,"NID_id_cmc_transactionId","","",N,N],[17,"NID_id_cmc_senderNonce","","",N,N],[17,"NID_id_cmc_recipientNonce","","",N,N],[17,"NID_id_cmc_addExtensions","","",N,N],[17,"NID_id_cmc_encryptedPOP","","",N,N],[17,"NID_id_cmc_decryptedPOP","","",N,N],[17,"NID_id_cmc_lraPOPWitness","","",N,N],[17,"NID_id_cmc_getCert","","",N,N],[17,"NID_id_cmc_getCRL","","",N,N],[17,"NID_id_cmc_revokeRequest","","",N,N],[17,"NID_id_cmc_regInfo","","",N,N],[17,"NID_id_cmc_responseInfo","","",N,N],[17,"NID_id_cmc_queryPending","","",N,N],[17,"NID_id_cmc_popLinkRandom","","",N,N],[17,"NID_id_cmc_popLinkWitness","","",N,N],[17,"NID_id_cmc_confirmCertAcceptance","","",N,N],[17,"NID_id_on_personalData","","",N,N],[17,"NID_id_on_permanentIdentifier","","",N,N],[17,"NID_id_pda_dateOfBirth","","",N,N],[17,"NID_id_pda_placeOfBirth","","",N,N],[17,"NID_id_pda_gender","","",N,N],[17,"NID_id_pda_countryOfCitizenship","","",N,N],[17,"NID_id_pda_countryOfResidence","","",N,N],[17,"NID_id_aca_authenticationInfo","","",N,N],[17,"NID_id_aca_accessIdentity","","",N,N],[17,"NID_id_aca_chargingIdentity","","",N,N],[17,"NID_id_aca_group","","",N,N],[17,"NID_id_aca_role","","",N,N],[17,"NID_id_aca_encAttrs","","",N,N],[17,"NID_id_qcs_pkixQCSyntax_v1","","",N,N],[17,"NID_id_cct_crs","","",N,N],[17,"NID_id_cct_PKIData","","",N,N],[17,"NID_id_cct_PKIResponse","","",N,N],[17,"NID_id_ppl_anyLanguage","","",N,N],[17,"NID_id_ppl_inheritAll","","",N,N],[17,"NID_Independent","","",N,N],[17,"NID_ad_OCSP","","",N,N],[17,"NID_ad_ca_issuers","","",N,N],[17,"NID_ad_timeStamping","","",N,N],[17,"NID_ad_dvcs","","",N,N],[17,"NID_caRepository","","",N,N],[17,"NID_id_pkix_OCSP_basic","","",N,N],[17,"NID_id_pkix_OCSP_Nonce","","",N,N],[17,"NID_id_pkix_OCSP_CrlID","","",N,N],[17,"NID_id_pkix_OCSP_acceptableResponses","","",N,N],[17,"NID_id_pkix_OCSP_noCheck","","",N,N],[17,"NID_id_pkix_OCSP_archiveCutoff","","",N,N],[17,"NID_id_pkix_OCSP_serviceLocator","","",N,N],[17,"NID_id_pkix_OCSP_extendedStatus","","",N,N],[17,"NID_id_pkix_OCSP_valid","","",N,N],[17,"NID_id_pkix_OCSP_path","","",N,N],[17,"NID_id_pkix_OCSP_trustRoot","","",N,N],[17,"NID_algorithm","","",N,N],[17,"NID_md5WithRSA","","",N,N],[17,"NID_des_ecb","","",N,N],[17,"NID_des_cbc","","",N,N],[17,"NID_des_ofb64","","",N,N],[17,"NID_des_cfb64","","",N,N],[17,"NID_rsaSignature","","",N,N],[17,"NID_dsa_2","","",N,N],[17,"NID_dsaWithSHA","","",N,N],[17,"NID_shaWithRSAEncryption","","",N,N],[17,"NID_des_ede_ecb","","",N,N],[17,"NID_des_ede3_ecb","","",N,N],[17,"NID_des_ede_cbc","","",N,N],[17,"NID_des_ede_cfb64","","",N,N],[17,"NID_des_ede3_cfb64","","",N,N],[17,"NID_des_ede_ofb64","","",N,N],[17,"NID_des_ede3_ofb64","","",N,N],[17,"NID_desx_cbc","","",N,N],[17,"NID_sha","","",N,N],[17,"NID_sha1","","",N,N],[17,"NID_dsaWithSHA1_2","","",N,N],[17,"NID_sha1WithRSA","","",N,N],[17,"NID_ripemd160","","",N,N],[17,"NID_ripemd160WithRSA","","",N,N],[17,"NID_sxnet","","",N,N],[17,"NID_X500","","",N,N],[17,"NID_X509","","",N,N],[17,"NID_commonName","","",N,N],[17,"NID_surname","","",N,N],[17,"NID_serialNumber","","",N,N],[17,"NID_countryName","","",N,N],[17,"NID_localityName","","",N,N],[17,"NID_stateOrProvinceName","","",N,N],[17,"NID_streetAddress","","",N,N],[17,"NID_organizationName","","",N,N],[17,"NID_organizationalUnitName","","",N,N],[17,"NID_title","","",N,N],[17,"NID_description","","",N,N],[17,"NID_searchGuide","","",N,N],[17,"NID_businessCategory","","",N,N],[17,"NID_postalAddress","","",N,N],[17,"NID_postalCode","","",N,N],[17,"NID_postOfficeBox","","",N,N],[17,"NID_physicalDeliveryOfficeName","","",N,N],[17,"NID_telephoneNumber","","",N,N],[17,"NID_telexNumber","","",N,N],[17,"NID_teletexTerminalIdentifier","","",N,N],[17,"NID_facsimileTelephoneNumber","","",N,N],[17,"NID_x121Address","","",N,N],[17,"NID_internationaliSDNNumber","","",N,N],[17,"NID_registeredAddress","","",N,N],[17,"NID_destinationIndicator","","",N,N],[17,"NID_preferredDeliveryMethod","","",N,N],[17,"NID_presentationAddress","","",N,N],[17,"NID_supportedApplicationContext","","",N,N],[17,"NID_member","","",N,N],[17,"NID_owner","","",N,N],[17,"NID_roleOccupant","","",N,N],[17,"NID_seeAlso","","",N,N],[17,"NID_userPassword","","",N,N],[17,"NID_userCertificate","","",N,N],[17,"NID_cACertificate","","",N,N],[17,"NID_authorityRevocationList","","",N,N],[17,"NID_certificateRevocationList","","",N,N],[17,"NID_crossCertificatePair","","",N,N],[17,"NID_name","","",N,N],[17,"NID_givenName","","",N,N],[17,"NID_initials","","",N,N],[17,"NID_generationQualifier","","",N,N],[17,"NID_x500UniqueIdentifier","","",N,N],[17,"NID_dnQualifier","","",N,N],[17,"NID_enhancedSearchGuide","","",N,N],[17,"NID_protocolInformation","","",N,N],[17,"NID_distinguishedName","","",N,N],[17,"NID_uniqueMember","","",N,N],[17,"NID_houseIdentifier","","",N,N],[17,"NID_supportedAlgorithms","","",N,N],[17,"NID_deltaRevocationList","","",N,N],[17,"NID_dmdName","","",N,N],[17,"NID_pseudonym","","",N,N],[17,"NID_role","","",N,N],[17,"NID_X500algorithms","","",N,N],[17,"NID_rsa","","",N,N],[17,"NID_mdc2WithRSA","","",N,N],[17,"NID_mdc2","","",N,N],[17,"NID_id_ce","","",N,N],[17,"NID_subject_directory_attributes","","",N,N],[17,"NID_subject_key_identifier","","",N,N],[17,"NID_key_usage","","",N,N],[17,"NID_private_key_usage_period","","",N,N],[17,"NID_subject_alt_name","","",N,N],[17,"NID_issuer_alt_name","","",N,N],[17,"NID_basic_constraints","","",N,N],[17,"NID_crl_number","","",N,N],[17,"NID_crl_reason","","",N,N],[17,"NID_invalidity_date","","",N,N],[17,"NID_delta_crl","","",N,N],[17,"NID_issuing_distribution_point","","",N,N],[17,"NID_certificate_issuer","","",N,N],[17,"NID_name_constraints","","",N,N],[17,"NID_crl_distribution_points","","",N,N],[17,"NID_certificate_policies","","",N,N],[17,"NID_any_policy","","",N,N],[17,"NID_policy_mappings","","",N,N],[17,"NID_authority_key_identifier","","",N,N],[17,"NID_policy_constraints","","",N,N],[17,"NID_ext_key_usage","","",N,N],[17,"NID_freshest_crl","","",N,N],[17,"NID_inhibit_any_policy","","",N,N],[17,"NID_target_information","","",N,N],[17,"NID_no_rev_avail","","",N,N],[17,"NID_anyExtendedKeyUsage","","",N,N],[17,"NID_netscape","","",N,N],[17,"NID_netscape_cert_extension","","",N,N],[17,"NID_netscape_data_type","","",N,N],[17,"NID_netscape_cert_type","","",N,N],[17,"NID_netscape_base_url","","",N,N],[17,"NID_netscape_revocation_url","","",N,N],[17,"NID_netscape_ca_revocation_url","","",N,N],[17,"NID_netscape_renewal_url","","",N,N],[17,"NID_netscape_ca_policy_url","","",N,N],[17,"NID_netscape_ssl_server_name","","",N,N],[17,"NID_netscape_comment","","",N,N],[17,"NID_netscape_cert_sequence","","",N,N],[17,"NID_ns_sgc","","",N,N],[17,"NID_org","","",N,N],[17,"NID_dod","","",N,N],[17,"NID_iana","","",N,N],[17,"NID_Directory","","",N,N],[17,"NID_Management","","",N,N],[17,"NID_Experimental","","",N,N],[17,"NID_Private","","",N,N],[17,"NID_Security","","",N,N],[17,"NID_SNMPv2","","",N,N],[17,"NID_Mail","","",N,N],[17,"NID_Enterprises","","",N,N],[17,"NID_dcObject","","",N,N],[17,"NID_mime_mhs","","",N,N],[17,"NID_mime_mhs_headings","","",N,N],[17,"NID_mime_mhs_bodies","","",N,N],[17,"NID_id_hex_partial_message","","",N,N],[17,"NID_id_hex_multipart_message","","",N,N],[17,"NID_zlib_compression","","",N,N],[17,"NID_aes_128_ecb","","",N,N],[17,"NID_aes_128_cbc","","",N,N],[17,"NID_aes_128_ofb128","","",N,N],[17,"NID_aes_128_cfb128","","",N,N],[17,"NID_id_aes128_wrap","","",N,N],[17,"NID_aes_128_gcm","","",N,N],[17,"NID_aes_128_ccm","","",N,N],[17,"NID_id_aes128_wrap_pad","","",N,N],[17,"NID_aes_192_ecb","","",N,N],[17,"NID_aes_192_cbc","","",N,N],[17,"NID_aes_192_ofb128","","",N,N],[17,"NID_aes_192_cfb128","","",N,N],[17,"NID_id_aes192_wrap","","",N,N],[17,"NID_aes_192_gcm","","",N,N],[17,"NID_aes_192_ccm","","",N,N],[17,"NID_id_aes192_wrap_pad","","",N,N],[17,"NID_aes_256_ecb","","",N,N],[17,"NID_aes_256_cbc","","",N,N],[17,"NID_aes_256_ofb128","","",N,N],[17,"NID_aes_256_cfb128","","",N,N],[17,"NID_id_aes256_wrap","","",N,N],[17,"NID_aes_256_gcm","","",N,N],[17,"NID_aes_256_ccm","","",N,N],[17,"NID_id_aes256_wrap_pad","","",N,N],[17,"NID_aes_128_cfb1","","",N,N],[17,"NID_aes_192_cfb1","","",N,N],[17,"NID_aes_256_cfb1","","",N,N],[17,"NID_aes_128_cfb8","","",N,N],[17,"NID_aes_192_cfb8","","",N,N],[17,"NID_aes_256_cfb8","","",N,N],[17,"NID_aes_128_ctr","","",N,N],[17,"NID_aes_192_ctr","","",N,N],[17,"NID_aes_256_ctr","","",N,N],[17,"NID_aes_128_xts","","",N,N],[17,"NID_aes_256_xts","","",N,N],[17,"NID_des_cfb1","","",N,N],[17,"NID_des_cfb8","","",N,N],[17,"NID_des_ede3_cfb1","","",N,N],[17,"NID_des_ede3_cfb8","","",N,N],[17,"NID_sha256","","",N,N],[17,"NID_sha384","","",N,N],[17,"NID_sha512","","",N,N],[17,"NID_sha224","","",N,N],[17,"NID_dsa_with_SHA224","","",N,N],[17,"NID_dsa_with_SHA256","","",N,N],[17,"NID_hold_instruction_code","","",N,N],[17,"NID_hold_instruction_none","","",N,N],[17,"NID_hold_instruction_call_issuer","","",N,N],[17,"NID_hold_instruction_reject","","",N,N],[17,"NID_data","","",N,N],[17,"NID_pss","","",N,N],[17,"NID_ucl","","",N,N],[17,"NID_pilot","","",N,N],[17,"NID_pilotAttributeType","","",N,N],[17,"NID_pilotAttributeSyntax","","",N,N],[17,"NID_pilotObjectClass","","",N,N],[17,"NID_pilotGroups","","",N,N],[17,"NID_iA5StringSyntax","","",N,N],[17,"NID_caseIgnoreIA5StringSyntax","","",N,N],[17,"NID_pilotObject","","",N,N],[17,"NID_pilotPerson","","",N,N],[17,"NID_account","","",N,N],[17,"NID_document","","",N,N],[17,"NID_room","","",N,N],[17,"NID_documentSeries","","",N,N],[17,"NID_Domain","","",N,N],[17,"NID_rFC822localPart","","",N,N],[17,"NID_dNSDomain","","",N,N],[17,"NID_domainRelatedObject","","",N,N],[17,"NID_friendlyCountry","","",N,N],[17,"NID_simpleSecurityObject","","",N,N],[17,"NID_pilotOrganization","","",N,N],[17,"NID_pilotDSA","","",N,N],[17,"NID_qualityLabelledData","","",N,N],[17,"NID_userId","","",N,N],[17,"NID_textEncodedORAddress","","",N,N],[17,"NID_rfc822Mailbox","","",N,N],[17,"NID_info","","",N,N],[17,"NID_favouriteDrink","","",N,N],[17,"NID_roomNumber","","",N,N],[17,"NID_photo","","",N,N],[17,"NID_userClass","","",N,N],[17,"NID_host","","",N,N],[17,"NID_manager","","",N,N],[17,"NID_documentIdentifier","","",N,N],[17,"NID_documentTitle","","",N,N],[17,"NID_documentVersion","","",N,N],[17,"NID_documentAuthor","","",N,N],[17,"NID_documentLocation","","",N,N],[17,"NID_homeTelephoneNumber","","",N,N],[17,"NID_secretary","","",N,N],[17,"NID_otherMailbox","","",N,N],[17,"NID_lastModifiedTime","","",N,N],[17,"NID_lastModifiedBy","","",N,N],[17,"NID_domainComponent","","",N,N],[17,"NID_aRecord","","",N,N],[17,"NID_pilotAttributeType27","","",N,N],[17,"NID_mXRecord","","",N,N],[17,"NID_nSRecord","","",N,N],[17,"NID_sOARecord","","",N,N],[17,"NID_cNAMERecord","","",N,N],[17,"NID_associatedDomain","","",N,N],[17,"NID_associatedName","","",N,N],[17,"NID_homePostalAddress","","",N,N],[17,"NID_personalTitle","","",N,N],[17,"NID_mobileTelephoneNumber","","",N,N],[17,"NID_pagerTelephoneNumber","","",N,N],[17,"NID_friendlyCountryName","","",N,N],[17,"NID_organizationalStatus","","",N,N],[17,"NID_janetMailbox","","",N,N],[17,"NID_mailPreferenceOption","","",N,N],[17,"NID_buildingName","","",N,N],[17,"NID_dSAQuality","","",N,N],[17,"NID_singleLevelQuality","","",N,N],[17,"NID_subtreeMinimumQuality","","",N,N],[17,"NID_subtreeMaximumQuality","","",N,N],[17,"NID_personalSignature","","",N,N],[17,"NID_dITRedirect","","",N,N],[17,"NID_audio","","",N,N],[17,"NID_documentPublisher","","",N,N],[17,"NID_id_set","","",N,N],[17,"NID_set_ctype","","",N,N],[17,"NID_set_msgExt","","",N,N],[17,"NID_set_attr","","",N,N],[17,"NID_set_policy","","",N,N],[17,"NID_set_certExt","","",N,N],[17,"NID_set_brand","","",N,N],[17,"NID_setct_PANData","","",N,N],[17,"NID_setct_PANToken","","",N,N],[17,"NID_setct_PANOnly","","",N,N],[17,"NID_setct_OIData","","",N,N],[17,"NID_setct_PI","","",N,N],[17,"NID_setct_PIData","","",N,N],[17,"NID_setct_PIDataUnsigned","","",N,N],[17,"NID_setct_HODInput","","",N,N],[17,"NID_setct_AuthResBaggage","","",N,N],[17,"NID_setct_AuthRevReqBaggage","","",N,N],[17,"NID_setct_AuthRevResBaggage","","",N,N],[17,"NID_setct_CapTokenSeq","","",N,N],[17,"NID_setct_PInitResData","","",N,N],[17,"NID_setct_PI_TBS","","",N,N],[17,"NID_setct_PResData","","",N,N],[17,"NID_setct_AuthReqTBS","","",N,N],[17,"NID_setct_AuthResTBS","","",N,N],[17,"NID_setct_AuthResTBSX","","",N,N],[17,"NID_setct_AuthTokenTBS","","",N,N],[17,"NID_setct_CapTokenData","","",N,N],[17,"NID_setct_CapTokenTBS","","",N,N],[17,"NID_setct_AcqCardCodeMsg","","",N,N],[17,"NID_setct_AuthRevReqTBS","","",N,N],[17,"NID_setct_AuthRevResData","","",N,N],[17,"NID_setct_AuthRevResTBS","","",N,N],[17,"NID_setct_CapReqTBS","","",N,N],[17,"NID_setct_CapReqTBSX","","",N,N],[17,"NID_setct_CapResData","","",N,N],[17,"NID_setct_CapRevReqTBS","","",N,N],[17,"NID_setct_CapRevReqTBSX","","",N,N],[17,"NID_setct_CapRevResData","","",N,N],[17,"NID_setct_CredReqTBS","","",N,N],[17,"NID_setct_CredReqTBSX","","",N,N],[17,"NID_setct_CredResData","","",N,N],[17,"NID_setct_CredRevReqTBS","","",N,N],[17,"NID_setct_CredRevReqTBSX","","",N,N],[17,"NID_setct_CredRevResData","","",N,N],[17,"NID_setct_PCertReqData","","",N,N],[17,"NID_setct_PCertResTBS","","",N,N],[17,"NID_setct_BatchAdminReqData","","",N,N],[17,"NID_setct_BatchAdminResData","","",N,N],[17,"NID_setct_CardCInitResTBS","","",N,N],[17,"NID_setct_MeAqCInitResTBS","","",N,N],[17,"NID_setct_RegFormResTBS","","",N,N],[17,"NID_setct_CertReqData","","",N,N],[17,"NID_setct_CertReqTBS","","",N,N],[17,"NID_setct_CertResData","","",N,N],[17,"NID_setct_CertInqReqTBS","","",N,N],[17,"NID_setct_ErrorTBS","","",N,N],[17,"NID_setct_PIDualSignedTBE","","",N,N],[17,"NID_setct_PIUnsignedTBE","","",N,N],[17,"NID_setct_AuthReqTBE","","",N,N],[17,"NID_setct_AuthResTBE","","",N,N],[17,"NID_setct_AuthResTBEX","","",N,N],[17,"NID_setct_AuthTokenTBE","","",N,N],[17,"NID_setct_CapTokenTBE","","",N,N],[17,"NID_setct_CapTokenTBEX","","",N,N],[17,"NID_setct_AcqCardCodeMsgTBE","","",N,N],[17,"NID_setct_AuthRevReqTBE","","",N,N],[17,"NID_setct_AuthRevResTBE","","",N,N],[17,"NID_setct_AuthRevResTBEB","","",N,N],[17,"NID_setct_CapReqTBE","","",N,N],[17,"NID_setct_CapReqTBEX","","",N,N],[17,"NID_setct_CapResTBE","","",N,N],[17,"NID_setct_CapRevReqTBE","","",N,N],[17,"NID_setct_CapRevReqTBEX","","",N,N],[17,"NID_setct_CapRevResTBE","","",N,N],[17,"NID_setct_CredReqTBE","","",N,N],[17,"NID_setct_CredReqTBEX","","",N,N],[17,"NID_setct_CredResTBE","","",N,N],[17,"NID_setct_CredRevReqTBE","","",N,N],[17,"NID_setct_CredRevReqTBEX","","",N,N],[17,"NID_setct_CredRevResTBE","","",N,N],[17,"NID_setct_BatchAdminReqTBE","","",N,N],[17,"NID_setct_BatchAdminResTBE","","",N,N],[17,"NID_setct_RegFormReqTBE","","",N,N],[17,"NID_setct_CertReqTBE","","",N,N],[17,"NID_setct_CertReqTBEX","","",N,N],[17,"NID_setct_CertResTBE","","",N,N],[17,"NID_setct_CRLNotificationTBS","","",N,N],[17,"NID_setct_CRLNotificationResTBS","","",N,N],[17,"NID_setct_BCIDistributionTBS","","",N,N],[17,"NID_setext_genCrypt","","",N,N],[17,"NID_setext_miAuth","","",N,N],[17,"NID_setext_pinSecure","","",N,N],[17,"NID_setext_pinAny","","",N,N],[17,"NID_setext_track2","","",N,N],[17,"NID_setext_cv","","",N,N],[17,"NID_set_policy_root","","",N,N],[17,"NID_setCext_hashedRoot","","",N,N],[17,"NID_setCext_certType","","",N,N],[17,"NID_setCext_merchData","","",N,N],[17,"NID_setCext_cCertRequired","","",N,N],[17,"NID_setCext_tunneling","","",N,N],[17,"NID_setCext_setExt","","",N,N],[17,"NID_setCext_setQualf","","",N,N],[17,"NID_setCext_PGWYcapabilities","","",N,N],[17,"NID_setCext_TokenIdentifier","","",N,N],[17,"NID_setCext_Track2Data","","",N,N],[17,"NID_setCext_TokenType","","",N,N],[17,"NID_setCext_IssuerCapabilities","","",N,N],[17,"NID_setAttr_Cert","","",N,N],[17,"NID_setAttr_PGWYcap","","",N,N],[17,"NID_setAttr_TokenType","","",N,N],[17,"NID_setAttr_IssCap","","",N,N],[17,"NID_set_rootKeyThumb","","",N,N],[17,"NID_set_addPolicy","","",N,N],[17,"NID_setAttr_Token_EMV","","",N,N],[17,"NID_setAttr_Token_B0Prime","","",N,N],[17,"NID_setAttr_IssCap_CVM","","",N,N],[17,"NID_setAttr_IssCap_T2","","",N,N],[17,"NID_setAttr_IssCap_Sig","","",N,N],[17,"NID_setAttr_GenCryptgrm","","",N,N],[17,"NID_setAttr_T2Enc","","",N,N],[17,"NID_setAttr_T2cleartxt","","",N,N],[17,"NID_setAttr_TokICCsig","","",N,N],[17,"NID_setAttr_SecDevSig","","",N,N],[17,"NID_set_brand_IATA_ATA","","",N,N],[17,"NID_set_brand_Diners","","",N,N],[17,"NID_set_brand_AmericanExpress","","",N,N],[17,"NID_set_brand_JCB","","",N,N],[17,"NID_set_brand_Visa","","",N,N],[17,"NID_set_brand_MasterCard","","",N,N],[17,"NID_set_brand_Novus","","",N,N],[17,"NID_des_cdmf","","",N,N],[17,"NID_rsaOAEPEncryptionSET","","",N,N],[17,"NID_ipsec3","","",N,N],[17,"NID_ipsec4","","",N,N],[17,"NID_whirlpool","","",N,N],[17,"NID_cryptopro","","",N,N],[17,"NID_cryptocom","","",N,N],[17,"NID_id_GostR3411_94_with_GostR3410_2001","","",N,N],[17,"NID_id_GostR3411_94_with_GostR3410_94","","",N,N],[17,"NID_id_GostR3411_94","","",N,N],[17,"NID_id_HMACGostR3411_94","","",N,N],[17,"NID_id_GostR3410_2001","","",N,N],[17,"NID_id_GostR3410_94","","",N,N],[17,"NID_id_Gost28147_89","","",N,N],[17,"NID_gost89_cnt","","",N,N],[17,"NID_id_Gost28147_89_MAC","","",N,N],[17,"NID_id_GostR3411_94_prf","","",N,N],[17,"NID_id_GostR3410_2001DH","","",N,N],[17,"NID_id_GostR3410_94DH","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_KeyMeshing","","",N,N],[17,"NID_id_Gost28147_89_None_KeyMeshing","","",N,N],[17,"NID_id_GostR3411_94_TestParamSet","","",N,N],[17,"NID_id_GostR3411_94_CryptoProParamSet","","",N,N],[17,"NID_id_Gost28147_89_TestParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_A_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_B_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_C_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_D_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet","","",N,N],[17,"NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_TestParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_A_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_B_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_C_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_D_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_XchA_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_XchB_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_CryptoPro_XchC_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_TestParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_A_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_B_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_C_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet","","",N,N],[17,"NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet","","",N,N],[17,"NID_id_GostR3410_94_a","","",N,N],[17,"NID_id_GostR3410_94_aBis","","",N,N],[17,"NID_id_GostR3410_94_b","","",N,N],[17,"NID_id_GostR3410_94_bBis","","",N,N],[17,"NID_id_Gost28147_89_cc","","",N,N],[17,"NID_id_GostR3410_94_cc","","",N,N],[17,"NID_id_GostR3410_2001_cc","","",N,N],[17,"NID_id_GostR3411_94_with_GostR3410_94_cc","","",N,N],[17,"NID_id_GostR3411_94_with_GostR3410_2001_cc","","",N,N],[17,"NID_id_GostR3410_2001_ParamSet_cc","","",N,N],[17,"NID_camellia_128_cbc","","",N,N],[17,"NID_camellia_192_cbc","","",N,N],[17,"NID_camellia_256_cbc","","",N,N],[17,"NID_id_camellia128_wrap","","",N,N],[17,"NID_id_camellia192_wrap","","",N,N],[17,"NID_id_camellia256_wrap","","",N,N],[17,"NID_camellia_128_ecb","","",N,N],[17,"NID_camellia_128_ofb128","","",N,N],[17,"NID_camellia_128_cfb128","","",N,N],[17,"NID_camellia_192_ecb","","",N,N],[17,"NID_camellia_192_ofb128","","",N,N],[17,"NID_camellia_192_cfb128","","",N,N],[17,"NID_camellia_256_ecb","","",N,N],[17,"NID_camellia_256_ofb128","","",N,N],[17,"NID_camellia_256_cfb128","","",N,N],[17,"NID_camellia_128_cfb1","","",N,N],[17,"NID_camellia_192_cfb1","","",N,N],[17,"NID_camellia_256_cfb1","","",N,N],[17,"NID_camellia_128_cfb8","","",N,N],[17,"NID_camellia_192_cfb8","","",N,N],[17,"NID_camellia_256_cfb8","","",N,N],[17,"NID_kisa","","",N,N],[17,"NID_seed_ecb","","",N,N],[17,"NID_seed_cbc","","",N,N],[17,"NID_seed_cfb128","","",N,N],[17,"NID_seed_ofb128","","",N,N],[17,"NID_hmac","","",N,N],[17,"NID_cmac","","",N,N],[17,"NID_rc4_hmac_md5","","",N,N],[17,"NID_aes_128_cbc_hmac_sha1","","",N,N],[17,"NID_aes_192_cbc_hmac_sha1","","",N,N],[17,"NID_aes_256_cbc_hmac_sha1","","",N,N],[17,"OCSP_REVOKED_STATUS_NOSTATUS","","",N,N],[17,"OCSP_REVOKED_STATUS_UNSPECIFIED","","",N,N],[17,"OCSP_REVOKED_STATUS_KEYCOMPROMISE","","",N,N],[17,"OCSP_REVOKED_STATUS_CACOMPROMISE","","",N,N],[17,"OCSP_REVOKED_STATUS_AFFILIATIONCHANGED","","",N,N],[17,"OCSP_REVOKED_STATUS_SUPERSEDED","","",N,N],[17,"OCSP_REVOKED_STATUS_CESSATIONOFOPERATION","","",N,N],[17,"OCSP_REVOKED_STATUS_CERTIFICATEHOLD","","",N,N],[17,"OCSP_REVOKED_STATUS_REMOVEFROMCRL","","",N,N],[17,"OCSP_NOCERTS","","",N,N],[17,"OCSP_NOINTERN","","",N,N],[17,"OCSP_NOSIGS","","",N,N],[17,"OCSP_NOCHAIN","","",N,N],[17,"OCSP_NOVERIFY","","",N,N],[17,"OCSP_NOEXPLICIT","","",N,N],[17,"OCSP_NOCASIGN","","",N,N],[17,"OCSP_NODELEGATED","","",N,N],[17,"OCSP_NOCHECKS","","",N,N],[17,"OCSP_TRUSTOTHER","","",N,N],[17,"OCSP_RESPID_KEY","","",N,N],[17,"OCSP_NOTIME","","",N,N],[17,"OCSP_RESPONSE_STATUS_SUCCESSFUL","","",N,N],[17,"OCSP_RESPONSE_STATUS_MALFORMEDREQUEST","","",N,N],[17,"OCSP_RESPONSE_STATUS_INTERNALERROR","","",N,N],[17,"OCSP_RESPONSE_STATUS_TRYLATER","","",N,N],[17,"OCSP_RESPONSE_STATUS_SIGREQUIRED","","",N,N],[17,"OCSP_RESPONSE_STATUS_UNAUTHORIZED","","",N,N],[17,"V_OCSP_CERTSTATUS_GOOD","","",N,N],[17,"V_OCSP_CERTSTATUS_REVOKED","","",N,N],[17,"V_OCSP_CERTSTATUS_UNKNOWN","","",N,N],[17,"PEM_R_NO_START_LINE","","",N,N],[17,"PKCS7_TEXT","","",N,N],[17,"PKCS7_NOCERTS","","",N,N],[17,"PKCS7_NOSIGS","","",N,N],[17,"PKCS7_NOCHAIN","","",N,N],[17,"PKCS7_NOINTERN","","",N,N],[17,"PKCS7_NOVERIFY","","",N,N],[17,"PKCS7_DETACHED","","",N,N],[17,"PKCS7_BINARY","","",N,N],[17,"PKCS7_NOATTR","","",N,N],[17,"PKCS7_NOSMIMECAP","","",N,N],[17,"PKCS7_NOOLDMIMETYPE","","",N,N],[17,"PKCS7_CRLFEOL","","",N,N],[17,"PKCS7_STREAM","","",N,N],[17,"PKCS7_NOCRL","","",N,N],[17,"PKCS7_PARTIAL","","",N,N],[17,"PKCS7_REUSE_DIGEST","","",N,N],[17,"RSA_F4","","",N,N],[17,"EVP_PKEY_CTRL_RSA_PADDING","","",N,N],[17,"EVP_PKEY_CTRL_RSA_PSS_SALTLEN","","",N,N],[17,"EVP_PKEY_CTRL_RSA_MGF1_MD","","",N,N],[17,"EVP_PKEY_CTRL_GET_RSA_PADDING","","",N,N],[17,"RSA_PKCS1_PADDING","","",N,N],[17,"RSA_SSLV23_PADDING","","",N,N],[17,"RSA_NO_PADDING","","",N,N],[17,"RSA_PKCS1_OAEP_PADDING","","",N,N],[17,"RSA_X931_PADDING","","",N,N],[17,"RSA_PKCS1_PSS_PADDING","","",N,N],[17,"SHA_LBLOCK","","",N,N],[17,"SRTP_AES128_CM_SHA1_80","","",N,N],[17,"SRTP_AES128_CM_SHA1_32","","",N,N],[17,"SRTP_AES128_F8_SHA1_80","","",N,N],[17,"SRTP_AES128_F8_SHA1_32","","",N,N],[17,"SRTP_NULL_SHA1_80","","",N,N],[17,"SRTP_NULL_SHA1_32","","",N,N],[17,"SSL_MAX_KRB5_PRINCIPAL_LENGTH","","",N,N],[17,"SSL_MAX_SSL_SESSION_ID_LENGTH","","",N,N],[17,"SSL_MAX_SID_CTX_LENGTH","","",N,N],[17,"SSL_MAX_KEY_ARG_LENGTH","","",N,N],[17,"SSL_MAX_MASTER_KEY_LENGTH","","",N,N],[17,"SSL_SENT_SHUTDOWN","","",N,N],[17,"SSL_RECEIVED_SHUTDOWN","","",N,N],[17,"SSL_FILETYPE_PEM","","",N,N],[17,"SSL_FILETYPE_ASN1","","",N,N],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",N,N],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",N,N],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",N,N],[17,"SSL_OP_NO_QUERY_MTU","","",N,N],[17,"SSL_OP_COOKIE_EXCHANGE","","",N,N],[17,"SSL_OP_NO_TICKET","","",N,N],[17,"SSL_OP_CISCO_ANYCONNECT","","",N,N],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",N,N],[17,"SSL_OP_NO_COMPRESSION","","",N,N],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",N,N],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",N,N],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",N,N],[17,"SSL_OP_NO_SSLv3","","",N,N],[17,"SSL_OP_NO_TLSv1_1","","",N,N],[17,"SSL_OP_NO_TLSv1_2","","",N,N],[17,"SSL_OP_NO_TLSv1","","",N,N],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",N,N],[17,"SSL_OP_ALL","","",N,N],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",N,N],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",N,N],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",N,N],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",N,N],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",N,N],[17,"SSL_OP_TLS_D5_BUG","","",N,N],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",N,N],[17,"SSL_OP_SINGLE_ECDH_USE","","",N,N],[17,"SSL_OP_SINGLE_DH_USE","","",N,N],[17,"SSL_OP_NO_SSLv2","","",N,N],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","",N,N],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",N,N],[17,"SSL_MODE_AUTO_RETRY","","",N,N],[17,"SSL_MODE_NO_AUTO_CHAIN","","",N,N],[17,"SSL_MODE_RELEASE_BUFFERS","","",N,N],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",N,N],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",N,N],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","",N,N],[17,"SSL_SESS_CACHE_OFF","","",N,N],[17,"SSL_SESS_CACHE_CLIENT","","",N,N],[17,"SSL_SESS_CACHE_SERVER","","",N,N],[17,"SSL_SESS_CACHE_BOTH","","",N,N],[17,"SSL_SESS_CACHE_NO_AUTO_CLEAR","","",N,N],[17,"SSL_SESS_CACHE_NO_INTERNAL_LOOKUP","","",N,N],[17,"SSL_SESS_CACHE_NO_INTERNAL_STORE","","",N,N],[17,"SSL_SESS_CACHE_NO_INTERNAL","","",N,N],[17,"OPENSSL_NPN_UNSUPPORTED","","",N,N],[17,"OPENSSL_NPN_NEGOTIATED","","",N,N],[17,"OPENSSL_NPN_NO_OVERLAP","","",N,N],[17,"SSL_AD_ILLEGAL_PARAMETER","","",N,N],[17,"SSL_AD_DECODE_ERROR","","",N,N],[17,"SSL_AD_UNRECOGNIZED_NAME","","",N,N],[17,"SSL_ERROR_NONE","","",N,N],[17,"SSL_ERROR_SSL","","",N,N],[17,"SSL_ERROR_SYSCALL","","",N,N],[17,"SSL_ERROR_WANT_ACCEPT","","",N,N],[17,"SSL_ERROR_WANT_CONNECT","","",N,N],[17,"SSL_ERROR_WANT_READ","","",N,N],[17,"SSL_ERROR_WANT_WRITE","","",N,N],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",N,N],[17,"SSL_ERROR_ZERO_RETURN","","",N,N],[17,"SSL_VERIFY_NONE","","",N,N],[17,"SSL_VERIFY_PEER","","",N,N],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",N,N],[17,"SSL_CTRL_SET_TMP_DH","","",N,N],[17,"SSL_CTRL_SET_TMP_ECDH","","",N,N],[17,"SSL_CTRL_GET_SESSION_REUSED","","",N,N],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",N,N],[17,"SSL_CTRL_OPTIONS","","",N,N],[17,"SSL_CTRL_MODE","","",N,N],[17,"SSL_CTRL_SET_READ_AHEAD","","",N,N],[17,"SSL_CTRL_SET_SESS_CACHE_MODE","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE","","",N,N],[17,"SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP","","",N,N],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP","","",N,N],[17,"SSL_CTRL_CLEAR_OPTIONS","","",N,N],[17,"SSL_CTRL_GET_EXTRA_CHAIN_CERTS","","",N,N],[17,"SSL3_VERSION","","",N,N],[17,"SSL3_AD_ILLEGAL_PARAMETER","","",N,N],[17,"TLS1_VERSION","","",N,N],[17,"TLS1_1_VERSION","","",N,N],[17,"TLS1_2_VERSION","","",N,N],[17,"TLS1_AD_DECODE_ERROR","","",N,N],[17,"TLS1_AD_UNRECOGNIZED_NAME","","",N,N],[17,"TLSEXT_NAMETYPE_host_name","","",N,N],[17,"TLSEXT_STATUSTYPE_ocsp","","",N,N],[17,"SSL_TLSEXT_ERR_OK","","",N,N],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",N,N],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",N,N],[17,"SSL_TLSEXT_ERR_NOACK","","",N,N],[17,"X509_FILETYPE_PEM","","",N,N],[17,"X509_FILETYPE_ASN1","","",N,N],[17,"X509_FILETYPE_DEFAULT","","",N,N],[17,"X509_V_OK","","",N,N],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",N,N],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",N,N],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",N,N],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",N,N],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",N,N],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",N,N],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",N,N],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",N,N],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",N,N],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",N,N],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",N,N],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",N,N],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",N,N],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",N,N],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",N,N],[17,"X509_V_ERR_OUT_OF_MEM","","",N,N],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",N,N],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",N,N],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",N,N],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",N,N],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",N,N],[17,"X509_V_ERR_CERT_REVOKED","","",N,N],[17,"X509_V_ERR_INVALID_CA","","",N,N],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",N,N],[17,"X509_V_ERR_INVALID_PURPOSE","","",N,N],[17,"X509_V_ERR_CERT_UNTRUSTED","","",N,N],[17,"X509_V_ERR_CERT_REJECTED","","",N,N],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",N,N],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",N,N],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",N,N],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",N,N],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",N,N],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",N,N],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",N,N],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",N,N],[17,"X509_V_ERR_INVALID_NON_CA","","",N,N],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",N,N],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",N,N],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",N,N],[17,"X509_V_ERR_INVALID_EXTENSION","","",N,N],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",N,N],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",N,N],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",N,N],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",N,N],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",N,N],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",N,N],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",N,N],[17,"X509_V_ERR_SUBTREE_MINMAX","","",N,N],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",N,N],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",N,N],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",N,N],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",N,N],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",N,N],[17,"GEN_OTHERNAME","","",N,N],[17,"GEN_EMAIL","","",N,N],[17,"GEN_DNS","","",N,N],[17,"GEN_X400","","",N,N],[17,"GEN_DIRNAME","","",N,N],[17,"GEN_EDIPARTY","","",N,N],[17,"GEN_URI","","",N,N],[17,"GEN_IPADD","","",N,N],[17,"GEN_RID","","",N,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"clone","","",37,[[["self"]],["point_conversion_form_t"]]]],"paths":[[3,"ASN1_ENCODING"],[3,"stack_st_ASN1_OBJECT"],[3,"BIO_METHOD"],[3,"stack_st_void"],[3,"ECDSA_SIG"],[3,"ERR_STRING_DATA"],[3,"BIO"],[3,"BIGNUM"],[3,"EVP_CIPHER"],[3,"EVP_PKEY"],[3,"DH"],[3,"DSA"],[3,"RSA"],[3,"X509"],[3,"X509_ALGOR"],[3,"SSL"],[3,"SSL_CTX"],[3,"CRYPTO_EX_DATA"],[3,"stack_st_OPENSSL_STRING"],[3,"SHA_CTX"],[3,"SHA256_CTX"],[3,"SHA512_CTX"],[3,"SSL_SESSION"],[3,"stack_st_SSL_CIPHER"],[3,"SRTP_PROTECTION_PROFILE"],[3,"stack_st_SRTP_PROTECTION_PROFILE"],[3,"_STACK"],[3,"X509_VAL"],[3,"stack_st_X509_NAME"],[3,"stack_st_X509_EXTENSION"],[3,"stack_st_X509_ATTRIBUTE"],[3,"X509_REQ_INFO"],[3,"X509_REQ"],[3,"X509_CINF"],[3,"stack_st_X509"],[3,"GENERAL_NAME"],[3,"stack_st_GENERAL_NAME"],[4,"point_conversion_form_t"],[3,"AES_KEY"],[3,"EVP_MD_CTX"],[3,"HMAC_CTX"],[3,"X509V3_CTX"],[3,"SRP_CTX"],[4,"CMS_ContentInfo"],[4,"EC_METHOD"],[4,"EC_GROUP"],[4,"EC_POINT"],[4,"OCSP_CERTID"],[4,"OCSP_ONEREQ"],[4,"OCSP_REQUEST"],[4,"OCSP_BASICRESP"],[4,"ASN1_INTEGER"],[4,"ASN1_GENERALIZEDTIME"],[4,"ASN1_STRING"],[4,"ASN1_BIT_STRING"],[4,"ASN1_TIME"],[4,"ASN1_TYPE"],[4,"ASN1_OBJECT"],[4,"ASN1_OCTET_STRING"],[4,"bio_st"],[4,"BN_BLINDING"],[4,"BN_MONT_CTX"],[4,"BN_CTX"],[4,"BN_GENCB"],[4,"EVP_CIPHER_CTX"],[4,"EVP_MD"],[4,"EVP_PKEY_ASN1_METHOD"],[4,"EVP_PKEY_CTX"],[4,"DH_METHOD"],[4,"DSA_METHOD"],[4,"RSA_METHOD"],[4,"EC_KEY"],[4,"X509_CRL"],[4,"X509_NAME"],[4,"X509_STORE"],[4,"X509_STORE_CTX"],[4,"CONF"],[4,"ENGINE"],[4,"COMP_METHOD"],[4,"OCSP_RESPONSE"],[4,"PKCS7_SIGNED"],[4,"PKCS7_ENVELOPE"],[4,"PKCS7_SIGN_ENVELOPE"],[4,"PKCS7_DIGEST"],[4,"PKCS7_ENCRYPT"],[4,"PKCS7"],[4,"PKCS12"],[4,"SSL_METHOD"],[4,"SSL_CIPHER"],[4,"X509_NAME_ENTRY"],[4,"X509_EXTENSION"],[4,"CONF_METHOD"]]};
searchIndex["owning_ref"]={"doc":"An owning reference.","items":[[8,"StableAddress","owning_ref","An unsafe marker trait for types that deref to a stable…",N,N],[8,"CloneStableAddress","","An unsafe marker trait for types where clones deref to the…",N,N],[3,"OwningRef","","An owning reference.",N,N],[3,"OwningRefMut","","An mutable owning reference.",N,N],[3,"OwningHandle","","`OwningHandle` is a complement to `OwningRef`. Where…",N,N],[6,"BoxRef","","Typedef of a owning reference that uses a `Box` as the…",N,N],[6,"VecRef","","Typedef of a owning reference that uses a `Vec` as the…",N,N],[6,"StringRef","","Typedef of a owning reference that uses a `String` as the…",N,N],[6,"RcRef","","Typedef of a owning reference that uses a `Rc` as the owner.",N,N],[6,"ArcRef","","Typedef of a owning reference that uses a `Arc` as the…",N,N],[6,"RefRef","","Typedef of a owning reference that uses a `Ref` as the…",N,N],[6,"RefMutRef","","Typedef of a owning reference that uses a `RefMut` as the…",N,N],[6,"MutexGuardRef","","Typedef of a owning reference that uses a `MutexGuard` as…",N,N],[6,"RwLockReadGuardRef","","Typedef of a owning reference that uses a…",N,N],[6,"RwLockWriteGuardRef","","Typedef of a owning reference that uses a…",N,N],[6,"BoxRefMut","","Typedef of a mutable owning reference that uses a `Box` as…",N,N],[6,"VecRefMut","","Typedef of a mutable owning reference that uses a `Vec` as…",N,N],[6,"StringRefMut","","Typedef of a mutable owning reference that uses a `String`…",N,N],[6,"RefMutRefMut","","Typedef of a mutable owning reference that uses a `RefMut`…",N,N],[6,"MutexGuardRefMut","","Typedef of a mutable owning reference that uses a…",N,N],[6,"RwLockWriteGuardRefMut","","Typedef of a mutable owning reference that uses a…",N,N],[6,"ErasedBoxRef","","Typedef of a owning reference that uses an erased `Box` as…",N,N],[6,"ErasedRcRef","","Typedef of a owning reference that uses an erased `Rc` as…",N,N],[6,"ErasedArcRef","","Typedef of a owning reference that uses an erased `Arc` as…",N,N],[6,"ErasedBoxRefMut","","Typedef of a mutable owning reference that uses an erased…",N,N],[8,"Erased","","Helper trait for an erased concrete type an owner…",N,N],[8,"IntoErased","","Helper trait for erasing the concrete type of what an…",N,N],[16,"Erased","","Owner with the dereference type substituted to `Erased`.",0,N],[10,"into_erased","","Perform the type erasure.",0,N],[8,"ToHandle","","Trait to implement the conversion of owner to handle for…",N,N],[16,"Handle","","The type of handle to be encapsulated by the OwningHandle.",1,N],[10,"to_handle","","Given an appropriately-long-lived pointer to ourselves,…",1,N],[8,"ToHandleMut","","Trait to implement the conversion of owner to mutable…",N,N],[16,"HandleMut","","The type of handle to be encapsulated by the OwningHandle.",2,N],[10,"to_handle_mut","","Given an appropriately-long-lived pointer to ourselves,…",2,N],[11,"new","","Creates a new owning reference from a owner initialized to…",3,[[["o"]],["self"]]],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the…",3,[[["o"]],["self"]]],[11,"map","","Converts `self` into a new owning reference that points at…",3,[[["self"],["f"]],["owningref"]]],[11,"try_map","","Tries to convert `self` into a new owning reference that…",3,[[["self"],["f"]],["result",["owningref"]]]],[11,"map_owner","","Converts `self` into a new owning reference with a…",3,[[["self"],["f"]],["owningref"]]],[11,"map_owner_box","","Converts `self` into a new owning reference where the…",3,[[["self"]],["owningref",["box"]]]],[11,"erase_owner","","Erases the concrete base type of the owner with a trait…",3,[[["self"]],["owningref"]]],[11,"owner","","A getter for the underlying owner.",3,[[["self"]],["o"]]],[11,"into_inner","","Discards the reference and retrieves the owner.",3,[[["self"]],["o"]]],[11,"new","","Creates a new owning reference from a owner initialized to…",4,[[["o"]],["self"]]],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the…",4,[[["o"]],["self"]]],[11,"map","","Converts `self` into a new shared owning reference that…",4,[[["self"],["f"]],["owningref"]]],[11,"map_mut","","Converts `self` into a new mutable owning reference that…",4,[[["self"],["f"]],["owningrefmut"]]],[11,"try_map","","Tries to convert `self` into a new shared owning reference…",4,[[["self"],["f"]],["result",["owningref"]]]],[11,"try_map_mut","","Tries to convert `self` into a new mutable owning…",4,[[["self"],["f"]],["result",["owningrefmut"]]]],[11,"map_owner","","Converts `self` into a new owning reference with a…",4,[[["self"],["f"]],["owningrefmut"]]],[11,"map_owner_box","","Converts `self` into a new owning reference where the…",4,[[["self"]],["owningrefmut",["box"]]]],[11,"erase_owner","","Erases the concrete base type of the owner with a trait…",4,[[["self"]],["owningrefmut"]]],[11,"owner","","A getter for the underlying owner.",4,[[["self"]],["o"]]],[11,"into_inner","","Discards the reference and retrieves the owner.",4,[[["self"]],["o"]]],[11,"new","","Create a new `OwningHandle` for a type that implements…",5,[[["o"]],["self"]]],[11,"new_mut","","Create a new mutable `OwningHandle` for a type that…",5,[[["o"]],["self"]]],[11,"new_with_fn","","Create a new OwningHandle. The provided callback will be…",5,[[["o"],["f"]],["self"]]],[11,"try_new","","Create a new OwningHandle. The provided callback will be…",5,[[["o"],["f"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"as_mut","","",4,[[["self"]],["t"]]],[11,"eq","","",3,[[["self"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["self"]],["bool"]]],[11,"as_ref","","",3,[[["self"]],["t"]]],[11,"as_ref","","",4,[[["self"]],["t"]]],[11,"cmp","","",3,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["self"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"from","","",3,[[["o"]],["self"]]],[11,"from","","",4,[[["o"]],["self"]]],[11,"from","","",3,[[["owningrefmut"]],["self"]]],[11,"partial_cmp","","",3,[[["self"],["self"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["self"]],["option",["ordering"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref_mut","","",5,N],[11,"deref_mut","","",4,[[["self"]],["t"]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"deref","","",5,N],[11,"deref","","",3,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"borrow","","",3,[[["self"]],["t"]]]],"paths":[[8,"IntoErased"],[8,"ToHandle"],[8,"ToHandleMut"],[3,"OwningRef"],[3,"OwningRefMut"],[3,"OwningHandle"],[8,"Erased"]]};
searchIndex["parking_lot"]={"doc":"This library provides implementations of `Mutex`,…","items":[[3,"Condvar","parking_lot","A Condition Variable",N,N],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition…",N,N],[3,"Once","","A synchronization primitive which can be used to run a…",N,N],[3,"RawMutex","","Raw mutex type backed by the parking lot.",N,N],[3,"RawRwLock","","Raw reader-writer lock type backed by the parking lot.",N,N],[3,"RawThreadId","","Implementation of the `GetThreadId` trait for…",N,N],[4,"OnceState","","Current state of a `Once`.",N,N],[13,"New","","A closure has not been executed yet",0,N],[13,"Poisoned","","A closure was executed but panicked.",0,N],[13,"InProgress","","A thread is currently executing a closure.",0,N],[13,"Done","","A closure has completed sucessfully.",0,N],[11,"timed_out","","Returns whether the wait was known to have timed out.",1,[[["self"]],["bool"]]],[11,"new","","Creates a new condition variable which is ready to be…",2,[[],["condvar"]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",2,[[["self"]]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",2,[[["self"]]]],[11,"wait","","Blocks the current thread until this condition variable…",2,[[["self"],["mutexguard"]]]],[11,"wait_until","","Waits on this condition variable for a notification,…",2,[[["self"],["mutexguard"],["instant"]],["waittimeoutresult"]]],[11,"wait_for","","Waits on this condition variable for a notification,…",2,[[["self"],["mutexguard"],["duration"]],["waittimeoutresult"]]],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",0,[[["self"]],["bool"]]],[11,"done","","Returns whether the associated `Once` has successfullly…",0,[[["self"]],["bool"]]],[11,"new","","Creates a new `Once` value.",3,[[],["once"]]],[11,"state","","Returns the current state of this `Once`.",3,[[["self"]],["oncestate"]]],[11,"call_once","","Performs an initialization routine once and only once. The…",3,[[["self"],["f"]]]],[11,"call_once_force","","Performs the same function as `call_once` except ignores…",3,[[["self"],["f"]]]],[6,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which…",N,N],[6,"Mutex","","A mutual exclusion primitive useful for protecting shared…",N,N],[6,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When…",N,N],[6,"MappedReentrantMutexGuard","","An RAII mutex guard returned by…",N,N],[6,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",N,N],[6,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant…",N,N],[6,"MappedRwLockReadGuard","","An RAII read lock guard returned by…",N,N],[6,"MappedRwLockWriteGuard","","An RAII write lock guard returned by…",N,N],[6,"RwLock","","A reader-writer lock",N,N],[6,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",N,N],[6,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access…",N,N],[6,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",N,N],[17,"ONCE_INIT","","Initialization value for static `Once` values.",N,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["waittimeoutresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["waittimeoutresult"]],["bool"]]],[11,"eq","","",0,[[["self"],["oncestate"]],["bool"]]],[11,"default","","",2,[[],["condvar"]]],[11,"default","","",3,[[],["once"]]],[11,"clone","","",1,[[["self"]],["waittimeoutresult"]]],[11,"clone","","",0,[[["self"]],["oncestate"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"lock","","",4,[[["self"]]]],[11,"try_lock","","",4,[[["self"]],["bool"]]],[11,"unlock","","",4,[[["self"]]]],[11,"unlock_fair","","",4,[[["self"]]]],[11,"bump","","",4,[[["self"]]]],[11,"try_lock_until","","",4,[[["self"],["instant"]],["bool"]]],[11,"try_lock_for","","",4,[[["self"],["duration"]],["bool"]]],[11,"nonzero_thread_id","","",6,[[["self"]],["usize"]]],[11,"lock_exclusive","","",5,[[["self"]]]],[11,"try_lock_exclusive","","",5,[[["self"]],["bool"]]],[11,"unlock_exclusive","","",5,[[["self"]]]],[11,"lock_shared","","",5,[[["self"]]]],[11,"try_lock_shared","","",5,[[["self"]],["bool"]]],[11,"unlock_shared","","",5,[[["self"]]]],[11,"unlock_shared_fair","","",5,[[["self"]]]],[11,"unlock_exclusive_fair","","",5,[[["self"]]]],[11,"bump_shared","","",5,[[["self"]]]],[11,"bump_exclusive","","",5,[[["self"]]]],[11,"downgrade","","",5,[[["self"]]]],[11,"try_lock_shared_for","","",5,N],[11,"try_lock_shared_until","","",5,N],[11,"try_lock_exclusive_for","","",5,[[["self"],["duration"]],["bool"]]],[11,"try_lock_exclusive_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"lock_shared_recursive","","",5,[[["self"]]]],[11,"try_lock_shared_recursive","","",5,[[["self"]],["bool"]]],[11,"try_lock_shared_recursive_for","","",5,N],[11,"try_lock_shared_recursive_until","","",5,N],[11,"lock_upgradable","","",5,[[["self"]]]],[11,"try_lock_upgradable","","",5,[[["self"]],["bool"]]],[11,"unlock_upgradable","","",5,[[["self"]]]],[11,"upgrade","","",5,[[["self"]]]],[11,"try_upgrade","","",5,[[["self"]],["bool"]]],[11,"unlock_upgradable_fair","","",5,[[["self"]]]],[11,"bump_upgradable","","",5,[[["self"]]]],[11,"downgrade_upgradable","","",5,[[["self"]]]],[11,"downgrade_to_upgradable","","",5,[[["self"]]]],[11,"try_lock_upgradable_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"try_lock_upgradable_for","","",5,[[["self"],["duration"]],["bool"]]],[11,"try_upgrade_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"try_upgrade_for","","",5,[[["self"],["duration"]],["bool"]]]],"paths":[[4,"OnceState"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"Once"],[3,"RawMutex"],[3,"RawRwLock"],[3,"RawThreadId"]]};
searchIndex["parking_lot_core"]={"doc":"This library exposes a low-level API for creating your own…","items":[[3,"ParkToken","parking_lot_core","A value associated with a parked thread which can be used…",N,N],[12,"0","","",0,N],[3,"UnparkResult","","Result of an unpark operation.",N,N],[12,"unparked_threads","","The number of threads that were unparked.",1,N],[12,"have_more_threads","","Whether there are any threads remaining in the queue. This…",1,N],[12,"be_fair","","This is set to true on average once every 0.5ms for any…",1,N],[3,"UnparkToken","","A value which is passed from an unparker to a parked thread.",N,N],[12,"0","","",2,N],[3,"SpinWait","","A counter used to perform exponential backoff in spin loops.",N,N],[4,"FilterOp","","Operation that `unpark_filter` should perform for each…",N,N],[13,"Unpark","","Unpark the thread and continue scanning the list of parked…",3,N],[13,"Skip","","Don't unpark the thread and continue scanning the list of…",3,N],[13,"Stop","","Don't unpark the thread and stop scanning the list of…",3,N],[4,"ParkResult","","Result of a park operation.",N,N],[13,"Unparked","","We were unparked by another thread with the given token.",4,N],[13,"Invalid","","The validation callback returned false.",4,N],[13,"TimedOut","","The timeout expired.",4,N],[4,"RequeueOp","","Operation that `unpark_requeue` should perform.",N,N],[13,"Abort","","Abort the operation without doing anything.",5,N],[13,"UnparkOneRequeueRest","","Unpark one thread and requeue the rest onto the target…",5,N],[13,"RequeueAll","","Requeue all threads onto the target queue.",5,N],[5,"park","","Parks the current thread in the queue associated with the…",N,[[["usize"],["v"],["b"],["t"],["parktoken"],["option",["instant"]]],["parkresult"]]],[5,"unpark_all","","Unparks all threads in the queue associated with the given…",N,[[["usize"],["unparktoken"]],["usize"]]],[5,"unpark_filter","","Unparks a number of threads from the front of the queue…",N,[[["usize"],["f"],["c"]],["unparkresult"]]],[5,"unpark_one","","Unparks one thread from the queue associated with the…",N,[[["usize"],["c"]],["unparkresult"]]],[5,"unpark_requeue","","Removes all threads from the queue associated with…",N,[[["usize"],["usize"],["v"],["c"]],["unparkresult"]]],[11,"is_unparked","","Returns true if we were unparked by another thread.",4,[[["self"]],["bool"]]],[11,"new","","Creates a new `SpinWait`.",6,[[],["spinwait"]]],[11,"reset","","Resets a `SpinWait` to its initial state.",6,[[["self"]]]],[11,"spin","","Spins until the sleep threshold has been reached.",6,[[["self"]],["bool"]]],[11,"spin_no_yield","","Spins without yielding the thread to the OS.",6,[[["self"]]]],[0,"deadlock","","[Experimental] Deadlock detection",N,N],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock…",N,[[["usize"]]]],[5,"release_resource","","Release a resource identified by key in the deadlock…",N,[[["usize"]]]],[17,"DEFAULT_PARK_TOKEN","parking_lot_core","A default park token to use.",N,N],[17,"DEFAULT_UNPARK_TOKEN","","A default unpark token to use.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"eq","","",4,[[["self"],["parkresult"]],["bool"]]],[11,"ne","","",4,[[["self"],["parkresult"]],["bool"]]],[11,"eq","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"eq","","",5,[[["self"],["requeueop"]],["bool"]]],[11,"eq","","",3,[[["self"],["filterop"]],["bool"]]],[11,"eq","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"ne","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"eq","","",0,[[["self"],["parktoken"]],["bool"]]],[11,"ne","","",0,[[["self"],["parktoken"]],["bool"]]],[11,"default","","",6,[[],["spinwait"]]],[11,"clone","","",4,[[["self"]],["parkresult"]]],[11,"clone","","",1,[[["self"]],["unparkresult"]]],[11,"clone","","",5,[[["self"]],["requeueop"]]],[11,"clone","","",3,[[["self"]],["filterop"]]],[11,"clone","","",2,[[["self"]],["unparktoken"]]],[11,"clone","","",0,[[["self"]],["parktoken"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParkToken"],[3,"UnparkResult"],[3,"UnparkToken"],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex["percent_encoding"]={"doc":"URLs use special chacters to indicate the parts of the…","items":[[3,"SIMPLE_ENCODE_SET","percent_encoding","This encode set is used for the path of cannot-be-a-base…",N,N],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",N,N],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",N,N],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on '/'-separated path segment",N,N],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",N,N],[3,"PercentEncode","","The return type of `percent_encode()` and…",N,N],[3,"PercentDecode","","The return type of `percent_decode()`.",N,N],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",N,[[["u8"]],["str"]]],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",N,N],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",N,[[["str"],["e"]],["percentencode"]]],[5,"percent_decode","","Percent-decode the given bytes.",N,N],[8,"EncodeSet","","Represents a set of characters / bytes that should be…",N,N],[10,"contains","","Called with UTF-8 bytes rather than code points. Should…",0,[[["self"],["u8"]],["bool"]]],[11,"if_any","","If the percent-decoding is different from the input,…",1,[[["self"]],["option",["vec"]]]],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",1,[[["self"]],["result",["cow","utf8error"]]]],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",1,[[["self"]],["cow",["str"]]]],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait,…",N,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"contains","","",2,[[["self"],["u8"]],["bool"]]],[11,"contains","","",3,[[["self"],["u8"]],["bool"]]],[11,"contains","","",4,[[["self"],["u8"]],["bool"]]],[11,"contains","","",5,[[["self"],["u8"]],["bool"]]],[11,"contains","","",6,[[["self"],["u8"]],["bool"]]],[11,"next","","",7,[[["self"]],["option",["str"]]]],[11,"size_hint","","",7,N],[11,"next","","",1,[[["self"]],["option",["u8"]]]],[11,"size_hint","","",1,N],[11,"clone","","",2,[[["self"]],["simple_encode_set"]]],[11,"clone","","",3,[[["self"]],["query_encode_set"]]],[11,"clone","","",4,[[["self"]],["default_encode_set"]]],[11,"clone","","",5,[[["self"]],["path_segment_encode_set"]]],[11,"clone","","",6,[[["self"]],["userinfo_encode_set"]]],[11,"clone","","",7,[[["self"]],["percentencode"]]],[11,"clone","","",1,[[["self"]],["percentdecode"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]]],"paths":[[8,"EncodeSet"],[3,"PercentDecode"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"]]};
searchIndex["pest"]={"doc":"pest. The Elegant Parser","items":[[3,"ParserState","pest","A `struct` which contains the complete state of a `Parser`.",N,N],[12,"atomicity","","Specifies current atomicity",0,N],[12,"stack","","Stack of `Span`s",0,N],[3,"Position","","A `struct` containing a position that is tied to a `&str`…",N,N],[3,"Span","","A `struct` of a span over a `&str`. It is created from…",N,N],[4,"Error","","An `enum` which defines possible errors.",N,N],[13,"ParsingError","","Generated parsing error with expected and unexpected…",1,N],[12,"positives","pest::Error","Positive attempts",1,N],[12,"negatives","","Negative attempts",1,N],[12,"pos","","Deepest position of attempts",1,N],[13,"CustomErrorPos","pest","Custom error with a message and a position",1,N],[12,"message","pest::Error","Short explanation",1,N],[12,"pos","","Error `Position` for formatting",1,N],[13,"CustomErrorSpan","pest","Custom error with a message and a span defined by a start…",1,N],[12,"message","pest::Error","Short explanation",1,N],[12,"span","","Error `Span` for formatting",1,N],[4,"Atomicity","pest","An `enum` specifying the current atomicity of a…",N,N],[13,"Atomic","","",2,N],[13,"CompoundAtomic","","",2,N],[13,"NonAtomic","","",2,N],[4,"Lookahead","","An `enum` specifying the current lookahead status of a…",N,N],[13,"Positive","","",3,N],[13,"Negative","","",3,N],[13,"None","","",3,N],[4,"Token","","An `enum` representing tokens generated by a `Parser`.",N,N],[13,"Start","","The starting bit of the `Token`",4,N],[12,"rule","pest::Token","",4,N],[12,"pos","","",4,N],[13,"End","pest","The ending bit of the `Token`",4,N],[12,"rule","pest::Token","",4,N],[12,"pos","","",4,N],[5,"state","pest","Creates a `ParserState` from a `&str`, supplying it to a…",N,[[["str"],["f"]],["result",["pairs","error"]]]],[11,"renamed_rules","","Renames all `Rule`s from a `ParsingError` variant…",1,[[["self"],["f"]],["error"]]],[0,"iterators","","A `mod` containing iterators and constructs to aid in…",N,N],[3,"FlatPairs","pest::iterators","A `struct` containing `Pairs`. It is created by…",N,N],[3,"Pair","","A `struct` containing a matching pair of `Token`s and…",N,N],[3,"Pairs","","A `struct` containing `Pairs`. It is created by…",N,N],[3,"Tokens","","A `struct` containing `Token`s. It is returned by either…",N,N],[11,"tokens","","Converts the `FlatPairs` into a `TokenIterator`.",5,[[["self"]],["tokens"]]],[11,"as_rule","","Returns the `Rule` of the `Pair`.",6,[[["self"]],["r"]]],[11,"as_str","","Captures a slice from the `&str` defined by the token…",6,[[["self"]],["str"]]],[11,"into_span","","Returns the `Span` defined by the `Pair`, consuming it.",6,[[["self"]],["span"]]],[11,"into_inner","","Returns the inner `Pairs` between the `Pair`, consuming it.",6,[[["self"]],["pairs"]]],[11,"tokens","","Converts the `Pair` into a `TokenIterator`.",6,[[["self"]],["tokens"]]],[11,"flatten","","Flattens the `Pairs`.",7,[[["self"]],["flatpairs"]]],[11,"tokens","","Converts the `Pairs` into a `TokenIterator`.",7,[[["self"]],["tokens"]]],[11,"rule","pest","Wrapper needed to generate tokens.",0,[[["self"],["r"],["position"],["f"]],["result",["position","position"]]]],[11,"sequence","","Wrapper which removes `Tokens` in case of a sequence's…",0,[[["self"],["f"]],["result",["position","position"]]]],[11,"lookahead","","Wrapper which stops `Token`s from being generated.",0,[[["self"],["bool"],["f"]],["result",["position","position"]]]],[11,"atomic","","Wrapper which stops `Token`s from being generated…",0,[[["self"],["atomicity"],["f"]],["result",["position","position"]]]],[11,"from_start","","Creates starting `Position` from an `&str`.",8,[[["str"]],["position"]]],[11,"pos","","Returns the current byte position as a `usize`.",8,[[["self"]],["usize"]]],[11,"span","","Creates a `Span` from two `Position`s.",8,[[["self"],["position"]],["span"]]],[11,"line_col","","Returns the line - and column number pair of the current…",8,N],[11,"line_of","","Returns the actual line of the current `Position`.",8,[[["self"]],["str"]]],[11,"at_start","","Returns `Ok` with the current `Position` if it is at the…",8,[[["self"]],["result",["position","position"]]]],[11,"at_end","","Returns `Ok` with the current `Position` if it is at the…",8,[[["self"]],["result",["position","position"]]]],[11,"skip","","Skips `n` `char`s from the `Position` and returns `Ok`…",8,[[["self"],["usize"]],["result",["position","position"]]]],[11,"match_string","","Matches `string` from the `Position` and returns `Ok` with…",8,[[["self"],["str"]],["result",["position","position"]]]],[11,"match_insensitive","","Case-insensitively matches `string` from the `Position`…",8,[[["self"],["str"]],["result",["position","position"]]]],[11,"match_range","","Matches `char` `range` from the `Position` and returns…",8,[[["self"],["range",["char"]]],["result",["position","position"]]]],[11,"sequence","","Starts a sequence of transformations provided by `f` from…",8,[[["self"],["f"]],["result",["position","position"]]]],[11,"lookahead","","Starts a lookahead transformation provided by `f` from the…",8,[[["self"],["bool"],["f"]],["result",["position","position"]]]],[11,"optional","","Optionally applies the transformation provided by `f` from…",8,[[["self"],["f"]],["result",["position","position"]]]],[11,"repeat","","Repeatedly applies the transformation provided by `f` from…",8,[[["self"],["f"]],["result",["position","position"]]]],[0,"prec_climber","","A `mod` containing constructs useful in infix operator…",N,N],[3,"Operator","pest::prec_climber","A `struct` defining an infix operator used in `PrecClimber`.",N,N],[3,"PrecClimber","","A `struct` useful in order to perform [precedence…",N,N],[4,"Assoc","","An `enum` describing an `Operator`'s associativity.",N,N],[13,"Left","","Left `Operator` associativity",9,N],[13,"Right","","Right `Operator` associativity",9,N],[11,"new","","Creates a new `Operator` from a `Rule` and `Assoc`.",10,[[["r"],["assoc"]],["operator"]]],[11,"new","","Creates a new `PrecClimber` from the `Operator`s contained…",11,[[["vec",["operator"]]],["precclimber"]]],[11,"climb","","Performs the precedence climbing algorithm on the `pairs`…",11,[[["self"],["p"],["f"],["g"]],["t"]]],[11,"start","pest","Returns the `Span`'s start byte position as a `usize`.",12,[[["self"]],["usize"]]],[11,"end","","Returns the `Span`'s end byte position as a `usize`.",12,[[["self"]],["usize"]]],[11,"start_pos","","Returns the `Span`'s start `Position`.",12,[[["self"]],["position"]]],[11,"end_pos","","Returns the `Span`'s end `Position`.",12,[[["self"]],["position"]]],[11,"split","","Splits the `Span` into a pair of `Position`s.",12,N],[11,"as_str","","Captures a slice from the `&str` defined by the `Span`.",12,[[["self"]],["str"]]],[8,"RuleType","","A `trait` which parser rules must implement.",N,N],[8,"Parser","","A `trait` that defines a `Parser`.",N,N],[10,"parse","","Parses an `&str` starting from `rule`.",13,[[["r"],["str"]],["result",["pairs","error"]]]],[14,"parses_to","","A `macro` which facilitates grammar testing and debugging…",N,N],[14,"fails_with","","A `macro` which facilitates grammar testing and debugging…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","pest::iterators","",5,[[["self"]],["i"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","pest::prec_climber","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"next","pest::iterators","",5,[[["self"]],["option"]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"next","","",14,[[["self"]],["option"]]],[11,"eq","pest","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"eq","pest::iterators","",6,[[["self"],["pair"]],["bool"]]],[11,"eq","","",7,[[["self"],["pairs"]],["bool"]]],[11,"eq","pest","",3,[[["self"],["lookahead"]],["bool"]]],[11,"eq","","",2,[[["self"],["atomicity"]],["bool"]]],[11,"eq","","",8,[[["self"],["position"]],["bool"]]],[11,"eq","pest::prec_climber","",9,[[["self"],["assoc"]],["bool"]]],[11,"eq","pest","",12,[[["self"],["span"]],["bool"]]],[11,"eq","","",4,[[["self"],["token"]],["bool"]]],[11,"ne","","",4,[[["self"],["token"]],["bool"]]],[11,"cmp","","",8,[[["self"],["position"]],["ordering"]]],[11,"cmp","","",12,[[["self"],["span"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"clone","pest::iterators","",5,[[["self"]],["flatpairs"]]],[11,"clone","","",6,[[["self"]],["pair"]]],[11,"clone","","",7,[[["self"]],["pairs"]]],[11,"clone","","",14,[[["self"]],["tokens"]]],[11,"clone","pest","",3,[[["self"]],["lookahead"]]],[11,"clone","","",2,[[["self"]],["atomicity"]]],[11,"clone","","",8,[[["self"]],["position"]]],[11,"clone","pest::prec_climber","",9,[[["self"]],["assoc"]]],[11,"clone","pest","",12,[[["self"]],["span"]]],[11,"clone","","",4,[[["self"]],["token"]]],[11,"partial_cmp","","",8,[[["self"],["position"]],["option",["ordering"]]]],[11,"partial_cmp","","",12,[[["self"],["span"]],["option",["ordering"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest::iterators","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest::prec_climber","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","pest::iterators","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"hash","pest","",1,N],[11,"hash","pest::iterators","",6,[[["self"],["h"]]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"hash","pest","",8,[[["self"],["h"]]]],[11,"hash","","",12,[[["self"],["h"]]]],[11,"hash","","",4,N],[11,"bitor","pest::prec_climber","",10,[[["self"],["self"]],["self"]]],[11,"description","pest","",1,[[["self"]],["str"]]]],"paths":[[3,"ParserState"],[4,"Error"],[4,"Atomicity"],[4,"Lookahead"],[4,"Token"],[3,"FlatPairs"],[3,"Pair"],[3,"Pairs"],[3,"Position"],[4,"Assoc"],[3,"Operator"],[3,"PrecClimber"],[3,"Span"],[8,"Parser"],[3,"Tokens"]]};
searchIndex["pest_derive"]={"doc":"pest. The Elegant Parser","items":[[24,"Parser","pest_derive","",N,N]],"paths":[]};
searchIndex["phf"]={"doc":"Compile time optimized maps and sets.","items":[[8,"PhfHash","phf","A trait implemented by types which can be used in PHF data…",N,N],[10,"phf_hash","","Feeds the value into the state given, updating the hasher…",0,N],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,N],[3,"Map","","An immutable map constructed at compile time.",N,N],[3,"Set","","An immutable set constructed at compile time.",N,N],[3,"OrderedMap","","An order-preserving immutable map constructed at compile…",N,N],[3,"OrderedSet","","An order-preserving immutable set constructed at compile…",N,N],[0,"map","","An immutable map constructed at compile time.",N,N],[3,"Map","phf::map","An immutable map constructed at compile time.",N,N],[3,"Entries","","An iterator over the key/value pairs in a `Map`.",N,N],[3,"Keys","","An iterator over the keys in a `Map`.",N,N],[3,"Values","","An iterator over the values in a `Map`.",N,N],[11,"is_empty","","Returns true if the `Map` is empty.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of entries in the `Map`.",1,[[["self"]],["usize"]]],[11,"contains_key","","Determines if `key` is in the `Map`.",1,[[["self"],["t"]],["bool"]]],[11,"get","","Returns a reference to the value that `key` maps to.",1,[[["self"],["t"]],["option"]]],[11,"get_key","","Returns a reference to the map's internal static instance…",1,[[["self"],["t"]],["option"]]],[11,"get_entry","","Like `get`, but returns both the key and the value.",1,[[["self"],["t"]],["option"]]],[11,"entries","","Returns an iterator over the key/value pairs in the map.",1,[[["self"]],["entries"]]],[11,"keys","","Returns an iterator over the keys in the map.",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator over the values in the map.",1,[[["self"]],["values"]]],[0,"set","phf","An immutable set constructed at compile time.",N,N],[3,"Set","phf::set","An immutable set constructed at compile time.",N,N],[3,"Iter","","An iterator over the values in a `Set`.",N,N],[11,"len","","Returns the number of elements in the `Set`.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Set` contains no elements.",2,[[["self"]],["bool"]]],[11,"get_key","","Returns a reference to the set's internal static instance…",2,[[["self"],["u"]],["option"]]],[11,"contains","","Returns true if `value` is in the `Set`.",2,[[["self"],["u"]],["bool"]]],[11,"iter","","Returns an iterator over the values in the set.",2,[[["self"]],["iter"]]],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",2,[[["self"],["set"]],["bool"]]],[11,"is_subset","","Returns true if `other` contains all values in `self`.",2,[[["self"],["set"]],["bool"]]],[11,"is_superset","","Returns true if `self` contains all values in `other`.",2,[[["self"],["set"]],["bool"]]],[0,"ordered_map","phf","An order-preserving immutable map constructed at compile…",N,N],[3,"OrderedMap","phf::ordered_map","An order-preserving immutable map constructed at compile…",N,N],[3,"Entries","","An iterator over the entries in a `OrderedMap`.",N,N],[3,"Keys","","An iterator over the keys in a `OrderedMap`.",N,N],[3,"Values","","An iterator over the values in a `OrderedMap`.",N,N],[11,"len","","Returns the number of entries in the `Map`.",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Map` is empty.",3,[[["self"]],["bool"]]],[11,"get","","Returns a reference to the value that `key` maps to.",3,[[["self"],["t"]],["option"]]],[11,"get_key","","Returns a reference to the map's internal static instance…",3,[[["self"],["t"]],["option"]]],[11,"contains_key","","Determines if `key` is in the `Map`.",3,[[["self"],["t"]],["bool"]]],[11,"get_index","","Returns the index of the key within the list used to…",3,[[["self"],["t"]],["option",["usize"]]]],[11,"index","","Returns references to both the key and values at an index…",3,[[["self"],["usize"]],["option"]]],[11,"get_entry","","Like `get`, but returns both the key and the value.",3,[[["self"],["t"]],["option"]]],[11,"entries","","Returns an iterator over the key/value pairs in the map.",3,[[["self"]],["entries"]]],[11,"keys","","Returns an iterator over the keys in the map.",3,[[["self"]],["keys"]]],[11,"values","","Returns an iterator over the values in the map.",3,[[["self"]],["values"]]],[0,"ordered_set","phf","An order-preserving immutable set constructed at compile…",N,N],[3,"OrderedSet","phf::ordered_set","An order-preserving immutable set constructed at compile…",N,N],[3,"Iter","","An iterator over the values in a `OrderedSet`.",N,N],[11,"len","","Returns the number of elements in the `OrderedSet`.",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `OrderedSet` contains no elements.",4,[[["self"]],["bool"]]],[11,"get_key","","Returns a reference to the set's internal static instance…",4,[[["self"],["u"]],["option"]]],[11,"get_index","","Returns the index of the key within the list used to…",4,[[["self"],["u"]],["option",["usize"]]]],[11,"index","","Returns a reference to the key at an index within the list…",4,[[["self"],["usize"]],["option"]]],[11,"contains","","Returns true if `value` is in the `Set`.",4,[[["self"],["u"]],["bool"]]],[11,"iter","","Returns an iterator over the values in the set.",4,[[["self"]],["iter"]]],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",4,[[["self"],["orderedset"]],["bool"]]],[11,"is_subset","","Returns true if `other` contains all values in `self`.",4,[[["self"],["orderedset"]],["bool"]]],[11,"is_superset","","Returns true if `self` contains all values in `other`.",4,[[["self"],["orderedset"]],["bool"]]],[11,"from","phf::map","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","phf::set","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","phf::ordered_map","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","phf::ordered_set","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","phf::map","",5,[[["self"]],["i"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_iter","phf::set","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_iter","phf::ordered_map","",9,[[["self"]],["i"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_iter","phf::ordered_set","",12,[[["self"]],["i"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"next","phf::map","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"next","phf::set","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"next","phf::ordered_map","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,N],[11,"next","phf::ordered_set","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,N],[11,"next_back","phf::map","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",7,[[["self"]],["option"]]],[11,"next_back","phf::set","",8,[[["self"]],["option"]]],[11,"next_back","phf::ordered_map","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","phf::ordered_set","",12,[[["self"]],["option"]]],[11,"fmt","phf::map","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","phf::set","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","phf::ordered_map","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","phf::ordered_set","",4,[[["self"],["formatter"]],["result"]]],[11,"index","phf::map","",1,[[["self"],["t"]],["v"]]],[11,"index","phf::ordered_map","",3,[[["self"],["t"]],["v"]]]],"paths":[[8,"PhfHash"],[3,"Map"],[3,"Set"],[3,"OrderedMap"],[3,"OrderedSet"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Iter"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Iter"]]};
searchIndex["phf_shared"]={"doc":"","items":[[5,"displace","phf_shared","",N,[[["u32"],["u32"],["u32"],["u32"]],["u32"]]],[5,"split","","",N,N],[5,"hash","","`key` is from `phf_generator::HashState::key`.",N,[[["t"],["u64"]],["u64"]]],[5,"get_index","","Return an index into `phf_generator::HashState::map`.",N,N],[8,"PhfHash","","A trait implemented by types which can be used in PHF data…",N,N],[10,"phf_hash","","Feeds the value into the state given, updating the hasher…",0,[[["self"],["h"]]]],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,N]],"paths":[[8,"PhfHash"]]};
searchIndex["proc_macro2"]={"doc":"A \"shim crate\" intended to multiplex the [`proc_macro`]…","items":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError","","Error returned from `TokenStream::from_str`.",N,N],[3,"Span","","A region of source code, along with macro expansion…",N,N],[3,"Group","","A delimited token stream.",N,N],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",N,N],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,"TokenTree","","A single token or a delimited sequence of token trees…",N,N],[13,"Group","","A token stream surrounded by bracket delimiters.",0,N],[13,"Ident","","An identifier.",0,N],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis","","`( ... )`",1,N],[13,"Brace","","`{ ... }`",1,N],[13,"Bracket","","`[ ... ]`",1,N],[13,"None","","`Ø ... Ø`",1,N],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",N,N],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"empty","","",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"f64_unsuffixed","","",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",8,[[["f32"]],["literal"]]],[11,"string","","",8,[[["str"]],["literal"]]],[11,"character","","",8,[[["char"]],["literal"]]],[11,"byte_string","","",8,N],[11,"span","","",8,[[["self"]],["span"]]],[11,"set_span","","",8,[[["self"],["span"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","proc_macro2::token_stream","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"next","","",10,[[["self"]],["option",["tokentree"]]]],[11,"eq","proc_macro2","",1,[[["self"],["delimiter"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["self"],["ident"]],["bool"]]],[11,"eq","","",7,[[["self"],["t"]],["bool"]]],[11,"into_iter","","",3,[[["self"]],["intoiter"]]],[11,"default","","",3,[[],["self"]]],[11,"cmp","","",7,[[["self"],["ident"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"from","","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"partial_cmp","","",7,[[["self"],["ident"]],["option",["ordering"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_iter","","",3,[[["i"]],["self"]]],[11,"from_str","","",3,[[["str"]],["result",["tokenstream","lexerror"]]]]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["pulldown_cmark"]={"doc":"Pull parser for commonmark.","items":[[3,"Parser","pulldown_cmark","",N,N],[3,"Options","","",N,N],[4,"Alignment","","",N,N],[13,"None","","",0,N],[13,"Left","","",0,N],[13,"Center","","",0,N],[13,"Right","","",0,N],[4,"Event","","",N,N],[13,"Start","","",1,N],[13,"End","","",1,N],[13,"Text","","",1,N],[13,"Html","","",1,N],[13,"InlineHtml","","",1,N],[13,"FootnoteReference","","",1,N],[13,"SoftBreak","","",1,N],[13,"HardBreak","","",1,N],[4,"Tag","","",N,N],[13,"Paragraph","","",2,N],[13,"Rule","","",2,N],[13,"Header","","A heading. The field indicates the level of the heading.",2,N],[13,"BlockQuote","","",2,N],[13,"CodeBlock","","",2,N],[13,"List","","A list. If the list is ordered the field indicates the…",2,N],[13,"Item","","",2,N],[13,"FootnoteDefinition","","",2,N],[13,"Table","","",2,N],[13,"TableHead","","",2,N],[13,"TableRow","","",2,N],[13,"TableCell","","",2,N],[13,"Emphasis","","",2,N],[13,"Strong","","",2,N],[13,"Code","","",2,N],[13,"Link","","A link. The first field is the destination URL, the second…",2,N],[13,"Image","","An image. The first field is the destination URL, the…",2,N],[0,"html","","HTML renderer that takes an iterator of events as input.",N,N],[5,"push_html","pulldown_cmark::html","Iterate over an `Iterator` of `Event`s, generate HTML for…",N,[[["string"],["i"]]]],[11,"new","pulldown_cmark","",3,[[["str"]],["parser"]]],[11,"new_ext","","",3,[[["str"],["options"]],["parser"]]],[11,"new_with_broken_link_callback","","In case the parser encounters any potential links that…",3,[[["str"],["options"],["option",["fn"]]],["parser"]]],[11,"get_offset","","",3,[[["self"]],["usize"]]],[11,"empty","","Returns an empty set of flags.",4,[[],["options"]]],[11,"all","","Returns the set containing all flags.",4,[[],["options"]]],[11,"bits","","Returns the raw value of the flags currently stored.",4,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",4,[[["u32"]],["option",["options"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",4,[[["u32"]],["options"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",4,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",4,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",4,[[["self"],["options"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",4,[[["self"],["options"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",4,[[["self"],["options"]]]],[11,"remove","","Removes the specified flags in-place.",4,[[["self"],["options"]]]],[11,"toggle","","Toggles the specified flags in-place.",4,[[["self"],["options"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",4,[[["self"],["options"],["bool"]]]],[17,"OPTION_ENABLE_TABLES","","",N,N],[17,"OPTION_ENABLE_FOOTNOTES","","",N,N],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"next","","",3,[[["self"]],["option",["event"]]]],[11,"eq","","",2,[[["self"],["tag"]],["bool"]]],[11,"ne","","",2,[[["self"],["tag"]],["bool"]]],[11,"eq","","",1,[[["self"],["event"]],["bool"]]],[11,"ne","","",1,[[["self"],["event"]],["bool"]]],[11,"eq","","",0,[[["self"],["alignment"]],["bool"]]],[11,"eq","","",4,[[["self"],["options"]],["bool"]]],[11,"ne","","",4,[[["self"],["options"]],["bool"]]],[11,"cmp","","",4,[[["self"],["options"]],["ordering"]]],[11,"clone","","",2,[[["self"]],["tag"]]],[11,"clone","","",1,[[["self"]],["event"]]],[11,"clone","","",0,[[["self"]],["alignment"]]],[11,"clone","","",4,[[["self"]],["options"]]],[11,"extend","","",4,[[["self"],["t"]]]],[11,"partial_cmp","","",4,[[["self"],["options"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["options"]],["bool"]]],[11,"le","","",4,[[["self"],["options"]],["bool"]]],[11,"gt","","",4,[[["self"],["options"]],["bool"]]],[11,"ge","","",4,[[["self"],["options"]],["bool"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",4,N],[11,"sub","","Returns the set difference of the two sets of flags.",4,[[["self"],["options"]],["options"]]],[11,"sub_assign","","Disables all flags enabled in the set.",4,[[["self"],["options"]]]],[11,"not","","Returns the complement of this set of flags.",4,[[["self"]],["options"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",4,[[["self"],["options"]],["options"]]],[11,"bitor","","Returns the union of the two sets of flags.",4,[[["self"],["options"]],["options"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",4,[[["self"],["options"]],["options"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",4,[[["self"],["options"]]]],[11,"bitor_assign","","Adds the set of flags.",4,[[["self"],["options"]]]],[11,"bitxor_assign","","Toggles the set of flags.",4,[[["self"],["options"]]]],[11,"from_iter","","",4,[[["t"]],["options"]]]],"paths":[[4,"Alignment"],[4,"Event"],[4,"Tag"],[3,"Parser"],[3,"Options"]]};
searchIndex["quick_error"]={"doc":"A macro which makes errors easy to write","items":[[3,"Context","quick_error","Generic context type",N,N],[12,"0","","",0,N],[12,"1","","",0,N],[8,"ResultExt","","Result extension trait adding a `context` method",N,N],[10,"context","","The method is use to add context information to current…",1,[[["self"],["x"]],["result",["context"]]]],[14,"quick_error","","Main macro that does all the work",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Context"],[8,"ResultExt"]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","items":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",N,N],[10,"append","","",0,[[["self"],["u"]]]],[10,"append_all","","",0,[[["self"],["i"]]]],[10,"append_separated","","",0,[[["self"],["i"],["u"]]]],[10,"append_terminated","","",0,[[["self"],["i"],["u"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`]…",N,N],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["self"],["tokenstream"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]],[14,"quote","","The whole point.",N,N],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",N,N],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]]],"paths":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","items":[[8,"RngCore","rand","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types…",1,N],[10,"from_seed","","Create a new PRNG using the given seed.",1,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],["result",["error"]]]],[4,"ErrorKind","","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",2,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",2,N],[13,"Transient","","A transient failure which likely can be resolved or worked…",2,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",2,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",3,N],[12,"msg","","The error message",3,N],[3,"Generator","","Iterator which will generate a stream of random items.",N,N],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii…",N,N],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"weak_rng","","DEPRECATED: use [`SmallRng`] instead.",N,[[],["xorshiftrng"]]],[5,"random","","Generates a random value using the thread-local random…",N,[[],["t"]]],[5,"sample","","DEPRECATED: use `seq::sample_iter` instead.",N,[[["r"],["i"],["usize"]],["vec"]]],[0,"distributions","","Generating random samples from probability distributions.",N,N],[3,"Alphanumeric","rand::distributions","Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform","","Sample values uniformly between two bounds.",N,N],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",N,N],[3,"Open01","","A distribution to sample floating point numbers uniformly…",N,N],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",N,N],[3,"Exp","","The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1","","Samples floating-point numbers according to the…",N,N],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",N,N],[3,"Bernoulli","","The Bernoulli distribution.",N,N],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"DistIter","","An iterator that generates random values of `T` with…",N,N],[3,"Standard","","A generic random value distribution, implemented for many…",N,N],[3,"Weighted","","A value with a particular weight for use with…",N,N],[12,"weight","","The numerical weight of this item",4,N],[12,"item","","The actual item which is being weighted",4,N],[3,"WeightedChoice","","A distribution that selects from a finite collection of…",N,N],[0,"uniform","","A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",N,N],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",N,N],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",N,N],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,"SampleUniform","","Helper trait for creating objects using the correct…",N,N],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",5,N],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",N,N],[16,"X","","The type sampled by this implementation.",6,N],[10,"new","","Construct self, with inclusive lower bound and exclusive…",6,N],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",6,N],[10,"sample","","Sample a value.",6,N],[11,"sample_single","","Sample a single value uniformly from a range with…",6,N],[11,"new","","Create a new `Uniform` instance which samples uniformly…",7,[[["x"],["x"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",7,[[["x"],["x"]],["uniform"]]],[11,"new","rand::distributions","Construct an object representing the `Gamma(shape, scale)`…",8,[[["f64"],["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",9,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",10,[[["f64"],["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",11,[[["f64"]],["studentt"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",12,[[["f64"],["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",13,[[["f64"],["f64"]],["lognormal"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",14,[[["f64"]],["exp"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",15,[[["f64"],["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",16,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",17,[[["u64"],["f64"]],["binomial"]]],[11,"new","","Construct a new `Bernoulli` with the given probability of…",18,[[["f64"]],["bernoulli"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",19,[[["f64"],["f64"]],["cauchy"]]],[0,"range","","DEPRECATED: Use `distributions::uniform` instead.",N,N],[8,"Sample","","Types that can be used to create a random instance of…",N,N],[10,"sample","","Generate a random value of `Support`, using `rng` as the…",20,[[["self"],["r"]],["support"]]],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",N,N],[10,"ind_sample","","Generate a random value.",21,[[["self"],["r"]],["support"]]],[8,"Distribution","","Types (distributions) that can be used to create a random…",N,N],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",22,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",22,[[["self"],["r"]],["distiter"]]],[11,"new","","Create a new `WeightedChoice`.",23,N],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng","","Pseudo-random number generators.",N,N],[3,"XorShiftRng","rand::prng","An Xorshift random number generator.",N,N],[0,"chacha","","The ChaCha random number generator.",N,N],[3,"ChaChaRng","rand::prng::chacha","A cryptographically secure random number generator that…",N,N],[3,"ChaChaCore","","The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"new_unseeded","","Create an ChaCha random number generator using the default…",24,[[],["chacharng"]]],[11,"set_stream","","Set the stream number.",24,[[["self"],["u64"]]]],[0,"hc128","rand::prng","The HC-128 random number generator.",N,N],[3,"Hc128Rng","rand::prng::hc128","A cryptographically secure random number generator that…",N,N],[3,"Hc128Core","","The core of `Hc128Rng`, used with `BlockRng`.",N,N],[0,"isaac","rand::prng","The ISAAC random number generator.",N,N],[3,"IsaacRng","rand::prng::isaac","A random number generator that uses the ISAAC algorithm.",N,N],[3,"IsaacCore","","The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,"new_unseeded","","Create an ISAAC random number generator using the default…",25,[[],["self"]]],[11,"new_from_u64","","Create an ISAAC random number generator using an `u64` as…",25,[[["u64"]],["self"]]],[0,"isaac64","rand::prng","The ISAAC-64 random number generator.",N,N],[3,"Isaac64Rng","rand::prng::isaac64","A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,"Isaac64Core","","The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the…",26,[[],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",26,[[["u64"]],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",27,[[["u64"]],["self"]]],[11,"new_unseeded","rand::prng","Creates a new XorShiftRng instance which is not seeded.",28,[[],["xorshiftrng"]]],[0,"rngs","rand","Random number generators and adapters for common usage:",N,N],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU…",N,N],[3,"EntropyRng","","An interface returning random data from external…",N,N],[3,"SmallRng","","An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",N,N],[3,"OsRng","","A random number generator that retrieves randomness…",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`]…",N,N],[13,"NoTimer","","No timer available.",29,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",29,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",29,N],[13,"TinyVariantions","","Variations of deltas of time too small.",29,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",29,N],[0,"adapter","","Wrappers / adapters forming RNGs",N,N],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type…",N,N],[3,"ReseedingRng","","A wrapper around any PRNG which reseeds the underlying…",N,N],[11,"new","","Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` with the given parameters.",31,[[["r"],["u64"],["rsdr"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",31,[[["self"]],["result",["error"]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",32,[[],["self"]]],[11,"new","","Create a new `JitterRng`. Makes use of `std::time` for a…",33,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied,…",33,N],[11,"set_rounds","","Configures how many rounds are used to generate each…",33,[[["self"],["u8"]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing…",33,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run…",33,[[["self"],["bool"]],["i64"]]],[0,"mock","","Mock random number generator",N,N],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",34,[[["u64"],["u64"]],["self"]]],[11,"new","rand::rngs","Create a new `OsRng`.",35,[[],["result",["osrng","error"]]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[5,"sample_iter","rand::seq","Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],["usize"]],["result",["vec","vec"]]]],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",N,N],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",N,N],[5,"sample_indices","","Randomly sample exactly `amount` indices from `0..length`.",N,[[["r"],["usize"],["usize"]],["vec",["usize"]]]],[8,"Rand","rand","A type that can be randomly generated using an [`Rng`].",N,N],[10,"rand","","Generates a random instance of this type using the…",36,[[["r"]],["self"]]],[8,"Rng","","An automatically-implemented extension trait on…",N,N],[11,"gen","","Return a random value supporting the [`Standard`]…",37,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",37,[[["self"],["t"],["t"]],["t"]]],[11,"sample","","Sample a new value, using the given distribution.",37,[[["self"],["d"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",37,[[["self"],["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]],["result",["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",37,[[["self"],["f64"]],["bool"]]],[11,"choose","","Return a random element from `values`.",37,N],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",37,N],[11,"shuffle","","Shuffle a mutable slice in place.",37,N],[11,"gen_iter","","Return an iterator that will yield an infinite number of…",37,[[["self"]],["generator"]]],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",37,[[["self"],["u32"]],["bool"]]],[11,"gen_ascii_chars","","Return an iterator of random characters from the set…",37,[[["self"]],["asciigenerator"]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",38,N],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[["self"]]]],[8,"FromEntropy","","A convenience extension to [`SeedableRng`] allowing…",N,N],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh…",39,[[],["self"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_iter","","",40,[[["self"]],["i"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into_iter","","",41,[[["self"]],["i"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","rand::distributions::uniform","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","rand::distributions::uniform","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from_entropy","rand::prng","",28,[[],["r"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from_entropy","rand::prng::chacha","",24,[[],["r"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from_entropy","","",52,[[],["r"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from_entropy","rand::prng::hc128","",53,[[],["r"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from_entropy","","",54,[[],["r"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from_entropy","rand::prng::isaac","",25,[[],["r"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from_entropy","","",55,[[],["r"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from_entropy","rand::prng::isaac64","",26,[[],["r"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from_entropy","","",27,[[],["r"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","rand::rngs","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from_entropy","","",56,[[],["r"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from_entropy","","",57,[[],["r"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","rand::rngs::adapter","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","rand::rngs::mock","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"read","rand","",0,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",2,[[["self"],["errorkind"]],["bool"]]],[11,"clone","","",2,[[["self"]],["errorkind"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"new","rand::distributions::uniform","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,N],[11,"new_inclusive","","",49,N],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",50,N],[11,"new_inclusive","","",50,N],[11,"sample","","",50,N],[11,"sample_single","","",50,N],[11,"new","","",50,N],[11,"new_inclusive","","",50,N],[11,"sample","","",50,N],[11,"sample_single","","",50,N],[11,"new","","",51,[[["duration"],["duration"]],["uniformduration"]]],[11,"new_inclusive","","",51,[[["duration"],["duration"]],["uniformduration"]]],[11,"sample","","",51,[[["self"],["r"]],["duration"]]],[11,"sample","rand::distributions","",23,[[["self"],["r"]],["t"]]],[11,"sample","rand::distributions::uniform","",7,[[["self"],["r"]],["t"]]],[11,"sample","rand::distributions","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",8,[[["self"],["r"]],["f64"]]],[11,"sample","","",9,[[["self"],["r"]],["f64"]]],[11,"sample","","",10,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",23,[[["self"],["r"]],["t"]]],[11,"ind_sample","rand::distributions::uniform","",7,[[["self"],["r"]],["t"]]],[11,"ind_sample","rand::distributions","",14,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",8,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",9,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",10,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",11,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",12,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::uniform","",7,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",8,[[["self"],["r"]],["f64"]]],[11,"sample","","",9,[[["self"],["r"]],["f64"]]],[11,"sample","","",10,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",45,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["u64"]]],[11,"sample","","",17,[[["self"],["r"]],["u64"]]],[11,"sample","","",18,[[["self"],["r"]],["bool"]]],[11,"sample","","",19,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["f32"]]],[11,"sample","","",43,[[["self"],["r"]],["f32"]]],[11,"sample","","",44,[[["self"],["r"]],["f32"]]],[11,"sample","","",48,[[["self"],["r"]],["f64"]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["u8"]]],[11,"sample","","",48,[[["self"],["r"]],["u16"]]],[11,"sample","","",48,[[["self"],["r"]],["u32"]]],[11,"sample","","",48,[[["self"],["r"]],["u64"]]],[11,"sample","","",48,[[["self"],["r"]],["usize"]]],[11,"sample","","",48,[[["self"],["r"]],["i8"]]],[11,"sample","","",48,[[["self"],["r"]],["i16"]]],[11,"sample","","",48,[[["self"],["r"]],["i32"]]],[11,"sample","","",48,[[["self"],["r"]],["i64"]]],[11,"sample","","",48,[[["self"],["r"]],["isize"]]],[11,"sample","","",48,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",48,[[["self"],["r"]],["bool"]]],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,[[["self"],["r"]],["option"]]],[11,"sample","","",48,[[["self"],["r"]],["wrapping"]]],[11,"sample","","",23,[[["self"],["r"]],["t"]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,N],[11,"next","rand","",40,[[["self"]],["option"]]],[11,"next","","",41,[[["self"]],["option",["char"]]]],[11,"eq","rand::rngs","",29,[[["self"],["timererror"]],["bool"]]],[11,"default","","",32,[[],["self"]]],[11,"clone","rand::distributions::uniform","",7,[[["self"]],["uniform"]]],[11,"clone","","",49,[[["self"]],["uniformint"]]],[11,"clone","","",50,[[["self"]],["uniformfloat"]]],[11,"clone","","",51,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",8,[[["self"]],["gamma"]]],[11,"clone","","",9,[[["self"]],["chisquared"]]],[11,"clone","","",10,[[["self"]],["fisherf"]]],[11,"clone","","",11,[[["self"]],["studentt"]]],[11,"clone","","",45,[[["self"]],["standardnormal"]]],[11,"clone","","",12,[[["self"]],["normal"]]],[11,"clone","","",13,[[["self"]],["lognormal"]]],[11,"clone","","",46,[[["self"]],["exp1"]]],[11,"clone","","",14,[[["self"]],["exp"]]],[11,"clone","","",15,[[["self"]],["pareto"]]],[11,"clone","","",16,[[["self"]],["poisson"]]],[11,"clone","","",17,[[["self"]],["binomial"]]],[11,"clone","","",18,[[["self"]],["bernoulli"]]],[11,"clone","","",19,[[["self"]],["cauchy"]]],[11,"clone","","",43,[[["self"]],["openclosed01"]]],[11,"clone","","",44,[[["self"]],["open01"]]],[11,"clone","","",48,[[["self"]],["standard"]]],[11,"clone","","",4,[[["self"]],["weighted"]]],[11,"clone","rand::prng::chacha","",24,[[["self"]],["chacharng"]]],[11,"clone","","",52,[[["self"]],["chachacore"]]],[11,"clone","rand::prng::hc128","",53,[[["self"]],["hc128rng"]]],[11,"clone","","",54,[[["self"]],["hc128core"]]],[11,"clone","rand::prng::isaac","",25,[[["self"]],["isaacrng"]]],[11,"clone","","",55,[[["self"]],["isaaccore"]]],[11,"clone","rand::prng::isaac64","",26,[[["self"]],["isaac64rng"]]],[11,"clone","","",27,[[["self"]],["isaac64core"]]],[11,"clone","rand::prng","",28,[[["self"]],["xorshiftrng"]]],[11,"clone","rand::rngs::adapter","",31,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs","",33,[[["self"]],["jitterrng"]]],[11,"clone","","",29,[[["self"]],["timererror"]]],[11,"clone","rand::rngs::mock","",34,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",56,[[["self"]],["smallrng"]]],[11,"clone","","",57,[[["self"]],["stdrng"]]],[11,"clone","","",58,[[["self"]],["threadrng"]]],[11,"clone","","",35,[[["self"]],["osrng"]]],[11,"from","rand::distributions::uniform","",7,[[["range"]],["uniform"]]],[11,"from","rand::prng::chacha","",24,[[["chachacore"]],["self"]]],[11,"from","rand","",3,[[["timererror"]],["error"]]],[11,"fmt","rand::distributions::uniform","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::prng::chacha","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::prng::hc128","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::prng::isaac","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::prng::isaac64","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::prng","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::adapter","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::mock","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",29,[[["self"],["formatter"]],["result"]]],[11,"description","","",29,[[["self"]],["str"]]],[11,"from_seed","rand::prng::chacha","",24,N],[11,"from_rng","","",24,[[["r"]],["result",["error"]]]],[11,"from_seed","","",52,N],[11,"from_seed","rand::prng::hc128","",53,N],[11,"from_rng","","",53,[[["r"]],["result",["error"]]]],[11,"from_seed","","Create an HC-128 random number generator with a seed. The…",54,N],[11,"from_seed","rand::prng::isaac","",25,N],[11,"from_rng","","",25,[[["s"]],["result",["error"]]]],[11,"from_seed","","",55,N],[11,"from_rng","","",55,[[["r"]],["result",["error"]]]],[11,"from_seed","rand::prng::isaac64","",26,N],[11,"from_rng","","",26,[[["s"]],["result",["error"]]]],[11,"from_seed","","",27,N],[11,"from_rng","","",27,[[["r"]],["result",["error"]]]],[11,"from_seed","rand::prng","",28,N],[11,"from_rng","","",28,[[["r"]],["result",["error"]]]],[11,"from_seed","rand::rngs","",56,N],[11,"from_rng","","",56,[[["r"]],["result",["error"]]]],[11,"from_seed","","",57,N],[11,"from_rng","","",57,[[["r"]],["result",["error"]]]],[11,"generate","rand::prng::chacha","",52,N],[11,"generate","rand::prng::hc128","",54,N],[11,"generate","rand::prng::isaac","Refills the output buffer, `results`. See also the…",55,[[["self"],["isaacarray"]]]],[11,"generate","rand::prng::isaac64","Refills the output buffer, `results`. See also the…",27,[[["self"],["isaacarray"]]]],[11,"next_u32","rand::prng::chacha","",24,[[["self"]],["u32"]]],[11,"next_u64","","",24,[[["self"]],["u64"]]],[11,"fill_bytes","","",24,N],[11,"try_fill_bytes","","",24,N],[11,"next_u32","rand::prng::hc128","",53,[[["self"]],["u32"]]],[11,"next_u64","","",53,[[["self"]],["u64"]]],[11,"fill_bytes","","",53,N],[11,"try_fill_bytes","","",53,N],[11,"next_u32","rand::prng::isaac","",25,[[["self"]],["u32"]]],[11,"next_u64","","",25,[[["self"]],["u64"]]],[11,"fill_bytes","","",25,N],[11,"try_fill_bytes","","",25,N],[11,"next_u32","rand::prng::isaac64","",26,[[["self"]],["u32"]]],[11,"next_u64","","",26,[[["self"]],["u64"]]],[11,"fill_bytes","","",26,N],[11,"try_fill_bytes","","",26,N],[11,"next_u32","rand::prng","",28,[[["self"]],["u32"]]],[11,"next_u64","","",28,[[["self"]],["u64"]]],[11,"fill_bytes","","",28,N],[11,"try_fill_bytes","","",28,N],[11,"next_u32","rand::rngs::adapter","",30,[[["self"]],["u32"]]],[11,"next_u64","","",30,[[["self"]],["u64"]]],[11,"fill_bytes","","",30,N],[11,"try_fill_bytes","","",30,N],[11,"next_u32","","",31,[[["self"]],["u32"]]],[11,"next_u64","","",31,[[["self"]],["u64"]]],[11,"fill_bytes","","",31,N],[11,"try_fill_bytes","","",31,N],[11,"next_u32","rand::rngs","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,N],[11,"try_fill_bytes","","",32,N],[11,"next_u32","","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,N],[11,"try_fill_bytes","","",33,N],[11,"next_u32","rand::rngs::mock","",34,[[["self"]],["u32"]]],[11,"next_u64","","",34,[[["self"]],["u64"]]],[11,"fill_bytes","","",34,N],[11,"try_fill_bytes","","",34,N],[11,"next_u32","rand::rngs","",56,[[["self"]],["u32"]]],[11,"next_u64","","",56,[[["self"]],["u64"]]],[11,"fill_bytes","","",56,N],[11,"try_fill_bytes","","",56,N],[11,"next_u32","","",57,[[["self"]],["u32"]]],[11,"next_u64","","",57,[[["self"]],["u64"]]],[11,"fill_bytes","","",57,N],[11,"try_fill_bytes","","",57,N],[11,"next_u32","","",58,[[["self"]],["u32"]]],[11,"next_u64","","",58,[[["self"]],["u64"]]],[11,"fill_bytes","","",58,N],[11,"try_fill_bytes","","",58,N],[11,"next_u32","","",35,[[["self"]],["u32"]]],[11,"next_u64","","",35,[[["self"]],["u64"]]],[11,"fill_bytes","","",35,N],[11,"try_fill_bytes","","",35,N],[11,"should_retry","rand","True if this kind of error may resolve itself on retry.",2,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",2,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",2,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",3,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",3,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",3,[[["self"]],["option",["box"]]]]],"paths":[[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[3,"Weighted"],[8,"SampleUniform"],[8,"UniformSampler"],[3,"Uniform"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Bernoulli"],[3,"Cauchy"],[8,"Sample"],[8,"IndependentSample"],[8,"Distribution"],[3,"WeightedChoice"],[3,"ChaChaRng"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"XorShiftRng"],[4,"TimerError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"JitterRng"],[3,"StepRng"],[3,"OsRng"],[8,"Rand"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"Generator"],[3,"AsciiGenerator"],[3,"Alphanumeric"],[3,"OpenClosed01"],[3,"Open01"],[3,"StandardNormal"],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"ChaChaCore"],[3,"Hc128Rng"],[3,"Hc128Core"],[3,"IsaacCore"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","items":[[4,"ErrorKind","rand_core","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",0,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",0,N],[13,"Transient","","A transient failure which likely can be resolved or worked…",0,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",0,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",1,N],[12,"msg","","The error message",1,N],[0,"block","","The `BlockRngCore` trait and implementation helpers",N,N],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers…",N,N],[16,"Item","","Results element type, e.g. `u32`.",2,N],[16,"Results","","Results type. This is the 'block' an RNG implementing…",2,N],[10,"generate","","Generate a new block of results.",2,N],[3,"BlockRng","","A wrapper type implementing [`RngCore`] for some type…",N,N],[12,"core","","The core part of the RNG, implementing the `generate`…",3,N],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",N,N],[12,"core","","The core part of the RNG, implementing the `generate`…",4,N],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,N],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",N,N],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",N,N],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,N],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",N,N],[8,"RngCore","rand_core","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",5,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",5,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",5,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types…",6,N],[10,"from_seed","","Create a new PRNG using the given seed.",6,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",6,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,[[["r"]],["result",["error"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","rand_core::block","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"read","rand_core","",5,N],[11,"from_seed","rand_core::block","",4,N],[11,"seed_from_u64","","",4,[[["u64"]],["blockrng64"]]],[11,"from_rng","","",4,[[["s"]],["result",["blockrng64","error"]]]],[11,"from_seed","","",3,N],[11,"seed_from_u64","","",3,[[["u64"]],["blockrng"]]],[11,"from_rng","","",3,[[["s"]],["result",["blockrng","error"]]]],[11,"next_u32","","",4,[[["self"]],["u32"]]],[11,"next_u64","","",4,[[["self"]],["u64"]]],[11,"fill_bytes","","",4,N],[11,"try_fill_bytes","","",4,N],[11,"next_u32","","",3,[[["self"]],["u32"]]],[11,"next_u64","","",3,[[["self"]],["u64"]]],[11,"fill_bytes","","",3,N],[11,"try_fill_bytes","","",3,N],[11,"fmt","rand_core","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"clone","","",0,[[["self"]],["errorkind"]]],[11,"clone","rand_core::block","",3,[[["self"]],["blockrng"]]],[11,"clone","","",4,[[["self"]],["blockrng64"]]],[11,"description","rand_core","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core::block","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core::block","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"should_retry","rand_core","True if this kind of error may resolve itself on retry.",0,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",0,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",0,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",1,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",1,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",1,[[["self"]],["option",["box"]]]],[11,"new","rand_core::block","Create a new `BlockRng` from an existing RNG implementing…",3,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",3,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",3,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",3,N],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",4,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",4,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",4,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",4,N]],"paths":[[4,"ErrorKind"],[3,"Error"],[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["rayon"]={"doc":"Data-parallelism library that makes it easy to convert…","items":[[5,"current_num_threads","rayon","Returns the number of threads in the current registry. If…",N,[[],["usize"]]],[3,"ThreadPool","","Represents a user created [thread-pool].",N,N],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",N,N],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",N,N],[5,"join","","Takes two closures and potentially runs them in parallel.…",N,N],[5,"join_context","","Identical to `join`, except that the closures have a…",N,N],[3,"FnContext","","Provides the calling context to a closure called by…",N,N],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure…",N,[[["op"]],["r"]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",N,N],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\"…",N,N],[0,"collections","","Parallel iterator types for [standard…",N,N],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps…",N,N],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a binary…",N,N],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for…",N,N],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",N,N],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for…",N,N],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",N,N],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash…",N,N],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a hash map",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",N,N],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash…",N,N],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a hash set",N,N],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for…",N,N],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a linked…",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a linked list",N,N],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for…",N,N],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a…",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a…",N,N],[0,"iter","rayon","Traits for writing parallel programs using an…",N,N],[4,"Either","rayon::iter","The enum `Either` with variants `Left` and `Right` is a…",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[3,"IterBridge","","`IterBridge` is a parallel iterator that wraps a…",N,N],[3,"Chain","","`Chain` is an iterator that joins `b` after `a` in one…",N,N],[3,"Chunks","","`Chunks` is an iterator that groups elements of an…",N,N],[3,"Enumerate","","`Enumerate` is an iterator that returns the current count…",N,N],[3,"Filter","","`Filter` takes a predicate `filter_op` and filters out…",N,N],[3,"FilterMap","","`FilterMap` creates an iterator that uses `filter_op` to…",N,N],[3,"FlatMap","","`FlatMap` maps each element to an iterator, then flattens…",N,N],[3,"Flatten","","`Flatten` turns each element to an iterator, then flattens…",N,N],[3,"Fold","","`Fold` is an iterator that applies a function over an…",N,N],[3,"FoldWith","","`FoldWith` is an iterator that applies a function over an…",N,N],[3,"TryFold","","`TryFold` is an iterator that applies a function over an…",N,N],[3,"TryFoldWith","","`TryFoldWith` is an iterator that applies a function over…",N,N],[3,"Skip","","`Skip` is an iterator that skips over the first `n`…",N,N],[3,"Split","","`Split` is a parallel iterator using arbitrary data and a…",N,N],[3,"Take","","`Take` is an iterator that iterates over the first `n`…",N,N],[3,"Map","","`Map` is an iterator that transforms the elements of an…",N,N],[3,"MapWith","","`MapWith` is an iterator that transforms the elements of…",N,N],[3,"Zip","","`Zip` is an iterator that zips up `a` and `b` into a…",N,N],[3,"ZipEq","","An [`IndexedParallelIterator`] that iterates over two…",N,N],[3,"Interleave","","`Interleave` is an iterator that interleaves elements of…",N,N],[3,"InterleaveShortest","","`InterleaveShortest` is an iterator that works similarly…",N,N],[3,"Intersperse","","`Intersperse` is an iterator that inserts a particular…",N,N],[3,"Update","","`Update` is an iterator that mutates the elements of an…",N,N],[3,"Rev","","`Rev` is an iterator that produces elements in reverse…",N,N],[3,"MinLen","","`MinLen` is an iterator that imposes a minimum length on…",N,N],[3,"MaxLen","","`MaxLen` is an iterator that imposes a maximum length on…",N,N],[3,"Cloned","","`Cloned` is an iterator that clones the elements of an…",N,N],[3,"Inspect","","`Inspect` is an iterator that calls a function with a…",N,N],[3,"WhileSome","","`WhileSome` is an iterator that yields the `Some` elements…",N,N],[3,"Repeat","","Iterator adaptor for the `repeat()` function.",N,N],[3,"RepeatN","","Iterator adaptor for the `repeatn()` function.",N,N],[3,"Empty","","Iterator adaptor for the `empty()` function.",N,N],[3,"Once","","Iterator adaptor for the `once()` function.",N,N],[5,"split","","The `split` function takes arbitrary data and a closure…",N,[[["d"],["s"]],["split"]]],[5,"repeat","","Creates a parallel iterator that endlessly repeats `elt`…",N,[[["t"]],["repeat"]]],[5,"repeatn","","Creates a parallel iterator that produces `n` repeats of…",N,[[["t"],["usize"]],["repeatn"]]],[5,"empty","","Creates a parallel iterator that produces nothing.",N,[[],["empty"]]],[5,"once","","Creates a parallel iterator that produces an element…",N,[[["t"]],["once"]]],[0,"plumbing","","Traits and functions used to implement parallel iteration.…",N,N],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel…",N,N],[5,"bridge_producer_consumer","","This helper function is used to \"connect\" a producer and a…",N,N],[5,"bridge_unindexed","","A variant of [`bridge_producer_consumer`] where the…",N,N],[8,"ProducerCallback","","The `ProducerCallback` trait is a kind of generic closure,…",N,N],[16,"Output","","The type of value returned by this callback. Analogous to…",1,N],[10,"callback","","Invokes the callback with the given producer as argument.…",1,N],[8,"Producer","","A `Producer` is effectively a \"splittable `IntoIterator`\".…",N,N],[16,"Item","","The type of item that will be produced by this producer…",2,N],[16,"IntoIter","","The type of iterator we will become.",2,N],[10,"into_iter","","Convert `self` into an iterator; at this point, no more…",2,N],[11,"min_len","","The minimum number of items that we will process…",2,[[["self"]],["usize"]]],[11,"max_len","","The maximum number of items that we will process…",2,[[["self"]],["usize"]]],[10,"split_at","","Split into two producers; one produces items `0..index`,…",2,N],[11,"fold_with","","Iterate the producer, feeding each element to `folder`,…",2,[[["self"],["f"]],["f"]]],[8,"Consumer","","A consumer is effectively a [generalized \"fold\"…",N,N],[16,"Folder","","The type of folder that this consumer can be converted into.",3,N],[16,"Reducer","","The type of reducer that is produced if this consumer is…",3,N],[16,"Result","","The type of result that this consumer will ultimately…",3,N],[10,"split_at","","Divide the consumer into two consumers, one processing…",3,N],[10,"into_folder","","Convert the consumer into a folder that can consume items…",3,N],[10,"full","","Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder","","The `Folder` trait encapsulates [the standard fold…",N,N],[16,"Result","","The type of result that will ultimately be produced by the…",4,N],[10,"consume","","Consume next item and return new sequential state.",4,[[["self"],["item"]],["self"]]],[11,"consume_iter","","Consume items from the iterator until full, and return new…",4,[[["self"],["i"]],["self"]]],[10,"complete","","Finish consuming items, produce final result.",4,N],[10,"full","","Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer","","The reducer is the final step of a `Consumer` -- after a…",N,N],[10,"reduce","","Reduce two final results into one; this is executed after…",5,[[["self"],["result"],["result"]],["result"]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These consumers…",N,N],[10,"split_off_left","","Splits off a \"left\" consumer and returns it. The `self`…",6,[[["self"]],["self"]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results…",6,N],[8,"UnindexedProducer","","A variant on `Producer` which does not know its exact…",N,N],[16,"Item","","The type of item returned by this producer.",7,N],[10,"split","","Split midway into a new producer if possible, otherwise…",7,N],[10,"fold_with","","Iterate the producer, feeding each element to `folder`,…",7,[[["self"],["f"]],["f"]]],[11,"take","rayon::iter","Take only `n` repeats of the element, similar to the…",8,[[["self"],["usize"]],["repeatn"]]],[11,"zip","","Iterate tuples repeating the element with items from…",8,[[["self"],["z"]],["zip",["repeatn"]]]],[8,"ParallelBridge","","Conversion trait to convert an `Iterator` to a…",N,N],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[["self"]],["iterbridge"]]],[8,"IntoParallelIterator","","`IntoParallelIterator` implements the conversion to a…",N,N],[16,"Iter","","The parallel iterator type that will be created.",10,N],[16,"Item","","The type of item that the parallel iterator will produce.",10,N],[10,"into_par_iter","","Converts `self` into a parallel iterator.",10,N],[8,"IntoParallelRefIterator","","`IntoParallelRefIterator` implements the conversion to a…",N,N],[16,"Iter","","The type of the parallel iterator that will be returned.",11,N],[16,"Item","","The type of item that the parallel iterator will produce.…",11,N],[10,"par_iter","","Converts `self` into a parallel iterator.",11,N],[8,"IntoParallelRefMutIterator","","`IntoParallelRefMutIterator` implements the conversion to…",N,N],[16,"Iter","","The type of iterator that will be created.",12,N],[16,"Item","","The type of item that will be produced; this is typically…",12,N],[10,"par_iter_mut","","Creates the parallel iterator from `self`.",12,N],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",N,N],[16,"Item","","The type of item that this parallel iterator produces. For…",13,N],[11,"for_each","","Executes `OP` on each item produced by the iterator, in…",13,[[["self"],["op"]]]],[11,"for_each_with","","Executes `OP` on the given `init` value with each item…",13,[[["self"],["t"],["op"]]]],[11,"try_for_each","","Executes a fallible `OP` on each item produced by the…",13,[[["self"],["op"]],["r"]]],[11,"try_for_each_with","","Executes a fallible `OP` on the given `init` value with…",13,[[["self"],["t"],["op"]],["r"]]],[11,"count","","Counts the number of items in this parallel iterator.",13,[[["self"]],["usize"]]],[11,"map","","Applies `map_op` to each item of this iterator, producing…",13,[[["self"],["f"]],["map"]]],[11,"map_with","","Applies `map_op` to the given `init` value with each item…",13,[[["self"],["t"],["f"]],["mapwith"]]],[11,"cloned","","Creates an iterator which clones all of its elements. This…",13,[[["self"]],["cloned"]]],[11,"inspect","","Applies `inspect_op` to a reference to each item of this…",13,[[["self"],["op"]],["inspect"]]],[11,"update","","Mutates each item of this iterator before yielding it.",13,[[["self"],["f"]],["update"]]],[11,"filter","","Applies `filter_op` to each item of this iterator,…",13,[[["self"],["p"]],["filter"]]],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get…",13,[[["self"],["p"]],["filtermap"]]],[11,"flat_map","","Applies `map_op` to each item of this iterator to get…",13,[[["self"],["f"]],["flatmap"]]],[11,"flatten","","An adaptor that flattens iterable `Item`s into one large…",13,[[["self"]],["flatten"]]],[11,"reduce","","Reduces the items in the iterator into one item using…",13,N],[11,"reduce_with","","Reduces the items in the iterator into one item using…",13,[[["self"],["op"]],["option"]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a…",13,N],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a…",13,[[["self"],["op"]],["option"]]],[11,"fold","","Parallel fold is similar to sequential fold except that…",13,[[["self"],["id"],["f"]],["fold"]]],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item…",13,[[["self"],["t"],["f"]],["foldwith"]]],[11,"try_fold","","Perform a fallible parallel fold.",13,[[["self"],["id"],["f"]],["tryfold"]]],[11,"try_fold_with","","Perform a fallible parallel fold with a cloneable `init`…",13,[[["self"],["t"],["f"]],["tryfoldwith"]]],[11,"sum","","Sums up the items in the iterator.",13,[[["self"]],["s"]]],[11,"product","","Multiplies all the items in the iterator.",13,[[["self"]],["p"]]],[11,"min","","Computes the minimum of all the items in the iterator. If…",13,[[["self"]],["option"]]],[11,"min_by","","Computes the minimum of all the items in the iterator with…",13,[[["self"],["f"]],["option"]]],[11,"min_by_key","","Computes the item that yields the minimum value for the…",13,[[["self"],["f"]],["option"]]],[11,"max","","Computes the maximum of all the items in the iterator. If…",13,[[["self"]],["option"]]],[11,"max_by","","Computes the maximum of all the items in the iterator with…",13,[[["self"],["f"]],["option"]]],[11,"max_by_key","","Computes the item that yields the maximum value for the…",13,[[["self"],["f"]],["option"]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",13,[[["self"],["c"]],["chain"]]],[11,"find_any","","Searches for some item in the parallel iterator that…",13,[[["self"],["p"]],["option"]]],[11,"find_first","","Searches for the sequentially first item in the parallel…",13,[[["self"],["p"]],["option"]]],[11,"find_last","","Searches for the sequentially last item in the parallel…",13,[[["self"],["p"]],["option"]]],[11,"any","","Searches for some item in the parallel iterator that…",13,[[["self"],["p"]],["bool"]]],[11,"all","","Tests that every item in the parallel iterator matches the…",13,[[["self"],["p"]],["bool"]]],[11,"while_some","","Creates an iterator over the `Some` items of this…",13,[[["self"]],["whilesome"]]],[11,"collect","","Create a fresh collection containing all the element…",13,[[["self"]],["c"]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of…",13,N],[11,"partition","","Partitions the items of a parallel iterator into a pair of…",13,N],[11,"partition_map","","Partitions and maps the items of a parallel iterator into…",13,N],[11,"intersperse","","Intersperses clones of an element between items of this…",13,N],[10,"drive_unindexed","","Internal method used to define the behavior of this…",13,N],[11,"opt_len","","Internal method used to define the behavior of this…",13,[[["self"]],["option",["usize"]]]],[8,"IndexedParallelIterator","","An iterator that supports \"random access\" to its data,…",N,N],[11,"collect_into_vec","","Collects the results of the iterator into the specified…",14,[[["self"],["vec"]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified…",14,[[["self"],["vec"],["vec"]]]],[11,"zip","","Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[["self"],["z"]],["zip"]]],[11,"zip_eq","","The same as `Zip`, but requires that both iterators have…",14,[[["self"],["z"]],["zipeq"]]],[11,"interleave","","Interleave elements of this iterator and the other given…",14,[[["self"],["i"]],["interleave"]]],[11,"interleave_shortest","","Interleave elements of this iterator and the other given…",14,[[["self"],["i"]],["interleaveshortest"]]],[11,"chunks","","Split an iterator up into fixed-size chunks.",14,[[["self"],["usize"]],["chunks"]]],[11,"cmp","","Lexicographically compares the elements of this…",14,[[["self"],["i"]],["ordering"]]],[11,"partial_cmp","","Lexicographically compares the elements of this…",14,[[["self"],["i"]],["option",["ordering"]]]],[11,"eq","","Determines if the elements of this `ParallelIterator` are…",14,[[["self"],["i"]],["bool"]]],[11,"ne","","Determines if the elements of this `ParallelIterator` are…",14,[[["self"],["i"]],["bool"]]],[11,"lt","","Determines if the elements of this `ParallelIterator` are…",14,[[["self"],["i"]],["bool"]]],[11,"le","","Determines if the elements of this `ParallelIterator` are…",14,[[["self"],["i"]],["bool"]]],[11,"gt","","Determines if the elements of this `ParallelIterator` are…",14,[[["self"],["i"]],["bool"]]],[11,"ge","","Determines if the elements of this `ParallelIterator` are…",14,[[["self"],["i"]],["bool"]]],[11,"enumerate","","Yields an index along with each item.",14,[[["self"]],["enumerate"]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",14,[[["self"],["usize"]],["skip"]]],[11,"take","","Creates an iterator that yields the first `n` elements.",14,[[["self"],["usize"]],["take"]]],[11,"position_any","","Searches for some item in the parallel iterator that…",14,[[["self"],["p"]],["option",["usize"]]]],[11,"position_first","","Searches for the sequentially first item in the parallel…",14,[[["self"],["p"]],["option",["usize"]]]],[11,"position_last","","Searches for the sequentially last item in the parallel…",14,[[["self"],["p"]],["option",["usize"]]]],[11,"rev","","Produces a new iterator with the elements of this iterator…",14,[[["self"]],["rev"]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process in…",14,[[["self"],["usize"]],["minlen"]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process in…",14,[[["self"],["usize"]],["maxlen"]]],[10,"len","","Produces an exact count of how many items this iterator…",14,[[["self"]],["usize"]]],[10,"drive","","Internal method used to define the behavior of this…",14,N],[10,"with_producer","","Internal method used to define the behavior of this…",14,N],[8,"FromParallelIterator","","`FromParallelIterator` implements the creation of a…",N,N],[10,"from_par_iter","","Creates an instance of the collection from the parallel…",15,[[["i"]],["self"]]],[8,"ParallelExtend","","`ParallelExtend` extends an existing collection with items…",N,N],[10,"par_extend","","Extends an instance of the collection with the elements…",16,[[["self"],["i"]]]],[0,"option","rayon","Parallel iterator types for [options][std::option]",N,N],[3,"IntoIter","rayon::option","A parallel iterator over the value in [`Some`] variant of…",N,N],[3,"Iter","","A parallel iterator over a reference to the [`Some`]…",N,N],[3,"IterMut","","A parallel iterator over a mutable reference to the…",N,N],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",N,N],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an `Iterator` to a…",N,N],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[["self"]],["iterbridge"]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",N,N],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all…",N,N],[0,"result","rayon","Parallel iterator types for [results][std::result]",N,N],[3,"IntoIter","rayon::result","Parallel iterator over a result",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a result",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a result",N,N],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",N,N],[3,"Iter","rayon::slice","Parallel iterator over immutable items in a slice",N,N],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks of…",N,N],[3,"Windows","","Parallel iterator over immutable overlapping windows of a…",N,N],[3,"IterMut","","Parallel iterator over mutable items in a slice",N,N],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of a…",N,N],[3,"Split","","Parallel iterator over slices separated by a predicate",N,N],[3,"SplitMut","","Parallel iterator over mutable slices separated by a…",N,N],[8,"ParallelSlice","","Parallel extensions for slices.",N,N],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the rest…",17,N],[11,"par_split","","Returns a parallel iterator over subslices separated by…",17,[[["self"],["p"]],["split"]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows of…",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks","","Returns a parallel iterator over at most `chunk_size`…",17,[[["self"],["usize"]],["chunks"]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",N,N],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement…",18,N],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices…",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most `chunk_size`…",18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort","","Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the…",18,[[["self"]]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function,…",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction…",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",N,N],[3,"Chars","rayon::str","Parallel iterator over the characters of a string",N,N],[3,"CharIndices","","Parallel iterator over the characters of a string, with…",N,N],[3,"Bytes","","Parallel iterator over the bytes of a string",N,N],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",N,N],[3,"Split","","Parallel iterator over substrings separated by a pattern",N,N],[3,"SplitTerminator","","Parallel iterator over substrings separated by a…",N,N],[3,"Lines","","Parallel iterator over lines in a string",N,N],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",N,N],[3,"Matches","","Parallel iterator over substrings that match a pattern",N,N],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern,…",N,N],[8,"ParallelString","","Parallel extensions for strings.",N,N],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement…",19,[[["self"]],["str"]]],[11,"par_chars","","Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a…",19,[[["self"]],["charindices"]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],["encodeutf16"]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a…",19,[[["self"],["p"]],["split"]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by…",19,[[["self"],["p"]],["splitterminator"]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string,…",19,[[["self"]],["lines"]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a…",19,[[["self"]],["splitwhitespace"]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a…",19,[[["self"],["p"]],["matches"]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a…",19,[[["self"],["p"]],["matchindices"]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",N,N],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",N,N],[11,"from","rayon","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::binary_heap","",25,[[["self"]],["t"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into_par_iter","","",26,[[["self"]],["t"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_map","",27,[[["self"]],["t"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into_par_iter","","",28,[[["self"]],["t"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into_par_iter","","",29,[[["self"]],["t"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_set","",30,[[["self"]],["t"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into_par_iter","","",31,[[["self"]],["t"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_map","",32,[[["self"]],["t"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into_par_iter","","",33,[[["self"]],["t"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_par_iter","","",34,[[["self"]],["t"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_set","",35,[[["self"]],["t"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into_par_iter","","",36,[[["self"]],["t"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::linked_list","",37,[[["self"]],["t"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into_par_iter","","",38,[[["self"]],["t"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into_par_iter","","",39,[[["self"]],["t"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::vec_deque","",40,[[["self"]],["t"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into_par_iter","","",41,[[["self"]],["t"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into_par_iter","","",42,[[["self"]],["t"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::iter","",0,[[["self"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_par_iter","","",43,[[["self"]],["t"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into_par_iter","","",44,[[["self"]],["t"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_par_iter","","",45,[[["self"]],["t"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into_par_iter","","",46,[[["self"]],["t"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into_par_iter","","",47,[[["self"]],["t"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into_par_iter","","",48,[[["self"]],["t"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into_par_iter","","",49,[[["self"]],["t"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into_par_iter","","",50,[[["self"]],["t"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into_par_iter","","",51,[[["self"]],["t"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into_par_iter","","",52,[[["self"]],["t"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into_par_iter","","",53,[[["self"]],["t"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into_par_iter","","",54,[[["self"]],["t"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into_par_iter","","",55,[[["self"]],["t"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into_par_iter","","",56,[[["self"]],["t"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into_par_iter","","",57,[[["self"]],["t"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into_par_iter","","",58,[[["self"]],["t"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_par_iter","","",59,[[["self"]],["t"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into_par_iter","","",60,[[["self"]],["t"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into_par_iter","","",61,[[["self"]],["t"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into_par_iter","","",62,[[["self"]],["t"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into_par_iter","","",63,[[["self"]],["t"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_par_iter","","",64,[[["self"]],["t"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into_par_iter","","",65,[[["self"]],["t"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into_par_iter","","",66,[[["self"]],["t"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into_par_iter","","",67,[[["self"]],["t"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into_par_iter","","",68,[[["self"]],["t"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_par_iter","","",69,[[["self"]],["t"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into_par_iter","","",70,[[["self"]],["t"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into_par_iter","","",71,[[["self"]],["t"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into_par_iter","","",8,[[["self"]],["t"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_par_iter","","",72,[[["self"]],["t"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into_par_iter","","",73,[[["self"]],["t"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_par_iter","","",74,[[["self"]],["t"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::option","",75,[[["self"]],["t"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_par_iter","","",76,[[["self"]],["t"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into_par_iter","","",77,[[["self"]],["t"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::range","",78,[[["self"]],["t"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::result","",79,[[["self"]],["t"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_par_iter","","",80,[[["self"]],["t"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_par_iter","","",81,[[["self"]],["t"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::slice","",82,[[["self"]],["t"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into_par_iter","","",83,[[["self"]],["t"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_par_iter","","",84,[[["self"]],["t"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into_par_iter","","",85,[[["self"]],["t"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into_par_iter","","",86,[[["self"]],["t"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_par_iter","","",87,[[["self"]],["t"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_par_iter","","",88,[[["self"]],["t"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::str","",89,[[["self"]],["t"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into_par_iter","","",90,[[["self"]],["t"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into_par_iter","","",91,[[["self"]],["t"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into_par_iter","","",92,[[["self"]],["t"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into_par_iter","","",93,[[["self"]],["t"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into_par_iter","","",94,[[["self"]],["t"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into_par_iter","","",95,[[["self"]],["t"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into_par_iter","","",96,[[["self"]],["t"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_par_iter","","",97,[[["self"]],["t"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into_par_iter","","",98,[[["self"]],["t"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::vec","",99,[[["self"]],["t"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"default","rayon","",21,[[],["threadpoolbuilder"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"drop","","",20,N],[11,"description","","",22,[[["self"]],["str"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"as_ref","rayon::iter","",0,[[["self"]],["target"]]],[11,"extend","","",0,N],[11,"clone","","",0,[[["self"]],["either"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",0,N],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"hash","","",0,N],[11,"deref_mut","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"into","","",0,[[["self"]],["result"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"drive_unindexed","rayon::collections::binary_heap","",25,N],[11,"opt_len","","",25,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",26,N],[11,"opt_len","","",26,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::btree_map","",27,N],[11,"opt_len","","",27,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",28,N],[11,"opt_len","","",28,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",29,N],[11,"opt_len","","",29,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::btree_set","",30,N],[11,"opt_len","","",30,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",31,N],[11,"opt_len","","",31,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::hash_map","",32,N],[11,"opt_len","","",32,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",33,N],[11,"opt_len","","",33,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",34,N],[11,"opt_len","","",34,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::hash_set","",35,N],[11,"opt_len","","",35,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",36,N],[11,"opt_len","","",36,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::linked_list","",37,N],[11,"opt_len","","",37,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",38,N],[11,"opt_len","","",38,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",39,N],[11,"opt_len","","",39,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::collections::vec_deque","",40,N],[11,"opt_len","","",40,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",41,N],[11,"opt_len","","",41,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",42,N],[11,"opt_len","","",42,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::iter","",43,N],[11,"drive_unindexed","","",44,N],[11,"opt_len","","",44,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",45,N],[11,"opt_len","","",45,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",46,N],[11,"opt_len","","",46,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",47,N],[11,"drive_unindexed","","",48,N],[11,"drive_unindexed","","",49,N],[11,"drive_unindexed","","",50,N],[11,"drive_unindexed","","",51,N],[11,"drive_unindexed","","",52,N],[11,"drive_unindexed","","",53,N],[11,"drive_unindexed","","",54,N],[11,"drive_unindexed","","",55,N],[11,"opt_len","","",55,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",56,N],[11,"drive_unindexed","","",57,N],[11,"opt_len","","",57,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",58,N],[11,"opt_len","","",58,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",59,N],[11,"opt_len","","",59,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",60,N],[11,"opt_len","","",60,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",61,N],[11,"opt_len","","",61,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",62,N],[11,"opt_len","","",62,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",63,N],[11,"opt_len","","",63,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",64,N],[11,"opt_len","","",64,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",65,N],[11,"opt_len","","",65,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",66,N],[11,"opt_len","","",66,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",67,N],[11,"opt_len","","",67,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",68,N],[11,"opt_len","","",68,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",69,N],[11,"opt_len","","",69,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",71,N],[11,"drive_unindexed","","",8,N],[11,"drive_unindexed","","",72,N],[11,"opt_len","","",72,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",73,N],[11,"opt_len","","",73,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",74,N],[11,"opt_len","","",74,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::option","",75,N],[11,"opt_len","","",75,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",76,N],[11,"opt_len","","",76,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",77,N],[11,"opt_len","","",77,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::range","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::result","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",80,N],[11,"opt_len","","",80,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",81,N],[11,"opt_len","","",81,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::slice","",82,N],[11,"opt_len","","",82,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",83,N],[11,"opt_len","","",83,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",84,N],[11,"opt_len","","",84,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",85,N],[11,"opt_len","","",85,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",86,N],[11,"opt_len","","",86,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",87,N],[11,"drive_unindexed","","",88,N],[11,"drive_unindexed","rayon::str","",89,N],[11,"drive_unindexed","","",90,N],[11,"drive_unindexed","","",91,N],[11,"drive_unindexed","","",92,N],[11,"drive_unindexed","","",93,N],[11,"drive_unindexed","","",94,N],[11,"drive_unindexed","","",95,N],[11,"drive_unindexed","","",96,N],[11,"drive_unindexed","","",97,N],[11,"drive_unindexed","","",98,N],[11,"drive_unindexed","rayon::vec","",99,N],[11,"opt_len","","",99,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","rayon::iter","",0,N],[11,"opt_len","","",0,[[["self"]],["option",["usize"]]]],[11,"drive","rayon::collections::binary_heap","",25,N],[11,"len","","",25,[[["self"]],["usize"]]],[11,"with_producer","","",25,N],[11,"drive","","",26,N],[11,"len","","",26,[[["self"]],["usize"]]],[11,"with_producer","","",26,N],[11,"drive","rayon::collections::vec_deque","",40,N],[11,"len","","",40,[[["self"]],["usize"]]],[11,"with_producer","","",40,N],[11,"drive","","",41,N],[11,"len","","",41,[[["self"]],["usize"]]],[11,"with_producer","","",41,N],[11,"drive","","",42,N],[11,"len","","",42,[[["self"]],["usize"]]],[11,"with_producer","","",42,N],[11,"drive","rayon::iter","",44,N],[11,"len","","",44,[[["self"]],["usize"]]],[11,"with_producer","","",44,N],[11,"drive","","",45,N],[11,"len","","",45,[[["self"]],["usize"]]],[11,"with_producer","","",45,N],[11,"drive","","",46,N],[11,"len","","",46,[[["self"]],["usize"]]],[11,"with_producer","","",46,N],[11,"len","","",55,[[["self"]],["usize"]]],[11,"drive","","",55,N],[11,"with_producer","","",55,N],[11,"len","","",57,[[["self"]],["usize"]]],[11,"drive","","",57,N],[11,"with_producer","","",57,N],[11,"drive","","",58,N],[11,"len","","",58,[[["self"]],["usize"]]],[11,"with_producer","","",58,N],[11,"drive","","",59,N],[11,"len","","",59,[[["self"]],["usize"]]],[11,"with_producer","","",59,N],[11,"drive","","",60,N],[11,"len","","",60,[[["self"]],["usize"]]],[11,"with_producer","","",60,N],[11,"drive","","",61,N],[11,"len","","",61,[[["self"]],["usize"]]],[11,"with_producer","","",61,N],[11,"drive","","",62,N],[11,"len","","",62,[[["self"]],["usize"]]],[11,"with_producer","","",62,N],[11,"drive","","",63,N],[11,"len","","",63,[[["self"]],["usize"]]],[11,"with_producer","","",63,N],[11,"drive","","",64,N],[11,"len","","",64,[[["self"]],["usize"]]],[11,"with_producer","","",64,N],[11,"drive","","",65,N],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,N],[11,"drive","","",66,N],[11,"len","","",66,[[["self"]],["usize"]]],[11,"with_producer","","",66,N],[11,"drive","","",67,N],[11,"len","","",67,[[["self"]],["usize"]]],[11,"with_producer","","",67,N],[11,"drive","","",68,N],[11,"len","","",68,[[["self"]],["usize"]]],[11,"with_producer","","",68,N],[11,"drive","","",69,N],[11,"len","","",69,[[["self"]],["usize"]]],[11,"with_producer","","",69,N],[11,"drive","","",70,N],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,N],[11,"drive","","",72,N],[11,"with_producer","","",72,N],[11,"len","","",72,[[["self"]],["usize"]]],[11,"drive","","",73,N],[11,"len","","",73,[[["self"]],["usize"]]],[11,"with_producer","","",73,N],[11,"drive","","",74,N],[11,"len","","",74,[[["self"]],["usize"]]],[11,"with_producer","","",74,N],[11,"drive","rayon::option","",75,N],[11,"len","","",75,[[["self"]],["usize"]]],[11,"with_producer","","",75,N],[11,"drive","","",76,N],[11,"len","","",76,[[["self"]],["usize"]]],[11,"with_producer","","",76,N],[11,"drive","","",77,N],[11,"len","","",77,[[["self"]],["usize"]]],[11,"with_producer","","",77,N],[11,"drive","rayon::range","",78,N],[11,"len","","",78,[[["self"]],["usize"]]],[11,"with_producer","","",78,N],[11,"drive","","",78,N],[11,"len","","",78,[[["self"]],["usize"]]],[11,"with_producer","","",78,N],[11,"drive","","",78,N],[11,"len","","",78,[[["self"]],["usize"]]],[11,"with_producer","","",78,N],[11,"drive","","",78,N],[11,"len","","",78,[[["self"]],["usize"]]],[11,"with_producer","","",78,N],[11,"drive","","",78,N],[11,"len","","",78,[[["self"]],["usize"]]],[11,"with_producer","","",78,N],[11,"drive","","",78,N],[11,"len","","",78,[[["self"]],["usize"]]],[11,"with_producer","","",78,N],[11,"drive","","",78,N],[11,"len","","",78,[[["self"]],["usize"]]],[11,"with_producer","","",78,N],[11,"drive","","",78,N],[11,"len","","",78,[[["self"]],["usize"]]],[11,"with_producer","","",78,N],[11,"drive","rayon::result","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"drive","","",80,N],[11,"len","","",80,[[["self"]],["usize"]]],[11,"with_producer","","",80,N],[11,"drive","","",81,N],[11,"len","","",81,[[["self"]],["usize"]]],[11,"with_producer","","",81,N],[11,"drive","rayon::slice","",82,N],[11,"len","","",82,[[["self"]],["usize"]]],[11,"with_producer","","",82,N],[11,"drive","","",83,N],[11,"len","","",83,[[["self"]],["usize"]]],[11,"with_producer","","",83,N],[11,"drive","","",84,N],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,N],[11,"drive","","",85,N],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,N],[11,"drive","","",86,N],[11,"len","","",86,[[["self"]],["usize"]]],[11,"with_producer","","",86,N],[11,"drive","rayon::vec","",99,N],[11,"len","","",99,[[["self"]],["usize"]]],[11,"with_producer","","",99,N],[11,"drive","rayon::iter","",0,N],[11,"len","","",0,[[["self"]],["usize"]]],[11,"with_producer","","",0,N],[11,"par_extend","","",0,[[["self"],["i"]]]],[11,"clone","rayon::collections::binary_heap","",25,[[["self"]],["intoiter"]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_map","",28,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_set","",31,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_map","",33,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_set","",36,[[["self"]],["self"]]],[11,"clone","rayon::collections::linked_list","",37,[[["self"]],["intoiter"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","rayon::collections::vec_deque","",40,[[["self"]],["intoiter"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","rayon::iter","",43,[[["self"]],["iterbridge"]]],[11,"clone","","",44,[[["self"]],["chain"]]],[11,"clone","","",45,[[["self"]],["chunks"]]],[11,"clone","","",46,[[["self"]],["enumerate"]]],[11,"clone","","",47,[[["self"]],["filter"]]],[11,"clone","","",48,[[["self"]],["filtermap"]]],[11,"clone","","",49,[[["self"]],["flatmap"]]],[11,"clone","","",50,[[["self"]],["flatten"]]],[11,"clone","","",51,[[["self"]],["fold"]]],[11,"clone","","",52,[[["self"]],["foldwith"]]],[11,"clone","","",53,[[["self"]],["tryfold"]]],[11,"clone","","",54,[[["self"]],["tryfoldwith"]]],[11,"clone","","",55,[[["self"]],["skip"]]],[11,"clone","","",56,[[["self"]],["split"]]],[11,"clone","","",57,[[["self"]],["take"]]],[11,"clone","","",58,[[["self"]],["map"]]],[11,"clone","","",59,[[["self"]],["mapwith"]]],[11,"clone","","",60,[[["self"]],["zip"]]],[11,"clone","","",61,[[["self"]],["zipeq"]]],[11,"clone","","",62,[[["self"]],["interleave"]]],[11,"clone","","",63,[[["self"]],["interleaveshortest"]]],[11,"clone","","",64,[[["self"]],["intersperse"]]],[11,"clone","","",65,[[["self"]],["update"]]],[11,"clone","","",66,[[["self"]],["rev"]]],[11,"clone","","",67,[[["self"]],["minlen"]]],[11,"clone","","",68,[[["self"]],["maxlen"]]],[11,"clone","","",69,[[["self"]],["cloned"]]],[11,"clone","","",70,[[["self"]],["inspect"]]],[11,"clone","","",71,[[["self"]],["whilesome"]]],[11,"clone","","",8,[[["self"]],["repeat"]]],[11,"clone","","",72,[[["self"]],["repeatn"]]],[11,"clone","","",73,[[["self"]],["self"]]],[11,"clone","","",74,[[["self"]],["once"]]],[11,"clone","rayon::option","",75,[[["self"]],["intoiter"]]],[11,"clone","","",76,[[["self"]],["self"]]],[11,"clone","rayon::range","",78,[[["self"]],["iter"]]],[11,"clone","rayon::result","",79,[[["self"]],["intoiter"]]],[11,"clone","","",80,[[["self"]],["self"]]],[11,"clone","rayon::slice","",82,[[["self"]],["self"]]],[11,"clone","","",83,[[["self"]],["self"]]],[11,"clone","","",84,[[["self"]],["self"]]],[11,"clone","","",87,[[["self"]],["self"]]],[11,"clone","rayon::str","",89,[[["self"]],["chars"]]],[11,"clone","","",90,[[["self"]],["charindices"]]],[11,"clone","","",91,[[["self"]],["bytes"]]],[11,"clone","","",92,[[["self"]],["encodeutf16"]]],[11,"clone","","",93,[[["self"]],["split"]]],[11,"clone","","",94,[[["self"]],["splitterminator"]]],[11,"clone","","",95,[[["self"]],["lines"]]],[11,"clone","","",96,[[["self"]],["splitwhitespace"]]],[11,"clone","","",97,[[["self"]],["matches"]]],[11,"clone","","",98,[[["self"]],["matchindices"]]],[11,"clone","rayon::vec","",99,[[["self"]],["intoiter"]]],[11,"fmt","rayon::collections::binary_heap","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::btree_map","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::btree_set","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::hash_map","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::hash_set","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::linked_list","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::vec_deque","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::iter","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::option","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::range","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::result","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::slice","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::str","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::vec","",99,[[["self"],["formatter"]],["result"]]],[11,"new","rayon","Deprecated in favor of `ThreadPoolBuilder::build`.",20,[[["configuration"]],["result",["threadpool","box"]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",20,[[["self"],["op"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",20,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",20,[[["self"]],["option",["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",20,[[["self"]],["option",["bool"]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",20,N],[11,"scope","","Creates a scope that executes within this thread-pool.…",20,[[["self"],["op"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",20,N],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",21,[[],["threadpoolbuilder"]]],[11,"build","","Create a new `ThreadPool` initialized using this…",21,[[["self"]],["result",["threadpool","threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",21,[[["self"]],["result",["threadpoolbuilderror"]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",21,[[["self"],["f"]],["threadpoolbuilder"]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",21,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",21,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"stack_size","","Set the stack size of the worker threads",21,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"breadth_first","","Suggest to worker threads that they execute spawned jobs…",21,[[["self"]],["threadpoolbuilder"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",21,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",21,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"migrated","","Returns `true` if the closure was called from a different…",23,[[["self"]],["bool"]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",24,N],[11,"is_left","rayon::iter","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]]],"paths":[[4,"Either"],[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[3,"Repeat"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[8,"ParallelString"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"ThreadPoolBuildError"],[3,"FnContext"],[3,"Scope"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"Update"],[3,"Rev"],[3,"MinLen"],[3,"MaxLen"],[3,"Cloned"],[3,"Inspect"],[3,"WhileSome"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"IntoIter"]]};
searchIndex["rayon_core"]={"doc":"Under construction","items":[[3,"ThreadPool","rayon_core","Represents a user created [thread-pool].",N,N],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",N,N],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",N,N],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",N,N],[3,"Configuration","","Contains the rayon thread pool configuration. Use…",N,N],[3,"FnContext","","Provides the calling context to a closure called by…",N,N],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",N,[[],["option",["usize"]]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether…",N,[[],["option",["bool"]]]],[5,"join","","Takes two closures and potentially runs them in parallel.…",N,N],[5,"join_context","","Identical to `join`, except that the closures have a…",N,N],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure…",N,[[["op"]],["r"]]],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\"…",N,[[["f"]]]],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",N,[[],["usize"]]],[5,"initialize","","Deprecated in favor of `ThreadPoolBuilder::build_global`.",N,[[["configuration"]],["result",["box"]]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",0,[[["self"],["body"]]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",1,[[["configuration"]],["result",["threadpool","box"]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",1,[[["self"],["op"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",1,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",1,[[["self"]],["option",["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",1,[[["self"]],["option",["bool"]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",1,N],[11,"scope","","Creates a scope that executes within this thread-pool.…",1,[[["self"],["op"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",1,[[["self"],["op"]]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",2,[[],["threadpoolbuilder"]]],[11,"build","","Create a new `ThreadPool` initialized using this…",2,[[["self"]],["result",["threadpool","threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",2,[[["self"]],["result",["threadpoolbuilderror"]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",2,[[["self"],["f"]],["self"]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",2,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",2,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"stack_size","","Set the stack size of the worker threads",2,[[["self"],["usize"]],["self"]]],[11,"breadth_first","","Suggest to worker threads that they execute spawned jobs…",2,[[["self"]],["self"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",2,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",2,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"new","","Creates and return a valid rayon thread pool…",3,[[],["configuration"]]],[11,"build","","Deprecated in favor of `ThreadPoolBuilder::build`.",3,[[["self"]],["result",["threadpool","box"]]]],[11,"thread_name","","Deprecated in favor of `ThreadPoolBuilder::thread_name`.",3,[[["self"],["f"]],["self"]]],[11,"num_threads","","Deprecated in favor of `ThreadPoolBuilder::num_threads`.",3,[[["self"],["usize"]],["configuration"]]],[11,"panic_handler","","Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",3,[[["self"],["h"]],["configuration"]]],[11,"stack_size","","Deprecated in favor of `ThreadPoolBuilder::stack_size`.",3,[[["self"],["usize"]],["self"]]],[11,"breadth_first","","Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",3,[[["self"]],["self"]]],[11,"start_handler","","Deprecated in favor of `ThreadPoolBuilder::start_handler`.",3,[[["self"],["h"]],["configuration"]]],[11,"exit_handler","","Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",3,[[["self"],["h"]],["configuration"]]],[11,"migrated","","Returns `true` if the closure was called from a different…",4,[[["self"]],["bool"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"default","","",2,[[],["threadpoolbuilder"]]],[11,"default","","",3,[[],["configuration"]]],[11,"drop","","",1,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]]],"paths":[[3,"Scope"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadPoolBuildError"]]};
searchIndex["regex"]={"doc":"This crate provides a library for parsing, compiling, and…","items":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",N,N],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",N,N],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",N,N],[3,"SetMatches","","A set of matches returned by a regex set.",N,N],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",N,N],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",N,N],[3,"Regex","","A compiled regular expression for matching Unicode strings.",N,N],[3,"Match","","Match represents a single match of a regex in a haystack.",N,N],[3,"Captures","","Captures represents a group of captured strings for a…",N,N],[3,"CaptureNames","","An iterator over the names of all possible captures.",N,N],[3,"Matches","","An iterator over all non-overlapping matches for a…",N,N],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",N,N],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",N,N],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",N,N],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",N,N],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",N,N],[12,"0","","",0,N],[3,"Split","","Yields all substrings delimited by a regular expression…",N,N],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",N,N],[4,"Error","","An error that occurred during parsing or compiling a…",N,N],[13,"Syntax","","A syntax error.",1,N],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The…",1,N],[5,"escape","","Escapes all regular expression meta characters in `text`.",N,[[["str"]],["string"]]],[0,"bytes","","Match regular expressions on arbitrary bytes.",N,N],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",N,N],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",N,N],[3,"Match","","Match represents a single match of a regex in a haystack.",N,N],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",N,N],[3,"Matches","","An iterator over all non-overlapping matches for a…",N,N],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",N,N],[3,"Split","","Yields all substrings delimited by a regular expression…",N,N],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",N,N],[3,"CaptureNames","","An iterator over the names of all possible captures.",N,N],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",N,N],[3,"Captures","","Captures represents a group of captured byte strings for a…",N,N],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",N,N],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",N,N],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",N,N],[12,"0","","",2,N],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",N,N],[3,"SetMatches","","A set of matches returned by a regex set.",N,N],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",N,N],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",N,N],[8,"Replacer","","Replacer describes types that can be used to replace…",N,N],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"new","","Create a new regular expression builder with the given…",4,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",4,[[["self"]],["result",["regex","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",4,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",5,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",5,[[["self"]],["result",["regex","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",5,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex::bytes","Create a new regular expression builder with the given…",6,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",6,[[["self"]],["result",["regexset","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",6,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",7,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",7,[[["self"]],["result",["regexset","error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",7,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"start","","Returns the starting byte offset of the match in the…",8,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,[[["self"]],["usize"]]],[11,"as_bytes","","Returns the matched text.",8,N],[11,"new","","Compiles a regular expression. Once compiled, it can be…",9,[[["str"]],["result",["regex","error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",9,N],[11,"find","","Returns the start and end byte range of the leftmost-first…",9,N],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",9,N],[11,"captures","","Returns the capture groups corresponding to the…",9,N],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",9,N],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",9,N],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",9,N],[11,"replace","","Replaces the leftmost-first match with the replacement…",9,N],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",9,N],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",9,N],[11,"shortest_match","","Returns the end location of a match in the text given.",9,N],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",9,N],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",9,N],[11,"find_at","","Returns the same as find, but starts the search at the…",9,N],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",9,N],[11,"captures_read_at","","Returns the same as `captures_read`, but starts the search…",9,N],[11,"as_str","","Returns the original string of this regex.",9,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",9,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",9,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",9,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",10,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",10,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",11,[[["self"],["usize"]],["option",["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If…",11,[[["self"],["str"]],["option",["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",11,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",11,N],[11,"len","","Returns the number of captured groups.",11,[[["self"]],["usize"]]],[11,"new","regex","Create a new regex set with the given regular expressions.",12,[[["i"]],["result",["regexset","error"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",12,[[["self"],["str"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",12,[[["self"],["str"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",12,[[["self"]],["usize"]]],[11,"matched_any","","Whether this set contains any matches.",13,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",13,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",13,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",13,[[["self"]],["setmatchesiter"]]],[11,"new","regex::bytes","Create a new regex set with the given regular expressions.",14,[[["i"]],["result",["regexset","error"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",14,N],[11,"matches","","Returns the set of regular expressions that match in the…",14,N],[11,"len","","Returns the total number of regular expressions in this set.",14,[[["self"]],["usize"]]],[11,"matched_any","","Whether this set contains any matches.",15,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",15,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",15,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",15,[[["self"]],["setmatchesiter"]]],[11,"start","regex","Returns the starting byte offset of the match in the…",16,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",16,[[["self"]],["usize"]]],[11,"as_str","","Returns the matched text.",16,[[["self"]],["str"]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",17,[[["str"]],["result",["regex","error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",17,[[["self"],["str"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",17,[[["self"],["str"]],["option",["match"]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",17,[[["self"],["str"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",17,[[["self"],["str"]],["option",["captures"]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",17,[[["self"],["str"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",17,[[["self"],["str"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",17,[[["self"],["str"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",17,[[["self"],["str"],["r"]],["cow",["str"]]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",17,[[["self"],["str"],["r"]],["cow",["str"]]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",17,[[["self"],["str"],["usize"],["r"]],["cow",["str"]]]],[11,"shortest_match","","Returns the end location of a match in the text given.",17,[[["self"],["str"]],["option",["usize"]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",17,[[["self"],["str"],["usize"]],["option",["usize"]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",17,[[["self"],["str"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",17,[[["self"],["str"],["usize"]],["option",["match"]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",17,[[["self"],["capturelocations"],["str"]],["option",["match"]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at the…",17,[[["self"],["capturelocations"],["str"],["usize"]],["option",["match"]]]],[11,"as_str","","Returns the original string of this regex.",17,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",17,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",17,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",17,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",18,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",18,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",19,[[["self"],["usize"]],["option",["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If…",19,[[["self"],["str"]],["option",["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",19,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",19,[[["self"],["str"],["string"]]]],[11,"len","","Returns the number of captured groups.",19,[[["self"]],["usize"]]],[8,"Replacer","","Replacer describes types that can be used to replace…",N,N],[10,"replace_append","","Appends text to `dst` to replace the current match.",20,[[["self"],["captures"],["string"]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into_iter","","",24,[[["self"]],["i"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into_iter","","",26,[[["self"]],["i"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",28,[[["self"]],["i"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into_iter","","",29,[[["self"]],["i"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","regex::bytes","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_iter","","",30,[[["self"]],["i"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into_iter","","",31,[[["self"]],["i"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into_iter","","",32,[[["self"]],["i"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into_iter","","",33,[[["self"]],["i"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_iter","","",35,[[["self"]],["i"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into_iter","","",37,[[["self"]],["i"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into_iter","","",38,[[["self"]],["i"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"replace_append","","",36,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",36,[[["self"]],["option",["cow"]]]],[11,"replace_append","","",2,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",2,[[["self"]],["option",["cow"]]]],[11,"replace_append","regex","",27,[[["self"],["captures"],["string"]]]],[11,"no_expansion","","",27,[[["self"]],["option",["cow"]]]],[11,"replace_append","","",0,[[["self"],["captures"],["string"]]]],[11,"no_expansion","","",0,[[["self"]],["option",["cow"]]]],[11,"next","regex::bytes","",30,[[["self"]],["option",["match"]]]],[11,"next","","",31,[[["self"]],["option",["captures"]]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"next","","",34,[[["self"]],["option",["option"]]]],[11,"size_hint","","",34,N],[11,"next","","",35,[[["self"]],["option",["option"]]]],[11,"next","regex","",21,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",21,N],[11,"next","","",22,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",22,N],[11,"next","regex::bytes","",37,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",37,N],[11,"next","","",38,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",38,N],[11,"next","regex","",23,[[["self"]],["option",["option"]]]],[11,"size_hint","","",23,N],[11,"next","","",28,[[["self"]],["option",["str"]]]],[11,"next","","",29,[[["self"]],["option",["str"]]]],[11,"next","","",26,[[["self"]],["option",["option"]]]],[11,"next","","",25,[[["self"]],["option",["captures"]]]],[11,"next","","",24,[[["self"]],["option",["match"]]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"eq","regex::bytes","",8,[[["self"],["match"]],["bool"]]],[11,"ne","","",8,[[["self"],["match"]],["bool"]]],[11,"eq","regex","",16,[[["self"],["match"]],["bool"]]],[11,"ne","","",16,[[["self"],["match"]],["bool"]]],[11,"next_back","","",21,[[["self"]],["option",["usize"]]]],[11,"next_back","","",22,[[["self"]],["option",["usize"]]]],[11,"next_back","regex::bytes","",37,[[["self"]],["option",["usize"]]]],[11,"next_back","","",38,[[["self"]],["option",["usize"]]]],[11,"into_iter","regex","",13,N],[11,"into_iter","regex::bytes","",15,N],[11,"clone","regex","",1,[[["self"]],["error"]]],[11,"clone","regex::bytes","",8,[[["self"]],["match"]]],[11,"clone","","",9,[[["self"]],["regex"]]],[11,"clone","","",10,[[["self"]],["capturelocations"]]],[11,"clone","regex","",12,[[["self"]],["regexset"]]],[11,"clone","","",13,[[["self"]],["setmatches"]]],[11,"clone","","",22,[[["self"]],["setmatchesiter"]]],[11,"clone","regex::bytes","",14,[[["self"]],["regexset"]]],[11,"clone","","",15,[[["self"]],["setmatches"]]],[11,"clone","","",38,[[["self"]],["setmatchesiter"]]],[11,"clone","regex","",16,[[["self"]],["match"]]],[11,"clone","","",17,[[["self"]],["regex"]]],[11,"clone","","",18,[[["self"]],["capturelocations"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex::bytes","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Shows the original regular expression.",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex::bytes","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Shows the original regular expression.",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex::bytes","Shows the original regular expression.",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex","Shows the original regular expression.",17,[[["self"],["formatter"]],["result"]]],[11,"index","regex::bytes","",11,N],[11,"index","","",11,N],[11,"index","regex","",19,[[["self"],["usize"]],["str"]]],[11,"index","","",19,[[["self"],["str"]],["str"]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",9,[[["str"]],["result",["regex","error"]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",17,[[["str"]],["result",["regex","error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],["option",["cow"]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[8,"Replacer"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"CaptureNames"],[3,"Matches"],[3,"CaptureMatches"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"Split"],[3,"SplitN"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"]]};
searchIndex["regex_syntax"]={"doc":"This crate provides a robust regular expression parser.","items":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",N,N],[3,"ParserBuilder","","A builder for a regular expression parser.",N,N],[4,"Error","","This error type encompasses any error that can be returned…",N,N],[13,"Parse","","An error that occurred while translating concrete syntax…",0,N],[13,"Translate","","An error that occurred while translating abstract syntax…",0,N],[5,"escape","","Escapes all regular expression meta characters in `text`.",N,[[["str"]],["string"]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",N,[[["str"],["string"]]]],[5,"is_meta_character","","Returns true if the give character has significance in a…",N,[[["char"]],["bool"]]],[5,"is_word_character","","Returns true if and only if the given character is a…",N,[[["char"]],["bool"]]],[5,"is_word_byte","","Returns true if and only if the given character is an…",N,[[["u8"]],["bool"]]],[0,"ast","","Defines an abstract syntax for regular expressions.",N,N],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression…",N,N],[3,"Span","","Span represents the position information of a single AST…",N,N],[12,"start","","The start byte offset.",1,N],[12,"end","","The end byte offset.",1,N],[3,"Position","","A single position in a regular expression.",N,N],[12,"offset","","The absolute offset of this position, starting at `0` from…",2,N],[12,"line","","The line number, starting at `1`.",2,N],[12,"column","","The approximate column number, starting at `1`.",2,N],[3,"WithComments","","An abstract syntax tree for a singular expression along…",N,N],[12,"ast","","The actual ast.",3,N],[12,"comments","","All comments found in the original regular expression.",3,N],[3,"Comment","","A comment from a regular expression with an associated span.",N,N],[12,"span","","The span of this comment, including the beginning `#` and…",4,N],[12,"comment","","The comment text, starting with the first character…",4,N],[3,"Alternation","","An alternation of regular expressions.",N,N],[12,"span","","The span of this alternation.",5,N],[12,"asts","","The alternate regular expressions.",5,N],[3,"Concat","","A concatenation of regular expressions.",N,N],[12,"span","","The span of this concatenation.",6,N],[12,"asts","","The concatenation regular expressions.",6,N],[3,"Literal","","A single literal expression.",N,N],[12,"span","","The span of this literal.",7,N],[12,"kind","","The kind of this literal.",7,N],[12,"c","","The Unicode scalar value corresponding to this literal.",7,N],[3,"ClassPerl","","A Perl character class.",N,N],[12,"span","","The span of this class.",8,N],[12,"kind","","The kind of Perl class.",8,N],[12,"negated","","Whether the class is negated or not. e.g., `\\d` is not…",8,N],[3,"ClassAscii","","An ASCII character class.",N,N],[12,"span","","The span of this class.",9,N],[12,"kind","","The kind of ASCII class.",9,N],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,N],[3,"ClassUnicode","","A Unicode character class.",N,N],[12,"span","","The span of this class.",10,N],[12,"negated","","Whether this class is negated or not.",10,N],[12,"kind","","The kind of Unicode class.",10,N],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",N,N],[12,"span","","The span of this class.",11,N],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not…",11,N],[12,"kind","","The type of this set. A set is either a normal union of…",11,N],[3,"ClassSetRange","","A single character class range in a set.",N,N],[12,"span","","The span of this range.",12,N],[12,"start","","The start of this range.",12,N],[12,"end","","The end of this range.",12,N],[3,"ClassSetUnion","","A union of items inside a character class set.",N,N],[12,"span","","The span of the items in this operation. e.g., the…",13,N],[12,"items","","The sequence of items that make up this union.",13,N],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",N,N],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in…",14,N],[12,"kind","","The type of this set operation.",14,N],[12,"lhs","","The left hand side of the operation.",14,N],[12,"rhs","","The right hand side of the operation.",14,N],[3,"Assertion","","A single zero-width assertion.",N,N],[12,"span","","The span of this assertion.",15,N],[12,"kind","","The assertion kind, e.g., `\\b` or `^`.",15,N],[3,"Repetition","","A repetition operation applied to a regular expression.",N,N],[12,"span","","The span of this operation.",16,N],[12,"op","","The actual operation.",16,N],[12,"greedy","","Whether this operation was applied greedily or not.",16,N],[12,"ast","","The regular expression under repetition.",16,N],[3,"RepetitionOp","","The repetition operator itself.",N,N],[12,"span","","The span of this operator. This includes things like `+`,…",17,N],[12,"kind","","The type of operation.",17,N],[3,"Group","","A grouped regular expression.",N,N],[12,"span","","The span of this group.",18,N],[12,"kind","","The kind of this group.",18,N],[12,"ast","","The regular expression in this group.",18,N],[3,"CaptureName","","A capture name.",N,N],[12,"span","","The span of this capture name.",19,N],[12,"name","","The capture name.",19,N],[12,"index","","The capture index.",19,N],[3,"SetFlags","","A group of flags that is not applied to a particular…",N,N],[12,"span","","The span of these flags, including the grouping parentheses.",20,N],[12,"flags","","The actual sequence of flags.",20,N],[3,"Flags","","A group of flags.",N,N],[12,"span","","The span of this group of flags.",21,N],[12,"items","","A sequence of flag items. Each item is either a flag or a…",21,N],[3,"FlagsItem","","A single item in a group of flags.",N,N],[12,"span","","The span of this item.",22,N],[12,"kind","","The kind of this item.",22,N],[4,"ErrorKind","","The type of an error that occurred while building an AST.",N,N],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,N],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class…",23,N],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid…",23,N],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class.…",23,N],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,N],[13,"DecimalEmpty","","An empty decimal number was given where one was expected.",23,N],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,N],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,N],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode…",23,N],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,N],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,N],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,N],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,N],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,N],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position…",23,N],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,N],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error…",23,N],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,N],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,N],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,N],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture…",23,N],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,N],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name.…",23,N],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,N],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,N],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,N],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the…",23,N],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is…",23,N],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,N],[13,"RepetitionMissing","","A repetition operator was applied to a missing…",23,N],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced…",23,N],[13,"UnsupportedLookAround","","When syntax similar to PCRE's look-around is used, this…",23,N],[4,"Ast","","An abstract syntax tree for a single regular expression.",N,N],[13,"Empty","","An empty regex that matches everything.",24,N],[13,"Flags","","A set of flags, e.g., `(?is)`.",24,N],[13,"Literal","","A single character literal, which includes escape sequences.",24,N],[13,"Dot","","The \"any character\" class.",24,N],[13,"Assertion","","A single zero-width assertion.",24,N],[13,"Class","","A single character class. This includes all forms of…",24,N],[13,"Repetition","","A repetition operator applied to an arbitrary regular…",24,N],[13,"Group","","A grouped regular expression.",24,N],[13,"Alternation","","An alternation of regular expressions.",24,N],[13,"Concat","","A concatenation of regular expressions.",24,N],[4,"LiteralKind","","The kind of a single literal expression.",N,N],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",25,N],[13,"Punctuation","","The literal is written as an escape because it is…",25,N],[13,"Octal","","The literal is written as an octal escape, e.g., `\\141`.",25,N],[13,"HexFixed","","The literal is written as a hex code with a fixed number…",25,N],[13,"HexBrace","","The literal is written as a hex code with a bracketed…",25,N],[13,"Special","","The literal is written as a specially recognized escape,…",25,N],[4,"SpecialLiteralKind","","The type of a special literal.",N,N],[13,"Bell","","Bell, spelled `\\a` (`\\x07`).",26,N],[13,"FormFeed","","Form feed, spelled `\\f` (`\\x0C`).",26,N],[13,"Tab","","Tab, spelled `\\t` (`\\x09`).",26,N],[13,"LineFeed","","Line feed, spelled `\\n` (`\\x0A`).",26,N],[13,"CarriageReturn","","Carriage return, spelled `\\r` (`\\x0D`).",26,N],[13,"VerticalTab","","Vertical tab, spelled `\\v` (`\\x0B`).",26,N],[13,"Space","","Space, spelled `\\` (`\\x20`). Note that this can only…",26,N],[4,"HexLiteralKind","","The type of a Unicode hex literal.",N,N],[13,"X","","A `\\x` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeShort","","A `\\u` prefix. When used without brackets, this form is…",27,N],[13,"UnicodeLong","","A `\\U` prefix. When used without brackets, this form is…",27,N],[4,"Class","","A single character class expression.",N,N],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",28,N],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",28,N],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",28,N],[4,"ClassPerlKind","","The available Perl character classes.",N,N],[13,"Digit","","Decimal numbers.",29,N],[13,"Space","","Whitespace.",29,N],[13,"Word","","Word characters.",29,N],[4,"ClassAsciiKind","","The available ASCII character classes.",N,N],[13,"Alnum","","`[0-9A-Za-z]`",30,N],[13,"Alpha","","`[A-Za-z]`",30,N],[13,"Ascii","","`[\\x00-\\x7F]`",30,N],[13,"Blank","","`[ \\t]`",30,N],[13,"Cntrl","","`[\\x00-\\x1F\\x7F]`",30,N],[13,"Digit","","`[0-9]`",30,N],[13,"Graph","","`[!-~]`",30,N],[13,"Lower","","`[a-z]`",30,N],[13,"Print","","`[ -~]`",30,N],[13,"Punct","","`[!-/:-@\\[-`{-~]`",30,N],[13,"Space","","`[\\t\\n\\v\\f\\r ]`",30,N],[13,"Upper","","`[A-Z]`",30,N],[13,"Word","","`[0-9A-Za-z_]`",30,N],[13,"Xdigit","","`[0-9A-Fa-f]`",30,N],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",N,N],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\pN`.",31,N],[13,"Named","","A binary property, general category or script. The string…",31,N],[13,"NamedValue","","A property name and an associated value.",31,N],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",31,N],[12,"name","","The property name (which may be empty).",31,N],[12,"value","","The property value (which may be empty).",31,N],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",N,N],[13,"Equal","","A property set to a specific value, e.g.,…",32,N],[13,"Colon","","A property set to a specific value using a colon, e.g.,…",32,N],[13,"NotEqual","","A property that isn't a particular value, e.g.,…",32,N],[4,"ClassSet","","A character class set.",N,N],[13,"Item","","An item, which can be a single literal, range, nested…",33,N],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",33,N],[4,"ClassSetItem","","A single component of a character class set.",N,N],[13,"Empty","","An empty item.",34,N],[13,"Literal","","A single literal.",34,N],[13,"Range","","A range between two literals.",34,N],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",34,N],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",34,N],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",34,N],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",34,N],[13,"Union","","A union of items.",34,N],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",N,N],[13,"Intersection","","The intersection of two sets, e.g., `\\pN&&[a-z]`.",35,N],[13,"Difference","","The difference of two sets, e.g., `\\pN--[0-9]`.",35,N],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric…",35,N],[4,"AssertionKind","","An assertion kind.",N,N],[13,"StartLine","","`^`",36,N],[13,"EndLine","","`$`",36,N],[13,"StartText","","`\\A`",36,N],[13,"EndText","","`\\z`",36,N],[13,"WordBoundary","","`\\b`",36,N],[13,"NotWordBoundary","","`\\B`",36,N],[4,"RepetitionKind","","The kind of a repetition operator.",N,N],[13,"ZeroOrOne","","`?`",37,N],[13,"ZeroOrMore","","`*`",37,N],[13,"OneOrMore","","`+`",37,N],[13,"Range","","`{m,n}`",37,N],[4,"RepetitionRange","","A range repetition operator.",N,N],[13,"Exactly","","`{m}`",38,N],[13,"AtLeast","","`{m,}`",38,N],[13,"Bounded","","`{m,n}`",38,N],[4,"GroupKind","","The kind of a group.",N,N],[13,"CaptureIndex","","`(a)`",39,N],[13,"CaptureName","","`(?P<name>a)`",39,N],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",39,N],[4,"FlagsItemKind","","The kind of an item in a group of flags.",N,N],[13,"Negation","","A negation operator applied to all subsequent flags in the…",40,N],[13,"Flag","","A single flag in a group.",40,N],[4,"Flag","","A single flag.",N,N],[13,"CaseInsensitive","","`i`",41,N],[13,"MultiLine","","`m`",41,N],[13,"DotMatchesNewLine","","`s`",41,N],[13,"SwapGreed","","`U`",41,N],[13,"Unicode","","`u`",41,N],[13,"IgnoreWhitespace","","`x`",41,N],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",N,[[["ast"],["v"]],["result"]]],[0,"parse","","This module provides a regular expression parser.",N,N],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",N,N],[3,"Parser","","A regular expression parser.",N,N],[11,"new","","Create a new parser builder with a default configuration.",42,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",42,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",42,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",42,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",42,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",43,[[],["parser"]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",43,[[["self"],["str"]],["result",["ast","error"]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax…",43,[[["self"],["str"]],["result",["withcomments","error"]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",N,N],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",N,N],[11,"new","","Create a new printer.",44,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",44,[[["self"],["ast"],["w"]],["result"]]],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in…",N,N],[16,"Output","","The result of visiting an AST.",45,N],[16,"Err","","An error that visiting an AST might return.",45,N],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",45,[[["self"]],["result"]]],[11,"start","","This method is called before beginning traversal of the AST.",45,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",45,[[["self"],["ast"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",45,[[["self"],["ast"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",45,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"kind","","Return the type of this error.",46,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",46,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",46,[[["self"]],["span"]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some…",46,[[["self"]],["option",["span"]]]],[11,"new","","Create a new span with the given positions.",1,[[["position"],["position"]],["span"]]],[11,"splat","","Create a new span using the given position as the start…",1,[[["position"]],["span"]]],[11,"with_start","","Create a new span by replacing the starting the position…",1,[[["self"],["position"]],["span"]]],[11,"with_end","","Create a new span by replacing the ending the position…",1,[[["self"],["position"]],["span"]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new","","Create a new position with the given information.",2,[[["usize"],["usize"],["usize"]],["position"]]],[11,"span","","Return the span of this abstract syntax tree.",24,[[["self"]],["span"]]],[11,"is_empty","","Return true if and only if this Ast is empty.",24,[[["self"]],["bool"]]],[11,"into_ast","","Return this alternation as an AST.",5,[[["self"]],["ast"]]],[11,"into_ast","","Return this concatenation as an AST.",6,[[["self"]],["ast"]]],[11,"byte","","If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],["option",["u8"]]]],[11,"digits","","The number of digits that must be used with this literal…",27,[[["self"]],["u32"]]],[11,"span","","Return the span of this character class.",28,[[["self"]],["span"]]],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the…",30,[[["str"]],["option",["classasciikind"]]]],[11,"is_negated","","Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,"is_equal","","Whether the op is an equality op or not.",32,[[["self"]],["bool"]]],[11,"union","","Build a set from a union.",33,[[["classsetunion"]],["classset"]]],[11,"span","","Return the span of this character class set.",33,[[["self"]],["span"]]],[11,"span","","Return the span of this character class set item.",34,[[["self"]],["span"]]],[11,"is_valid","","Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push","","Push a new item in this union.",13,[[["self"],["classsetitem"]]]],[11,"into_item","","Return this union as a character class set item.",13,[[["self"]],["classsetitem"]]],[11,"is_valid","","Returns true if and only if this repetition range is valid.",38,[[["self"]],["bool"]]],[11,"flags","","If this group is non-capturing, then this returns the…",18,[[["self"]],["option",["flags"]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index","","Returns the capture index of this group, if this is a…",18,[[["self"]],["option",["u32"]]]],[11,"add_item","","Add the given item to this sequence of flags.",21,[[["self"],["flagsitem"]],["option",["usize"]]]],[11,"flag_state","","Returns the state of the given flag in this set.",21,[[["self"],["flag"]],["option",["bool"]]]],[11,"is_negation","","Returns true if and only if this item is a negation…",40,[[["self"]],["bool"]]],[0,"hir","regex_syntax","Defines a high-level intermediate representation for…",N,N],[3,"Error","regex_syntax::hir","An error that can occur while translating an `Ast` to a…",N,N],[3,"Hir","","A high-level intermediate representation (HIR) for a…",N,N],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",N,N],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",N,N],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar…",N,N],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where…",N,N],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",N,N],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",N,N],[3,"Group","","The high-level intermediate representation for a group.",N,N],[12,"kind","","The kind of this group. If it is a capturing group, then…",47,N],[12,"hir","","The expression inside the capturing group, which may be…",47,N],[3,"Repetition","","The high-level intermediate representation of a repetition…",N,N],[12,"kind","","The kind of this repetition operator.",48,N],[12,"greedy","","Whether this repetition operator is greedy or not. A…",48,N],[12,"hir","","The expression being repeated.",48,N],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",N,N],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when…",49,N],[13,"InvalidUtf8","","This error occurs when translating a pattern that could…",49,N],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name…",49,N],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value…",49,N],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a…",49,N],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",N,N],[13,"Empty","","The empty regular expression, which matches everything,…",50,N],[13,"Literal","","A single literal character that matches exactly this…",50,N],[13,"Class","","A single character class that matches any of the…",50,N],[13,"Anchor","","An anchor assertion. An anchor assertion match always has…",50,N],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode…",50,N],[13,"Repetition","","A repetition operation applied to a child expression.",50,N],[13,"Group","","A possibly capturing group, which contains a child…",50,N],[13,"Concat","","A concatenation of expressions. A concatenation always has…",50,N],[13,"Alternation","","An alternation of expressions. An alternation always has…",50,N],[4,"Literal","","The high-level intermediate representation of a literal.",N,N],[13,"Unicode","","A single character represented by a Unicode scalar value.",51,N],[13,"Byte","","A single character represented by an arbitrary byte.",51,N],[4,"Class","","The high-level intermediate representation of a character…",N,N],[13,"Unicode","","A set of characters represented by Unicode scalar values.",52,N],[13,"Bytes","","A set of characters represented by arbitrary bytes (one…",52,N],[4,"Anchor","","The high-level intermediate representation for an anchor…",N,N],[13,"StartLine","","Match the beginning of a line or the beginning of text.…",53,N],[13,"EndLine","","Match the end of a line or the end of text. Specifically,…",53,N],[13,"StartText","","Match the beginning of text. Specifically, this matches at…",53,N],[13,"EndText","","Match the end of text. Specifically, this matches at the…",53,N],[4,"WordBoundary","","The high-level intermediate representation for a…",N,N],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches…",54,N],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",54,N],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a…",54,N],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",54,N],[4,"GroupKind","","The kind of group.",N,N],[13,"CaptureIndex","","A normal unnamed capturing group.",55,N],[13,"CaptureName","","A named capturing group.",55,N],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",55,N],[12,"index","","The capture index of the group.",55,N],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",55,N],[4,"RepetitionKind","","The kind of a repetition operator.",N,N],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",56,N],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",56,N],[13,"OneOrMore","","Matches a sub-expression one or more times.",56,N],[13,"Range","","Matches a sub-expression within a bounded range of times.",56,N],[4,"RepetitionRange","","The kind of a counted repetition operator.",N,N],[13,"Exactly","","Matches a sub-expression exactly this many times.",57,N],[13,"AtLeast","","Matches a sub-expression at least this many times.",57,N],[13,"Bounded","","Matches a sub-expression at least `m` times and at most…",57,N],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",N,[[["hir"],["v"]],["result"]]],[0,"literal","","Provides routines for extracting literal prefixes and…",N,N],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular…",N,N],[3,"Literal","","A single member of a set of literals extracted from a…",N,N],[11,"empty","","Returns a new empty set of literals using default limits.",58,[[],["literals"]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given…",58,[[["hir"]],["literals"]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given…",58,[[["hir"]],["literals"]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",58,[[["self"]],["usize"]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",58,[[["self"],["usize"]],["literals"]]],[11,"limit_class","","Get the character class size limit for this set.",58,[[["self"]],["usize"]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",58,[[["self"],["usize"]],["literals"]]],[11,"literals","","Returns the set of literals as a slice. Its order is…",58,N],[11,"min_len","","Returns the length of the smallest literal.",58,[[["self"]],["option",["usize"]]]],[11,"all_complete","","Returns true if all members in this set are complete.",58,[[["self"]],["bool"]]],[11,"any_complete","","Returns true if any member in this set is complete.",58,[[["self"]],["bool"]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",58,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if this set is empty or if all of its members…",58,[[["self"]],["bool"]]],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",58,[[["self"]],["literals"]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this…",58,N],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this…",58,N],[11,"trim_suffix","","Returns a new set of literals with the given number of…",58,[[["self"],["usize"]],["option",["literals"]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that…",58,[[["self"]],["literals"]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that…",58,[[["self"]],["literals"]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",58,[[["self"],["hir"]],["bool"]]],[11,"union","","Unions this set with another set.",58,[[["self"],["literals"]],["bool"]]],[11,"cross_product","","Extends this set with another set.",58,[[["self"],["literals"]],["bool"]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",58,N],[11,"add","","Adds the given literal to this set.",58,[[["self"],["literal"]],["bool"]]],[11,"add_char_class","","Extends each literal in this set with the character class…",58,[[["self"],["classunicode"]],["bool"]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",58,[[["self"],["classbytes"]],["bool"]]],[11,"cut","","Cuts every member of this set. When a member is cut, it…",58,[[["self"]]]],[11,"reverse","","Reverses all members in place.",58,[[["self"]]]],[11,"clear","","Clears this set of all members.",58,[[["self"]]]],[11,"new","","Returns a new complete literal with the bytes given.",59,[[["vec",["u8"]]],["literal"]]],[11,"empty","","Returns a new complete empty literal.",59,[[],["literal"]]],[11,"is_cut","","Returns true if this literal was \"cut.\"",59,[[["self"]],["bool"]]],[11,"cut","","Cuts this literal.",59,[[["self"]]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",N,N],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression's high-level…",N,N],[11,"new","","Create a new printer.",60,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",60,[[["self"],["hir"],["w"]],["result"]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",N,N],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",N,N],[3,"Translator","","A translator maps abstract syntax to a high level…",N,N],[11,"new","","Create a new translator builder with a default c…",61,[[],["translatorbuilder"]]],[11,"build","","Build a translator using the current configuration.",61,[[["self"]],["translator"]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag…",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag (`U`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",61,[[["self"],["bool"]],["translatorbuilder"]]],[11,"new","","Create a new translator using the default configuration.",62,[[],["translator"]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high…",62,[[["self"],["str"],["ast"]],["result",["hir","error"]]]],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth…",N,N],[16,"Output","","The result of visiting an HIR.",63,N],[16,"Err","","An error that visiting an HIR might return.",63,N],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",63,[[["self"]],["result"]]],[11,"start","","This method is called before beginning traversal of the HIR.",63,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",63,[[["self"],["hir"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",63,[[["self"],["hir"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",63,[[["self"]],["result"]]],[11,"kind","","Return the type of this error.",64,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",64,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",64,[[["self"]],["span"]]],[11,"kind","","Returns a reference to the underlying HIR kind.",65,[[["self"]],["hirkind"]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its…",65,[[["self"]],["hirkind"]]],[11,"empty","","Returns an empty HIR expression.",65,[[],["hir"]]],[11,"literal","","Creates a literal HIR expression.",65,[[["literal"]],["hir"]]],[11,"class","","Creates a class HIR expression.",65,[[["class"]],["hir"]]],[11,"anchor","","Creates an anchor assertion HIR expression.",65,[[["anchor"]],["hir"]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",65,[[["wordboundary"]],["hir"]]],[11,"repetition","","Creates a repetition HIR expression.",65,[[["repetition"]],["hir"]]],[11,"group","","Creates a group HIR expression.",65,[[["group"]],["hir"]]],[11,"concat","","Returns the concatenation of the given expressions.",65,[[["vec",["hir"]]],["hir"]]],[11,"alternation","","Returns the alternation of the given expressions.",65,[[["vec",["hir"]]],["hir"]]],[11,"dot","","Build an HIR expression for `.`.",65,[[["bool"]],["hir"]]],[11,"any","","Build an HIR expression for `(?s).`.",65,[[["bool"]],["hir"]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match…",65,[[["self"]],["bool"]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is…",65,[[["self"]],["bool"]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match…",65,[[["self"]],["bool"]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match…",65,[[["self"]],["bool"]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any…",65,[[["self"]],["bool"]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any…",65,[[["self"]],["bool"]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the…",65,[[["self"]],["bool"]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular…",50,[[["self"]],["bool"]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including…",50,[[["self"]],["bool"]]],[11,"is_unicode","","Returns true if and only if this literal corresponds to a…",51,[[["self"]],["bool"]]],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class,…",52,[[["self"]]]],[11,"negate","","Negate this character class in place.",52,[[["self"]]]],[11,"is_always_utf8","","Returns true if and only if this character class will only…",52,[[["self"]],["bool"]]],[11,"new","","Create a new class from a sequence of ranges.",66,[[["i"]],["classunicode"]]],[11,"empty","","Create a new class with no ranges.",66,[[],["classunicode"]]],[11,"push","","Add a new range to this set.",66,[[["self"],["classunicoderange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",66,[[["self"]],["classunicodeiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",66,N],[11,"case_fold_simple","","Expand this character class such that it contains all case…",66,[[["self"]]]],[11,"negate","","Negate this character class.",66,[[["self"]]]],[11,"union","","Union this character class with the given character class,…",66,[[["self"],["classunicode"]]]],[11,"intersect","","Intersect this character class with the given character…",66,[[["self"],["classunicode"]]]],[11,"difference","","Subtract the given character class from this character…",66,[[["self"],["classunicode"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character…",66,[[["self"],["classunicode"]]]],[11,"new","","Create a new Unicode scalar value range for a character…",67,[[["char"],["char"]],["classunicoderange"]]],[11,"start","","Return the start of this range.",67,[[["self"]],["char"]]],[11,"end","","Return the end of this range.",67,[[["self"]],["char"]]],[11,"new","","Create a new class from a sequence of ranges.",68,[[["i"]],["classbytes"]]],[11,"empty","","Create a new class with no ranges.",68,[[],["classbytes"]]],[11,"push","","Add a new range to this set.",68,[[["self"],["classbytesrange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",68,[[["self"]],["classbytesiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",68,N],[11,"case_fold_simple","","Expand this character class such that it contains all case…",68,[[["self"]]]],[11,"negate","","Negate this byte class.",68,[[["self"]]]],[11,"union","","Union this byte class with the given byte class, in place.",68,[[["self"],["classbytes"]]]],[11,"intersect","","Intersect this byte class with the given byte class, in…",68,[[["self"],["classbytes"]]]],[11,"difference","","Subtract the given byte class from this byte class, in…",68,[[["self"],["classbytes"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte…",68,[[["self"],["classbytes"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",68,[[["self"]],["bool"]]],[11,"new","","Create a new byte range for a character class.",69,[[["u8"],["u8"]],["classbytesrange"]]],[11,"start","","Return the start of this range.",69,[[["self"]],["u8"]]],[11,"end","","Return the end of this range.",69,[[["self"]],["u8"]]],[11,"is_negated","","Returns true if and only if this word boundary assertion…",54,[[["self"]],["bool"]]],[11,"is_match_empty","","Returns true if and only if this repetition operator makes…",48,[[["self"]],["bool"]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",70,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",70,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",70,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a…",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag by…",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",70,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",71,[[],["parser"]]],[11,"parse","","Parse the regular expression into a high level…",71,[[["self"],["str"]],["result",["hir"]]]],[6,"Result","","A type alias for dealing with errors returned by this crate.",N,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","regex_syntax::ast","",46,[[["self"]],["string"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::parse","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::print","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"to_string","regex_syntax::hir","",64,[[["self"]],["string"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into_iter","","",72,[[["self"]],["i"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into_iter","","",73,[[["self"]],["i"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::literal","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::print","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::translate","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"next","regex_syntax::hir","",72,[[["self"]],["option",["classunicoderange"]]]],[11,"next","","",73,[[["self"]],["option",["classbytesrange"]]]],[11,"eq","regex_syntax::ast","",46,[[["self"],["error"]],["bool"]]],[11,"ne","","",46,[[["self"],["error"]],["bool"]]],[11,"eq","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",1,[[["self"],["span"]],["bool"]]],[11,"ne","","",1,[[["self"],["span"]],["bool"]]],[11,"eq","","",2,[[["self"],["position"]],["bool"]]],[11,"ne","","",2,[[["self"],["position"]],["bool"]]],[11,"eq","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"ne","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"eq","","",4,[[["self"],["comment"]],["bool"]]],[11,"ne","","",4,[[["self"],["comment"]],["bool"]]],[11,"eq","","",24,[[["self"],["ast"]],["bool"]]],[11,"ne","","",24,[[["self"],["ast"]],["bool"]]],[11,"eq","","",5,[[["self"],["alternation"]],["bool"]]],[11,"ne","","",5,[[["self"],["alternation"]],["bool"]]],[11,"eq","","",6,[[["self"],["concat"]],["bool"]]],[11,"ne","","",6,[[["self"],["concat"]],["bool"]]],[11,"eq","","",7,[[["self"],["literal"]],["bool"]]],[11,"ne","","",7,[[["self"],["literal"]],["bool"]]],[11,"eq","","",25,[[["self"],["literalkind"]],["bool"]]],[11,"ne","","",25,[[["self"],["literalkind"]],["bool"]]],[11,"eq","","",26,[[["self"],["specialliteralkind"]],["bool"]]],[11,"eq","","",27,[[["self"],["hexliteralkind"]],["bool"]]],[11,"eq","","",28,[[["self"],["class"]],["bool"]]],[11,"ne","","",28,[[["self"],["class"]],["bool"]]],[11,"eq","","",8,[[["self"],["classperl"]],["bool"]]],[11,"ne","","",8,[[["self"],["classperl"]],["bool"]]],[11,"eq","","",29,[[["self"],["classperlkind"]],["bool"]]],[11,"eq","","",9,[[["self"],["classascii"]],["bool"]]],[11,"ne","","",9,[[["self"],["classascii"]],["bool"]]],[11,"eq","","",30,[[["self"],["classasciikind"]],["bool"]]],[11,"eq","","",10,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",10,[[["self"],["classunicode"]],["bool"]]],[11,"eq","","",31,[[["self"],["classunicodekind"]],["bool"]]],[11,"ne","","",31,[[["self"],["classunicodekind"]],["bool"]]],[11,"eq","","",32,[[["self"],["classunicodeopkind"]],["bool"]]],[11,"eq","","",11,[[["self"],["classbracketed"]],["bool"]]],[11,"ne","","",11,[[["self"],["classbracketed"]],["bool"]]],[11,"eq","","",33,[[["self"],["classset"]],["bool"]]],[11,"ne","","",33,[[["self"],["classset"]],["bool"]]],[11,"eq","","",34,[[["self"],["classsetitem"]],["bool"]]],[11,"ne","","",34,[[["self"],["classsetitem"]],["bool"]]],[11,"eq","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"ne","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"eq","","",13,[[["self"],["classsetunion"]],["bool"]]],[11,"ne","","",13,[[["self"],["classsetunion"]],["bool"]]],[11,"eq","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"ne","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"eq","","",35,[[["self"],["classsetbinaryopkind"]],["bool"]]],[11,"eq","","",15,[[["self"],["assertion"]],["bool"]]],[11,"ne","","",15,[[["self"],["assertion"]],["bool"]]],[11,"eq","","",36,[[["self"],["assertionkind"]],["bool"]]],[11,"eq","","",16,[[["self"],["repetition"]],["bool"]]],[11,"ne","","",16,[[["self"],["repetition"]],["bool"]]],[11,"eq","","",17,[[["self"],["repetitionop"]],["bool"]]],[11,"ne","","",17,[[["self"],["repetitionop"]],["bool"]]],[11,"eq","","",37,[[["self"],["repetitionkind"]],["bool"]]],[11,"ne","","",37,[[["self"],["repetitionkind"]],["bool"]]],[11,"eq","","",38,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",38,[[["self"],["repetitionrange"]],["bool"]]],[11,"eq","","",18,[[["self"],["group"]],["bool"]]],[11,"ne","","",18,[[["self"],["group"]],["bool"]]],[11,"eq","","",39,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",39,[[["self"],["groupkind"]],["bool"]]],[11,"eq","","",19,[[["self"],["capturename"]],["bool"]]],[11,"ne","","",19,[[["self"],["capturename"]],["bool"]]],[11,"eq","","",20,[[["self"],["setflags"]],["bool"]]],[11,"ne","","",20,[[["self"],["setflags"]],["bool"]]],[11,"eq","","",21,[[["self"],["flags"]],["bool"]]],[11,"ne","","",21,[[["self"],["flags"]],["bool"]]],[11,"eq","","",22,[[["self"],["flagsitem"]],["bool"]]],[11,"ne","","",22,[[["self"],["flagsitem"]],["bool"]]],[11,"eq","","",40,[[["self"],["flagsitemkind"]],["bool"]]],[11,"ne","","",40,[[["self"],["flagsitemkind"]],["bool"]]],[11,"eq","","",41,[[["self"],["flag"]],["bool"]]],[11,"eq","regex_syntax","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"eq","regex_syntax::hir::literal","",58,[[["self"],["literals"]],["bool"]]],[11,"ne","","",58,[[["self"],["literals"]],["bool"]]],[11,"eq","","",59,[[["self"],["literal"]],["bool"]]],[11,"eq","regex_syntax::hir","",64,[[["self"],["error"]],["bool"]]],[11,"ne","","",64,[[["self"],["error"]],["bool"]]],[11,"eq","","",49,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",65,[[["self"],["hir"]],["bool"]]],[11,"ne","","",65,[[["self"],["hir"]],["bool"]]],[11,"eq","","",50,[[["self"],["hirkind"]],["bool"]]],[11,"ne","","",50,[[["self"],["hirkind"]],["bool"]]],[11,"eq","","",51,[[["self"],["literal"]],["bool"]]],[11,"ne","","",51,[[["self"],["literal"]],["bool"]]],[11,"eq","","",52,[[["self"],["class"]],["bool"]]],[11,"ne","","",52,[[["self"],["class"]],["bool"]]],[11,"eq","","",66,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",66,[[["self"],["classunicode"]],["bool"]]],[11,"eq","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"ne","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"eq","","",68,[[["self"],["classbytes"]],["bool"]]],[11,"ne","","",68,[[["self"],["classbytes"]],["bool"]]],[11,"eq","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"ne","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"eq","","",53,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",54,[[["self"],["wordboundary"]],["bool"]]],[11,"eq","","",47,[[["self"],["group"]],["bool"]]],[11,"ne","","",47,[[["self"],["group"]],["bool"]]],[11,"eq","","",55,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",55,[[["self"],["groupkind"]],["bool"]]],[11,"eq","","",48,[[["self"],["repetition"]],["bool"]]],[11,"ne","","",48,[[["self"],["repetition"]],["bool"]]],[11,"eq","","",56,[[["self"],["repetitionkind"]],["bool"]]],[11,"ne","","",56,[[["self"],["repetitionkind"]],["bool"]]],[11,"eq","","",57,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",57,[[["self"],["repetitionrange"]],["bool"]]],[11,"as_ref","regex_syntax::hir::literal","",59,N],[11,"default","regex_syntax::ast::parse","",42,[[],["parserbuilder"]]],[11,"default","regex_syntax::hir::translate","",61,[[],["translatorbuilder"]]],[11,"default","regex_syntax::hir","",67,[[],["classunicoderange"]]],[11,"default","","",69,[[],["classbytesrange"]]],[11,"default","regex_syntax","",70,[[],["parserbuilder"]]],[11,"cmp","regex_syntax::ast","",1,[[["self"],["span"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["position"]],["ordering"]]],[11,"cmp","regex_syntax::hir::literal","",59,[[["self"],["literal"]],["ordering"]]],[11,"cmp","regex_syntax::hir","",67,[[["self"],["classunicoderange"]],["ordering"]]],[11,"cmp","","",69,[[["self"],["classbytesrange"]],["ordering"]]],[11,"clone","regex_syntax::ast::parse","",42,[[["self"]],["parserbuilder"]]],[11,"clone","","",43,[[["self"]],["parser"]]],[11,"clone","regex_syntax::ast","",46,[[["self"]],["error"]]],[11,"clone","","",23,[[["self"]],["errorkind"]]],[11,"clone","","",1,[[["self"]],["span"]]],[11,"clone","","",2,[[["self"]],["position"]]],[11,"clone","","",3,[[["self"]],["withcomments"]]],[11,"clone","","",4,[[["self"]],["comment"]]],[11,"clone","","",24,[[["self"]],["ast"]]],[11,"clone","","",5,[[["self"]],["alternation"]]],[11,"clone","","",6,[[["self"]],["concat"]]],[11,"clone","","",7,[[["self"]],["literal"]]],[11,"clone","","",25,[[["self"]],["literalkind"]]],[11,"clone","","",26,[[["self"]],["specialliteralkind"]]],[11,"clone","","",27,[[["self"]],["hexliteralkind"]]],[11,"clone","","",28,[[["self"]],["class"]]],[11,"clone","","",8,[[["self"]],["classperl"]]],[11,"clone","","",29,[[["self"]],["classperlkind"]]],[11,"clone","","",9,[[["self"]],["classascii"]]],[11,"clone","","",30,[[["self"]],["classasciikind"]]],[11,"clone","","",10,[[["self"]],["classunicode"]]],[11,"clone","","",31,[[["self"]],["classunicodekind"]]],[11,"clone","","",32,[[["self"]],["classunicodeopkind"]]],[11,"clone","","",11,[[["self"]],["classbracketed"]]],[11,"clone","","",33,[[["self"]],["classset"]]],[11,"clone","","",34,[[["self"]],["classsetitem"]]],[11,"clone","","",12,[[["self"]],["classsetrange"]]],[11,"clone","","",13,[[["self"]],["classsetunion"]]],[11,"clone","","",14,[[["self"]],["classsetbinaryop"]]],[11,"clone","","",35,[[["self"]],["classsetbinaryopkind"]]],[11,"clone","","",15,[[["self"]],["assertion"]]],[11,"clone","","",36,[[["self"]],["assertionkind"]]],[11,"clone","","",16,[[["self"]],["repetition"]]],[11,"clone","","",17,[[["self"]],["repetitionop"]]],[11,"clone","","",37,[[["self"]],["repetitionkind"]]],[11,"clone","","",38,[[["self"]],["repetitionrange"]]],[11,"clone","","",18,[[["self"]],["group"]]],[11,"clone","","",39,[[["self"]],["groupkind"]]],[11,"clone","","",19,[[["self"]],["capturename"]]],[11,"clone","","",20,[[["self"]],["setflags"]]],[11,"clone","","",21,[[["self"]],["flags"]]],[11,"clone","","",22,[[["self"]],["flagsitem"]]],[11,"clone","","",40,[[["self"]],["flagsitemkind"]]],[11,"clone","","",41,[[["self"]],["flag"]]],[11,"clone","regex_syntax","",0,[[["self"]],["error"]]],[11,"clone","regex_syntax::hir::literal","",58,[[["self"]],["literals"]]],[11,"clone","","",59,[[["self"]],["literal"]]],[11,"clone","regex_syntax::hir::translate","",61,[[["self"]],["translatorbuilder"]]],[11,"clone","","",62,[[["self"]],["translator"]]],[11,"clone","regex_syntax::hir","",64,[[["self"]],["error"]]],[11,"clone","","",49,[[["self"]],["errorkind"]]],[11,"clone","","",65,[[["self"]],["hir"]]],[11,"clone","","",50,[[["self"]],["hirkind"]]],[11,"clone","","",51,[[["self"]],["literal"]]],[11,"clone","","",52,[[["self"]],["class"]]],[11,"clone","","",66,[[["self"]],["classunicode"]]],[11,"clone","","",67,[[["self"]],["classunicoderange"]]],[11,"clone","","",68,[[["self"]],["classbytes"]]],[11,"clone","","",69,[[["self"]],["classbytesrange"]]],[11,"clone","","",53,[[["self"]],["anchor"]]],[11,"clone","","",54,[[["self"]],["wordboundary"]]],[11,"clone","","",47,[[["self"]],["group"]]],[11,"clone","","",55,[[["self"]],["groupkind"]]],[11,"clone","","",48,[[["self"]],["repetition"]]],[11,"clone","","",56,[[["self"]],["repetitionkind"]]],[11,"clone","","",57,[[["self"]],["repetitionrange"]]],[11,"clone","regex_syntax","",70,[[["self"]],["parserbuilder"]]],[11,"clone","","",71,[[["self"]],["parser"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"drop","regex_syntax::ast","",24,[[["self"]]]],[11,"drop","","",33,[[["self"]]]],[11,"drop","regex_syntax::hir","",65,[[["self"]]]],[11,"partial_cmp","regex_syntax::ast","",1,[[["self"],["span"]],["option",["ordering"]]]],[11,"partial_cmp","","",2,[[["self"],["position"]],["option",["ordering"]]]],[11,"partial_cmp","regex_syntax::hir::literal","",59,[[["self"],["literal"]],["option",["ordering"]]]],[11,"partial_cmp","regex_syntax::hir","",67,[[["self"],["classunicoderange"]],["option",["ordering"]]]],[11,"lt","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"le","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"gt","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"ge","","",67,[[["self"],["classunicoderange"]],["bool"]]],[11,"partial_cmp","","",69,[[["self"],["classbytesrange"]],["option",["ordering"]]]],[11,"lt","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"le","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"gt","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"ge","","",69,[[["self"],["classbytesrange"]],["bool"]]],[11,"fmt","regex_syntax::ast::parse","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::ast::print","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::ast","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir::literal","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir::print","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir::translate","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::ast","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","regex_syntax::hir","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","regex_syntax::hir::literal","",59,[[["self"]],["vec"]]],[11,"deref","","",59,[[["self"]],["vec"]]],[11,"description","regex_syntax::ast","",46,[[["self"]],["str"]]],[11,"description","regex_syntax","",0,[[["self"]],["str"]]],[11,"description","regex_syntax::hir","",64,[[["self"]],["str"]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",45,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",45,[[["self"],["ast"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",45,[[["self"],["ast"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",45,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",45,[[["self"],["classsetitem"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",45,[[["self"],["classsetbinaryop"]],["result"]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",63,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",63,[[["self"],["hir"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",63,[[["self"],["hir"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",63,[[["self"]],["result"]]]],"paths":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"]]};
searchIndex["remove_dir_all"]={"doc":"","items":[[5,"remove_dir_all","remove_dir_all","Removes a directory at this path, after removing all its…",N,[[["p"]],["result",["error"]]]]],"paths":[]};
searchIndex["reqwest"]={"doc":"reqwest","items":[[0,"header","reqwest","HTTP header types",N,N],[17,"ETAG","reqwest::header","Identifier for a specific version of a resource.",N,N],[17,"PUBLIC_KEY_PINS","","Associates a specific cryptographic public key with a…",N,N],[17,"SEC_WEBSOCKET_PROTOCOL","","The |Sec-WebSocket-Protocol| header field is used in the…",N,N],[17,"IF_UNMODIFIED_SINCE","","Makes the request conditional based on the last…",N,N],[17,"ACCESS_CONTROL_REQUEST_METHOD","","Informs the server know which HTTP method will be used…",N,N],[17,"ACCEPT","","Advertises which content types the client is able to…",N,N],[17,"ACCEPT_LANGUAGE","","Advertises which languages the client is able to understand.",N,N],[17,"DNT","","Indicates the client's tracking preference.",N,N],[17,"VARY","","Determines how to match future requests with cached…",N,N],[3,"VacantEntry","","A view into a single empty location in a `HeaderMap`.",N,N],[3,"InvalidHeaderName","","A possible error when converting a `HeaderName` from…",N,N],[17,"STRICT_TRANSPORT_SECURITY","","Tells the client to communicate with HTTPS instead of…",N,N],[3,"HeaderMap","","A set of HTTP headers",N,N],[17,"WWW_AUTHENTICATE","","Defines the authentication method that should be used to…",N,N],[17,"REFRESH","","Informs the web browser that the current page or frame…",N,N],[17,"CACHE_CONTROL","","Specifies directives for caching mechanisms in both…",N,N],[17,"HOST","","Specifies the domain name of the server and (optionally)…",N,N],[3,"ValueIterMut","","A mutable iterator of all values associated with a single…",N,N],[17,"LINK","","Allows the server to point an interested client to another…",N,N],[17,"ORIGIN","","Indicates where a fetch originates from.",N,N],[17,"REFERER","","Contains the address of the previous web page from which a…",N,N],[17,"FORWARDED","","Contains information from the client-facing side of proxy…",N,N],[17,"ACCESS_CONTROL_ALLOW_CREDENTIALS","","Preflight response indicating if the response to the…",N,N],[17,"SET_COOKIE","","Used to send cookies from the server to the user agent.",N,N],[17,"USER_AGENT","","Contains a string that allows identifying the requesting…",N,N],[17,"WARNING","","General HTTP header contains information about possible…",N,N],[17,"CONTENT_LENGTH","","Indicates the size fo the entity-body.",N,N],[17,"CONTENT_SECURITY_POLICY","","Allows controlling resources the user agent is allowed to…",N,N],[17,"EXPECT","","Indicates expectations that need to be fulfilled by the…",N,N],[17,"ACCEPT_CHARSET","","Advertises which character set the client is able to…",N,N],[8,"IntoHeaderName","","A marker trait used to identify values that can be used as…",N,N],[17,"X_FRAME_OPTIONS","","Indicates whether or not a browser should be allowed to…",N,N],[17,"VIA","","Added by proxies to track routing.",N,N],[3,"Values","","`HeaderMap` value iterator.",N,N],[17,"IF_NONE_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[17,"RETRY_AFTER","","The Retry-After response HTTP header indicates how long…",N,N],[17,"PROXY_AUTHENTICATE","","Defines the authentication method that should be used to…",N,N],[17,"PUBLIC_KEY_PINS_REPORT_ONLY","","Sends reports of pinning violation to the report-uri…",N,N],[17,"ACCESS_CONTROL_ALLOW_ORIGIN","","Indicates whether the response can be shared with…",N,N],[17,"ALT_SVC","","Advertises the availability of alternate services to…",N,N],[17,"CONNECTION","","Controls whether or not the network connection stays open…",N,N],[17,"ACCESS_CONTROL_MAX_AGE","","Indicates how long the results of a preflight request can…",N,N],[3,"ValueDrain","","An drain iterator of all values associated with a single…",N,N],[3,"Keys","","An iterator over `HeaderMap` keys.",N,N],[17,"FROM","","Contains an Internet email address for a human user who…",N,N],[3,"GetAll","","A view to all values stored in a single entry.",N,N],[17,"TE","","Informs the server of transfer encodings willing to be…",N,N],[3,"Iter","","`HeaderMap` entry iterator.",N,N],[3,"HeaderValue","","Represents an HTTP header field value.",N,N],[17,"LOCATION","","Indicates the URL to redirect a page to.",N,N],[3,"Drain","","A drain iterator for `HeaderMap`.",N,N],[17,"AGE","","Indicates the time in seconds the object has been in a…",N,N],[3,"IntoIter","","An owning iterator over the entries of a `HeaderMap`.",N,N],[17,"CONTENT_LOCATION","","Indicates an alternate location for the returned data.",N,N],[3,"ToStrError","","A possible error when converting a `HeaderValue` to a…",N,N],[17,"CONTENT_DISPOSITION","","Indicates if the content is expected to be displayed inline.",N,N],[3,"InvalidHeaderNameBytes","","A possible error when converting a `HeaderName` from…",N,N],[17,"SEC_WEBSOCKET_EXTENSIONS","","The |Sec-WebSocket-Extensions| header field is used in the…",N,N],[17,"UPGRADE","","Used as part of the exchange to upgrade the protocol.",N,N],[17,"X_CONTENT_TYPE_OPTIONS","","Marker used by the server to indicate that the MIME types…",N,N],[17,"X_XSS_PROTECTION","","Stop pages from loading when an XSS attack is detected.",N,N],[17,"CONTENT_TYPE","","Used to indicate the media type of the resource.",N,N],[17,"DATE","","Contains the date and time at which the message was…",N,N],[17,"IF_MATCH","","Makes a request conditional based on the E-Tag.",N,N],[17,"TRAILER","","Allows the sender to include additional fields at the end…",N,N],[17,"REFERRER_POLICY","","Governs which referrer information should be included with…",N,N],[17,"SEC_WEBSOCKET_ACCEPT","","The |Sec-WebSocket-Accept| header field is used in the…",N,N],[17,"ACCESS_CONTROL_ALLOW_HEADERS","","Preflight response indicating permitted HTTP headers.",N,N],[17,"ACCESS_CONTROL_EXPOSE_HEADERS","","Indicates which headers can be exposed as part of the…",N,N],[17,"AUTHORIZATION","","Contains the credentials to authenticate a user agent with…",N,N],[3,"InvalidHeaderValue","","A possible error when converting a `HeaderValue` from a…",N,N],[17,"MAX_FORWARDS","","Indicates the max number of intermediaries the request…",N,N],[17,"ACCEPT_RANGES","","Marker used by the server to advertise partial request…",N,N],[3,"HeaderName","","Represents an HTTP header field name",N,N],[17,"SEC_WEBSOCKET_VERSION","","The |Sec-WebSocket-Version| header field is used in the…",N,N],[3,"OccupiedEntry","","A view into a single occupied location in a `HeaderMap`.",N,N],[17,"CONTENT_ENCODING","","Used to compress the media-type.",N,N],[8,"AsHeaderName","","A marker trait used to identify values that can be used as…",N,N],[17,"PROXY_AUTHORIZATION","","Contains the credentials to authenticate a user agent to a…",N,N],[17,"RANGE","","Indicates the part of a document that the server should…",N,N],[17,"SEC_WEBSOCKET_KEY","","The |Sec-WebSocket-Key| header field is used in the…",N,N],[17,"IF_RANGE","","Makes a request conditional based on range.",N,N],[17,"ACCESS_CONTROL_REQUEST_HEADERS","","Informs the server which HTTP headers will be used when an…",N,N],[17,"X_DNS_PREFETCH_CONTROL","","Controls DNS prefetching.",N,N],[17,"ACCEPT_ENCODING","","Advertises which content encoding the client is able to…",N,N],[17,"PRAGMA","","HTTP/1.0 header usually used for backwards compatibility.",N,N],[17,"COOKIE","","Contains stored HTTP cookies previously sent by the server…",N,N],[17,"IF_MODIFIED_SINCE","","Makes a request conditional based on the modification date.",N,N],[17,"TRANSFER_ENCODING","","Specifies the form of encoding used to safely transfer the…",N,N],[17,"CONTENT_SECURITY_POLICY_REPORT_ONLY","","Allows experimenting with policies by monitoring their…",N,N],[17,"ACCESS_CONTROL_ALLOW_METHODS","","Preflight header response indicating permitted access…",N,N],[4,"Entry","","A view into a single location in a `HeaderMap`, which may…",N,N],[13,"Occupied","","An occupied entry",0,N],[13,"Vacant","","A vacant entry",0,N],[3,"InvalidHeaderValueBytes","","A possible error when converting a `HeaderValue` from a…",N,N],[3,"ValueIter","","An iterator of all values associated with a single header…",N,N],[17,"LAST_MODIFIED","","Content-Types that are acceptable for the response.",N,N],[17,"SERVER","","Contains information about the software used by the origin…",N,N],[17,"UPGRADE_INSECURE_REQUESTS","","Sends a signal to the server expressing the client’s…",N,N],[17,"EXPIRES","","Contains the date/time after which the response is…",N,N],[17,"ALLOW","","Lists the set of methods support by a resource.",N,N],[17,"CONTENT_LANGUAGE","","Used to describe the languages intended for the audience.",N,N],[17,"CONTENT_RANGE","","Indicates where in a full body message a partial message…",N,N],[3,"Method","reqwest","The Request Method (VERB)",N,N],[3,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",N,N],[3,"Version","","Represents a version of the HTTP spec.",N,N],[3,"Url","","A parsed URL record.",N,N],[4,"UrlError","","Errors that can occur during parsing.",N,N],[13,"EmptyHost","","",1,N],[13,"IdnaError","","",1,N],[13,"InvalidPort","","",1,N],[13,"InvalidIpv4Address","","",1,N],[13,"InvalidIpv6Address","","",1,N],[13,"InvalidDomainCharacter","","",1,N],[13,"RelativeUrlWithoutBase","","",1,N],[13,"RelativeUrlWithCannotBeABaseBase","","",1,N],[13,"SetHostOnCannotBeABaseUrl","","",1,N],[13,"Overflow","","",1,N],[3,"Client","","A `Client` to make Requests with.",N,N],[3,"ClientBuilder","","A `ClientBuilder` can be used to create a `Client` with…",N,N],[3,"Error","","The Errors that may occur when processing a `Request`.",N,N],[3,"Body","","The body of a `Request`.",N,N],[3,"Proxy","","Configuration of a proxy that a `Client` should pass…",N,N],[3,"RedirectAction","","An action to perform when a redirect status code is found.",N,N],[3,"RedirectAttempt","","A type that holds information on the next request and…",N,N],[3,"RedirectPolicy","","A type that controls the policy on how to handle the…",N,N],[3,"Request","","A request which can be executed with `Client::execute()`.",N,N],[3,"RequestBuilder","","A builder to construct the properties of a `Request`.",N,N],[3,"Response","","A Response to a submitted `Request`.",N,N],[3,"Certificate","","Represent an X509 certificate.",N,N],[3,"Identity","","Represent a private key and X509 cert as a client…",N,N],[5,"get","","Shortcut method to quickly make a `GET` request.",N,[[["t"]],["result",["response"]]]],[11,"url","","Returns a possible URL related to this error.",2,[[["self"]],["option",["url"]]]],[11,"get_ref","","Returns a reference to the internal error, if available.",2,[[["self"]],["option",["stderror"]]]],[11,"is_http","","Returns true if the error is related to HTTP.",2,[[["self"]],["bool"]]],[11,"is_serialization","","Returns true if the error is serialization related.",2,[[["self"]],["bool"]]],[11,"is_redirect","","Returns true if the error is from a `RedirectPolicy`.",2,[[["self"]],["bool"]]],[11,"is_client_error","","Returns true if the error is from a request returning a…",2,[[["self"]],["bool"]]],[11,"is_server_error","","Returns true if the error is from a request returning a…",2,[[["self"]],["bool"]]],[11,"status","","Returns the status code, if the error was generated from a…",2,[[["self"]],["option",["statuscode"]]]],[11,"new","","Instantiate a `Body` from a reader.",3,[[["r"]],["body"]]],[11,"sized","","Create a `Body` from a `Read` where the size is known in…",3,[[["r"],["u64"]],["body"]]],[11,"new","","Constructs a new `ClientBuilder`",4,[[],["clientbuilder"]]],[11,"build","","Returns a `Client` that uses this `ClientBuilder`…",4,[[["self"]],["result",["client"]]]],[11,"add_root_certificate","","Add a custom root certificate.",4,[[["self"],["certificate"]],["clientbuilder"]]],[11,"identity","","Sets the identity to be used for client certificate…",4,[[["self"],["identity"]],["clientbuilder"]]],[11,"danger_accept_invalid_hostnames","","Controls the use of hostname verification.",4,[[["self"],["bool"]],["clientbuilder"]]],[11,"danger_accept_invalid_certs","","Controls the use of certificate validation.",4,[[["self"],["bool"]],["clientbuilder"]]],[11,"default_headers","","Sets the default headers for every request.",4,[[["self"],["headermap"]],["clientbuilder"]]],[11,"gzip","","Enable auto gzip decompression by checking the…",4,[[["self"],["bool"]],["clientbuilder"]]],[11,"proxy","","Add a `Proxy` to the list of proxies the `Client` will use.",4,[[["self"],["proxy"]],["clientbuilder"]]],[11,"redirect","","Set a `RedirectPolicy` for this client.",4,[[["self"],["redirectpolicy"]],["clientbuilder"]]],[11,"referer","","Enable or disable automatic setting of the `Referer` header.",4,[[["self"],["bool"]],["clientbuilder"]]],[11,"timeout","","Set a timeout for connect, read and write operations of a…",4,[[["self"],["t"]],["clientbuilder"]]],[11,"new","","Constructs a new `Client`.",5,[[],["client"]]],[11,"builder","","Creates a `ClientBuilder` to configure a `Client`.",5,[[],["clientbuilder"]]],[11,"get","","Convenience method to make a `GET` request to a URL.",5,[[["self"],["u"]],["requestbuilder"]]],[11,"post","","Convenience method to make a `POST` request to a URL.",5,[[["self"],["u"]],["requestbuilder"]]],[11,"put","","Convenience method to make a `PUT` request to a URL.",5,[[["self"],["u"]],["requestbuilder"]]],[11,"patch","","Convenience method to make a `PATCH` request to a URL.",5,[[["self"],["u"]],["requestbuilder"]]],[11,"delete","","Convenience method to make a `DELETE` request to a URL.",5,[[["self"],["u"]],["requestbuilder"]]],[11,"head","","Convenience method to make a `HEAD` request to a URL.",5,[[["self"],["u"]],["requestbuilder"]]],[11,"request","","Start building a `Request` with the `Method` and `Url`.",5,[[["self"],["method"],["u"]],["requestbuilder"]]],[11,"execute","","Executes a `Request`.",5,[[["self"],["request"]],["result",["response"]]]],[11,"http","","Proxy all HTTP traffic to the passed URL.",6,[[["u"]],["result",["proxy"]]]],[11,"https","","Proxy all HTTPS traffic to the passed URL.",6,[[["u"]],["result",["proxy"]]]],[11,"all","","Proxy all traffic to the passed URL.",6,[[["u"]],["result",["proxy"]]]],[11,"custom","","Provide a custom function to determine what traffix to…",6,[[["f"]],["proxy"]]],[11,"limited","","Create a RedirectPolicy with a maximum number of redirects.",7,[[["usize"]],["redirectpolicy"]]],[11,"none","","Create a RedirectPolicy that does not follow any redirect.",7,[[],["redirectpolicy"]]],[11,"custom","","Create a custom RedirectPolicy using the passed function.",7,[[["t"]],["redirectpolicy"]]],[11,"redirect","","Apply this policy to a given [`RedirectAttempt`] to…",7,[[["self"],["redirectattempt"]],["redirectaction"]]],[11,"status","","Get the type of redirect.",8,[[["self"]],["statuscode"]]],[11,"url","","Get the next URL to redirect to.",8,[[["self"]],["url"]]],[11,"previous","","Get the list of previous URLs that have already been…",8,N],[11,"follow","","Returns an action meaning reqwest should follow the next…",8,[[["self"]],["redirectaction"]]],[11,"stop","","Returns an action meaning reqwest should not follow the…",8,[[["self"]],["redirectaction"]]],[11,"loop_detected","","Returns an action meaning there was a loop of redirects…",8,[[["self"]],["redirectaction"]]],[11,"too_many_redirects","","Returns an action meaning there was a loop of redirects…",8,[[["self"]],["redirectaction"]]],[11,"new","","Constructs a new request.",9,[[["method"],["url"]],["self"]]],[11,"method","","Get the method.",9,[[["self"]],["method"]]],[11,"method_mut","","Get a mutable reference to the method.",9,[[["self"]],["method"]]],[11,"url","","Get the url.",9,[[["self"]],["url"]]],[11,"url_mut","","Get a mutable reference to the url.",9,[[["self"]],["url"]]],[11,"headers","","Get the headers.",9,[[["self"]],["headermap"]]],[11,"headers_mut","","Get a mutable reference to the headers.",9,[[["self"]],["headermap"]]],[11,"body","","Get the body.",9,[[["self"]],["option",["body"]]]],[11,"body_mut","","Get a mutable reference to the body.",9,[[["self"]],["option"]]],[11,"header","","Add a `Header` to this Request.",10,[[["self"],["k"],["v"]],["requestbuilder"]]],[11,"headers","","Add a set of Headers to the existing ones on this Request.",10,[[["self"],["headermap"]],["requestbuilder"]]],[11,"basic_auth","","Enable HTTP basic authentication.",10,[[["self"],["u"],["option"]],["requestbuilder"]]],[11,"bearer_auth","","Enable HTTP bearer authentication.",10,[[["self"],["t"]],["requestbuilder"]]],[11,"body","","Set the request body.",10,[[["self"],["t"]],["requestbuilder"]]],[11,"query","","Modify the query string of the URL.",10,[[["self"],["t"]],["requestbuilder"]]],[11,"form","","Send a form body.",10,[[["self"],["t"]],["requestbuilder"]]],[11,"json","","Send a JSON body.",10,[[["self"],["t"]],["requestbuilder"]]],[11,"multipart","","Sends a multipart/form-data body.",10,[[["self"],["form"]],["requestbuilder"]]],[11,"build","","Build a `Request`, which can be inspected, modified and…",10,[[["self"]],["result",["request"]]]],[11,"send","","Constructs the Request and sends it the target URL,…",10,[[["self"]],["result",["response"]]]],[11,"url","","Get the final `Url` of this `Response`.",11,[[["self"]],["url"]]],[11,"status","","Get the `StatusCode` of this `Response`.",11,[[["self"]],["statuscode"]]],[11,"headers","","Get the `Headers` of this `Response`.",11,[[["self"]],["headermap"]]],[11,"version","","Get the HTTP `Version` of this `Response`.",11,[[["self"]],["version"]]],[11,"json","","Try and deserialize the response body as JSON using `serde`.",11,[[["self"]],["result"]]],[11,"text","","Get the response text.",11,[[["self"]],["result",["string"]]]],[11,"copy_to","","Copy the response body into a writer.",11,[[["self"],["w"]],["result",["u64"]]]],[11,"error_for_status","","Turn a response into an error if the server returned an…",11,[[["self"]],["result"]]],[11,"from_der","","Create a `Certificate` from a binary DER encoded certificate",12,N],[11,"from_pem","","Create a `Certificate` from a PEM encoded certificate",12,N],[11,"from_pkcs12_der","","Parses a DER-formatted PKCS #12 archive, using the…",13,N],[0,"multipart","","multipart/form-data",N,N],[3,"Form","reqwest::multipart","A multipart/form-data request.",N,N],[3,"Part","","A field in a multipart form.",N,N],[11,"new","","Creates a new Form without any content.",14,[[],["form"]]],[11,"boundary","","Get the boundary that this form will use.",14,[[["self"]],["str"]]],[11,"text","","Add a data field with supplied name and value.",14,[[["self"],["t"],["u"]],["form"]]],[11,"file","","Adds a file field.",14,[[["self"],["t"],["u"]],["result",["form"]]]],[11,"part","","Adds a customized Part.",14,[[["self"],["t"],["part"]],["form"]]],[11,"text","","Makes a text parameter.",15,[[["t"]],["part"]]],[11,"bytes","","Makes a new parameter from arbitrary bytes",15,[[["t"]],["part"]]],[11,"reader","","Adds a generic reader.",15,[[["t"]],["part"]]],[11,"reader_with_length","","Adds a generic reader with known length.",15,[[["t"],["u64"]],["part"]]],[11,"file","","Makes a file parameter.",15,[[["t"]],["result",["part"]]]],[11,"mime_str","","Tries to set the mime of this part.",15,[[["self"],["str"]],["result",["part"]]]],[11,"file_name","","Sets the filename, builder style.",15,[[["self"],["t"]],["part"]]],[11,"headers","","Returns a reference to the map with additional header fields",15,[[["self"]],["headermap"]]],[11,"headers_mut","","Returns a reference to the map with additional header fields",15,[[["self"]],["headermap"]]],[0,"async","reqwest","An 'async' implementation of the reqwest `Client`.",N,N],[3,"Body","reqwest::async","An asynchronous `Stream`.",N,N],[3,"Chunk","","A chunk of bytes for a `Body`.",N,N],[3,"Decoder","","A response decompressor over a non-blocking stream of…",N,N],[3,"Client","","An asynchronous `Client` to make Requests with.",N,N],[3,"ClientBuilder","","A `ClientBuilder` can be used to create a `Client` with…",N,N],[3,"Request","","A request which can be executed with `Client::execute()`.",N,N],[3,"RequestBuilder","","A builder to construct the properties of a `Request`.",N,N],[3,"Response","","A Response to a submitted `Request`.",N,N],[8,"ResponseBuilderExt","","Extension trait for http::response::Builder objects",N,N],[10,"url","","A builder method for the `http::response::Builder` type…",16,[[["self"],["url"]],["self"]]],[6,"Result","reqwest","A `Result` alias where the `Err` case is `reqwest::Error`.",N,N],[8,"IntoUrl","","A trait to try to convert some type into a `Url`.",N,N],[11,"from","reqwest::header","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"equivalent","","",19,[[["self"],["k"]],["bool"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"nfd","","",22,[[["self"]],["decompositions"]]],[11,"nfkd","","",22,[[["self"]],["decompositions"]]],[11,"nfc","","",22,[[["self"]],["recompositions"]]],[11,"nfkc","","",22,[[["self"]],["recompositions"]]],[11,"stream_safe","","",22,[[["self"]],["streamsafe"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into_iter","","",24,[[["self"]],["i"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"equivalent","","",26,[[["self"],["k"]],["bool"]]],[11,"into_iter","","",27,[[["self"]],["i"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into_iter","","",28,[[["self"]],["i"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"to_string","","",32,[[["self"]],["string"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"equivalent","","",32,[[["self"],["k"]],["bool"]]],[11,"into_iter","","",33,[[["self"]],["i"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into_iter","","",35,[[["self"]],["i"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"to_string","reqwest","",36,[[["self"]],["string"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"equivalent","","",36,[[["self"],["k"]],["bool"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"equivalent","","",37,[[["self"],["k"]],["bool"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"equivalent","","",38,[[["self"],["k"]],["bool"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"equivalent","","",39,[[["self"],["k"]],["bool"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"equivalent","","",1,[[["self"],["k"]],["bool"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","reqwest::async","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into_iter","","",42,[[["self"]],["i"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into_buf","","",42,[[["self"]],["t"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","reqwest::multipart","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"hash","reqwest::header","",32,N],[11,"hash","reqwest","",38,N],[11,"hash","","",36,N],[11,"hash","","",37,N],[11,"hash","reqwest::header","",26,N],[11,"index","","Panics Using the index operator will cause a panic if the…",19,[[["self"],["k"]],["t"]]],[11,"default","reqwest","",36,[[],["method"]]],[11,"default","","",38,[[],["version"]]],[11,"default","","",37,[[],["statuscode"]]],[11,"default","reqwest::header","",19,[[],["headermap"]]],[11,"into_iter","","",33,[[["self"]],["valueitermut"]]],[11,"into_iter","","",24,[[["self"]],["valueiter"]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves keys…",19,[[["self"]],["intoiter"]]],[11,"from","","",26,[[["u16"]],["headervalue"]]],[11,"from","reqwest","",36,[[["method"]],["method"]]],[11,"from","reqwest::header","",26,[[["u64"]],["headervalue"]]],[11,"from","","",26,[[["isize"]],["headervalue"]]],[11,"from","","",26,[[["u32"]],["headervalue"]]],[11,"from","","",26,[[["headername"]],["headervalue"]]],[11,"from","reqwest","",37,[[["statuscode"]],["statuscode"]]],[11,"from","reqwest::header","",26,[[["i64"]],["headervalue"]]],[11,"from","","",26,[[["i32"]],["headervalue"]]],[11,"from","","",26,[[["usize"]],["headervalue"]]],[11,"from","","",26,[[["i16"]],["headervalue"]]],[11,"from","","",26,[[["headervalue"]],["headervalue"]]],[11,"from","","",32,[[["headername"]],["headername"]]],[11,"eq","reqwest","",36,[[["self"],["method"]],["bool"]]],[11,"ne","","",36,[[["self"],["method"]],["bool"]]],[11,"eq","reqwest::header","",32,[[["self"],["headername"]],["bool"]]],[11,"eq","reqwest","",37,[[["self"],["statuscode"]],["bool"]]],[11,"ne","","",37,[[["self"],["statuscode"]],["bool"]]],[11,"eq","reqwest::header","Performs a case-insensitive comparison of the string…",32,[[["self"],["str"]],["bool"]]],[11,"eq","","",26,[[["self"],["t"]],["bool"]]],[11,"eq","reqwest","",36,[[["self"],["str"]],["bool"]]],[11,"eq","reqwest::header","",26,N],[11,"eq","","",26,[[["self"],["string"]],["bool"]]],[11,"eq","","",26,[[["self"],["headervalue"]],["bool"]]],[11,"eq","","",26,[[["self"],["str"]],["bool"]]],[11,"eq","reqwest","",36,[[["self"],["str"]],["bool"]]],[11,"eq","reqwest::header","",19,[[["self"],["headermap"]],["bool"]]],[11,"eq","reqwest","",36,[[["self"],["method"]],["bool"]]],[11,"eq","reqwest::header","",24,[[["self"],["getall"]],["bool"]]],[11,"eq","","",32,[[["self"],["headername"]],["bool"]]],[11,"ne","","",32,[[["self"],["headername"]],["bool"]]],[11,"eq","reqwest","",37,[[["self"],["u16"]],["bool"]]],[11,"eq","reqwest::header","Performs a case-insensitive comparison of the string…",32,[[["self"],["str"]],["bool"]]],[11,"eq","reqwest","",38,[[["self"],["version"]],["bool"]]],[11,"ne","","",38,[[["self"],["version"]],["bool"]]],[11,"next","reqwest::header","",23,[[["self"]],["option"]]],[11,"size_hint","","",23,N],[11,"next","","",35,[[["self"]],["option"]]],[11,"size_hint","","",35,N],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,N],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,N],[11,"next","","",25,[[["self"]],["option"]]],[11,"size_hint","","",25,N],[11,"next","","",20,[[["self"]],["option"]]],[11,"next","","",28,[[["self"]],["option"]]],[11,"size_hint","","",28,N],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,N],[11,"drop","","",28,N],[11,"drop","","",27,N],[11,"drop","","",22,N],[11,"description","","",18,[[["self"]],["str"]]],[11,"description","","",31,[[["self"]],["str"]]],[11,"description","","",34,[[["self"]],["str"]]],[11,"description","","",30,[[["self"]],["str"]]],[11,"description","","",29,[[["self"]],["str"]]],[11,"as_ref","","",32,[[["self"]],["str"]]],[11,"as_ref","reqwest","",36,[[["self"]],["str"]]],[11,"as_ref","reqwest::header","",32,N],[11,"as_ref","","",26,N],[11,"cmp","","",26,[[["self"],["headervalue"]],["ordering"]]],[11,"cmp","reqwest","",38,[[["self"],["version"]],["ordering"]]],[11,"cmp","","",37,[[["self"],["statuscode"]],["ordering"]]],[11,"next_back","reqwest::header","",20,[[["self"]],["option"]]],[11,"next_back","","",35,[[["self"]],["option"]]],[11,"partial_cmp","","",26,[[["self"],["str"]],["option",["ordering"]]]],[11,"partial_cmp","","",26,[[["self"],["string"]],["option",["ordering"]]]],[11,"partial_cmp","","",26,[[["self"],["t"]],["option",["ordering"]]]],[11,"partial_cmp","reqwest","",37,[[["self"],["statuscode"]],["option",["ordering"]]]],[11,"lt","","",37,[[["self"],["statuscode"]],["bool"]]],[11,"le","","",37,[[["self"],["statuscode"]],["bool"]]],[11,"gt","","",37,[[["self"],["statuscode"]],["bool"]]],[11,"ge","","",37,[[["self"],["statuscode"]],["bool"]]],[11,"partial_cmp","reqwest::header","",26,[[["self"],["headervalue"]],["option",["ordering"]]]],[11,"partial_cmp","reqwest","",38,[[["self"],["version"]],["option",["ordering"]]]],[11,"lt","","",38,[[["self"],["version"]],["bool"]]],[11,"le","","",38,[[["self"],["version"]],["bool"]]],[11,"gt","","",38,[[["self"],["version"]],["bool"]]],[11,"ge","","",38,[[["self"],["version"]],["bool"]]],[11,"partial_cmp","reqwest::header","",26,N],[11,"borrow","","",32,[[["self"]],["str"]]],[11,"from_str","","",32,[[["str"]],["result",["headername","invalidheadername"]]]],[11,"from_str","","",26,[[["str"]],["result",["headervalue"]]]],[11,"from_str","reqwest","",37,[[["str"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_str","","",36,[[["str"]],["result",["method"]]]],[11,"try_from","reqwest::header","",26,[[["i16"]],["result",["headervalue"]]]],[11,"try_from","","",26,N],[11,"try_from","reqwest","",36,[[["str"]],["result",["method"]]]],[11,"try_from","reqwest::header","",32,[[["headername"]],["result",["headername"]]]],[11,"try_from","","",26,[[["string"]],["result",["headervalue"]]]],[11,"try_from","reqwest","",36,N],[11,"try_from","reqwest::header","",26,[[["u16"]],["result",["headervalue"]]]],[11,"try_from","","",26,[[["headervalue"]],["result",["headervalue"]]]],[11,"try_from","","",26,[[["headername"]],["result",["headervalue"]]]],[11,"try_from","","",26,[[["usize"]],["result",["headervalue"]]]],[11,"try_from","","",32,[[["headername"]],["result",["headername"]]]],[11,"try_from","","",26,[[["bytes"]],["result",["headervalue"]]]],[11,"try_from","","",26,[[["u32"]],["result",["headervalue"]]]],[11,"try_from","reqwest","",36,[[["method"]],["result",["method"]]]],[11,"try_from","reqwest::header","",32,[[["str"]],["result",["headername"]]]],[11,"try_from","reqwest","",37,[[["statuscode"]],["result",["statuscode"]]]],[11,"try_from","reqwest::header","",26,[[["u64"]],["result",["headervalue"]]]],[11,"try_from","reqwest","",37,[[["statuscode"]],["result",["statuscode"]]]],[11,"try_from","","",36,[[["method"]],["result",["method"]]]],[11,"try_from","","",37,[[["u16"]],["result",["statuscode"]]]],[11,"try_from","reqwest::header","",26,[[["i64"]],["result",["headervalue"]]]],[11,"try_from","","",32,N],[11,"try_from","","",26,[[["str"]],["result",["headervalue"]]]],[11,"try_from","","",26,[[["i32"]],["result",["headervalue"]]]],[11,"try_from","reqwest","",37,N],[11,"try_from","reqwest::header","",26,[[["headervalue"]],["result",["headervalue"]]]],[11,"try_from","","",32,[[["bytes"]],["result",["headername"]]]],[11,"try_from","reqwest","",37,[[["str"]],["result",["statuscode"]]]],[11,"try_from","reqwest::header","",26,[[["isize"]],["result",["headervalue"]]]],[11,"from_iter","","",19,[[["i"]],["headermap"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest::header","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","reqwest::header","",19,[[["self"]],["headermap"]]],[11,"clone","reqwest","",37,[[["self"]],["statuscode"]]],[11,"clone","reqwest::header","",26,[[["self"]],["headervalue"]]],[11,"clone","","",32,[[["self"]],["headername"]]],[11,"clone","reqwest","",38,[[["self"]],["version"]]],[11,"clone","","",36,[[["self"]],["method"]]],[11,"extend","reqwest::header","",19,N],[11,"extend","","Extend a `HeaderMap` with the contents of another…",19,N],[11,"fmt","","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest::header","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest::header","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","reqwest","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","","",39,N],[11,"from_str","","",39,[[["str"]],["result",["url","parseerror"]]]],[11,"index","","",39,[[["self"],["range",["position"]]],["str"]]],[11,"index","","",39,[[["self"],["rangeto",["position"]]],["str"]]],[11,"index","","",39,[[["self"],["rangefrom",["position"]]],["str"]]],[11,"index","","",39,[[["self"],["rangefull"]],["str"]]],[11,"from","","",1,[[["errors"]],["parseerror"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",39,[[["self"],["url"]],["bool"]]],[11,"eq","","",1,[[["self"],["parseerror"]],["bool"]]],[11,"to_socket_addrs","","",39,[[["self"]],["result",["error"]]]],[11,"clone","","",1,[[["self"]],["parseerror"]]],[11,"clone","","",39,[[["self"]],["url"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"as_ref","","",39,[[["self"]],["str"]]],[11,"cmp","","",39,[[["self"],["url"]],["ordering"]]],[11,"partial_cmp","","",39,[[["self"],["url"]],["option",["ordering"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"as_ref","reqwest::async","",42,N],[11,"into_iter","","",42,N],[11,"default","","",42,[[],["chunk"]]],[11,"default","reqwest","",7,[[],["redirectpolicy"]]],[11,"clone","reqwest::async","",43,[[["self"]],["client"]]],[11,"clone","reqwest","",5,[[["self"]],["client"]]],[11,"clone","","",6,[[["self"]],["proxy"]]],[11,"extend","reqwest::async","",42,[[["self"],["t"]]]],[11,"from","","",41,[[["bytes"]],["body"]]],[11,"from","","",41,[[["vec",["u8"]]],["body"]]],[11,"from","","",41,N],[11,"from","","",41,[[["string"]],["body"]]],[11,"from","","",41,[[["str"]],["body"]]],[11,"from","","",48,[[["response"]],["response"]]],[11,"from","reqwest","",3,[[["vec",["u8"]]],["body"]]],[11,"from","","",3,[[["string"]],["body"]]],[11,"from","","",3,N],[11,"from","","",3,[[["str"]],["body"]]],[11,"from","","",3,[[["file"]],["body"]]],[11,"from","","",11,[[["response"]],["response"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest::async","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest::multipart","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","reqwest","",2,[[["self"],["formatter"]],["result"]]],[11,"deref","reqwest::async","",42,N],[11,"read","reqwest","",11,N],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["stderror"]]]],[11,"bytes","reqwest::async","",42,N],[11,"remaining","","",42,[[["self"]],["usize"]]],[11,"advance","","",42,[[["self"],["usize"]]]],[11,"poll","","",41,[[["self"]],["poll",["option"]]]],[11,"poll","","",45,[[["self"]],["poll",["option"]]]],[11,"key","reqwest::header","Returns a reference to the entry's key",17,[[["self"]],["headername"]]],[11,"into_key","","Take ownership of the key",17,[[["self"]],["headername"]]],[11,"insert","","Insert the value into the entry.",17,[[["self"],["t"]],["t"]]],[11,"insert_entry","","Insert the value into the entry.",17,[[["self"],["t"]],["occupiedentry"]]],[11,"new","","Create an empty `HeaderMap`.",19,[[],["headermap",["headervalue"]]]],[11,"with_capacity","","Create an empty `HeaderMap` with the specified capacity.",19,[[["usize"]],["headermap"]]],[11,"len","","Returns the number of headers stored in the map.",19,[[["self"]],["usize"]]],[11,"keys_len","","Returns the number of keys stored in the map.",19,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",19,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",19,N],[11,"capacity","","Returns the number of headers the map can hold without…",19,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more headers…",19,N],[11,"get","","Returns a reference to the value associated with the key.",19,[[["self"],["k"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the value associated with…",19,[[["self"],["k"]],["option"]]],[11,"get_all","","Returns a view of all values associated with a key.",19,[[["self"],["k"]],["getall"]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",19,[[["self"],["k"]],["bool"]]],[11,"iter","","An iterator visiting all key-value pairs.",19,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable…",19,[[["self"]],["itermut"]]],[11,"keys","","An iterator visiting all keys.",19,[[["self"]],["keys"]]],[11,"values","","An iterator visiting all values.",19,[[["self"]],["values"]]],[11,"values_mut","","An iterator visiting all values mutably.",19,[[["self"]],["valuesmut"]]],[11,"drain","","Clears the map, returning all entries as an iterator.",19,[[["self"]],["drain"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",19,[[["self"],["k"]],["result",["entry","invalidheadername"]]]],[11,"insert","","Inserts a key-value pair into the map.",19,[[["self"],["k"],["t"]],["option"]]],[11,"append","","Inserts a key-value pair into the map.",19,[[["self"],["k"],["t"]],["bool"]]],[11,"remove","","Removes a key from the map, returning the value associated…",19,[[["self"],["k"]],["option"]]],[11,"iter","","Returns an iterator visiting all values associated with…",24,[[["self"]],["valueiter"]]],[11,"from_static","","Convert a static string to a `HeaderValue`.",26,[[["str"]],["headervalue"]]],[11,"from_str","","Attempt to convert a string to a `HeaderValue`.",26,[[["str"]],["result",["headervalue","invalidheadervalue"]]]],[11,"from_name","","Converts a HeaderName into a HeaderValue",26,[[["headername"]],["headervalue"]]],[11,"from_bytes","","Attempt to convert a byte slice to a `HeaderValue`.",26,N],[11,"from_shared","","Attempt to convert a `Bytes` buffer to a `HeaderValue`.",26,[[["bytes"]],["result",["headervalue","invalidheadervaluebytes"]]]],[11,"from_shared_unchecked","","Convert a `Bytes` directly into a `HeaderValue` without…",26,[[["bytes"]],["headervalue"]]],[11,"to_str","","Yields a `&str` slice if the `HeaderValue` only contains…",26,[[["self"]],["result",["str","tostrerror"]]]],[11,"len","","Returns the length of `self`.",26,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `HeaderValue` has a length of zero…",26,[[["self"]],["bool"]]],[11,"as_bytes","","Converts a `HeaderValue` to a byte slice.",26,N],[11,"set_sensitive","","Mark that the header value represents sensitive information.",26,N],[11,"is_sensitive","","Returns `true` if the value represents sensitive data.",26,[[["self"]],["bool"]]],[11,"from_bytes","","Converts a slice of bytes to an HTTP header name.",32,N],[11,"from_lowercase","","Converts a slice of bytes to an HTTP header name.",32,N],[11,"from_static","","Converts a static string to a HTTP header name.",32,[[["str"]],["headername"]]],[11,"as_str","","Returns a `str` representation of the header.",32,[[["self"]],["str"]]],[11,"key","","Returns a reference to the entry's key.",33,[[["self"]],["headername"]]],[11,"get","","Get a reference to the first value in the entry.",33,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",33,[[["self"]],["t"]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference to…",33,[[["self"]],["t"]]],[11,"insert","","Sets the value of the entry.",33,[[["self"],["t"]],["t"]]],[11,"insert_mult","","Sets the value of the entry.",33,[[["self"],["t"]],["valuedrain"]]],[11,"append","","Insert the value into the entry.",33,N],[11,"remove","","Remove the entry from the map.",33,[[["self"]],["t"]]],[11,"remove_entry","","Remove the entry from the map.",33,N],[11,"remove_entry_mult","","Remove the entry from the map.",33,N],[11,"iter","","Returns an iterator visiting all values associated with…",33,[[["self"]],["valueiter"]]],[11,"iter_mut","","Returns an iterator mutably visiting all values associated…",33,[[["self"]],["valueitermut"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["self"],["t"]],["t"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["self"],["f"]],["t"]]],[11,"key","","Returns a reference to the entry's key",0,[[["self"]],["headername"]]],[18,"GET","reqwest","GET",36,N],[18,"POST","","POST",36,N],[18,"PUT","","PUT",36,N],[18,"DELETE","","DELETE",36,N],[18,"HEAD","","HEAD",36,N],[18,"OPTIONS","","OPTIONS",36,N],[18,"CONNECT","","CONNECT",36,N],[18,"PATCH","","PATCH",36,N],[18,"TRACE","","TRACE",36,N],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",36,N],[11,"is_safe","","Whether a method is considered \"safe\", meaning the request…",36,[[["self"]],["bool"]]],[11,"is_idempotent","","Whether a method is considered \"idempotent\", meaning the…",36,[[["self"]],["bool"]]],[11,"as_str","","Return a &str representation of the HTTP method",36,[[["self"]],["str"]]],[11,"from_u16","","Converts a u16 to a status code.",37,[[["u16"]],["result",["statuscode","invalidstatuscode"]]]],[11,"from_bytes","","Converts a &[u8] to a status code",37,N],[11,"as_u16","","Returns the `u16` corresponding to this `StatusCode`.",37,[[["self"]],["u16"]]],[11,"as_str","","Returns a &str representation of the `StatusCode`",37,[[["self"]],["str"]]],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",37,[[["self"]],["option",["str"]]]],[11,"is_informational","","Check if status is within 100-199.",37,[[["self"]],["bool"]]],[11,"is_success","","Check if status is within 200-299.",37,[[["self"]],["bool"]]],[11,"is_redirection","","Check if status is within 300-399.",37,[[["self"]],["bool"]]],[11,"is_client_error","","Check if status is within 400-499.",37,[[["self"]],["bool"]]],[11,"is_server_error","","Check if status is within 500-599.",37,[[["self"]],["bool"]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",37,N],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",37,N],[18,"PROCESSING","","102 Processing [RFC2518]",37,N],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",37,N],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",37,N],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",37,N],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",37,N],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",37,N],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",37,N],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",37,N],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",37,N],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",37,N],[18,"IM_USED","","226 IM Used [RFC3229]",37,N],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",37,N],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",37,N],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",37,N],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",37,N],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",37,N],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",37,N],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",37,N],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",37,N],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",37,N],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",37,N],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",37,N],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",37,N],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",37,N],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",37,N],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",37,N],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",37,N],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",37,N],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",37,N],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",37,N],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",37,N],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",37,N],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",37,N],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",37,N],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",37,N],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",37,N],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",37,N],[18,"IM_A_TEAPOT","","418 I'm a teapot [curiously not registered by IANA but…",37,N],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",37,N],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",37,N],[18,"LOCKED","","423 Locked [RFC4918]",37,N],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",37,N],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",37,N],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",37,N],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",37,N],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",37,N],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",37,N],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",37,N],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",37,N],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",37,N],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",37,N],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",37,N],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",37,N],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",37,N],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",37,N],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",37,N],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",37,N],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",37,N],[18,"HTTP_09","","`HTTP/0.9`",38,N],[18,"HTTP_10","","`HTTP/1.0`",38,N],[18,"HTTP_11","","`HTTP/1.1`",38,N],[18,"HTTP_2","","`HTTP/2.0`",38,N],[11,"parse","","Parse an absolute URL from a string.",39,[[["str"]],["result",["url","parseerror"]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its…",39,[[["str"],["i"]],["result",["url","parseerror"]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",39,[[["self"],["str"]],["result",["url","parseerror"]]]],[11,"options","","Return a default `ParseOptions` that can fully configure…",39,[[],["parseoptions"]]],[11,"as_str","","Return the serialization of this URL.",39,[[["self"]],["str"]]],[11,"into_string","","Return the serialization of this URL.",39,[[["self"]],["string"]]],[11,"origin","","Return the origin of this URL…",39,[[["self"]],["origin"]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII…",39,[[["self"]],["str"]]],[11,"has_authority","","Return whether the URL has an 'authority', which can…",39,[[["self"]],["bool"]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning…",39,[[["self"]],["bool"]]],[11,"username","","Return the username for this URL (typically the empty…",39,[[["self"]],["str"]]],[11,"password","","Return the password for this URL, if any, as a…",39,[[["self"]],["option",["str"]]]],[11,"has_host","","Equivalent to `url.host().is_some()`.",39,[[["self"]],["bool"]]],[11,"host_str","","Return the string representation of the host (domain or IP…",39,[[["self"]],["option",["str"]]]],[11,"host","","Return the parsed representation of the host for this URL.…",39,[[["self"]],["option",["host"]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP…",39,[[["self"]],["option",["str"]]]],[11,"port","","Return the port number for this URL, if any.",39,[[["self"]],["option",["u16"]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port…",39,[[["self"]],["option",["u16"]]]],[11,"with_default_port","","If the URL has a host, return something that implements…",39,[[["self"],["f"]],["result",["hostandport","error"]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII…",39,[[["self"]],["str"]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of…",39,[[["self"]],["option",["split"]]]],[11,"query","","Return this URL’s query string, if any, as a…",39,[[["self"]],["option",["str"]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as…",39,[[["self"]],["parse"]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",39,[[["self"]],["option",["str"]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",39,N],[11,"set_query","","Change this URL’s query string.",39,N],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence…",39,[[["self"]],["serializer",["urlquery"]]]],[11,"set_path","","Change this URL’s path.",39,N],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s…",39,[[["self"]],["result",["pathsegmentsmut"]]]],[11,"set_port","","Change this URL’s port number.",39,[[["self"],["option",["u16"]]],["result"]]],[11,"set_host","","Change this URL’s host.",39,[[["self"],["option",["str"]]],["result",["parseerror"]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",39,[[["self"],["ipaddr"]],["result"]]],[11,"set_password","","Change this URL’s password.",39,[[["self"],["option",["str"]]],["result"]]],[11,"set_username","","Change this URL’s username.",39,[[["self"],["str"]],["result"]]],[11,"set_scheme","","Change this URL’s scheme.",39,[[["self"],["str"]],["result"]]],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in…",39,[[["p"]],["result",["url"]]]],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL…",39,[[["p"]],["result",["url"]]]],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,…",39,[[["self"]],["result",["pathbuf"]]]],[11,"new","reqwest::async","Constructs a new `ClientBuilder`",44,[[],["clientbuilder"]]],[11,"build","","Returns a `Client` that uses this `ClientBuilder`…",44,[[["self"]],["result",["client"]]]],[11,"add_root_certificate","","Add a custom root certificate.",44,[[["self"],["certificate"]],["clientbuilder"]]],[11,"identity","","Sets the identity to be used for client certificate…",44,[[["self"],["identity"]],["clientbuilder"]]],[11,"danger_accept_invalid_hostnames","","Controls the use of hostname verification.",44,[[["self"],["bool"]],["clientbuilder"]]],[11,"danger_accept_invalid_certs","","Controls the use of certificate validation.",44,[[["self"],["bool"]],["clientbuilder"]]],[11,"default_headers","","Sets the default headers for every request.",44,[[["self"],["headermap"]],["clientbuilder"]]],[11,"gzip","","Enable auto gzip decompression by checking the…",44,[[["self"],["bool"]],["clientbuilder"]]],[11,"proxy","","Add a `Proxy` to the list of proxies the `Client` will use.",44,[[["self"],["proxy"]],["clientbuilder"]]],[11,"redirect","","Set a `RedirectPolicy` for this client.",44,[[["self"],["redirectpolicy"]],["clientbuilder"]]],[11,"referer","","Enable or disable automatic setting of the `Referer` header.",44,[[["self"],["bool"]],["clientbuilder"]]],[11,"timeout","","Set a timeout for both the read and write operations of a…",44,[[["self"],["duration"]],["clientbuilder"]]],[11,"dns_threads","","Set number of DNS threads.",44,[[["self"],["usize"]],["clientbuilder"]]],[11,"new","","Constructs a new `Client`.",43,[[],["client"]]],[11,"builder","","Creates a `ClientBuilder` to configure a `Client`.",43,[[],["clientbuilder"]]],[11,"get","","Convenience method to make a `GET` request to a URL.",43,[[["self"],["u"]],["requestbuilder"]]],[11,"post","","Convenience method to make a `POST` request to a URL.",43,[[["self"],["u"]],["requestbuilder"]]],[11,"put","","Convenience method to make a `PUT` request to a URL.",43,[[["self"],["u"]],["requestbuilder"]]],[11,"patch","","Convenience method to make a `PATCH` request to a URL.",43,[[["self"],["u"]],["requestbuilder"]]],[11,"delete","","Convenience method to make a `DELETE` request to a URL.",43,[[["self"],["u"]],["requestbuilder"]]],[11,"head","","Convenience method to make a `HEAD` request to a URL.",43,[[["self"],["u"]],["requestbuilder"]]],[11,"request","","Start building a `Request` with the `Method` and `Url`.",43,[[["self"],["method"],["u"]],["requestbuilder"]]],[11,"execute","","Executes a `Request`.",43,[[["self"],["request"]],["pending"]]],[11,"empty","","An empty decoder.",45,[[],["decoder"]]],[11,"new","","Constructs a new request.",46,[[["method"],["url"]],["self"]]],[11,"method","","Get the method.",46,[[["self"]],["method"]]],[11,"method_mut","","Get a mutable reference to the method.",46,[[["self"]],["method"]]],[11,"url","","Get the url.",46,[[["self"]],["url"]]],[11,"url_mut","","Get a mutable reference to the url.",46,[[["self"]],["url"]]],[11,"headers","","Get the headers.",46,[[["self"]],["headermap"]]],[11,"headers_mut","","Get a mutable reference to the headers.",46,[[["self"]],["headermap"]]],[11,"body","","Get the body.",46,[[["self"]],["option",["body"]]]],[11,"body_mut","","Get a mutable reference to the body.",46,[[["self"]],["option"]]],[11,"header","","Add a `Header` to this Request.",47,[[["self"],["k"],["v"]],["requestbuilder"]]],[11,"headers","","Add a set of Headers to the existing ones on this Request.",47,[[["self"],["headermap"]],["requestbuilder"]]],[11,"basic_auth","","Enable HTTP basic authentication.",47,[[["self"],["u"],["option"]],["requestbuilder"]]],[11,"body","","Set the request body.",47,[[["self"],["t"]],["requestbuilder"]]],[11,"query","","Modify the query string of the URL.",47,[[["self"],["t"]],["requestbuilder"]]],[11,"form","","Send a form body.",47,[[["self"],["t"]],["requestbuilder"]]],[11,"json","","Send a JSON body.",47,[[["self"],["t"]],["requestbuilder"]]],[11,"build","","Build a `Request`, which can be inspected, modified and…",47,[[["self"]],["result",["request"]]]],[11,"send","","Constructs the Request and sends it the target URL,…",47,[[["self"]],["pending"]]],[11,"url","","Get the final `Url` of this `Response`.",48,[[["self"]],["url"]]],[11,"status","","Get the `StatusCode` of this `Response`.",48,[[["self"]],["statuscode"]]],[11,"headers","","Get the `Headers` of this `Response`.",48,[[["self"]],["headermap"]]],[11,"headers_mut","","Get a mutable reference to the `Headers` of this `Response`.",48,[[["self"]],["headermap"]]],[11,"into_body","","Consumes the response, returning the body",48,[[["self"]],["decoder"]]],[11,"body","","Get a reference to the response body.",48,[[["self"]],["decoder"]]],[11,"body_mut","","Get a mutable reference to the response body.",48,[[["self"]],["decoder"]]],[11,"version","","Get the HTTP `Version` of this `Response`.",48,[[["self"]],["version"]]],[11,"json","","Try to deserialize the response body as JSON using `serde`.",48,[[["self"]],["json"]]],[11,"error_for_status","","Turn a response into an error if the server returned an…",48,[[["self"]],["result"]]]],"paths":[[4,"Entry"],[4,"UrlError"],[3,"Error"],[3,"Body"],[3,"ClientBuilder"],[3,"Client"],[3,"Proxy"],[3,"RedirectPolicy"],[3,"RedirectAttempt"],[3,"Request"],[3,"RequestBuilder"],[3,"Response"],[3,"Certificate"],[3,"Identity"],[3,"Form"],[3,"Part"],[8,"ResponseBuilderExt"],[3,"VacantEntry"],[3,"InvalidHeaderName"],[3,"HeaderMap"],[3,"ValueIterMut"],[3,"Values"],[3,"ValueDrain"],[3,"Keys"],[3,"GetAll"],[3,"Iter"],[3,"HeaderValue"],[3,"Drain"],[3,"IntoIter"],[3,"ToStrError"],[3,"InvalidHeaderNameBytes"],[3,"InvalidHeaderValue"],[3,"HeaderName"],[3,"OccupiedEntry"],[3,"InvalidHeaderValueBytes"],[3,"ValueIter"],[3,"Method"],[3,"StatusCode"],[3,"Version"],[3,"Url"],[3,"RedirectAction"],[3,"Body"],[3,"Chunk"],[3,"Client"],[3,"ClientBuilder"],[3,"Decoder"],[3,"Request"],[3,"RequestBuilder"],[3,"Response"]]};
searchIndex["rustc_demangle"]={"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",N,N],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when…",N,N],[5,"demangle","","De-mangles a Rust symbol into a more readable version",N,[[["str"]],["demangle"]]],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the…",N,[[["str"]],["result",["demangle","trydemangleerror"]]]],[11,"as_str","","Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["trydemangleerror"]]]],"paths":[[3,"Demangle"],[3,"TryDemangleError"]]};
searchIndex["ryu"]={"doc":"Pure Rust implementation of Ryū, an algorithm to quickly…","items":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",N,N],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["self"]]],[11,"format","","Print a floating point number into this buffer and return…",0,[[["self"],["f"]],["str"]]],[0,"raw","","Unsafe functions that exactly mirror the API of the C…",N,N],[5,"d2s_buffered_n","ryu::raw","Print f64 to the given buffer and return number of bytes…",N,N],[5,"f2s_buffered_n","","Print f32 to the given buffer and return number of bytes…",N,N],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["buffer"]]],[11,"default","","",0,[[],["self"]]]],"paths":[[3,"Buffer"]]};
searchIndex["safemem"]={"doc":"Safe wrappers for memory-accessing functions like…","items":[[5,"copy_over","safemem","Copy `len` elements from `src_idx` to `dest_idx`. Ranges…",N,N],[5,"write_bytes","","Safe wrapper for `std::ptr::write_bytes()`/`memset()`.",N,N],[5,"prepend","","Prepend `elems` to `vec`, resizing if necessary.",N,N]],"paths":[]};
searchIndex["same_file"]={"doc":"This crate provides a safe and simple cross platform way…","items":[[3,"Handle","same_file","A handle to a file that can be tested for equality with…",N,N],[5,"is_same_file","","Returns true if the two file paths may correspond to the…",N,[[["p"],["q"]],["result",["bool"]]]],[11,"from_path","","Construct a handle from a path.",0,[[["p"]],["result",["handle"]]]],[11,"from_file","","Construct a handle from a file.",0,[[["file"]],["result",["handle"]]]],[11,"stdin","","Construct a handle from stdin.",0,[[],["result",["handle"]]]],[11,"stdout","","Construct a handle from stdout.",0,[[],["result",["handle"]]]],[11,"stderr","","Construct a handle from stderr.",0,[[],["result",["handle"]]]],[11,"as_file","","Return a reference to the underlying file.",0,[[["self"]],["file"]]],[11,"as_file_mut","","Return a mutable reference to the underlying file.",0,[[["self"]],["file"]]],[11,"dev","","Return the underlying device number of this handle.",0,[[["self"]],["u64"]]],[11,"ino","","Return the underlying inode number of this handle.",0,[[["self"]],["u64"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["handle"]],["bool"]]],[11,"ne","","",0,[[["self"],["handle"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"as_raw_fd","","",0,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",0,[[["self"]],["rawfd"]]]],"paths":[[3,"Handle"]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of…","items":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always","","Always run on scope exit.",N,N],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",N,[[["t"],["f"]],["scopeguard",["always"]]]],[8,"Strategy","","",N,N],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[["t"],["f"]],["scopeguard"]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",N,N],[14,"defer_on_unwind","","Macro to create a `ScopeGuard` (run on unwinding from…",N,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"should_run","","",2,[[],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"drop","","",1,[[["self"]]]]],"paths":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]};
searchIndex["semver"]={"doc":"Semantic version parsing and comparison.","items":[[3,"Version","semver","Represents a version number conforming to the semantic…",N,N],[12,"major","","The major version, to be incremented on incompatible…",0,N],[12,"minor","","The minor version, to be incremented when functionality is…",0,N],[12,"patch","","The patch version, to be incremented when…",0,N],[12,"pre","","The pre-release version identifier, if one exists.",0,N],[12,"build","","The build metadata, ignored when determining version…",0,N],[3,"VersionReq","","A `VersionReq` is a struct containing a list of predicates…",N,N],[4,"Identifier","","An identifier in the pre-release or build metadata.",N,N],[13,"Numeric","","An identifier that's solely numbers.",1,N],[13,"AlphaNumeric","","An identifier with letters and numbers.",1,N],[4,"SemVerError","","An error type for this crate",N,N],[13,"ParseError","","An error ocurred while parsing.",2,N],[4,"ReqParseError","","A `ReqParseError` is returned from methods which parse a…",N,N],[13,"InvalidVersionRequirement","","The given version requirement is invalid.",3,N],[13,"OpAlreadySet","","You have already provided an operation, such as `=`, `~`,…",3,N],[13,"InvalidSigil","","The sigil you have written is not correct.",3,N],[13,"VersionComponentsMustBeNumeric","","All components of a version must be numeric.",3,N],[13,"InvalidIdentifier","","There was an error parsing an identifier.",3,N],[13,"MajorVersionRequired","","At least a major version is required.",3,N],[13,"UnimplementedVersionRequirement","","An unimplemented version requirement.",3,N],[13,"DeprecatedVersionRequirement","","This form of requirement is deprecated.",3,N],[11,"new","","Contructs the simple case without pre or build.",0,[[["u64"],["u64"],["u64"]],["version"]]],[11,"parse","","Parse a string into a semver object.",0,[[["str"]],["result",["version","semvererror"]]]],[11,"increment_patch","","Increments the patch number for this Version (Must be…",0,[[["self"]]]],[11,"increment_minor","","Increments the minor version number for this Version (Must…",0,[[["self"]]]],[11,"increment_major","","Increments the major version number for this Version (Must…",0,[[["self"]]]],[11,"is_prerelease","","Checks to see if the current Version is in pre-release…",0,[[["self"]],["bool"]]],[11,"any","","`any()` is a factory method which creates a `VersionReq`…",4,[[],["versionreq"]]],[11,"parse","","`parse()` is the main constructor of a `VersionReq`. It…",4,[[["str"]],["result",["versionreq","reqparseerror"]]]],[11,"exact","","`exact()` is a factory method which creates a `VersionReq`…",4,[[["version"]],["versionreq"]]],[11,"matches","","`matches()` matches a given `Version` against this…",4,[[["self"],["version"]],["bool"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["identifier"]],["bool"]]],[11,"ne","","",1,[[["self"],["identifier"]],["bool"]]],[11,"eq","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"ne","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"eq","","",0,[[["self"],["version"]],["bool"]]],[11,"eq","","",4,[[["self"],["versionreq"]],["bool"]]],[11,"ne","","",4,[[["self"],["versionreq"]],["bool"]]],[11,"eq","","",3,[[["self"],["reqparseerror"]],["bool"]]],[11,"ne","","",3,[[["self"],["reqparseerror"]],["bool"]]],[11,"cmp","","",1,[[["self"],["identifier"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["version"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["versionreq"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["identifier"]]],[11,"clone","","",0,[[["self"]],["version"]]],[11,"clone","","",2,[[["self"]],["semvererror"]]],[11,"clone","","",4,[[["self"]],["versionreq"]]],[11,"clone","","",3,[[["self"]],["reqparseerror"]]],[11,"from","","",1,[[["identifier"]],["identifier"]]],[11,"from","","",0,[[["version"]],["version"]]],[11,"from","","",0,N],[11,"from","","",4,[[["versionreq"]],["versionreq"]]],[11,"from","","",3,[[["string"]],["reqparseerror"]]],[11,"partial_cmp","","",1,[[["self"],["identifier"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["identifier"]],["bool"]]],[11,"le","","",1,[[["self"],["identifier"]],["bool"]]],[11,"gt","","",1,[[["self"],["identifier"]],["bool"]]],[11,"ge","","",1,[[["self"],["identifier"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["semvererror"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"le","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"gt","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"ge","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["version"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["versionreq"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["versionreq"]],["bool"]]],[11,"le","","",4,[[["self"],["versionreq"]],["bool"]]],[11,"gt","","",4,[[["self"],["versionreq"]],["bool"]]],[11,"ge","","",4,[[["self"],["versionreq"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",4,N],[11,"from_str","","",0,[[["str"]],["result",["version","semvererror"]]]],[11,"from_str","","",4,[[["str"]],["result",["versionreq","reqparseerror"]]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"description","","",3,[[["self"]],["str"]]]],"paths":[[3,"Version"],[4,"Identifier"],[4,"SemVerError"],[4,"ReqParseError"],[3,"VersionReq"]]};
searchIndex["semver_parser"]={"doc":"","items":[[0,"version","semver_parser","",N,N],[3,"Version","semver_parser::version","",N,N],[12,"major","","",0,N],[12,"minor","","",0,N],[12,"patch","","",0,N],[12,"pre","","",0,N],[12,"build","","",0,N],[4,"Identifier","","",N,N],[13,"Numeric","","An identifier that's solely numbers.",1,N],[13,"AlphaNumeric","","An identifier with letters and numbers.",1,N],[5,"parse","","",N,[[["str"]],["result",["version","string"]]]],[0,"range","semver_parser","",N,N],[3,"VersionReq","semver_parser::range","",N,N],[12,"predicates","","",2,N],[3,"Predicate","","",N,N],[12,"op","","",3,N],[12,"major","","",3,N],[12,"minor","","",3,N],[12,"patch","","",3,N],[12,"pre","","",3,N],[4,"WildcardVersion","","",N,N],[13,"Major","","",4,N],[13,"Minor","","",4,N],[13,"Patch","","",4,N],[4,"Op","","",N,N],[13,"Ex","","",5,N],[13,"Gt","","",5,N],[13,"GtEq","","",5,N],[13,"Lt","","",5,N],[13,"LtEq","","",5,N],[13,"Tilde","","",5,N],[13,"Compatible","","",5,N],[13,"Wildcard","","",5,N],[5,"parse_predicate","","",N,[[["str"]],["result",["predicate","string"]]]],[5,"parse","","",N,[[["str"]],["result",["versionreq","string"]]]],[11,"to_string","semver_parser::version","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","semver_parser::range","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"eq","semver_parser::version","",0,[[["self"],["version"]],["bool"]]],[11,"ne","","",0,[[["self"],["version"]],["bool"]]],[11,"eq","","",1,[[["self"],["identifier"]],["bool"]]],[11,"ne","","",1,[[["self"],["identifier"]],["bool"]]],[11,"eq","semver_parser::range","",4,[[["self"],["wildcardversion"]],["bool"]]],[11,"eq","","",5,[[["self"],["op"]],["bool"]]],[11,"ne","","",5,[[["self"],["op"]],["bool"]]],[11,"eq","","",3,[[["self"],["predicate"]],["bool"]]],[11,"ne","","",3,[[["self"],["predicate"]],["bool"]]],[11,"clone","semver_parser::version","",0,[[["self"]],["version"]]],[11,"clone","","",1,[[["self"]],["identifier"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","semver_parser::range","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","semver_parser::version","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from_str","semver_parser::range","",5,[[["str"]],["result",["op","string"]]]]],"paths":[[3,"Version"],[4,"Identifier"],[3,"VersionReq"],[3,"Predicate"],[4,"WildcardVersion"],[4,"Op"]]};
searchIndex["serde"]={"doc":"Serde","items":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",N,N],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",N,N],[13,"Bool","","The input contained a boolean value that was not expected.",0,N],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,N],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,N],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,N],[13,"Char","","The input contained a `char` that was not expected.",0,N],[13,"Str","","The input contained a `&str` or `String` that was not…",0,N],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,N],[13,"Unit","","The input contained a unit `()` that was not expected.",0,N],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,N],[13,"Seq","","The input contained a sequence that was not expected.",0,N],[13,"Map","","The input contained a map that was not expected.",0,N],[13,"Enum","","The input contained an enum that was not expected.",0,N],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,N],[13,"Other","","A message stating what uncategorized thing the input…",0,N],[0,"value","","Building blocks for deserializing basic values using the…",N,N],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",N,N],[3,"UnitDeserializer","","A deserializer holding a `()`.",N,N],[3,"BoolDeserializer","","A deserializer holding a `bool`.",N,N],[3,"I8Deserializer","","A deserializer holding an `i8`.",N,N],[3,"I16Deserializer","","A deserializer holding an `i16`.",N,N],[3,"I32Deserializer","","A deserializer holding an `i32`.",N,N],[3,"I64Deserializer","","A deserializer holding an `i64`.",N,N],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",N,N],[3,"U8Deserializer","","A deserializer holding a `u8`.",N,N],[3,"U16Deserializer","","A deserializer holding a `u16`.",N,N],[3,"U64Deserializer","","A deserializer holding a `u64`.",N,N],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",N,N],[3,"F32Deserializer","","A deserializer holding an `f32`.",N,N],[3,"F64Deserializer","","A deserializer holding an `f64`.",N,N],[3,"CharDeserializer","","A deserializer holding a `char`.",N,N],[3,"I128Deserializer","","A deserializer holding an `i128`.",N,N],[3,"U128Deserializer","","A deserializer holding a `u128`.",N,N],[3,"U32Deserializer","","A deserializer holding a `u32`.",N,N],[3,"StrDeserializer","","A deserializer holding a `&str`.",N,N],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",N,N],[3,"StringDeserializer","","A deserializer holding a `String`.",N,N],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",N,N],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",N,N],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",N,N],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",N,N],[3,"MapDeserializer","","A deserializer that iterates over a map.",N,N],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",N,N],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,N],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[["self"]],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[["self"]],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",N,N],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,N],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,N],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",N,N],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["self"],["formatter"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",N,N],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",N,N],[16,"Value","","The type produced by using this seed.",10,N],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["self"],["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",11,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",N,N],[16,"Value","","The value produced by this visitor.",12,N],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["self"],["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["self"],["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["self"],["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["self"],["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["self"],["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["self"],["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["self"],["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["self"],["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["self"],["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["self"],["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["self"],["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["self"],["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["self"],["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["self"],["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["self"],["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["self"],["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["self"],["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,N],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,N],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["self"],["vec",["u8"]]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[["self"]],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["self"],["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[["self"]],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["self"],["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["self"],["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["self"],["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["self"],["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",13,N],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],["result",["option"]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],["option",["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",14,N],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],["result",["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],["result",["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],["result",["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],["option",["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",15,N],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,N],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["self"],["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[["self"]],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",16,N],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[["self"]],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["self"],["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[["self"]],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["self"],["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,N],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",N,N],[16,"Deserializer","","The type of the deserializer being converted into.",17,N],[10,"into_deserializer","","Convert this value into a deserializer.",17,N],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",N,N],[8,"Error","","Trait used by `Serialize` implementations to generically…",N,N],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",N,N],[16,"Ok","","The output type produced by this `Serializer` during…",20,N],[16,"Error","","The error type when some error occurs during serialization.",20,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,N],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,N],[10,"serialize_none","","Serialize a [`None`] value.",20,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,N],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[["self"]],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,N],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[["self"]],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,N],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[["self"]],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,N],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[["self"]],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,N],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["self"],["k"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[["self"]],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,N],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[["self"]],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,N],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[["self"]],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",11,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",N,N],[16,"Ok","","The output type produced by this `Serializer` during…",20,N],[16,"Error","","The error type when some error occurs during serialization.",20,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,N],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,N],[10,"serialize_none","","Serialize a [`None`] value.",20,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",N,N],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",N,N],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","serde::de::value","",29,[[["self"]],["string"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],["result",["ignoredany"]]]],[11,"deserialize_bool","serde::de::value","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",30,N],[11,"deserialize_enum","","",30,N],[11,"deserialize_identifier","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",31,N],[11,"deserialize_enum","","",31,N],[11,"deserialize_identifier","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",31,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",32,N],[11,"deserialize_enum","","",32,N],[11,"deserialize_identifier","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",32,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",33,N],[11,"deserialize_enum","","",33,N],[11,"deserialize_identifier","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",33,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",34,N],[11,"deserialize_enum","","",34,N],[11,"deserialize_identifier","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",34,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",35,N],[11,"deserialize_enum","","",35,N],[11,"deserialize_identifier","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",35,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",36,N],[11,"deserialize_enum","","",36,N],[11,"deserialize_identifier","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",36,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",37,N],[11,"deserialize_enum","","",37,N],[11,"deserialize_identifier","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",37,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",38,N],[11,"deserialize_enum","","",38,N],[11,"deserialize_identifier","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",38,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",39,N],[11,"deserialize_enum","","",39,N],[11,"deserialize_identifier","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",39,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",40,N],[11,"deserialize_enum","","",40,N],[11,"deserialize_identifier","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",40,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",41,N],[11,"deserialize_enum","","",41,N],[11,"deserialize_identifier","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",41,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",42,N],[11,"deserialize_enum","","",42,N],[11,"deserialize_identifier","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",42,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",43,N],[11,"deserialize_enum","","",43,N],[11,"deserialize_identifier","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",43,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",44,N],[11,"deserialize_enum","","",44,N],[11,"deserialize_identifier","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",44,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",45,N],[11,"deserialize_enum","","",45,N],[11,"deserialize_identifier","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",45,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",46,N],[11,"deserialize_identifier","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",46,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",46,N],[11,"deserialize_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",47,N],[11,"deserialize_bool","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",47,N],[11,"deserialize_identifier","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",1,N],[11,"deserialize_bool","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",1,N],[11,"deserialize_identifier","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",48,N],[11,"deserialize_bool","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",48,N],[11,"deserialize_identifier","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",49,N],[11,"deserialize_bool","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",49,N],[11,"deserialize_identifier","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",2,N],[11,"deserialize_identifier","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",2,N],[11,"deserialize_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",3,N],[11,"deserialize_enum","","",3,N],[11,"deserialize_identifier","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",4,N],[11,"deserialize_enum","","",4,N],[11,"deserialize_identifier","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",5,N],[11,"deserialize_enum","","",5,N],[11,"deserialize_identifier","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",6,N],[11,"deserialize_enum","","",6,N],[11,"deserialize_identifier","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["self"],["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","",28,[[["self"],["bool"]],["result"]]],[11,"visit_i64","","",28,[[["self"],["i64"]],["result"]]],[11,"visit_u64","","",28,[[["self"],["u64"]],["result"]]],[11,"visit_f64","","",28,[[["self"],["f64"]],["result"]]],[11,"visit_str","","",28,[[["self"],["str"]],["result"]]],[11,"visit_none","","",28,[[["self"]],["result"]]],[11,"visit_some","","",28,[[["self"],["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["self"],["d"]],["result"]]],[11,"visit_unit","","",28,[[["self"]],["result"]]],[11,"visit_seq","","",28,[[["self"],["a"]],["result"]]],[11,"visit_map","","",28,[[["self"],["a"]],["result"]]],[11,"visit_bytes","","",28,N],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],["result",["option"]]]],[11,"size_hint","","",3,[[["self"]],["option",["usize"]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],["result",["option"]]]],[11,"size_hint","","",5,[[["self"]],["option",["usize"]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],["result",["option"]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["self"],["tk"],["tv"]],["result",["option"]]]],[11,"size_hint","","",5,[[["self"]],["option",["usize"]]]],[11,"variant_seed","","",46,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",47,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",1,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",48,[[["self"],["t"]],["result"]]],[11,"variant_seed","","",49,[[["self"],["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[["self"]],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"eq","","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["self"],["unexpected"]],["bool"]]],[11,"ne","","",0,[[["self"],["unexpected"]],["bool"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"clone","serde::de::value","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","serde::de","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"paths":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","items":[[24,"Serialize","serde_derive","",N,N],[24,"Deserialize","","",N,N]],"paths":[]};
searchIndex["serde_json"]={"doc":"Serde JSON","items":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",N,N],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",N,N],[3,"Error","","This type represents all possible errors that can occur…",N,N],[3,"Serializer","","A structure for serializing Rust values into JSON.",N,N],[3,"Map","","Represents a JSON key/value type.",N,N],[3,"Number","","Represents a JSON number, whether integer or floating point.",N,N],[4,"Value","","Represents any valid JSON value.",N,N],[13,"Null","","Represents a JSON null value.",0,N],[13,"Bool","","Represents a JSON boolean.",0,N],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,N],[13,"String","","Represents a JSON string.",0,N],[13,"Array","","Represents a JSON array.",0,N],[13,"Object","","Represents a JSON object.",0,N],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",N,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",N,N],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",N,[[["str"]],["result"]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",N,[[["t"]],["result",["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",N,[[["t"]],["result",["string"]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",N,[[["t"]],["result",["vec"]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",N,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",N,[[["w"],["t"]],["result"]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",N,[[["value"]],["result",["error"]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",N,[[["t"]],["result",["value","error"]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",N,N],[3,"IoRead","serde_json::de","JSON input source that reads from a std::io input stream.",N,N],[3,"SliceRead","","JSON input source that reads from a slice of bytes.",N,N],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",N,N],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",N,N],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",N,N],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",N,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",N,N],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",N,[[["str"]],["result"]]],[8,"Read","","Trait used by the deserializer for iterating over input.…",N,N],[11,"new","","Create a JSON deserializer from one of the possible…",1,[[["r"]],["self"]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,N],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end","","The `Deserializer::end` method should be called after a…",1,[[["self"]],["result"]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of…",1,[[["self"]],["streamdeserializer"]]],[11,"new","","Create a JSON stream deserializer from one of the possible…",2,[[["r"]],["self"]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a…",2,[[["self"]],["usize"]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",N,N],[3,"Error","serde_json::error","This type represents all possible errors that can occur…",N,N],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",N,N],[13,"Io","","The error was caused by a failure to read or write bytes…",3,N],[13,"Syntax","","The error was caused by input that was not syntactically…",3,N],[13,"Data","","The error was caused by input data that was semantically…",3,N],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,N],[6,"Result","","Alias for a `Result` with the error type…",N,N],[11,"line","","One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column","","One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify","","Categorizes the cause of this error.",4,[[["self"]],["category"]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[["self"]],["bool"]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[["self"]],["bool"]]],[11,"is_data","","Returns true if this error was caused by input data that…",4,[[["self"]],["bool"]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[["self"]],["bool"]]],[0,"map","serde_json","A map of String to serde_json::Value.",N,N],[3,"Map","serde_json::map","Represents a JSON key/value type.",N,N],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",N,N],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",N,N],[3,"Iter","","An iterator over a serde_json::Map's entries.",N,N],[3,"IterMut","","A mutable iterator over a serde_json::Map's entries.",N,N],[3,"IntoIter","","An owning iterator over a serde_json::Map's entries.",N,N],[3,"Keys","","An iterator over a serde_json::Map's keys.",N,N],[3,"Values","","An iterator over a serde_json::Map's values.",N,N],[3,"ValuesMut","","A mutable iterator over a serde_json::Map's values.",N,N],[4,"Entry","","A view into a single entry in a map, which may either be…",N,N],[13,"Vacant","","A vacant Entry.",5,N],[13,"Occupied","","An occupied Entry.",5,N],[11,"new","","Makes a new empty Map.",6,[[],["self"]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all values.",6,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[["self"],["q"]],["option",["value"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",6,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",6,[[["self"],["q"]],["option",["value"]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["self"],["string"],["value"]],["option",["value"]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",6,[[["self"],["q"]],["option",["value"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",6,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",6,[[["self"]],["valuesmut"]]],[11,"key","","Returns a reference to this entry's key.",5,[[["self"]],["string"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["self"],["value"]],["value"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[["self"],["f"]],["value"]]],[11,"key","","Gets a reference to the key that would be used when…",7,[[["self"]],["string"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",7,[[["self"],["value"]],["value"]]],[11,"key","","Gets a reference to the key in the entry.",8,[[["self"]],["string"]]],[11,"get","","Gets a reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[["self"]],["value"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s…",8,[[["self"],["value"]],["value"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[["self"]],["value"]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",N,N],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",N,N],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",N,N],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",N,N],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",N,N],[13,"Quote","","An escaped quote `\"`",9,N],[13,"ReverseSolidus","","An escaped reverse solidus `\\`",9,N],[13,"Solidus","","An escaped solidus `/`",9,N],[13,"Backspace","","An escaped backspace character (usually escaped as `\\b`)",9,N],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\f`)",9,N],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\n`)",9,N],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as…",9,N],[13,"Tab","","An escaped tab character (usually escaped as `\\t`)",9,N],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped…",9,N],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",N,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",N,[[["w"],["t"]],["result"]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",N,[[["t"]],["result",["vec"]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",N,[[["t"]],["result",["vec"]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",N,[[["t"]],["result",["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",N,[[["t"]],["result",["string"]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",N,N],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[["self"],["w"]],["result"]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[["self"],["w"],["bool"]],["result"]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i8"]],["result"]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i16"]],["result"]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i32"]],["result"]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[["self"],["w"],["i64"]],["result"]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u8"]],["result"]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u16"]],["result"]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u32"]],["result"]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[["self"],["w"],["u64"]],["result"]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the…",10,[[["self"],["w"],["f32"]],["result"]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the…",10,[[["self"],["w"],["f64"]],["result"]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",10,[[["self"],["w"],["str"]],["result"]]],[11,"begin_string","","Called before each series of `write_string_fragment` and…",10,[[["self"],["w"]],["result"]]],[11,"end_string","","Called after each series of `write_string_fragment` and…",10,[[["self"],["w"]],["result"]]],[11,"write_string_fragment","","Writes a string fragment that doesn't need any escaping to…",10,[[["self"],["w"],["str"]],["result"]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["self"],["w"],["charescape"]],["result"]]],[11,"begin_array","","Called before every array. Writes a `[` to the specified…",10,[[["self"],["w"]],["result"]]],[11,"end_array","","Called after every array. Writes a `]` to the specified…",10,[[["self"],["w"]],["result"]]],[11,"begin_array_value","","Called before every array value. Writes a `,` if needed to…",10,[[["self"],["w"],["bool"]],["result"]]],[11,"end_array_value","","Called after every array value.",10,[[["self"],["w"]],["result"]]],[11,"begin_object","","Called before every object. Writes a `{` to the specified…",10,[[["self"],["w"]],["result"]]],[11,"end_object","","Called after every object. Writes a `}` to the specified…",10,[[["self"],["w"]],["result"]]],[11,"begin_object_key","","Called before every object key.",10,[[["self"],["w"],["bool"]],["result"]]],[11,"end_object_key","","Called after every object key. A `:` should be written to…",10,[[["self"],["w"]],["result"]]],[11,"begin_object_value","","Called before every object value. A `:` should be written…",10,[[["self"],["w"]],["result"]]],[11,"end_object_value","","Called after every object value.",10,[[["self"],["w"]],["result"]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn't need any escaping…",10,[[["self"],["w"],["str"]],["result"]]],[11,"new","","Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",11,[[["w"],["f"]],["self"]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[["self"]],["w"]]],[11,"new","","Construct a pretty printer formatter that defaults to…",12,[[],["self"]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",12,N],[0,"value","serde_json","The Value enum, a loosely typed way of representing any…",N,N],[3,"Number","serde_json::value","Represents a JSON number, whether integer or floating point.",N,N],[4,"Value","","Represents any valid JSON value.",N,N],[13,"Null","","Represents a JSON null value.",0,N],[13,"Bool","","Represents a JSON boolean.",0,N],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,N],[13,"String","","Represents a JSON string.",0,N],[13,"Array","","Represents a JSON array.",0,N],[13,"Object","","Represents a JSON object.",0,N],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",N,[[["t"]],["result",["value","error"]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",N,[[["value"]],["result",["error"]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",N,N],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["self"],["i"]],["option",["value"]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["self"],["i"]],["option",["value"]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],["option",["map"]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[["self"]],["option",["map"]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],["option",["vec"]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],["option",["vec"]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[["self"]],["option",["str"]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],["option",["u64"]]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[["self"]],["option",["f64"]]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],["option",["bool"]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],["option"]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[["self"],["str"]],["option",["value"]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[["self"],["str"]],["option",["value"]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],["value"]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between…",13,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",13,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",13,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",13,[[["self"]],["option",["u64"]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",13,[[["self"]],["option",["f64"]]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[["f64"]],["option",["number"]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input…",14,[[["r"]],["self"]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,N],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[6,"Result","serde_json","Alias for a `Result` with the error type…",N,N],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",N,N],[11,"from","serde_json::de","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","serde_json::error","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_iter","serde_json::map","",6,[[["self"]],["i"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","serde_json","",13,[[["self"]],["string"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_string","serde_json::value","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde_json::de","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","serde_json::map","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"begin_array","","",12,[[["self"],["w"]],["result"]]],[11,"end_array","","",12,[[["self"],["w"]],["result"]]],[11,"begin_array_value","","",12,[[["self"],["w"],["bool"]],["result"]]],[11,"end_array_value","","",12,[[["self"],["w"]],["result"]]],[11,"begin_object","","",12,[[["self"],["w"]],["result"]]],[11,"end_object","","",12,[[["self"],["w"]],["result"]]],[11,"begin_object_key","","",12,[[["self"],["w"],["bool"]],["result"]]],[11,"begin_object_value","","",12,[[["self"],["w"]],["result"]]],[11,"end_object_value","","",12,[[["self"],["w"]],["result"]]],[11,"next","serde_json::de","",14,[[["self"]],["result",["option"]]]],[11,"peek","","",14,[[["self"]],["result",["option"]]]],[11,"discard","","",14,[[["self"]]]],[11,"position","","",14,[[["self"]],["position"]]],[11,"peek_position","","",14,[[["self"]],["position"]]],[11,"byte_offset","","",14,[[["self"]],["usize"]]],[11,"parse_str","","",14,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",14,[[["self"],["vec"]],["result",["reference"]]]],[11,"ignore_str","","",14,[[["self"]],["result"]]],[11,"decode_hex_escape","","",14,[[["self"]],["result",["u16"]]]],[11,"next","","",15,[[["self"]],["result",["option"]]]],[11,"peek","","",15,[[["self"]],["result",["option"]]]],[11,"discard","","",15,[[["self"]]]],[11,"position","","",15,[[["self"]],["position"]]],[11,"peek_position","","",15,[[["self"]],["position"]]],[11,"byte_offset","","",15,[[["self"]],["usize"]]],[11,"parse_str","","",15,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",15,[[["self"],["vec"]],["result",["reference"]]]],[11,"ignore_str","","",15,[[["self"]],["result"]]],[11,"decode_hex_escape","","",15,[[["self"]],["result",["u16"]]]],[11,"next","","",16,[[["self"]],["result",["option"]]]],[11,"peek","","",16,[[["self"]],["result",["option"]]]],[11,"discard","","",16,[[["self"]]]],[11,"position","","",16,[[["self"]],["position"]]],[11,"peek_position","","",16,[[["self"]],["position"]]],[11,"byte_offset","","",16,[[["self"]],["usize"]]],[11,"parse_str","","",16,[[["self"],["vec"]],["result",["reference"]]]],[11,"parse_str_raw","","",16,[[["self"],["vec"]],["result",["reference"]]]],[11,"ignore_str","","",16,[[["self"]],["result"]]],[11,"decode_hex_escape","","",16,[[["self"]],["result",["u16"]]]],[11,"next","","",2,[[["self"]],["option",["result"]]]],[11,"next","serde_json::map","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,N],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,N],[11,"len","","",17,[[["self"]],["usize"]]],[11,"len","","",18,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"len","","",22,[[["self"]],["usize"]]],[11,"eq","serde_json::error","",3,[[["self"],["category"]],["bool"]]],[11,"eq","serde_json::map","",6,[[["self"],["self"]],["bool"]]],[11,"eq","serde_json::value","",0,[[["self"],["value"]],["bool"]]],[11,"ne","","",0,[[["self"],["value"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["self"],["string"]],["bool"]]],[11,"eq","","",0,[[["self"],["i8"]],["bool"]]],[11,"eq","","",0,[[["self"],["i16"]],["bool"]]],[11,"eq","","",0,[[["self"],["i32"]],["bool"]]],[11,"eq","","",0,[[["self"],["i64"]],["bool"]]],[11,"eq","","",0,[[["self"],["isize"]],["bool"]]],[11,"eq","","",0,[[["self"],["u8"]],["bool"]]],[11,"eq","","",0,[[["self"],["u16"]],["bool"]]],[11,"eq","","",0,[[["self"],["u32"]],["bool"]]],[11,"eq","","",0,[[["self"],["u64"]],["bool"]]],[11,"eq","","",0,[[["self"],["usize"]],["bool"]]],[11,"eq","","",0,[[["self"],["f32"]],["bool"]]],[11,"eq","","",0,[[["self"],["f64"]],["bool"]]],[11,"eq","","",0,[[["self"],["bool"]],["bool"]]],[11,"eq","serde_json","",13,[[["self"],["number"]],["bool"]]],[11,"ne","","",13,[[["self"],["number"]],["bool"]]],[11,"next_back","serde_json::map","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","","",21,[[["self"]],["option"]]],[11,"next_back","","",22,[[["self"]],["option"]]],[11,"into_iter","","",6,N],[11,"default","","",6,[[],["self"]]],[11,"default","serde_json::ser","",12,[[],["self"]]],[11,"default","serde_json::value","",0,[[],["value"]]],[11,"clone","serde_json::error","",3,[[["self"]],["category"]]],[11,"clone","serde_json::map","",6,[[["self"]],["self"]]],[11,"clone","serde_json::ser","",23,[[["self"]],["compactformatter"]]],[11,"clone","","",12,[[["self"]],["prettyformatter"]]],[11,"clone","serde_json::value","",0,[[["self"]],["value"]]],[11,"clone","serde_json","",13,[[["self"]],["number"]]],[11,"extend","serde_json::map","",6,[[["self"],["t"]]]],[11,"from","serde_json::value","",0,[[["i8"]],["self"]]],[11,"from","","",0,[[["i16"]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"from","","",0,[[["i64"]],["self"]]],[11,"from","","",0,[[["isize"]],["self"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"from","","",0,[[["u16"]],["self"]]],[11,"from","","",0,[[["u32"]],["self"]]],[11,"from","","",0,[[["u64"]],["self"]]],[11,"from","","",0,[[["usize"]],["self"]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from","","Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from","","Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from","","Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["cow",["str"]]],["self"]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["map",["string","value"]]],["self"]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from","","Convert a slice to `Value`",0,N],[11,"from","serde_json","",13,[[["u8"]],["self"]]],[11,"from","","",13,[[["u16"]],["self"]]],[11,"from","","",13,[[["u32"]],["self"]]],[11,"from","","",13,[[["u64"]],["self"]]],[11,"from","","",13,[[["usize"]],["self"]]],[11,"from","","",13,[[["i8"]],["self"]]],[11,"from","","",13,[[["i16"]],["self"]]],[11,"from","","",13,[[["i32"]],["self"]]],[11,"from","","",13,[[["i64"]],["self"]]],[11,"from","","",13,[[["isize"]],["self"]]],[11,"fmt","serde_json::error","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::map","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","serde_json::ser","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::value","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::error","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json","",13,[[["self"],["formatter"]],["result"]]],[11,"index","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"index_mut","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"from_iter","serde_json::map","",6,[[["t"]],["self"]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["i"]],["self"]]],[11,"from_str","serde_json","",13,[[["str"]],["result"]]],[11,"from_str","serde_json::value","",0,[[["str"]],["result",["value","error"]]]],[11,"description","serde_json::error","",4,[[["self"]],["str"]]],[11,"cause","","",4,[[["self"]],["option",["error"]]]],[11,"serialize","serde_json::map","",6,[[["self"],["s"]],["result"]]],[11,"serialize","serde_json::value","",0,[[["self"],["s"]],["result"]]],[11,"serialize","serde_json","",13,[[["self"],["s"]],["result"]]],[11,"custom","serde_json::error","",4,[[["t"]],["error"]]],[11,"deserialize","serde_json::map","",6,[[["d"]],["result"]]],[11,"deserialize","serde_json::value","",0,[[["d"]],["result",["value"]]]],[11,"deserialize","serde_json","",13,[[["d"]],["result",["number"]]]],[11,"deserialize_any","serde_json::value","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i8","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i16","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u8","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u16","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f32","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f64","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i128","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u128","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_option","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_enum","","",0,N],[11,"deserialize_newtype_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_bool","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",0,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",0,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",0,N],[11,"deserialize_identifier","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_any","serde_json","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i8","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i16","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i32","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i64","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u8","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u16","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u32","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u64","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f32","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_f64","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_i128","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_u128","","",13,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_bool","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",13,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",13,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",13,N],[11,"deserialize_enum","","",13,N],[11,"deserialize_identifier","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",13,[[["self"],["v"]],["result"]]],[11,"custom","serde_json::error","",4,[[["t"]],["error"]]],[11,"invalid_type","","",4,[[["unexpected"],["expected"]],["self"]]]],"paths":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"]]};
searchIndex["serde_urlencoded"]={"doc":"`x-www-form-urlencoded` meets Serde","items":[[3,"Deserializer","serde_urlencoded","A deserializer for the `application/x-www-form-urlencoded`…",N,N],[3,"Serializer","","A serializer for the `application/x-www-form-urlencoded`…",N,N],[5,"from_bytes","","Deserializes a `application/x-wwww-url-encoded` value from…",N,N],[5,"from_reader","","Convenience function that reads all bytes from `reader`…",N,[[["r"]],["result",["error"]]]],[5,"from_str","","Deserializes a `application/x-wwww-url-encoded` value from…",N,[[["str"]],["result",["error"]]]],[5,"to_string","","Serializes a value into a `application/x-wwww-url-encoded`…",N,[[["t"]],["result",["string","error"]]]],[0,"de","","Deserialization support for the…",N,N],[3,"Error","serde_urlencoded::de","A minimal representation of all possible errors that can…",N,N],[3,"Deserializer","","A deserializer for the `application/x-www-form-urlencoded`…",N,N],[5,"from_bytes","","Deserializes a `application/x-wwww-url-encoded` value from…",N,N],[5,"from_str","","Deserializes a `application/x-wwww-url-encoded` value from…",N,[[["str"]],["result",["error"]]]],[5,"from_reader","","Convenience function that reads all bytes from `reader`…",N,[[["r"]],["result",["error"]]]],[11,"new","","Returns a new `Deserializer`.",0,[[["urlencodedparse"]],["self"]]],[0,"ser","serde_urlencoded","Serialization support for the…",N,N],[3,"Serializer","serde_urlencoded::ser","A serializer for the `application/x-www-form-urlencoded`…",N,N],[3,"SeqSerializer","","Sequence serializer.",N,N],[3,"TupleSerializer","","Tuple serializer.",N,N],[3,"TupleStructSerializer","","Tuple struct serializer.",N,N],[3,"TupleVariantSerializer","","Tuple variant serializer.",N,N],[3,"MapSerializer","","Map serializer.",N,N],[3,"StructSerializer","","Struct serializer.",N,N],[3,"StructVariantSerializer","","Struct variant serializer.",N,N],[4,"Error","","Errors returned during serializing to…",N,N],[13,"Custom","","",1,N],[13,"Utf8","","",1,N],[5,"to_string","","Serializes a value into a `application/x-wwww-url-encoded`…",N,[[["t"]],["result",["string","error"]]]],[11,"new","","Returns a new `Serializer`.",2,[[["urlencodedserializer"]],["self"]]],[11,"from","serde_urlencoded::de","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde_urlencoded::ser","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","serde_urlencoded::de","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","serde_urlencoded::ser","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","serde_urlencoded::de","",3,[[["self"],["error"]],["bool"]]],[11,"ne","","",3,[[["self"],["error"]],["bool"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"custom","","",3,[[["t"]],["error"]]],[11,"clone","","",3,[[["self"]],["error"]]],[11,"custom","","",3,[[["t"]],["error"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","serde_urlencoded::ser","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","The lower-level cause of this error, in the case of a…",1,[[["self"]],["option",["error"]]]],[11,"serialize_bool","","Returns an error.",2,[[["self"],["bool"]],["result",["error"]]]],[11,"serialize_i8","","Returns an error.",2,[[["self"],["i8"]],["result",["error"]]]],[11,"serialize_i16","","Returns an error.",2,[[["self"],["i16"]],["result",["error"]]]],[11,"serialize_i32","","Returns an error.",2,[[["self"],["i32"]],["result",["error"]]]],[11,"serialize_i64","","Returns an error.",2,[[["self"],["i64"]],["result",["error"]]]],[11,"serialize_u8","","Returns an error.",2,[[["self"],["u8"]],["result",["error"]]]],[11,"serialize_u16","","Returns an error.",2,[[["self"],["u16"]],["result",["error"]]]],[11,"serialize_u32","","Returns an error.",2,[[["self"],["u32"]],["result",["error"]]]],[11,"serialize_u64","","Returns an error.",2,[[["self"],["u64"]],["result",["error"]]]],[11,"serialize_f32","","Returns an error.",2,[[["self"],["f32"]],["result",["error"]]]],[11,"serialize_f64","","Returns an error.",2,[[["self"],["f64"]],["result",["error"]]]],[11,"serialize_char","","Returns an error.",2,[[["self"],["char"]],["result",["error"]]]],[11,"serialize_str","","Returns an error.",2,[[["self"],["str"]],["result",["error"]]]],[11,"serialize_bytes","","Returns an error.",2,N],[11,"serialize_unit","","Returns an error.",2,[[["self"]],["result",["error"]]]],[11,"serialize_unit_struct","","Returns an error.",2,[[["self"],["str"]],["result",["error"]]]],[11,"serialize_unit_variant","","Returns an error.",2,[[["self"],["str"],["u32"],["str"]],["result",["error"]]]],[11,"serialize_newtype_struct","","Serializes the inner value, ignoring the newtype name.",2,[[["self"],["str"],["t"]],["result",["error"]]]],[11,"serialize_newtype_variant","","Returns an error.",2,[[["self"],["str"],["u32"],["str"],["t"]],["result",["error"]]]],[11,"serialize_none","","Returns `Ok`.",2,[[["self"]],["result",["error"]]]],[11,"serialize_some","","Serializes the given value.",2,[[["self"],["t"]],["result",["error"]]]],[11,"serialize_seq","","Serialize a sequence, given length (if any) is ignored.",2,[[["self"],["option",["usize"]]],["result",["error"]]]],[11,"serialize_tuple","","Returns an error.",2,[[["self"],["usize"]],["result",["error"]]]],[11,"serialize_tuple_struct","","Returns an error.",2,[[["self"],["str"],["usize"]],["result",["error"]]]],[11,"serialize_tuple_variant","","Returns an error.",2,[[["self"],["str"],["u32"],["str"],["usize"]],["result",["error"]]]],[11,"serialize_map","","Serializes a map, given length is ignored.",2,[[["self"],["option",["usize"]]],["result",["error"]]]],[11,"serialize_struct","","Serializes a struct, given length is ignored.",2,[[["self"],["str"],["usize"]],["result",["error"]]]],[11,"serialize_struct_variant","","Returns an error.",2,[[["self"],["str"],["u32"],["str"],["usize"]],["result",["error"]]]],[11,"serialize_element","","",5,[[["self"],["t"]],["result",["error"]]]],[11,"end","","",5,[[["self"]],["result",["error"]]]],[11,"custom","","",1,[[["t"]],["self"]]],[11,"serialize_element","","",4,[[["self"],["t"]],["result",["error"]]]],[11,"end","","",4,[[["self"]],["result",["error"]]]],[11,"serialize_field","","",6,[[["self"],["t"]],["result",["error"]]]],[11,"end","","",6,[[["self"]],["result",["error"]]]],[11,"serialize_field","","",7,[[["self"],["t"]],["result",["error"]]]],[11,"end","","",7,[[["self"]],["result",["error"]]]],[11,"serialize_field","","",10,[[["self"],["str"],["t"]],["result",["error"]]]],[11,"end","","",10,[[["self"]],["result",["error"]]]],[11,"serialize_entry","","",8,[[["self"],["k"],["v"]],["result",["error"]]]],[11,"serialize_key","","",8,[[["self"],["t"]],["result",["error"]]]],[11,"serialize_value","","",8,[[["self"],["t"]],["result",["error"]]]],[11,"end","","",8,[[["self"]],["result",["error"]]]],[11,"serialize_field","","",9,[[["self"],["str"],["t"]],["result",["error"]]]],[11,"end","","",9,[[["self"]],["result",["error"]]]],[11,"deserialize_any","serde_urlencoded::de","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_map","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",0,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_struct","","",0,N],[11,"deserialize_identifier","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",0,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_enum","","",0,N],[11,"deserialize_ignored_any","","",0,[[["self"],["v"]],["result"]]]],"paths":[[3,"Deserializer"],[4,"Error"],[3,"Serializer"],[3,"Error"],[3,"SeqSerializer"],[3,"TupleSerializer"],[3,"TupleStructSerializer"],[3,"TupleVariantSerializer"],[3,"MapSerializer"],[3,"StructSerializer"],[3,"StructVariantSerializer"]]};
searchIndex["shlex"]={"doc":"Same idea as (but implementation not directly based on)…","items":[[3,"Shlex","shlex","An iterator that takes an input string and splits it into…",N,N],[12,"line_no","","The number of newlines read so far, plus one.",0,N],[12,"had_error","","An input string is erroneous if it ends while inside a…",0,N],[5,"split","","Convenience function that consumes the whole string at…",N,[[["str"]],["option",["vec"]]]],[5,"quote","","Given a single word, return a string suitable to encode it…",N,[[["str"]],["cow",["str"]]]],[11,"new","","",0,[[["str"]],["self"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"next","","",0,[[["self"]],["option",["string"]]]]],"paths":[[3,"Shlex"]]};
searchIndex["siphasher"]={"doc":"","items":[[0,"sip","siphasher","An implementation of SipHash.",N,N],[3,"SipHasher13","siphasher::sip","An implementation of SipHash 1-3.",N,N],[3,"SipHasher24","","An implementation of SipHash 2-4.",N,N],[3,"SipHasher","","An implementation of SipHash 2-4.",N,N],[11,"new","","Creates a new `SipHasher` with the two initial keys set to…",0,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",0,[[["u64"],["u64"]],["siphasher"]]],[11,"keys","","Get the keys used by this hasher",0,N],[11,"new","","Creates a new `SipHasher13` with the two initial keys set…",1,[[],["siphasher13"]]],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",1,[[["u64"],["u64"]],["siphasher13"]]],[11,"keys","","Get the keys used by this hasher",1,N],[11,"new","","Creates a new `SipHasher24` with the two initial keys set…",2,[[],["siphasher24"]]],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",2,[[["u64"],["u64"]],["siphasher24"]]],[11,"keys","","Get the keys used by this hasher",2,N],[0,"sip128","siphasher","An implementation of SipHash with a 128-bit output.",N,N],[3,"Hash128","siphasher::sip128","A 128-bit (2x64) hash output",N,N],[12,"h1","","",3,N],[12,"h2","","",3,N],[3,"SipHasher13","","An implementation of SipHash128 1-3.",N,N],[3,"SipHasher24","","An implementation of SipHash128 2-4.",N,N],[3,"SipHasher","","An implementation of SipHash128 2-4.",N,N],[8,"Hasher128","","",N,N],[10,"finish128","","Return a 128-bit hash",4,[[["self"]],["hash128"]]],[11,"new","","Creates a new `SipHasher` with the two initial keys set to…",5,[[],["siphasher"]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",5,[[["u64"],["u64"]],["siphasher"]]],[11,"keys","","Get the keys used by this hasher",5,N],[11,"new","","Creates a new `SipHasher13` with the two initial keys set…",6,[[],["siphasher13"]]],[11,"new_with_keys","","Creates a `SipHasher13` that is keyed off the provided keys.",6,[[["u64"],["u64"]],["siphasher13"]]],[11,"keys","","Get the keys used by this hasher",6,N],[11,"new","","Creates a new `SipHasher24` with the two initial keys set…",7,[[],["siphasher24"]]],[11,"new_with_keys","","Creates a `SipHasher24` that is keyed off the provided keys.",7,[[["u64"],["u64"]],["siphasher24"]]],[11,"keys","","Get the keys used by this hasher",7,N],[11,"as_bytes","","Convert into a 16-bytes vector",3,N],[11,"try_from","siphasher::sip","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","siphasher::sip128","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"finish128","","Return a 128-bit hash",5,[[["self"]],["hash128"]]],[11,"finish128","","Return a 128-bit hash",6,[[["self"]],["hash128"]]],[11,"finish128","","Return a 128-bit hash",7,[[["self"]],["hash128"]]],[11,"fmt","siphasher::sip","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","siphasher::sip128","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"write","siphasher::sip","",0,N],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",1,N],[11,"finish","","",1,[[["self"]],["u64"]]],[11,"write","","",2,N],[11,"finish","","",2,[[["self"]],["u64"]]],[11,"write","siphasher::sip128","",5,N],[11,"finish","","",5,[[["self"]],["u64"]]],[11,"write","","",6,N],[11,"finish","","",6,[[["self"]],["u64"]]],[11,"write","","",7,N],[11,"finish","","",7,[[["self"]],["u64"]]],[11,"clone","siphasher::sip","",1,[[["self"]],["siphasher13"]]],[11,"clone","","",2,[[["self"]],["siphasher24"]]],[11,"clone","","",0,[[["self"]],["siphasher"]]],[11,"clone","siphasher::sip128","",3,[[["self"]],["hash128"]]],[11,"clone","","",6,[[["self"]],["siphasher13"]]],[11,"clone","","",7,[[["self"]],["siphasher24"]]],[11,"clone","","",5,[[["self"]],["siphasher"]]],[11,"default","siphasher::sip","",1,[[],["siphasher13"]]],[11,"default","","",2,[[],["siphasher24"]]],[11,"default","","",0,[[],["siphasher"]]],[11,"default","siphasher::sip128","",3,[[],["hash128"]]],[11,"default","","",6,[[],["siphasher13"]]],[11,"default","","",7,[[],["siphasher24"]]],[11,"default","","",5,[[],["siphasher"]]]],"paths":[[3,"SipHasher"],[3,"SipHasher13"],[3,"SipHasher24"],[3,"Hash128"],[8,"Hasher128"],[3,"SipHasher"],[3,"SipHasher13"],[3,"SipHasher24"]]};
searchIndex["slab"]={"doc":"Pre-allocated storage for a uniform data type.","items":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",N,N],[3,"VacantEntry","","A handle to a vacant entry in a `Slab`.",N,N],[3,"Iter","","An iterator over the values stored in the `Slab`",N,N],[3,"IterMut","","A mutable iterator over the values stored in the `Slab`",N,N],[11,"new","","Construct a new, empty `Slab`.",0,[[],["slab"]]],[11,"with_capacity","","Construct a new, empty `Slab` with the specified capacity.",0,[[["usize"]],["slab"]]],[11,"capacity","","Return the number of values the slab can store without…",0,[[["self"]],["usize"]]],[11,"reserve","","Reserve capacity for at least `additional` more values to…",0,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity required to store exactly…",0,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the slab as much as possible.",0,[[["self"]]]],[11,"clear","","Clear the slab of all values.",0,[[["self"]]]],[11,"len","","Return the number of stored values.",0,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there are no values stored in the slab.",0,[[["self"]],["bool"]]],[11,"iter","","Return an iterator over the slab.",0,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator that allows modifying each value.",0,[[["self"]],["itermut"]]],[11,"get","","Return a reference to the value associated with the given…",0,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Return a mutable reference to the value associated with…",0,[[["self"],["usize"]],["option"]]],[11,"get_unchecked","","Return a reference to the value associated with the given…",0,[[["self"],["usize"]],["t"]]],[11,"get_unchecked_mut","","Return a mutable reference to the value associated with…",0,[[["self"],["usize"]],["t"]]],[11,"insert","","Insert a value in the slab, returning key assigned to the…",0,[[["self"],["t"]],["usize"]]],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further…",0,[[["self"]],["vacantentry"]]],[11,"remove","","Remove and return the value associated with the given key.",0,[[["self"],["usize"]],["t"]]],[11,"contains","","Return `true` if a value is associated with the given key.",0,[[["self"],["usize"]],["bool"]]],[11,"retain","","Retain only the elements specified by the predicate.",0,[[["self"],["f"]]]],[11,"insert","","Insert a value in the entry, returning a mutable reference…",1,[[["self"],["t"]],["t"]]],[11,"key","","Return the key associated with this entry.",1,[[["self"]],["usize"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"default","","",0,[[],["self"]]],[11,"clone","","",0,[[["self"]],["slab"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]]],"paths":[[3,"Slab"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"]]};
searchIndex["smallvec"]={"doc":"Small vectors in various sizes. These store a certain…","items":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",N,N],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",N,N],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",N,N],[8,"VecLike","","Common operations implemented by both `Vec` and `SmallVec`.",N,N],[10,"push","","Append an element to the vector.",0,[[["self"],["t"]]]],[8,"ExtendFromSlice","","Trait to be implemented by a collection that can be…",N,N],[10,"extend_from_slice","","Extends a collection from a slice of its element type",1,N],[8,"Array","","Types that can be used as the backing store for a SmallVec",N,N],[16,"Item","","The type of the array's elements.",2,N],[10,"size","","Returns the number of items the array can hold.",2,[[],["usize"]]],[10,"ptr","","Returns a pointer to the first element of the array.",2,N],[10,"ptr_mut","","Returns a mutable pointer to the first element of the array.",2,N],[11,"new","","Construct an empty vector",3,[[],["smallvec"]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",3,[[["usize"]],["self"]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",3,[[["vec"]],["smallvec"]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"]],["smallvec"]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"set_len","","Sets the length of a vector.",3,[[["self"],["usize"]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",3,[[["self"]],["usize"]]],[11,"len","","The number of elements stored in the vector",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector is empty",3,[[["self"]],["bool"]]],[11,"capacity","","The number of items the vector can hold without reallocating",3,[[["self"]],["usize"]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",3,[[["self"]],["bool"]]],[11,"drain","","Empty the vector and return an iterator over its former…",3,[[["self"]],["drain"]]],[11,"push","","Append an item to the vector.",3,N],[11,"pop","","Remove an item from the end of the vector and return it,…",3,[[["self"]],["option"]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",3,[[["self"],["usize"]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",3,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minumum capacity for `additional` more…",3,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",3,[[["self"]]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",3,[[["self"],["usize"]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",3,N],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",3,N],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",3,N],[11,"clear","","Remove all elements from the vector.",3,[[["self"]]]],[11,"remove","","Remove and return the element at position `index`,…",3,N],[11,"insert","","Insert an element at position `index`, shifting all…",3,N],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",3,[[["self"],["usize"],["i"]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",3,[[["self"]],["vec"]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",3,[[["self"]],["result"]]],[11,"retain","","Retains only the elements specified by the predicate.",3,[[["self"],["f"]]]],[11,"dedup","","Removes consecutive duplicate elements.",3,[[["self"]]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",3,[[["self"],["f"]]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",3,[[["self"],["f"]]]],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",3,N],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",3,N],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",3,N],[11,"resize","","Resizes the vector so that its length is equal to `len`.",3,N],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use…",3,N],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",N,N],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"push","","",3,N],[11,"extend_from_slice","","",3,N],[11,"as_mut","","",3,N],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"eq","","",3,[[["self"],["smallvec"]],["bool"]]],[11,"ne","","",3,[[["self"],["smallvec"]],["bool"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"as_ref","","",3,N],[11,"into_iter","","",3,N],[11,"default","","",3,[[],["smallvec"]]],[11,"cmp","","",3,[[["self"],["smallvec"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["smallvec"]]],[11,"extend","","",3,[[["self"],["i"]]]],[11,"from","","",3,N],[11,"from","","",3,[[["vec"]],["smallvec"]]],[11,"from","","",3,[[["a"]],["smallvec"]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"partial_cmp","","",3,[[["self"],["smallvec"]],["option",["ordering"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",3,N],[11,"hash","","",3,[[["self"],["h"]]]],[11,"deref","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"index_mut","","",3,N],[11,"from_iter","","",3,[[["i"]],["smallvec"]]],[11,"borrow","","",3,N],[11,"borrow_mut","","",3,N],[11,"write","","",3,N],[11,"write_all","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]]],"paths":[[8,"VecLike"],[8,"ExtendFromSlice"],[8,"Array"],[3,"SmallVec"],[3,"Drain"],[3,"IntoIter"]]};
searchIndex["stable_deref_trait"]={"doc":"This module defines an unsafe marker trait, StableDeref,…","items":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable…",N,N],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the…",N,N]],"paths":[]};
searchIndex["string"]={"doc":"A UTF-8 encoded string with configurable byte storage.","items":[[3,"String","string","A UTF-8 encoded string with configurable byte storage.",N,N],[8,"TryFrom","","Attempt to construct `Self` via a conversion.",N,N],[16,"Error","","The type returned in the event of a conversion error.",0,N],[10,"try_from","","Performs the conversion.",0,[[["t"]],["result"]]],[11,"get_ref","","Get a reference to the underlying byte storage.",1,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the underlying byte storage.",1,[[["self"]],["t"]]],[11,"into_inner","","Unwraps this `String`, returning the underlying byte…",1,[[["self"]],["t"]]],[11,"new","","Creates a new empty `String`.",1,[[],["string"]]],[11,"from_utf8_unchecked","","Converts the provided value to a `String` without checking…",1,[[["t"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["t"]],["result"]]],[11,"eq","","",1,[[["self"],["string"]],["bool"]]],[11,"ne","","",1,[[["self"],["string"]],["bool"]]],[11,"default","","",1,[[],["string"]]],[11,"cmp","","",1,[[["self"],["string"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"partial_cmp","","",1,[[["self"],["string"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["string"]],["bool"]]],[11,"le","","",1,[[["self"],["string"]],["bool"]]],[11,"gt","","",1,[[["self"],["string"]],["bool"]]],[11,"ge","","",1,[[["self"],["string"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"deref","","",1,[[["self"]],["str"]]]],"paths":[[8,"TryFrom"],[3,"String"]]};
searchIndex["strsim"]={"doc":"This library implements string similarity metrics.","items":[[4,"StrSimError","strsim","",N,N],[13,"DifferentLengthArgs","","",0,N],[5,"hamming","","Calculates the number of positions in the two strings…",N,[[["str"],["str"]],["hammingresult"]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The…",N,[[["str"],["str"]],["f64"]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common…",N,[[["str"],["str"]],["f64"]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions,…",N,[[["str"],["str"]],["usize"]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions.…",N,[[["str"],["str"]],["usize"]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be…",N,[[["str"],["str"]],["usize"]]],[6,"HammingResult","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["strsimerror"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"StrSimError"]]};
searchIndex["structopt"]={"doc":"This crate defines the `StructOpt` trait and its custom…","items":[[0,"clap","structopt","Re-export of clap",N,N],[6,"Result","structopt::clap","Short hand for [`Result`] type",N,N],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",N,N],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where…",N,N],[3,"Values","","An iterator for getting multiple values out of an argument…",N,N],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",N,N],[13,"Required","","The argument must be used",0,N],[13,"Multiple","","The argument may be used multiple times such as `--flag…",0,N],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",0,N],[13,"Global","","The argument should be propagated down through all child…",0,N],[13,"Hidden","","The argument should not be shown in help text",0,N],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",0,N],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",0,N],[13,"NextLineHelp","","Prints the help text on the line after the argument",0,N],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",0,N],[13,"HidePossibleValues","","Hides the possible values from the help string",0,N],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",0,N],[13,"RequireEquals","","Require options use `--option=val` syntax",0,N],[13,"Last","","Specifies that the arg is the last positional argument and…",0,N],[13,"HideDefaultValue","","Hides the default value from the help string",0,N],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",0,N],[13,"HideEnvValues","","Hides ENV values in the help message",0,N],[13,"HiddenShortHelp","","The argument should not be shown in short help text",0,N],[13,"HiddenLongHelp","","The argument should not be shown in long help text",0,N],[14,"app_from_crate","","Allows you to build the `App` instance from your…",N,N],[3,"ArgMatches","","Used to get information about the arguments that where…",N,N],[4,"ErrorKind","","Command line argument parser kind of error",N,N],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and…",1,N],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",1,N],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",1,N],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized…",1,N],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",1,N],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",1,N],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",1,N],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",1,N],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",1,N],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",1,N],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",1,N],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",1,N],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is…",1,N],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",1,N],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",1,N],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was…",1,N],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was…",1,N],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",1,N],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",1,N],[13,"Format","","Represents a [Format error] (which is a part of…",1,N],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",N,N],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",N,N],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",N,N],[4,"AppSettings","","Application level settings, which affect how [`App`]…",N,N],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",2,N],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",2,N],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",2,N],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",2,N],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",2,N],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",2,N],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates…",2,N],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",2,N],[13,"ColoredHelp","","Uses colorized help messages.",2,N],[13,"ColorAuto","","Enables colored output only when the output is going to a…",2,N],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",2,N],[13,"ColorNever","","Disables colored output no matter if the output is going…",2,N],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",2,N],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",2,N],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",2,N],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting…",2,N],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help…",2,N],[13,"GlobalVersion","","Specifies to use the version of the current command for…",2,N],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from…",2,N],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",2,N],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or…",2,N],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",2,N],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",2,N],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",2,N],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the…",2,N],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",2,N],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",2,N],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at…",2,N],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\"…",2,N],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",2,N],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s…",2,N],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to…",2,N],[14,"crate_authors","","Allows you to pull the authors for the app from your…",N,N],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way…",N,N],[3,"Error","","Command Line Argument Parser Error",N,N],[12,"message","","Formatted error message",3,N],[12,"kind","","The type of error",3,N],[12,"info","","Any additional information passed along, such as the…",3,N],[4,"Shell","","Describes which shell to produce a completions file for",N,N],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",4,N],[13,"Fish","","Generates a .fish completion file for the Friendly…",4,N],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",4,N],[13,"PowerShell","","Generates a completion file for PowerShell",4,N],[13,"Elvish","","Generates a completion file for Elvish",4,N],[14,"arg_enum","","Convenience macro to generate more complete enums with…",N,N],[3,"SubCommand","","The abstract representation of a command line subcommand.",N,N],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",N,N],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where…",N,N],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",N,N],[3,"OsValues","","An iterator for getting multiple values out of an argument…",N,N],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",N,N],[3,"App","","Used to create a representation of a command line program…",N,N],[3,"Arg","","The abstract representation of a command line argument.…",N,N],[8,"StructOpt","structopt","A struct that is converted from command line arguments.",N,N],[10,"clap","","Returns the corresponding `clap::App`.",5,[[],["app"]]],[10,"from_clap","","Creates the struct from `clap::ArgMatches`. It cannot fail…",5,[[["argmatches"]],["self"]]],[11,"from_args","","Gets the struct from the command line arguments. Print the…",5,[[],["self"]]],[11,"from_iter","","Gets the struct from any iterator such as a `Vec` of your…",5,[[["i"]],["self"]]],[11,"from_iter_safe","","Gets the struct from any iterator such as a `Vec` of your…",5,[[["i"]],["result",["error"]]]],[11,"into_iter","structopt::clap","",6,[[["self"]],["i"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"default","","",10,[[],["osvalues"]]],[11,"default","","",6,[[],["values"]]],[11,"default","","",7,[[],["argmatches"]]],[11,"default","","",8,[[],["arggroup"]]],[11,"default","","",12,[[],["arg"]]],[11,"from","","",12,[[["arg"]],["arg"]]],[11,"from","","",3,[[["error"]],["error"]]],[11,"from","","",3,[[["error"]],["error"]]],[11,"from","","",8,[[["arggroup"]],["arggroup"]]],[11,"eq","","",0,[[["self"],["argsettings"]],["bool"]]],[11,"eq","","",12,[[["self"],["arg"]],["bool"]]],[11,"eq","","",1,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",2,[[["self"],["appsettings"]],["bool"]]],[11,"next","","",10,[[["self"]],["option",["osstr"]]]],[11,"size_hint","","",10,N],[11,"next","","",6,[[["self"]],["option",["str"]]]],[11,"size_hint","","",6,N],[11,"description","","",3,[[["self"]],["str"]]],[11,"next_back","","",10,[[["self"]],["option",["osstr"]]]],[11,"next_back","","",6,[[["self"]],["option",["str"]]]],[11,"from_str","","",4,[[["str"]],["result",["shell"]]]],[11,"from_str","","",0,[[["str"]],["result",["argsettings"]]]],[11,"from_str","","",2,[[["str"]],["result",["appsettings"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",1,[[["self"]],["errorkind"]]],[11,"clone","","",2,[[["self"]],["appsettings"]]],[11,"clone","","",9,[[["self"]],["subcommand"]]],[11,"clone","","",11,[[["self"]],["app"]]],[11,"clone","","",12,[[["self"]],["arg"]]],[11,"clone","","",0,[[["self"]],["argsettings"]]],[11,"clone","","",6,[[["self"]],["values"]]],[11,"clone","","",4,[[["self"]],["shell"]]],[11,"clone","","",8,[[["self"]],["arggroup"]]],[11,"clone","","",7,[[["self"]],["argmatches"]]],[11,"clone","","",10,[[["self"]],["osvalues"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"value_of","","Gets the value of a specific [option] or [positional]…",7,[[["self"],["s"]],["option",["str"]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["self"],["s"]],["option",["cow"]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["self"],["s"]],["option",["osstr"]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["self"],["s"]],["option",["values"]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["self"],["s"]],["option",["vec"]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["self"],["s"]],["option",["osvalues"]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["self"],["s"]],["bool"]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["self"],["s"]],["u64"]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["self"],["s"]],["option",["usize"]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["self"],["s"]],["option",["indices"]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"],["s"]],["option",["argmatches"]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"]],["option",["str"]]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`]…",7,N],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",8,[[["str"]],["arggroup"]]],[11,"arg","","Adds an [argument] to this group by name",8,[[["self"],["str"]],["arggroup"]]],[11,"args","","Adds multiple [arguments] to this group by name",8,N],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be…",8,[[["self"],["bool"]],["arggroup"]]],[11,"required","","Sets the group as required or not. A required group will…",8,[[["self"],["bool"]],["arggroup"]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",8,[[["self"],["str"]],["arggroup"]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",8,N],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",8,[[["self"],["str"]],["arggroup"]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",8,N],[11,"use_stderr","","Should the message be written to `stdout` or not",3,[[["self"]],["bool"]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",3,N],[11,"with_description","","Create an error with a custom description.",3,[[["str"],["errorkind"]],["error"]]],[11,"variants","","A list of possible variants in `&'static str` form",4,N],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",9,[[["str"]],["app"]]],[11,"new","","Creates a new instance of an application requiring a name.…",11,[[["s"]],["app"]]],[11,"get_name","","Get the name of the app",11,[[["self"]],["str"]]],[11,"get_bin_name","","Get the name of the binary",11,[[["self"]],["option",["str"]]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",11,[[["s"]],["app"]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",11,[[["self"],["s"]],["app"]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",11,[[["self"],["s"]],["app"]]],[11,"about","","Sets a string describing what the program does. This will…",11,[[["self"],["s"]],["app"]]],[11,"long_about","","Sets a string describing what the program does. This will…",11,[[["self"],["s"]],["app"]]],[11,"name","","Sets the program's name. This will be displayed when…",11,[[["self"],["s"]],["app"]]],[11,"after_help","","Adds additional help information to be displayed in…",11,[[["self"],["s"]],["app"]]],[11,"before_help","","Adds additional help information to be displayed in…",11,[[["self"],["s"]],["app"]]],[11,"version","","Sets a string of the version number to be displayed when…",11,[[["self"],["s"]],["app"]]],[11,"long_version","","Sets a string of the version number to be displayed when…",11,[[["self"],["s"]],["app"]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",11,[[["self"],["s"]],["app"]]],[11,"help","","Sets a custom help message and overrides the…",11,[[["self"],["s"]],["app"]]],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",11,[[["self"],["s"]],["app"]]],[11,"version_short","","Sets the [`short`] for the auto-generated `version`…",11,[[["self"],["s"]],["app"]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",11,[[["self"],["s"]],["app"]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",11,[[["self"],["s"]],["app"]]],[11,"template","","Sets the help template to be used, overriding the default…",11,[[["self"],["s"]],["app"]]],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",11,[[["self"],["appsettings"]],["app"]]],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",11,N],[11,"global_setting","","Enables a single setting that is propagated down through…",11,[[["self"],["appsettings"]],["app"]]],[11,"global_settings","","Enables multiple settings which are propagated down…",11,N],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",11,[[["self"],["appsettings"]],["app"]]],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level…",11,N],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",11,[[["self"],["usize"]],["app"]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",11,[[["self"],["usize"]],["app"]]],[11,"arg","","Adds an [argument] to the list of valid possibilities.",11,[[["self"],["a"]],["app"]]],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",11,N],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a…",11,[[["self"],["str"]],["app"]]],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one…",11,[[["self"],["str"]],["app"]]],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as…",11,[[["self"],["s"]],["app"]]],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as…",11,N],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions…",11,[[["self"],["s"]],["app"]]],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that…",11,N],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",11,[[["self"],["arggroup"]],["app"]]],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",11,N],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities.…",11,[[["self"],["app"]],["app"]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",11,[[["self"],["i"]],["app"]]],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help…",11,[[["self"],["usize"]],["app"]]],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a…",11,[[["self"]],["result",["error"]]]],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a…",11,[[["self"]],["result",["error"]]]],[11,"write_help","","Writes the full help message to the user to a…",11,[[["self"],["w"]],["result",["error"]]]],[11,"write_long_help","","Writes the full help message to the user to a…",11,[[["self"],["w"]],["result",["error"]]]],[11,"write_version","","Writes the version message to the user to a [`io::Write`]…",11,[[["self"],["w"]],["result",["error"]]]],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`]…",11,[[["self"],["w"]],["result",["error"]]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",11,N],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",11,N],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",11,[[["self"]],["argmatches"]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",11,[[["self"]],["result",["argmatches","error"]]]],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this…",11,[[["self"],["i"]],["argmatches"]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",11,[[["self"],["i"]],["result",["argmatches","error"]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`]…",11,[[["self"],["i"]],["result",["argmatches","error"]]]],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string…",12,[[["str"]],["arg"]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string.…",12,[[["str"]],["arg"]]],[11,"short","","Sets the short version of the argument without the…",12,[[["self"],["s"]],["arg"]]],[11,"long","","Sets the long version of the argument without the…",12,[[["self"],["str"]],["arg"]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\"…",12,[[["self"],["s"]],["arg"]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\"…",12,N],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like…",12,[[["self"],["s"]],["arg"]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions…",12,N],[11,"help","","Sets the short help text of the argument that will be…",12,[[["self"],["str"]],["arg"]]],[11,"long_help","","Sets the long help text of the argument that will be…",12,[[["self"],["str"]],["arg"]]],[11,"last","","Specifies that this arg is the last, or final, positional…",12,[[["self"],["bool"]],["arg"]]],[11,"required","","Sets whether or not the argument is required by default.…",12,[[["self"],["bool"]],["arg"]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",12,[[["self"],["bool"]],["arg"]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",12,[[["self"],["bool"]],["arg"]]],[11,"required_unless","","Sets an arg that override this arg's required setting.…",12,[[["self"],["str"]],["arg"]]],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e.…",12,N],[11,"required_unless_one","","Sets args that override this arg's [required] setting.…",12,N],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",12,[[["self"],["str"]],["arg"]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying…",12,N],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",12,[[["self"],["str"]],["arg"]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",12,N],[11,"requires","","Sets an argument by name that is required when this one is…",12,[[["self"],["str"]],["arg"]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",12,[[["self"],["str"],["str"]],["arg"]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",12,N],[11,"required_if","","Allows specifying that an argument is [required]…",12,[[["self"],["str"],["str"]],["arg"]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on…",12,N],[11,"requires_all","","Sets multiple arguments by names that are required when…",12,N],[11,"takes_value","","Specifies that the argument takes a value at run time.",12,[[["self"],["bool"]],["arg"]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",12,[[["self"],["bool"]],["arg"]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",12,[[["self"],["bool"]],["arg"]]],[11,"index","","Specifies the index of a positional argument starting at 1.",12,[[["self"],["u64"]],["arg"]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",12,[[["self"],["bool"]],["arg"]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",12,[[["self"],["str"]],["arg"]]],[11,"global","","Specifies that an argument can be matched to all child…",12,[[["self"],["bool"]],["arg"]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",12,[[["self"],["bool"]],["arg"]]],[11,"hidden","","Hides an argument from help message output.",12,[[["self"],["bool"]],["arg"]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",12,N],[11,"possible_value","","Specifies a possible value for this argument, one at a…",12,[[["self"],["str"]],["arg"]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",12,[[["self"],["bool"]],["arg"]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument…",12,[[["self"],["str"]],["arg"]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the…",12,N],[11,"number_of_values","","Specifies how many values are required to satisfy this…",12,[[["self"],["u64"]],["arg"]]],[11,"validator","","Allows one to perform a custom validation on the argument…",12,[[["self"],["f"]],["arg"]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",12,[[["self"],["f"]],["arg"]]],[11,"max_values","","Specifies the maximum number of values are for this…",12,[[["self"],["u64"]],["arg"]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",12,[[["self"],["u64"]],["arg"]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",12,[[["self"],["bool"]],["arg"]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",12,[[["self"],["bool"]],["arg"]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",12,[[["self"],["str"]],["arg"]]],[11,"value_names","","Specify multiple names for values of option arguments.…",12,N],[11,"value_name","","Specifies the name for value of [option] or [positional]…",12,[[["self"],["str"]],["arg"]]],[11,"default_value","","Specifies the value of the argument when not specified at…",12,[[["self"],["str"]],["arg"]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",12,[[["self"],["osstr"]],["arg"]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",12,[[["self"],["str"],["option",["str"]],["str"]],["arg"]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",12,[[["self"],["str"],["option",["osstr"]],["osstr"]],["arg"]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",12,N],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",12,N],[11,"env","","Specifies that if the value is not passed in as an…",12,[[["self"],["str"]],["arg"]]],[11,"env_os","","Specifies that if the value is not passed in as an…",12,[[["self"],["osstr"]],["arg"]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",12,[[["self"],["bool"]],["arg"]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",12,[[["self"],["bool"]],["arg"]]],[11,"display_order","","Allows custom ordering of args within the help message.…",12,[[["self"],["usize"]],["arg"]]],[11,"raw","","Indicates that all parameters passed after this should not…",12,[[["self"],["bool"]],["arg"]]],[11,"hidden_short_help","","Hides an argument from short help message output.",12,[[["self"],["bool"]],["arg"]]],[11,"hidden_long_help","","Hides an argument from long help message output.",12,[[["self"],["bool"]],["arg"]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for…",12,[[["self"],["argsettings"]],["bool"]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument…",12,[[["self"],["argsettings"]],["arg"]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the…",12,[[["self"],["argsettings"]],["arg"]]]],"paths":[[4,"ArgSettings"],[4,"ErrorKind"],[4,"AppSettings"],[3,"Error"],[4,"Shell"],[8,"StructOpt"],[3,"Values"],[3,"ArgMatches"],[3,"ArgGroup"],[3,"SubCommand"],[3,"OsValues"],[3,"App"],[3,"Arg"]]};
searchIndex["structopt_derive"]={"doc":"This crate is custom derive for StructOpt. It should not…","items":[[24,"StructOpt","structopt_derive","Generates the `StructOpt` impl.",N,N]],"paths":[]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","items":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",N,N],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token","","",0,N],[12,"style","","",0,N],[12,"bracket_token","","",0,N],[12,"path","","",0,N],[12,"tts","","",0,N],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",N,N],[12,"ident","","",1,N],[12,"paren_token","","",1,N],[12,"nested","","",1,N],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",N,N],[12,"ident","","",2,N],[12,"eq_token","","",2,N],[12,"lit","","",2,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"attrs","","Attributes tagged on the field.",3,N],[12,"vis","","Visibility of the field.",3,N],[12,"ident","","Name of the field, if any.",3,N],[12,"colon_token","","",3,N],[12,"ty","","Type of the field.",3,N],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",N,N],[12,"brace_token","","",4,N],[12,"named","","",4,N],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",N,N],[12,"paren_token","","",5,N],[12,"unnamed","","",5,N],[3,"Variant","","An enum variant.",N,N],[12,"attrs","","Attributes tagged on the variant.",6,N],[12,"ident","","Name of the variant.",6,N],[12,"fields","","Content stored in the variant.",6,N],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate","","A crate-level visibility: `crate`.",N,N],[12,"crate_token","","",7,N],[3,"VisPublic","","A public visibility level: `pub`.",N,N],[12,"pub_token","","",8,N],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",N,N],[12,"pub_token","","",9,N],[12,"paren_token","","",9,N],[12,"in_token","","",9,N],[12,"path","","",9,N],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",N,N],[3,"ExprAssign","","An assignment expression: `a = compute()`.",N,N],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",N,N],[3,"ExprAsync","","An async block: `async { ... }`.",N,N],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",N,N],[12,"attrs","","",10,N],[12,"left","","",10,N],[12,"op","","",10,N],[12,"right","","",10,N],[3,"ExprBlock","","A blocked scope: `{ ... }`.",N,N],[3,"ExprBox","","A box expression: `box f`.",N,N],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",N,N],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",N,N],[12,"attrs","","",11,N],[12,"func","","",11,N],[12,"paren_token","","",11,N],[12,"args","","",11,N],[3,"ExprCast","","A cast expression: `foo as f64`.",N,N],[12,"attrs","","",12,N],[12,"expr","","",12,N],[12,"as_token","","",12,N],[12,"ty","","",12,N],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",N,N],[3,"ExprContinue","","A `continue`, with an optional label.",N,N],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",N,N],[12,"attrs","","",13,N],[12,"base","","",13,N],[12,"dot_token","","",13,N],[12,"member","","",13,N],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",N,N],[3,"ExprGroup","","An expression contained within invisible delimiters.",N,N],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",N,N],[3,"ExprInPlace","","A placement expression: `place <- value`.",N,N],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",N,N],[12,"attrs","","",14,N],[12,"expr","","",14,N],[12,"bracket_token","","",14,N],[12,"index","","",14,N],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",N,N],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",N,N],[12,"attrs","","",15,N],[12,"lit","","",15,N],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",N,N],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",N,N],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",N,N],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",N,N],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",N,N],[12,"attrs","","",16,N],[12,"paren_token","","",16,N],[12,"expr","","",16,N],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",N,N],[12,"attrs","","",17,N],[12,"qself","","",17,N],[12,"path","","",17,N],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",N,N],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",N,N],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",N,N],[3,"ExprReturn","","A `return`, with an optional value to be returned.",N,N],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",N,N],[3,"ExprTry","","A try-expression: `expr?`.",N,N],[3,"ExprTryBlock","","A try block: `try { ... }`.",N,N],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",N,N],[3,"ExprType","","A type ascription expression: `foo: f64`.",N,N],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",N,N],[12,"attrs","","",18,N],[12,"op","","",18,N],[12,"expr","","",18,N],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",N,N],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",N,N],[12,"tts","","",19,N],[3,"ExprWhile","","A while loop: `while expr { ... }`.",N,N],[3,"ExprYield","","A yield expression: `yield expr`.",N,N],[3,"Index","","The index of an unnamed tuple struct field.",N,N],[12,"index","","",20,N],[12,"span","","",20,N],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token","","",21,N],[12,"lt_token","","",21,N],[12,"lifetimes","","",21,N],[12,"gt_token","","",21,N],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",N,N],[12,"attrs","","",22,N],[12,"const_token","","",22,N],[12,"ident","","",22,N],[12,"colon_token","","",22,N],[12,"ty","","",22,N],[12,"eq_token","","",22,N],[12,"default","","",22,N],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",N,N],[12,"lt_token","","",23,N],[12,"params","","",23,N],[12,"gt_token","","",23,N],[12,"where_clause","","",23,N],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",N,N],[12,"attrs","","",24,N],[12,"lifetime","","",24,N],[12,"colon_token","","",24,N],[12,"bounds","","",24,N],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",N,N],[12,"lhs_ty","","",25,N],[12,"eq_token","","",25,N],[12,"rhs_ty","","",25,N],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",N,N],[12,"lifetime","","",26,N],[12,"colon_token","","",26,N],[12,"bounds","","",26,N],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",N,N],[12,"lifetimes","","Any lifetimes from a `for` binding",27,N],[12,"bounded_ty","","The type being bounded",27,N],[12,"colon_token","","",27,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",27,N],[3,"TraitBound","","A trait used as a bound on a type parameter.",N,N],[12,"paren_token","","",28,N],[12,"modifier","","",28,N],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",28,N],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,N],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",N,N],[12,"attrs","","",29,N],[12,"ident","","",29,N],[12,"colon_token","","",29,N],[12,"bounds","","",29,N],[12,"eq_token","","",29,N],[12,"default","","",29,N],[3,"WhereClause","","A `where` clause in a definition: `where T:…",N,N],[12,"where_token","","",30,N],[12,"predicates","","",30,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",N,N],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Lifetime","","A Rust lifetime: `'a`.",N,N],[12,"apostrophe","","",31,N],[12,"ident","","",31,N],[3,"LitBool","","A boolean literal: `true` or `false`.",N,N],[12,"value","","",32,N],[12,"span","","",32,N],[3,"LitByte","","A byte literal: `b'f'`.",N,N],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",N,N],[3,"LitChar","","A character literal: `'a'`.",N,N],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",N,N],[3,"LitInt","","An integer literal: `1` or `1u16`.",N,N],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",N,N],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly…",N,N],[12,"token","","",33,N],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path","","",34,N],[12,"bang_token","","",34,N],[12,"delimiter","","",34,N],[12,"tts","","",34,N],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",N,N],[12,"enum_token","","",35,N],[12,"brace_token","","",35,N],[12,"variants","","",35,N],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",N,N],[12,"struct_token","","",36,N],[12,"fields","","",36,N],[12,"semi_token","","",36,N],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",N,N],[12,"union_token","","",37,N],[12,"fields","","",37,N],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",38,N],[12,"vis","","Visibility of the struct or enum.",38,N],[12,"ident","","Name of the struct or enum.",38,N],[12,"generics","","Generics required to complete the definition.",38,N],[12,"data","","Data within the struct or enum.",38,N],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token","","",39,N],[12,"name","","",39,N],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"name","","",40,N],[12,"ty","","",40,N],[3,"TypeArray","","A fixed size array type: `[T; n]`.",N,N],[12,"bracket_token","","",41,N],[12,"elem","","",41,N],[12,"semi_token","","",41,N],[12,"len","","",41,N],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",N,N],[12,"lifetimes","","",42,N],[12,"unsafety","","",42,N],[12,"abi","","",42,N],[12,"fn_token","","",42,N],[12,"paren_token","","",42,N],[12,"inputs","","",42,N],[12,"variadic","","",42,N],[12,"output","","",42,N],[3,"TypeGroup","","A type contained within invisible delimiters.",N,N],[12,"group_token","","",43,N],[12,"elem","","",43,N],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",N,N],[12,"impl_token","","",44,N],[12,"bounds","","",44,N],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",N,N],[12,"underscore_token","","",45,N],[3,"TypeMacro","","A macro in the type position.",N,N],[12,"mac","","",46,N],[3,"TypeNever","","The never type: `!`.",N,N],[12,"bang_token","","",47,N],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",N,N],[12,"paren_token","","",48,N],[12,"elem","","",48,N],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",N,N],[12,"qself","","",49,N],[12,"path","","",49,N],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",N,N],[12,"star_token","","",50,N],[12,"const_token","","",50,N],[12,"mutability","","",50,N],[12,"elem","","",50,N],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",N,N],[12,"and_token","","",51,N],[12,"lifetime","","",51,N],[12,"mutability","","",51,N],[12,"elem","","",51,N],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",N,N],[12,"bracket_token","","",52,N],[12,"elem","","",52,N],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",N,N],[12,"dyn_token","","",53,N],[12,"bounds","","",53,N],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",N,N],[12,"paren_token","","",54,N],[12,"elems","","",54,N],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",N,N],[12,"tts","","",55,N],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,"colon2_token","","",56,N],[12,"lt_token","","",56,N],[12,"args","","",56,N],[12,"gt_token","","",56,N],[3,"Binding","","A binding (equality constraint) on an associated type:…",N,N],[12,"ident","","",57,N],[12,"eq_token","","",57,N],[12,"ty","","",57,N],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",N,N],[12,"ident","","",58,N],[12,"colon_token","","",58,N],[12,"bounds","","",58,N],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,"paren_token","","",59,N],[12,"inputs","","`(A, B)`",59,N],[12,"output","","`C`",59,N],[3,"Path","","A path at which a named item is exported:…",N,N],[12,"leading_colon","","",60,N],[12,"segments","","",60,N],[3,"PathSegment","","A segment of a path together with any path arguments on…",N,N],[12,"ident","","",61,N],[12,"arguments","","",61,N],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,"lt_token","","",62,N],[12,"ty","","",62,N],[12,"position","","",62,N],[12,"as_token","","",62,N],[12,"gt_token","","",62,N],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer","","",63,N],[13,"Inner","","",63,N],[4,"Meta","","Content of a compile-time structured attribute.",N,N],[13,"Word","","",64,N],[13,"List","","A structured list within an attribute, like `derive(Copy,…",64,N],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",64,N],[4,"NestedMeta","","Element of a compile-time attribute list.",N,N],[13,"Meta","","A structured meta item, like the `Copy` in…",65,N],[13,"Literal","","A Rust literal, like the `\"new_name\"` in…",65,N],[4,"Fields","","Data stored within an enum variant or struct.",N,N],[13,"Named","","Named fields of a struct or struct variant such as `Point…",66,N],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",66,N],[13,"Unit","","Unit struct or unit variant such as `None`.",66,N],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public","","A public visibility level: `pub`.",67,N],[13,"Crate","","A crate-level visibility: `crate`.",67,N],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",67,N],[13,"Inherited","","An inherited visibility, which usually means private.",67,N],[4,"Expr","","A Rust expression.",N,N],[13,"Box","","A box expression: `box f`.",68,N],[13,"InPlace","","A placement expression: `place <- value`.",68,N],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",68,N],[13,"Call","","A function call expression: `invoke(a, b)`.",68,N],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",68,N],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",68,N],[13,"Binary","","A binary operation: `a + b`, `a * b`.",68,N],[13,"Unary","","A unary operation: `!x`, `*x`.",68,N],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",68,N],[13,"Cast","","A cast expression: `foo as f64`.",68,N],[13,"Type","","A type ascription expression: `foo: f64`.",68,N],[13,"Let","","A `let` guard: `let Some(x) = opt`.",68,N],[13,"If","","An `if` expression with an optional `else` block: `if expr…",68,N],[13,"While","","A while loop: `while expr { ... }`.",68,N],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",68,N],[13,"Loop","","Conditionless loop: `loop { ... }`.",68,N],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",68,N],[13,"Closure","","A closure expression: `|a, b| a + b`.",68,N],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",68,N],[13,"Block","","A blocked scope: `{ ... }`.",68,N],[13,"Assign","","An assignment expression: `a = compute()`.",68,N],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",68,N],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",68,N],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",68,N],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",68,N],[13,"Path","","A path like `std::mem::replace` possibly containing…",68,N],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",68,N],[13,"Break","","A `break`, with an optional label to break and an optional…",68,N],[13,"Continue","","A `continue`, with an optional label.",68,N],[13,"Return","","A `return`, with an optional value to be returned.",68,N],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",68,N],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",68,N],[13,"Repeat","","An array literal constructed from one repeated element:…",68,N],[13,"Paren","","A parenthesized expression: `(a + b)`.",68,N],[13,"Group","","An expression contained within invisible delimiters.",68,N],[13,"Try","","A try-expression: `expr?`.",68,N],[13,"Async","","An async block: `async { ... }`.",68,N],[13,"TryBlock","","A try block: `try { ... }`.",68,N],[13,"Yield","","A yield expression: `yield expr`.",68,N],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",68,N],[4,"Member","","A struct or tuple struct field accessed in a struct…",N,N],[13,"Named","","A named field like `self.x`.",69,N],[13,"Unnamed","","An unnamed field like `self.0`.",69,N],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type","","A generic type parameter: `T: Into<String>`.",70,N],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",70,N],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",70,N],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",N,N],[13,"None","","",71,N],[13,"Maybe","","",71,N],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait","","",72,N],[13,"Lifetime","","",72,N],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",N,N],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",73,N],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",73,N],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",73,N],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the…",N,N],[13,"F32","","",74,N],[13,"F64","","",74,N],[13,"None","","",74,N],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in…",N,N],[13,"I8","","",75,N],[13,"I16","","",75,N],[13,"I32","","",75,N],[13,"I64","","",75,N],[13,"I128","","",75,N],[13,"Isize","","",75,N],[13,"U8","","",75,N],[13,"U16","","",75,N],[13,"U32","","",75,N],[13,"U64","","",75,N],[13,"U128","","",75,N],[13,"Usize","","",75,N],[13,"None","","",75,N],[4,"Lit","","A Rust literal such as a string or integer or boolean.",N,N],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",76,N],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",76,N],[13,"Byte","","A byte literal: `b'f'`.",76,N],[13,"Char","","A character literal: `'a'`.",76,N],[13,"Int","","An integer literal: `1` or `1u16`.",76,N],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",76,N],[13,"Bool","","A boolean literal: `true` or `false`.",76,N],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly…",76,N],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked","","An ordinary string like `\"data\"`.",77,N],[13,"Raw","","A raw string like `r##\"data\"##`.",77,N],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren","","",78,N],[13,"Brace","","",78,N],[13,"Bracket","","",78,N],[4,"Data","","The storage of a struct, enum or union data structure.",N,N],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",79,N],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",79,N],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",79,N],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add","","The `+` operator (addition)",80,N],[13,"Sub","","The `-` operator (subtraction)",80,N],[13,"Mul","","The `*` operator (multiplication)",80,N],[13,"Div","","The `/` operator (division)",80,N],[13,"Rem","","The `%` operator (modulus)",80,N],[13,"And","","The `&&` operator (logical and)",80,N],[13,"Or","","The `||` operator (logical or)",80,N],[13,"BitXor","","The `^` operator (bitwise xor)",80,N],[13,"BitAnd","","The `&` operator (bitwise and)",80,N],[13,"BitOr","","The `|` operator (bitwise or)",80,N],[13,"Shl","","The `<<` operator (shift left)",80,N],[13,"Shr","","The `>>` operator (shift right)",80,N],[13,"Eq","","The `==` operator (equality)",80,N],[13,"Lt","","The `<` operator (less than)",80,N],[13,"Le","","The `<=` operator (less than or equal to)",80,N],[13,"Ne","","The `!=` operator (not equal to)",80,N],[13,"Ge","","The `>=` operator (greater than or equal to)",80,N],[13,"Gt","","The `>` operator (greater than)",80,N],[13,"AddEq","","The `+=` operator",80,N],[13,"SubEq","","The `-=` operator",80,N],[13,"MulEq","","The `*=` operator",80,N],[13,"DivEq","","The `/=` operator",80,N],[13,"RemEq","","The `%=` operator",80,N],[13,"BitXorEq","","The `^=` operator",80,N],[13,"BitAndEq","","The `&=` operator",80,N],[13,"BitOrEq","","The `|=` operator",80,N],[13,"ShlEq","","The `<<=` operator",80,N],[13,"ShrEq","","The `>>=` operator",80,N],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref","","The `*` operator for dereferencing",81,N],[13,"Not","","The `!` operator for logical inversion",81,N],[13,"Neg","","The `-` operator for negation",81,N],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n:…",N,N],[13,"Named","","Argument given a name.",82,N],[13,"Wild","","Argument not given a name, matched with `_`.",82,N],[4,"ReturnType","","Return type of a function signature.",N,N],[13,"Default","","Return type is not specified.",83,N],[13,"Type","","A particular type is returned.",83,N],[4,"Type","","The possible types that a Rust value could have.",N,N],[13,"Slice","","A dynamically sized slice type: `[T]`.",84,N],[13,"Array","","A fixed size array type: `[T; n]`.",84,N],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",84,N],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",84,N],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",84,N],[13,"Never","","The never type: `!`.",84,N],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",84,N],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",84,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",84,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",84,N],[13,"Paren","","A parenthesized type equivalent to the inner type.",84,N],[13,"Group","","A type contained within invisible delimiters.",84,N],[13,"Infer","","Indication that a type should be inferred by the compiler:…",84,N],[13,"Macro","","A macro in the type position.",84,N],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",84,N],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,"Lifetime","","A lifetime argument.",85,N],[13,"Type","","A type argument.",85,N],[13,"Binding","","A binding (equality constraint) on an associated type: the…",85,N],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",85,N],[13,"Const","","A const expression. Must be inside of a block.",85,N],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None","","",86,N],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",86,N],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",86,N],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",N,[[["tokenstream"]],["result",["error"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",N,[[["tokenstream"]],["result",["error"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",N,[[["str"]],["result",["error"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore","syn::token","`_`",N,N],[12,"spans","","",87,N],[3,"Abstract","","`abstract`",N,N],[12,"span","","",88,N],[3,"As","","`as`",N,N],[12,"span","","",89,N],[3,"Async","","`async`",N,N],[12,"span","","",90,N],[3,"Auto","","`auto`",N,N],[12,"span","","",91,N],[3,"Become","","`become`",N,N],[12,"span","","",92,N],[3,"Box","","`box`",N,N],[12,"span","","",93,N],[3,"Break","","`break`",N,N],[12,"span","","",94,N],[3,"CapSelf","","`Self`",N,N],[12,"span","","",95,N],[3,"Const","","`const`",N,N],[12,"span","","",96,N],[3,"Continue","","`continue`",N,N],[12,"span","","",97,N],[3,"Crate","","`crate`",N,N],[12,"span","","",98,N],[3,"Default","","`default`",N,N],[12,"span","","",99,N],[3,"Do","","`do`",N,N],[12,"span","","",100,N],[3,"Dyn","","`dyn`",N,N],[12,"span","","",101,N],[3,"Else","","`else`",N,N],[12,"span","","",102,N],[3,"Enum","","`enum`",N,N],[12,"span","","",103,N],[3,"Existential","","`existential`",N,N],[12,"span","","",104,N],[3,"Extern","","`extern`",N,N],[12,"span","","",105,N],[3,"Final","","`final`",N,N],[12,"span","","",106,N],[3,"Fn","","`fn`",N,N],[12,"span","","",107,N],[3,"For","","`for`",N,N],[12,"span","","",108,N],[3,"If","","`if`",N,N],[12,"span","","",109,N],[3,"Impl","","`impl`",N,N],[12,"span","","",110,N],[3,"In","","`in`",N,N],[12,"span","","",111,N],[3,"Let","","`let`",N,N],[12,"span","","",112,N],[3,"Loop","","`loop`",N,N],[12,"span","","",113,N],[3,"Macro","","`macro`",N,N],[12,"span","","",114,N],[3,"Match","","`match`",N,N],[12,"span","","",115,N],[3,"Mod","","`mod`",N,N],[12,"span","","",116,N],[3,"Move","","`move`",N,N],[12,"span","","",117,N],[3,"Mut","","`mut`",N,N],[12,"span","","",118,N],[3,"Override","","`override`",N,N],[12,"span","","",119,N],[3,"Priv","","`priv`",N,N],[12,"span","","",120,N],[3,"Pub","","`pub`",N,N],[12,"span","","",121,N],[3,"Ref","","`ref`",N,N],[12,"span","","",122,N],[3,"Return","","`return`",N,N],[12,"span","","",123,N],[3,"Self_","","`self`",N,N],[12,"span","","",124,N],[3,"Static","","`static`",N,N],[12,"span","","",125,N],[3,"Struct","","`struct`",N,N],[12,"span","","",126,N],[3,"Super","","`super`",N,N],[12,"span","","",127,N],[3,"Trait","","`trait`",N,N],[12,"span","","",128,N],[3,"Try","","`try`",N,N],[12,"span","","",129,N],[3,"Type","","`type`",N,N],[12,"span","","",130,N],[3,"Typeof","","`typeof`",N,N],[12,"span","","",131,N],[3,"Union","","`union`",N,N],[12,"span","","",132,N],[3,"Unsafe","","`unsafe`",N,N],[12,"span","","",133,N],[3,"Unsized","","`unsized`",N,N],[12,"span","","",134,N],[3,"Use","","`use`",N,N],[12,"span","","",135,N],[3,"Virtual","","`virtual`",N,N],[12,"span","","",136,N],[3,"Where","","`where`",N,N],[12,"span","","",137,N],[3,"While","","`while`",N,N],[12,"span","","",138,N],[3,"Yield","","`yield`",N,N],[12,"span","","",139,N],[3,"Add","","`+`",N,N],[12,"spans","","",140,N],[3,"AddEq","","`+=`",N,N],[12,"spans","","",141,N],[3,"And","","`&`",N,N],[12,"spans","","",142,N],[3,"AndAnd","","`&&`",N,N],[12,"spans","","",143,N],[3,"AndEq","","`&=`",N,N],[12,"spans","","",144,N],[3,"At","","`@`",N,N],[12,"spans","","",145,N],[3,"Bang","","`!`",N,N],[12,"spans","","",146,N],[3,"Caret","","`^`",N,N],[12,"spans","","",147,N],[3,"CaretEq","","`^=`",N,N],[12,"spans","","",148,N],[3,"Colon","","`:`",N,N],[12,"spans","","",149,N],[3,"Colon2","","`::`",N,N],[12,"spans","","",150,N],[3,"Comma","","`,`",N,N],[12,"spans","","",151,N],[3,"Div","","`/`",N,N],[12,"spans","","",152,N],[3,"DivEq","","`/=`",N,N],[12,"spans","","",153,N],[3,"Dollar","","`$`",N,N],[12,"spans","","",154,N],[3,"Dot","","`.`",N,N],[12,"spans","","",155,N],[3,"Dot2","","`..`",N,N],[12,"spans","","",156,N],[3,"Dot3","","`...`",N,N],[12,"spans","","",157,N],[3,"DotDotEq","","`..=`",N,N],[12,"spans","","",158,N],[3,"Eq","","`=`",N,N],[12,"spans","","",159,N],[3,"EqEq","","`==`",N,N],[12,"spans","","",160,N],[3,"Ge","","`>=`",N,N],[12,"spans","","",161,N],[3,"Gt","","`>`",N,N],[12,"spans","","",162,N],[3,"Le","","`<=`",N,N],[12,"spans","","",163,N],[3,"Lt","","`<`",N,N],[12,"spans","","",164,N],[3,"MulEq","","`*=`",N,N],[12,"spans","","",165,N],[3,"Ne","","`!=`",N,N],[12,"spans","","",166,N],[3,"Or","","`|`",N,N],[12,"spans","","",167,N],[3,"OrEq","","`|=`",N,N],[12,"spans","","",168,N],[3,"OrOr","","`||`",N,N],[12,"spans","","",169,N],[3,"Pound","","`#`",N,N],[12,"spans","","",170,N],[3,"Question","","`?`",N,N],[12,"spans","","",171,N],[3,"RArrow","","`->`",N,N],[12,"spans","","",172,N],[3,"LArrow","","`<-`",N,N],[12,"spans","","",173,N],[3,"Rem","","`%`",N,N],[12,"spans","","",174,N],[3,"RemEq","","`%=`",N,N],[12,"spans","","",175,N],[3,"FatArrow","","`=>`",N,N],[12,"spans","","",176,N],[3,"Semi","","`;`",N,N],[12,"spans","","",177,N],[3,"Shl","","`<<`",N,N],[12,"spans","","",178,N],[3,"ShlEq","","`<<=`",N,N],[12,"spans","","",179,N],[3,"Shr","","`>>`",N,N],[12,"spans","","",180,N],[3,"ShrEq","","`>>=`",N,N],[12,"spans","","",181,N],[3,"Star","","`*`",N,N],[12,"spans","","",182,N],[3,"Sub","","`-`",N,N],[12,"spans","","",183,N],[3,"SubEq","","`-=`",N,N],[12,"spans","","",184,N],[3,"Tilde","","`~`",N,N],[12,"spans","","",185,N],[3,"Brace","","`{...}`",N,N],[12,"span","","",186,N],[3,"Bracket","","`[...]`",N,N],[12,"span","","",187,N],[3,"Paren","","`(...)`",N,N],[12,"span","","",188,N],[3,"Group","","None-delimited group",N,N],[12,"span","","",189,N],[8,"Token","","Marker trait for types that represent single tokens.",N,N],[11,"surround","","",186,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",187,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",188,[[["self"],["tokenstream"],["f"]]]],[11,"surround","","",189,[[["self"],["tokenstream"],["f"]]]],[11,"parse_meta","syn","Parses the tokens after the path as a `Meta` if possible.",0,[[["self"]],["result",["meta"]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"name","","Returns the identifier that begins this structured meta…",64,[[["self"]],["ident"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",66,[[["self"]],["iter",["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",66,[[["self"]],["itermut",["field"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",23,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",23,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",23,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",23,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",23,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",23,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",23,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",23,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",190,[[["self"]],["turbofish"]]],[11,"new","","",24,[[["lifetime"]],["self"]]],[11,"new","","Panics",31,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",76,[[["literal"]],["self"]]],[11,"new","","",191,[[["str"],["span"]],["self"]]],[11,"value","","",191,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",191,[[["self"]],["result",["error"]]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"set_span","","",191,[[["self"],["span"]]]],[11,"new","","",192,N],[11,"value","","",192,[[["self"]],["vec",["u8"]]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"set_span","","",192,[[["self"],["span"]]]],[11,"new","","",193,[[["u8"],["span"]],["self"]]],[11,"value","","",193,[[["self"]],["u8"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"set_span","","",193,[[["self"],["span"]]]],[11,"new","","",194,[[["char"],["span"]],["self"]]],[11,"value","","",194,[[["self"]],["char"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"set_span","","",194,[[["self"],["span"]]]],[11,"new","","",195,[[["u64"],["intsuffix"],["span"]],["self"]]],[11,"value","","",195,[[["self"]],["u64"]]],[11,"suffix","","",195,[[["self"]],["intsuffix"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"set_span","","",195,[[["self"],["span"]]]],[11,"new","","",196,[[["f64"],["floatsuffix"],["span"]],["self"]]],[11,"value","","",196,[[["self"]],["f64"]]],[11,"suffix","","",196,[[["self"]],["floatsuffix"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"set_span","","",196,[[["self"],["span"]]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"set_span","","",33,[[["self"],["span"]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",84,[[["parsestream"]],["result"]]],[11,"without_plus","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",60,[[["parsestream"]],["result"]]],[11,"is_empty","","",86,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",N,N],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",197,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",197,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",197,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",198,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",198,[[["self"]],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",198,[[["self"],["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",198,[[["self"]],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",198,[[["self"]],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",198,[[["self"]],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",198,[[["self"]],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",198,[[["self"]],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",198,[[["self"]],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",198,[[["self"]],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional parsing methods for `Ident`.",N,N],[10,"parse_any","","Parses any identifier including keywords.",199,[[["parsestream"]],["result"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,"IntoIter","","An iterator over owned values of type `T`.",N,N],[3,"Iter","","An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair","","A single syntax tree node of type `T` followed by its…",N,N],[13,"Punctuated","","",200,N],[13,"End","","",200,N],[11,"new","","Creates an empty punctuated sequence.",201,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",201,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",201,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",201,[[["self"]],["option",["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",201,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",201,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",201,[[["self"]],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",201,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",201,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",201,[[["self"]],["option",["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",201,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",201,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",201,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",201,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",201,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",201,N],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",201,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",201,N],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",200,[[["self"]],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",200,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",200,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",200,[[["self"]],["option"]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",200,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",200,N],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",N,N],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",N,N],[10,"span","","Returns a `Span` covering the complete contents of this…",202,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[5,"visit_abi","syn::visit","",N,[[["v"],["abi"]]]],[5,"visit_angle_bracketed_generic_arguments","","",N,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_attr_style","","",N,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",N,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",N,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name","","",N,[[["v"],["barefnargname"]]]],[5,"visit_bin_op","","",N,[[["v"],["binop"]]]],[5,"visit_binding","","",N,[[["v"],["binding"]]]],[5,"visit_bound_lifetimes","","",N,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",N,[[["v"],["constparam"]]]],[5,"visit_constraint","","",N,[[["v"],["constraint"]]]],[5,"visit_data","","",N,[[["v"],["data"]]]],[5,"visit_data_enum","","",N,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",N,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",N,[[["v"],["dataunion"]]]],[5,"visit_derive_input","","",N,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",N,[[["v"],["expr"]]]],[5,"visit_expr_binary","","",N,[[["v"],["exprbinary"]]]],[5,"visit_expr_call","","",N,[[["v"],["exprcall"]]]],[5,"visit_expr_cast","","",N,[[["v"],["exprcast"]]]],[5,"visit_expr_field","","",N,[[["v"],["exprfield"]]]],[5,"visit_expr_index","","",N,[[["v"],["exprindex"]]]],[5,"visit_expr_lit","","",N,[[["v"],["exprlit"]]]],[5,"visit_expr_paren","","",N,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",N,[[["v"],["exprpath"]]]],[5,"visit_expr_unary","","",N,[[["v"],["exprunary"]]]],[5,"visit_expr_verbatim","","",N,[[["v"],["exprverbatim"]]]],[5,"visit_field","","",N,[[["v"],["field"]]]],[5,"visit_fields","","",N,[[["v"],["fields"]]]],[5,"visit_fields_named","","",N,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",N,[[["v"],["fieldsunnamed"]]]],[5,"visit_generic_argument","","",N,[[["v"],["genericargument"]]]],[5,"visit_generic_param","","",N,[[["v"],["genericparam"]]]],[5,"visit_generics","","",N,[[["v"],["generics"]]]],[5,"visit_ident","","",N,[[["v"],["ident"]]]],[5,"visit_index","","",N,[[["v"],["index"]]]],[5,"visit_lifetime","","",N,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",N,[[["v"],["lifetimedef"]]]],[5,"visit_lit","","",N,[[["v"],["lit"]]]],[5,"visit_lit_bool","","",N,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",N,[[["v"],["litbyte"]]]],[5,"visit_lit_byte_str","","",N,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",N,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",N,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",N,[[["v"],["litint"]]]],[5,"visit_lit_str","","",N,[[["v"],["litstr"]]]],[5,"visit_lit_verbatim","","",N,[[["v"],["litverbatim"]]]],[5,"visit_macro","","",N,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",N,[[["v"],["macrodelimiter"]]]],[5,"visit_member","","",N,[[["v"],["member"]]]],[5,"visit_meta","","",N,[[["v"],["meta"]]]],[5,"visit_meta_list","","",N,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",N,[[["v"],["metanamevalue"]]]],[5,"visit_nested_meta","","",N,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",N,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_path","","",N,[[["v"],["path"]]]],[5,"visit_path_arguments","","",N,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",N,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",N,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",N,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type","","",N,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",N,[[["v"],["qself"]]]],[5,"visit_return_type","","",N,[[["v"],["returntype"]]]],[5,"visit_span","","",N,[[["v"],["span"]]]],[5,"visit_trait_bound","","",N,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",N,[[["v"],["traitboundmodifier"]]]],[5,"visit_type","","",N,[[["v"],["type"]]]],[5,"visit_type_array","","",N,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",N,[[["v"],["typebarefn"]]]],[5,"visit_type_group","","",N,[[["v"],["typegroup"]]]],[5,"visit_type_impl_trait","","",N,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",N,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",N,[[["v"],["typemacro"]]]],[5,"visit_type_never","","",N,[[["v"],["typenever"]]]],[5,"visit_type_param","","",N,[[["v"],["typeparam"]]]],[5,"visit_type_param_bound","","",N,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",N,[[["v"],["typeparen"]]]],[5,"visit_type_path","","",N,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",N,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",N,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",N,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",N,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",N,[[["v"],["typetuple"]]]],[5,"visit_type_verbatim","","",N,[[["v"],["typeverbatim"]]]],[5,"visit_un_op","","",N,[[["v"],["unop"]]]],[5,"visit_variant","","",N,[[["v"],["variant"]]]],[5,"visit_vis_crate","","",N,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",N,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",N,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",N,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",N,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",N,[[["v"],["wherepredicate"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",N,N],[11,"visit_abi","","",203,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",203,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",203,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",203,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",203,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",203,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",203,[[["self"],["binop"]]]],[11,"visit_binding","","",203,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",203,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",203,[[["self"],["constparam"]]]],[11,"visit_constraint","","",203,[[["self"],["constraint"]]]],[11,"visit_data","","",203,[[["self"],["data"]]]],[11,"visit_data_enum","","",203,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",203,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",203,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",203,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",203,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",203,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",203,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",203,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",203,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",203,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",203,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",203,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",203,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",203,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",203,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",203,[[["self"],["field"]]]],[11,"visit_fields","","",203,[[["self"],["fields"]]]],[11,"visit_fields_named","","",203,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",203,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",203,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",203,[[["self"],["genericparam"]]]],[11,"visit_generics","","",203,[[["self"],["generics"]]]],[11,"visit_ident","","",203,[[["self"],["ident"]]]],[11,"visit_index","","",203,[[["self"],["index"]]]],[11,"visit_lifetime","","",203,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",203,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",203,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",203,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",203,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",203,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",203,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",203,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",203,[[["self"],["litint"]]]],[11,"visit_lit_str","","",203,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",203,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",203,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",203,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",203,[[["self"],["member"]]]],[11,"visit_meta","","",203,[[["self"],["meta"]]]],[11,"visit_meta_list","","",203,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",203,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",203,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",203,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",203,[[["self"],["path"]]]],[11,"visit_path_arguments","","",203,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",203,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",203,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",203,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",203,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",203,[[["self"],["qself"]]]],[11,"visit_return_type","","",203,[[["self"],["returntype"]]]],[11,"visit_span","","",203,[[["self"],["span"]]]],[11,"visit_trait_bound","","",203,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",203,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",203,[[["self"],["type"]]]],[11,"visit_type_array","","",203,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",203,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",203,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",203,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",203,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",203,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",203,[[["self"],["typenever"]]]],[11,"visit_type_param","","",203,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",203,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",203,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",203,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",203,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",203,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",203,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",203,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",203,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",203,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",203,[[["self"],["unop"]]]],[11,"visit_variant","","",203,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",203,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",203,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",203,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",203,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",203,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",203,[[["self"],["wherepredicate"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",N,N],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",N,N],[3,"ParseBuffer","","Cursor position within a buffered token stream.",N,N],[3,"StepCursor","","Cursor state associated with speculative parsing.",N,N],[6,"Result","","The result of a Syn parser.",N,N],[6,"ParseStream","","Input to a Syn parser function.",N,N],[8,"Peek","","Types that can be parsed by looking at just one token.",N,N],[8,"Parse","","Parsing interface implemented by all types that can be…",N,N],[10,"parse","","",204,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output","","",205,N],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",205,[[["self"],["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",205,[[["self"],["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",205,[[["self"],["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",206,[[["self"],["t"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",207,[[["self"]],["result"]]],[11,"call","","Calls the given parser function to parse a syntax tree…",207,N],[11,"peek","","Looks at the next token in the parse stream to determine…",207,[[["self"],["t"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",207,[[["self"],["t"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",207,[[["self"],["t"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",207,N],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",207,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",207,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",207,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",207,[[["self"],["t"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",207,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation…",207,[[["self"]],["cursor"]]],[11,"new","","Usually the [`ParseStream::error`] method will be used…",208,[[["span"],["t"]],["self"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",208,[[["self"]],["tokenstream"]]],[6,"AttributeArgs","syn","Conventional argument type associated with an invocation…",N,N],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",N,N],[14,"braced","","Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed","","Parse a set of square brackets and expose their content to…",N,N],[14,"Token","","A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",N,N],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"to_string","","",209,[[["self"]],["string"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,N],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,N],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,N],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"peek","syn::token","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,N],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"span","","",184,[[["self"]],["span"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",197,[[["t"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",201,[[["self"]],["span"]]],[11,"into_iter","","",201,[[["self"]],["i"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"into_iter","","",242,[[["self"]],["i"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"into_iter","","",243,[[["self"]],["i"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"into_iter","","",244,[[["self"]],["i"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"into_iter","","",245,[[["self"]],["i"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"into_iter","","",246,[[["self"]],["i"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"into_iter","","",247,[[["self"]],["i"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"from","syn::parse","",248,[[["t"]],["t"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"to_string","","",208,[[["self"]],["string"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"hash","syn","",209,N],[11,"fmt","","",209,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",209,[[["self"],["ident"]],["bool"]]],[11,"eq","","",209,[[["self"],["t"]],["bool"]]],[11,"clone","","",209,[[["self"]],["ident"]]],[11,"cmp","","",209,[[["self"],["ident"]],["ordering"]]],[11,"partial_cmp","","",209,[[["self"],["ident"]],["option",["ordering"]]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result",["error"]]]],[11,"to_tokens","","",209,N],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"peek","syn::token","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"peek","syn","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"parse_any","","",209,[[["parsestream"]],["result"]]],[11,"parse","syn::token","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",89,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",95,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",128,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",130,[[["parsestream"]],["result"]]],[11,"parse","","",131,[[["parsestream"]],["result"]]],[11,"parse","","",132,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",179,[[["parsestream"]],["result"]]],[11,"parse","","",180,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",182,[[["parsestream"]],["result"]]],[11,"parse","","",183,[[["parsestream"]],["result"]]],[11,"parse","","",184,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","syn","",209,[[["parsestream"]],["result"]]],[11,"parse","","",64,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",24,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",81,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",82,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",60,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",56,[[["parsestream"]],["result"]]],[11,"parse","","",59,[[["parsestream"]],["result"]]],[11,"parse","","",61,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"next","syn::punctuated","",242,[[["self"]],["option"]]],[11,"next","","",243,[[["self"]],["option"]]],[11,"next","","",244,[[["self"]],["option"]]],[11,"next","","",245,[[["self"]],["option"]]],[11,"next","","",246,[[["self"]],["option"]]],[11,"next","","",247,[[["self"]],["option"]]],[11,"len","","",242,[[["self"]],["usize"]]],[11,"len","","",243,[[["self"]],["usize"]]],[11,"len","","",244,[[["self"]],["usize"]]],[11,"len","","",245,[[["self"]],["usize"]]],[11,"len","","",246,[[["self"]],["usize"]]],[11,"len","","",247,[[["self"]],["usize"]]],[11,"eq","syn::token","",87,[[["self"],["underscore"]],["bool"]]],[11,"eq","","",88,[[["self"],["abstract"]],["bool"]]],[11,"eq","","",89,[[["self"],["as"]],["bool"]]],[11,"eq","","",90,[[["self"],["async"]],["bool"]]],[11,"eq","","",91,[[["self"],["auto"]],["bool"]]],[11,"eq","","",92,[[["self"],["become"]],["bool"]]],[11,"eq","","",93,[[["self"],["box"]],["bool"]]],[11,"eq","","",94,[[["self"],["break"]],["bool"]]],[11,"eq","","",95,[[["self"],["capself"]],["bool"]]],[11,"eq","","",96,[[["self"],["const"]],["bool"]]],[11,"eq","","",97,[[["self"],["continue"]],["bool"]]],[11,"eq","","",98,[[["self"],["crate"]],["bool"]]],[11,"eq","","",99,[[["self"],["default"]],["bool"]]],[11,"eq","","",100,[[["self"],["do"]],["bool"]]],[11,"eq","","",101,[[["self"],["dyn"]],["bool"]]],[11,"eq","","",102,[[["self"],["else"]],["bool"]]],[11,"eq","","",103,[[["self"],["enum"]],["bool"]]],[11,"eq","","",104,[[["self"],["existential"]],["bool"]]],[11,"eq","","",105,[[["self"],["extern"]],["bool"]]],[11,"eq","","",106,[[["self"],["final"]],["bool"]]],[11,"eq","","",107,[[["self"],["fn"]],["bool"]]],[11,"eq","","",108,[[["self"],["for"]],["bool"]]],[11,"eq","","",109,[[["self"],["if"]],["bool"]]],[11,"eq","","",110,[[["self"],["impl"]],["bool"]]],[11,"eq","","",111,[[["self"],["in"]],["bool"]]],[11,"eq","","",112,[[["self"],["let"]],["bool"]]],[11,"eq","","",113,[[["self"],["loop"]],["bool"]]],[11,"eq","","",114,[[["self"],["macro"]],["bool"]]],[11,"eq","","",115,[[["self"],["match"]],["bool"]]],[11,"eq","","",116,[[["self"],["mod"]],["bool"]]],[11,"eq","","",117,[[["self"],["move"]],["bool"]]],[11,"eq","","",118,[[["self"],["mut"]],["bool"]]],[11,"eq","","",119,[[["self"],["override"]],["bool"]]],[11,"eq","","",120,[[["self"],["priv"]],["bool"]]],[11,"eq","","",121,[[["self"],["pub"]],["bool"]]],[11,"eq","","",122,[[["self"],["ref"]],["bool"]]],[11,"eq","","",123,[[["self"],["return"]],["bool"]]],[11,"eq","","",124,[[["self"],["self_"]],["bool"]]],[11,"eq","","",125,[[["self"],["static"]],["bool"]]],[11,"eq","","",126,[[["self"],["struct"]],["bool"]]],[11,"eq","","",127,[[["self"],["super"]],["bool"]]],[11,"eq","","",128,[[["self"],["trait"]],["bool"]]],[11,"eq","","",129,[[["self"],["try"]],["bool"]]],[11,"eq","","",130,[[["self"],["type"]],["bool"]]],[11,"eq","","",131,[[["self"],["typeof"]],["bool"]]],[11,"eq","","",132,[[["self"],["union"]],["bool"]]],[11,"eq","","",133,[[["self"],["unsafe"]],["bool"]]],[11,"eq","","",134,[[["self"],["unsized"]],["bool"]]],[11,"eq","","",135,[[["self"],["use"]],["bool"]]],[11,"eq","","",136,[[["self"],["virtual"]],["bool"]]],[11,"eq","","",137,[[["self"],["where"]],["bool"]]],[11,"eq","","",138,[[["self"],["while"]],["bool"]]],[11,"eq","","",139,[[["self"],["yield"]],["bool"]]],[11,"eq","","",140,[[["self"],["add"]],["bool"]]],[11,"eq","","",141,[[["self"],["addeq"]],["bool"]]],[11,"eq","","",142,[[["self"],["and"]],["bool"]]],[11,"eq","","",143,[[["self"],["andand"]],["bool"]]],[11,"eq","","",144,[[["self"],["andeq"]],["bool"]]],[11,"eq","","",145,[[["self"],["at"]],["bool"]]],[11,"eq","","",146,[[["self"],["bang"]],["bool"]]],[11,"eq","","",147,[[["self"],["caret"]],["bool"]]],[11,"eq","","",148,[[["self"],["careteq"]],["bool"]]],[11,"eq","","",149,[[["self"],["colon"]],["bool"]]],[11,"eq","","",150,[[["self"],["colon2"]],["bool"]]],[11,"eq","","",151,[[["self"],["comma"]],["bool"]]],[11,"eq","","",152,[[["self"],["div"]],["bool"]]],[11,"eq","","",153,[[["self"],["diveq"]],["bool"]]],[11,"eq","","",154,[[["self"],["dollar"]],["bool"]]],[11,"eq","","",155,[[["self"],["dot"]],["bool"]]],[11,"eq","","",156,[[["self"],["dot2"]],["bool"]]],[11,"eq","","",157,[[["self"],["dot3"]],["bool"]]],[11,"eq","","",158,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","","",159,[[["self"],["eq"]],["bool"]]],[11,"eq","","",160,[[["self"],["eqeq"]],["bool"]]],[11,"eq","","",161,[[["self"],["ge"]],["bool"]]],[11,"eq","","",162,[[["self"],["gt"]],["bool"]]],[11,"eq","","",163,[[["self"],["le"]],["bool"]]],[11,"eq","","",164,[[["self"],["lt"]],["bool"]]],[11,"eq","","",165,[[["self"],["muleq"]],["bool"]]],[11,"eq","","",166,[[["self"],["ne"]],["bool"]]],[11,"eq","","",167,[[["self"],["or"]],["bool"]]],[11,"eq","","",168,[[["self"],["oreq"]],["bool"]]],[11,"eq","","",169,[[["self"],["oror"]],["bool"]]],[11,"eq","","",170,[[["self"],["pound"]],["bool"]]],[11,"eq","","",171,[[["self"],["question"]],["bool"]]],[11,"eq","","",172,[[["self"],["rarrow"]],["bool"]]],[11,"eq","","",173,[[["self"],["larrow"]],["bool"]]],[11,"eq","","",174,[[["self"],["rem"]],["bool"]]],[11,"eq","","",175,[[["self"],["remeq"]],["bool"]]],[11,"eq","","",176,[[["self"],["fatarrow"]],["bool"]]],[11,"eq","","",177,[[["self"],["semi"]],["bool"]]],[11,"eq","","",178,[[["self"],["shl"]],["bool"]]],[11,"eq","","",179,[[["self"],["shleq"]],["bool"]]],[11,"eq","","",180,[[["self"],["shr"]],["bool"]]],[11,"eq","","",181,[[["self"],["shreq"]],["bool"]]],[11,"eq","","",182,[[["self"],["star"]],["bool"]]],[11,"eq","","",183,[[["self"],["sub"]],["bool"]]],[11,"eq","","",184,[[["self"],["subeq"]],["bool"]]],[11,"eq","","",185,[[["self"],["tilde"]],["bool"]]],[11,"eq","","",186,[[["self"],["brace"]],["bool"]]],[11,"eq","","",187,[[["self"],["bracket"]],["bool"]]],[11,"eq","","",188,[[["self"],["paren"]],["bool"]]],[11,"eq","","",189,[[["self"],["group"]],["bool"]]],[11,"eq","syn","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",63,[[["self"],["attrstyle"]],["bool"]]],[11,"ne","","",63,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",64,[[["self"],["meta"]],["bool"]]],[11,"ne","","",64,[[["self"],["meta"]],["bool"]]],[11,"eq","","",1,[[["self"],["metalist"]],["bool"]]],[11,"ne","","",1,[[["self"],["metalist"]],["bool"]]],[11,"eq","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","","",65,[[["self"],["nestedmeta"]],["bool"]]],[11,"ne","","",65,[[["self"],["nestedmeta"]],["bool"]]],[11,"eq","","",6,[[["self"],["variant"]],["bool"]]],[11,"ne","","",6,[[["self"],["variant"]],["bool"]]],[11,"eq","","",66,[[["self"],["fields"]],["bool"]]],[11,"ne","","",66,[[["self"],["fields"]],["bool"]]],[11,"eq","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"ne","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"eq","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"ne","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"eq","","",3,[[["self"],["field"]],["bool"]]],[11,"ne","","",3,[[["self"],["field"]],["bool"]]],[11,"eq","","",67,[[["self"],["visibility"]],["bool"]]],[11,"ne","","",67,[[["self"],["visibility"]],["bool"]]],[11,"eq","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"ne","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"eq","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"ne","","",7,[[["self"],["viscrate"]],["bool"]]],[11,"eq","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"ne","","",9,[[["self"],["visrestricted"]],["bool"]]],[11,"eq","","",68,[[["self"],["expr"]],["bool"]]],[11,"ne","","",68,[[["self"],["expr"]],["bool"]]],[11,"eq","","",215,[[["self"],["exprbox"]],["bool"]]],[11,"ne","","",215,[[["self"],["exprbox"]],["bool"]]],[11,"eq","","",222,[[["self"],["exprinplace"]],["bool"]]],[11,"ne","","",222,[[["self"],["exprinplace"]],["bool"]]],[11,"eq","","",210,[[["self"],["exprarray"]],["bool"]]],[11,"ne","","",210,[[["self"],["exprarray"]],["bool"]]],[11,"eq","","",11,[[["self"],["exprcall"]],["bool"]]],[11,"ne","","",11,[[["self"],["exprcall"]],["bool"]]],[11,"eq","","",227,[[["self"],["exprmethodcall"]],["bool"]]],[11,"ne","","",227,[[["self"],["exprmethodcall"]],["bool"]]],[11,"eq","","",235,[[["self"],["exprtuple"]],["bool"]]],[11,"ne","","",235,[[["self"],["exprtuple"]],["bool"]]],[11,"eq","","",10,[[["self"],["exprbinary"]],["bool"]]],[11,"ne","","",10,[[["self"],["exprbinary"]],["bool"]]],[11,"eq","","",18,[[["self"],["exprunary"]],["bool"]]],[11,"ne","","",18,[[["self"],["exprunary"]],["bool"]]],[11,"eq","","",15,[[["self"],["exprlit"]],["bool"]]],[11,"ne","","",15,[[["self"],["exprlit"]],["bool"]]],[11,"eq","","",12,[[["self"],["exprcast"]],["bool"]]],[11,"ne","","",12,[[["self"],["exprcast"]],["bool"]]],[11,"eq","","",236,[[["self"],["exprtype"]],["bool"]]],[11,"ne","","",236,[[["self"],["exprtype"]],["bool"]]],[11,"eq","","",223,[[["self"],["exprlet"]],["bool"]]],[11,"ne","","",223,[[["self"],["exprlet"]],["bool"]]],[11,"eq","","",221,[[["self"],["exprif"]],["bool"]]],[11,"ne","","",221,[[["self"],["exprif"]],["bool"]]],[11,"eq","","",238,[[["self"],["exprwhile"]],["bool"]]],[11,"ne","","",238,[[["self"],["exprwhile"]],["bool"]]],[11,"eq","","",219,[[["self"],["exprforloop"]],["bool"]]],[11,"ne","","",219,[[["self"],["exprforloop"]],["bool"]]],[11,"eq","","",224,[[["self"],["exprloop"]],["bool"]]],[11,"ne","","",224,[[["self"],["exprloop"]],["bool"]]],[11,"eq","","",226,[[["self"],["exprmatch"]],["bool"]]],[11,"ne","","",226,[[["self"],["exprmatch"]],["bool"]]],[11,"eq","","",217,[[["self"],["exprclosure"]],["bool"]]],[11,"ne","","",217,[[["self"],["exprclosure"]],["bool"]]],[11,"eq","","",237,[[["self"],["exprunsafe"]],["bool"]]],[11,"ne","","",237,[[["self"],["exprunsafe"]],["bool"]]],[11,"eq","","",214,[[["self"],["exprblock"]],["bool"]]],[11,"ne","","",214,[[["self"],["exprblock"]],["bool"]]],[11,"eq","","",211,[[["self"],["exprassign"]],["bool"]]],[11,"ne","","",211,[[["self"],["exprassign"]],["bool"]]],[11,"eq","","",212,[[["self"],["exprassignop"]],["bool"]]],[11,"ne","","",212,[[["self"],["exprassignop"]],["bool"]]],[11,"eq","","",13,[[["self"],["exprfield"]],["bool"]]],[11,"ne","","",13,[[["self"],["exprfield"]],["bool"]]],[11,"eq","","",14,[[["self"],["exprindex"]],["bool"]]],[11,"ne","","",14,[[["self"],["exprindex"]],["bool"]]],[11,"eq","","",228,[[["self"],["exprrange"]],["bool"]]],[11,"ne","","",228,[[["self"],["exprrange"]],["bool"]]],[11,"eq","","",17,[[["self"],["exprpath"]],["bool"]]],[11,"ne","","",17,[[["self"],["exprpath"]],["bool"]]],[11,"eq","","",229,[[["self"],["exprreference"]],["bool"]]],[11,"ne","","",229,[[["self"],["exprreference"]],["bool"]]],[11,"eq","","",216,[[["self"],["exprbreak"]],["bool"]]],[11,"ne","","",216,[[["self"],["exprbreak"]],["bool"]]],[11,"eq","","",218,[[["self"],["exprcontinue"]],["bool"]]],[11,"ne","","",218,[[["self"],["exprcontinue"]],["bool"]]],[11,"eq","","",231,[[["self"],["exprreturn"]],["bool"]]],[11,"ne","","",231,[[["self"],["exprreturn"]],["bool"]]],[11,"eq","","",225,[[["self"],["exprmacro"]],["bool"]]],[11,"ne","","",225,[[["self"],["exprmacro"]],["bool"]]],[11,"eq","","",232,[[["self"],["exprstruct"]],["bool"]]],[11,"ne","","",232,[[["self"],["exprstruct"]],["bool"]]],[11,"eq","","",230,[[["self"],["exprrepeat"]],["bool"]]],[11,"ne","","",230,[[["self"],["exprrepeat"]],["bool"]]],[11,"eq","","",16,[[["self"],["exprparen"]],["bool"]]],[11,"ne","","",16,[[["self"],["exprparen"]],["bool"]]],[11,"eq","","",220,[[["self"],["exprgroup"]],["bool"]]],[11,"ne","","",220,[[["self"],["exprgroup"]],["bool"]]],[11,"eq","","",233,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",233,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",213,[[["self"],["exprasync"]],["bool"]]],[11,"ne","","",213,[[["self"],["exprasync"]],["bool"]]],[11,"eq","","",234,[[["self"],["exprtryblock"]],["bool"]]],[11,"ne","","",234,[[["self"],["exprtryblock"]],["bool"]]],[11,"eq","","",239,[[["self"],["expryield"]],["bool"]]],[11,"ne","","",239,[[["self"],["expryield"]],["bool"]]],[11,"eq","","",19,[[["self"],["self"]],["bool"]]],[11,"eq","","",69,[[["self"],["member"]],["bool"]]],[11,"ne","","",69,[[["self"],["member"]],["bool"]]],[11,"eq","","",20,[[["self"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["generics"]],["bool"]]],[11,"ne","","",23,[[["self"],["generics"]],["bool"]]],[11,"eq","","",70,[[["self"],["genericparam"]],["bool"]]],[11,"ne","","",70,[[["self"],["genericparam"]],["bool"]]],[11,"eq","","",29,[[["self"],["typeparam"]],["bool"]]],[11,"ne","","",29,[[["self"],["typeparam"]],["bool"]]],[11,"eq","","",24,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",24,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","","",22,[[["self"],["constparam"]],["bool"]]],[11,"ne","","",22,[[["self"],["constparam"]],["bool"]]],[11,"eq","","",240,[[["self"],["implgenerics"]],["bool"]]],[11,"ne","","",240,[[["self"],["implgenerics"]],["bool"]]],[11,"eq","","",190,[[["self"],["typegenerics"]],["bool"]]],[11,"ne","","",190,[[["self"],["typegenerics"]],["bool"]]],[11,"eq","","",241,[[["self"],["turbofish"]],["bool"]]],[11,"ne","","",241,[[["self"],["turbofish"]],["bool"]]],[11,"eq","","",21,[[["self"],["boundlifetimes"]],["bool"]]],[11,"ne","","",21,[[["self"],["boundlifetimes"]],["bool"]]],[11,"eq","","",72,[[["self"],["typeparambound"]],["bool"]]],[11,"ne","","",72,[[["self"],["typeparambound"]],["bool"]]],[11,"eq","","",28,[[["self"],["traitbound"]],["bool"]]],[11,"ne","","",28,[[["self"],["traitbound"]],["bool"]]],[11,"eq","","",71,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"ne","","",71,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"eq","","",30,[[["self"],["whereclause"]],["bool"]]],[11,"ne","","",30,[[["self"],["whereclause"]],["bool"]]],[11,"eq","","",73,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",73,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","","",27,[[["self"],["predicatetype"]],["bool"]]],[11,"ne","","",27,[[["self"],["predicatetype"]],["bool"]]],[11,"eq","","",26,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",26,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",25,[[["self"],["predicateeq"]],["bool"]]],[11,"ne","","",25,[[["self"],["predicateeq"]],["bool"]]],[11,"eq","","",31,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",76,[[["self"],["lit"]],["bool"]]],[11,"ne","","",76,[[["self"],["lit"]],["bool"]]],[11,"eq","","",191,[[["self"],["self"]],["bool"]]],[11,"eq","","",192,[[["self"],["self"]],["bool"]]],[11,"eq","","",193,[[["self"],["self"]],["bool"]]],[11,"eq","","",194,[[["self"],["self"]],["bool"]]],[11,"eq","","",195,[[["self"],["self"]],["bool"]]],[11,"eq","","",196,[[["self"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",77,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",75,[[["self"],["intsuffix"]],["bool"]]],[11,"eq","","",74,[[["self"],["floatsuffix"]],["bool"]]],[11,"eq","","",78,[[["self"],["macrodelimiter"]],["bool"]]],[11,"ne","","",78,[[["self"],["macrodelimiter"]],["bool"]]],[11,"eq","","",34,[[["self"],["self"]],["bool"]]],[11,"eq","","",38,[[["self"],["deriveinput"]],["bool"]]],[11,"ne","","",38,[[["self"],["deriveinput"]],["bool"]]],[11,"eq","","",79,[[["self"],["data"]],["bool"]]],[11,"ne","","",79,[[["self"],["data"]],["bool"]]],[11,"eq","","",36,[[["self"],["datastruct"]],["bool"]]],[11,"ne","","",36,[[["self"],["datastruct"]],["bool"]]],[11,"eq","","",35,[[["self"],["dataenum"]],["bool"]]],[11,"ne","","",35,[[["self"],["dataenum"]],["bool"]]],[11,"eq","","",37,[[["self"],["dataunion"]],["bool"]]],[11,"ne","","",37,[[["self"],["dataunion"]],["bool"]]],[11,"eq","","",80,[[["self"],["binop"]],["bool"]]],[11,"ne","","",80,[[["self"],["binop"]],["bool"]]],[11,"eq","","",81,[[["self"],["unop"]],["bool"]]],[11,"ne","","",81,[[["self"],["unop"]],["bool"]]],[11,"eq","","",84,[[["self"],["type"]],["bool"]]],[11,"ne","","",84,[[["self"],["type"]],["bool"]]],[11,"eq","","",52,[[["self"],["typeslice"]],["bool"]]],[11,"ne","","",52,[[["self"],["typeslice"]],["bool"]]],[11,"eq","","",41,[[["self"],["typearray"]],["bool"]]],[11,"ne","","",41,[[["self"],["typearray"]],["bool"]]],[11,"eq","","",50,[[["self"],["typeptr"]],["bool"]]],[11,"ne","","",50,[[["self"],["typeptr"]],["bool"]]],[11,"eq","","",51,[[["self"],["typereference"]],["bool"]]],[11,"ne","","",51,[[["self"],["typereference"]],["bool"]]],[11,"eq","","",42,[[["self"],["typebarefn"]],["bool"]]],[11,"ne","","",42,[[["self"],["typebarefn"]],["bool"]]],[11,"eq","","",47,[[["self"],["typenever"]],["bool"]]],[11,"ne","","",47,[[["self"],["typenever"]],["bool"]]],[11,"eq","","",54,[[["self"],["typetuple"]],["bool"]]],[11,"ne","","",54,[[["self"],["typetuple"]],["bool"]]],[11,"eq","","",49,[[["self"],["typepath"]],["bool"]]],[11,"ne","","",49,[[["self"],["typepath"]],["bool"]]],[11,"eq","","",53,[[["self"],["typetraitobject"]],["bool"]]],[11,"ne","","",53,[[["self"],["typetraitobject"]],["bool"]]],[11,"eq","","",44,[[["self"],["typeimpltrait"]],["bool"]]],[11,"ne","","",44,[[["self"],["typeimpltrait"]],["bool"]]],[11,"eq","","",48,[[["self"],["typeparen"]],["bool"]]],[11,"ne","","",48,[[["self"],["typeparen"]],["bool"]]],[11,"eq","","",43,[[["self"],["typegroup"]],["bool"]]],[11,"ne","","",43,[[["self"],["typegroup"]],["bool"]]],[11,"eq","","",45,[[["self"],["typeinfer"]],["bool"]]],[11,"ne","","",45,[[["self"],["typeinfer"]],["bool"]]],[11,"eq","","",46,[[["self"],["typemacro"]],["bool"]]],[11,"ne","","",46,[[["self"],["typemacro"]],["bool"]]],[11,"eq","","",55,[[["self"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["abi"]],["bool"]]],[11,"ne","","",39,[[["self"],["abi"]],["bool"]]],[11,"eq","","",40,[[["self"],["barefnarg"]],["bool"]]],[11,"ne","","",40,[[["self"],["barefnarg"]],["bool"]]],[11,"eq","","",82,[[["self"],["barefnargname"]],["bool"]]],[11,"ne","","",82,[[["self"],["barefnargname"]],["bool"]]],[11,"eq","","",83,[[["self"],["returntype"]],["bool"]]],[11,"ne","","",83,[[["self"],["returntype"]],["bool"]]],[11,"eq","","",60,[[["self"],["path"]],["bool"]]],[11,"ne","","",60,[[["self"],["path"]],["bool"]]],[11,"eq","","",61,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",61,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",86,[[["self"],["patharguments"]],["bool"]]],[11,"ne","","",86,[[["self"],["patharguments"]],["bool"]]],[11,"eq","","",85,[[["self"],["genericargument"]],["bool"]]],[11,"ne","","",85,[[["self"],["genericargument"]],["bool"]]],[11,"eq","","",56,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"ne","","",56,[[["self"],["anglebracketedgenericarguments"]],["bool"]]],[11,"eq","","",57,[[["self"],["binding"]],["bool"]]],[11,"ne","","",57,[[["self"],["binding"]],["bool"]]],[11,"eq","","",58,[[["self"],["constraint"]],["bool"]]],[11,"ne","","",58,[[["self"],["constraint"]],["bool"]]],[11,"eq","","",59,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"ne","","",59,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"eq","","",62,[[["self"],["qself"]],["bool"]]],[11,"ne","","",62,[[["self"],["qself"]],["bool"]]],[11,"eq","syn::buffer","",198,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",198,[[["self"],["cursor"]],["bool"]]],[11,"eq","syn::punctuated","",201,[[["self"],["punctuated"]],["bool"]]],[11,"ne","","",201,[[["self"],["punctuated"]],["bool"]]],[11,"into_iter","","",201,N],[11,"default","syn::token","",87,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",97,[[],["self"]]],[11,"default","","",98,[[],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"default","","",101,[[],["self"]]],[11,"default","","",102,[[],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"default","","",104,[[],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"default","","",106,[[],["self"]]],[11,"default","","",107,[[],["self"]]],[11,"default","","",108,[[],["self"]]],[11,"default","","",109,[[],["self"]]],[11,"default","","",110,[[],["self"]]],[11,"default","","",111,[[],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"default","","",116,[[],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"default","","",131,[[],["self"]]],[11,"default","","",132,[[],["self"]]],[11,"default","","",133,[[],["self"]]],[11,"default","","",134,[[],["self"]]],[11,"default","","",135,[[],["self"]]],[11,"default","","",136,[[],["self"]]],[11,"default","","",137,[[],["self"]]],[11,"default","","",138,[[],["self"]]],[11,"default","","",139,[[],["self"]]],[11,"default","","",140,[[],["self"]]],[11,"default","","",141,[[],["self"]]],[11,"default","","",142,[[],["self"]]],[11,"default","","",143,[[],["self"]]],[11,"default","","",144,[[],["self"]]],[11,"default","","",145,[[],["self"]]],[11,"default","","",146,[[],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"default","","",153,[[],["self"]]],[11,"default","","",154,[[],["self"]]],[11,"default","","",155,[[],["self"]]],[11,"default","","",156,[[],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"default","","",159,[[],["self"]]],[11,"default","","",160,[[],["self"]]],[11,"default","","",161,[[],["self"]]],[11,"default","","",162,[[],["self"]]],[11,"default","","",163,[[],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"default","","",174,[[],["self"]]],[11,"default","","",175,[[],["self"]]],[11,"default","","",176,[[],["self"]]],[11,"default","","",177,[[],["self"]]],[11,"default","","",178,[[],["self"]]],[11,"default","","",179,[[],["self"]]],[11,"default","","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","","",185,[[],["self"]]],[11,"default","","",186,[[],["self"]]],[11,"default","","",187,[[],["self"]]],[11,"default","","",188,[[],["self"]]],[11,"default","","",189,[[],["self"]]],[11,"default","syn","",23,[[],["generics"]]],[11,"default","","",21,[[],["boundlifetimes"]]],[11,"default","","",86,[[],["self"]]],[11,"default","syn::punctuated","",201,[[],["self"]]],[11,"cmp","syn","",31,[[["self"],["lifetime"]],["ordering"]]],[11,"clone","syn::token","",87,[[["self"]],["underscore"]]],[11,"clone","","",88,[[["self"]],["abstract"]]],[11,"clone","","",89,[[["self"]],["as"]]],[11,"clone","","",90,[[["self"]],["async"]]],[11,"clone","","",91,[[["self"]],["auto"]]],[11,"clone","","",92,[[["self"]],["become"]]],[11,"clone","","",93,[[["self"]],["box"]]],[11,"clone","","",94,[[["self"]],["break"]]],[11,"clone","","",95,[[["self"]],["capself"]]],[11,"clone","","",96,[[["self"]],["const"]]],[11,"clone","","",97,[[["self"]],["continue"]]],[11,"clone","","",98,[[["self"]],["crate"]]],[11,"clone","","",99,[[["self"]],["default"]]],[11,"clone","","",100,[[["self"]],["do"]]],[11,"clone","","",101,[[["self"]],["dyn"]]],[11,"clone","","",102,[[["self"]],["else"]]],[11,"clone","","",103,[[["self"]],["enum"]]],[11,"clone","","",104,[[["self"]],["existential"]]],[11,"clone","","",105,[[["self"]],["extern"]]],[11,"clone","","",106,[[["self"]],["final"]]],[11,"clone","","",107,[[["self"]],["fn"]]],[11,"clone","","",108,[[["self"]],["for"]]],[11,"clone","","",109,[[["self"]],["if"]]],[11,"clone","","",110,[[["self"]],["impl"]]],[11,"clone","","",111,[[["self"]],["in"]]],[11,"clone","","",112,[[["self"]],["let"]]],[11,"clone","","",113,[[["self"]],["loop"]]],[11,"clone","","",114,[[["self"]],["macro"]]],[11,"clone","","",115,[[["self"]],["match"]]],[11,"clone","","",116,[[["self"]],["mod"]]],[11,"clone","","",117,[[["self"]],["move"]]],[11,"clone","","",118,[[["self"]],["mut"]]],[11,"clone","","",119,[[["self"]],["override"]]],[11,"clone","","",120,[[["self"]],["priv"]]],[11,"clone","","",121,[[["self"]],["pub"]]],[11,"clone","","",122,[[["self"]],["ref"]]],[11,"clone","","",123,[[["self"]],["return"]]],[11,"clone","","",124,[[["self"]],["self_"]]],[11,"clone","","",125,[[["self"]],["static"]]],[11,"clone","","",126,[[["self"]],["struct"]]],[11,"clone","","",127,[[["self"]],["super"]]],[11,"clone","","",128,[[["self"]],["trait"]]],[11,"clone","","",129,[[["self"]],["try"]]],[11,"clone","","",130,[[["self"]],["type"]]],[11,"clone","","",131,[[["self"]],["typeof"]]],[11,"clone","","",132,[[["self"]],["union"]]],[11,"clone","","",133,[[["self"]],["unsafe"]]],[11,"clone","","",134,[[["self"]],["unsized"]]],[11,"clone","","",135,[[["self"]],["use"]]],[11,"clone","","",136,[[["self"]],["virtual"]]],[11,"clone","","",137,[[["self"]],["where"]]],[11,"clone","","",138,[[["self"]],["while"]]],[11,"clone","","",139,[[["self"]],["yield"]]],[11,"clone","","",140,[[["self"]],["add"]]],[11,"clone","","",141,[[["self"]],["addeq"]]],[11,"clone","","",142,[[["self"]],["and"]]],[11,"clone","","",143,[[["self"]],["andand"]]],[11,"clone","","",144,[[["self"]],["andeq"]]],[11,"clone","","",145,[[["self"]],["at"]]],[11,"clone","","",146,[[["self"]],["bang"]]],[11,"clone","","",147,[[["self"]],["caret"]]],[11,"clone","","",148,[[["self"]],["careteq"]]],[11,"clone","","",149,[[["self"]],["colon"]]],[11,"clone","","",150,[[["self"]],["colon2"]]],[11,"clone","","",151,[[["self"]],["comma"]]],[11,"clone","","",152,[[["self"]],["div"]]],[11,"clone","","",153,[[["self"]],["diveq"]]],[11,"clone","","",154,[[["self"]],["dollar"]]],[11,"clone","","",155,[[["self"]],["dot"]]],[11,"clone","","",156,[[["self"]],["dot2"]]],[11,"clone","","",157,[[["self"]],["dot3"]]],[11,"clone","","",158,[[["self"]],["dotdoteq"]]],[11,"clone","","",159,[[["self"]],["eq"]]],[11,"clone","","",160,[[["self"]],["eqeq"]]],[11,"clone","","",161,[[["self"]],["ge"]]],[11,"clone","","",162,[[["self"]],["gt"]]],[11,"clone","","",163,[[["self"]],["le"]]],[11,"clone","","",164,[[["self"]],["lt"]]],[11,"clone","","",165,[[["self"]],["muleq"]]],[11,"clone","","",166,[[["self"]],["ne"]]],[11,"clone","","",167,[[["self"]],["or"]]],[11,"clone","","",168,[[["self"]],["oreq"]]],[11,"clone","","",169,[[["self"]],["oror"]]],[11,"clone","","",170,[[["self"]],["pound"]]],[11,"clone","","",171,[[["self"]],["question"]]],[11,"clone","","",172,[[["self"]],["rarrow"]]],[11,"clone","","",173,[[["self"]],["larrow"]]],[11,"clone","","",174,[[["self"]],["rem"]]],[11,"clone","","",175,[[["self"]],["remeq"]]],[11,"clone","","",176,[[["self"]],["fatarrow"]]],[11,"clone","","",177,[[["self"]],["semi"]]],[11,"clone","","",178,[[["self"]],["shl"]]],[11,"clone","","",179,[[["self"]],["shleq"]]],[11,"clone","","",180,[[["self"]],["shr"]]],[11,"clone","","",181,[[["self"]],["shreq"]]],[11,"clone","","",182,[[["self"]],["star"]]],[11,"clone","","",183,[[["self"]],["sub"]]],[11,"clone","","",184,[[["self"]],["subeq"]]],[11,"clone","","",185,[[["self"]],["tilde"]]],[11,"clone","","",186,[[["self"]],["brace"]]],[11,"clone","","",187,[[["self"]],["bracket"]]],[11,"clone","","",188,[[["self"]],["paren"]]],[11,"clone","","",189,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",63,[[["self"]],["attrstyle"]]],[11,"clone","","",64,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",65,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",66,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",67,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",68,[[["self"]],["expr"]]],[11,"clone","","",215,[[["self"]],["exprbox"]]],[11,"clone","","",222,[[["self"]],["exprinplace"]]],[11,"clone","","",210,[[["self"]],["exprarray"]]],[11,"clone","","",11,[[["self"]],["exprcall"]]],[11,"clone","","",227,[[["self"]],["exprmethodcall"]]],[11,"clone","","",235,[[["self"]],["exprtuple"]]],[11,"clone","","",10,[[["self"]],["exprbinary"]]],[11,"clone","","",18,[[["self"]],["exprunary"]]],[11,"clone","","",15,[[["self"]],["exprlit"]]],[11,"clone","","",12,[[["self"]],["exprcast"]]],[11,"clone","","",236,[[["self"]],["exprtype"]]],[11,"clone","","",223,[[["self"]],["exprlet"]]],[11,"clone","","",221,[[["self"]],["exprif"]]],[11,"clone","","",238,[[["self"]],["exprwhile"]]],[11,"clone","","",219,[[["self"]],["exprforloop"]]],[11,"clone","","",224,[[["self"]],["exprloop"]]],[11,"clone","","",226,[[["self"]],["exprmatch"]]],[11,"clone","","",217,[[["self"]],["exprclosure"]]],[11,"clone","","",237,[[["self"]],["exprunsafe"]]],[11,"clone","","",214,[[["self"]],["exprblock"]]],[11,"clone","","",211,[[["self"]],["exprassign"]]],[11,"clone","","",212,[[["self"]],["exprassignop"]]],[11,"clone","","",13,[[["self"]],["exprfield"]]],[11,"clone","","",14,[[["self"]],["exprindex"]]],[11,"clone","","",228,[[["self"]],["exprrange"]]],[11,"clone","","",17,[[["self"]],["exprpath"]]],[11,"clone","","",229,[[["self"]],["exprreference"]]],[11,"clone","","",216,[[["self"]],["exprbreak"]]],[11,"clone","","",218,[[["self"]],["exprcontinue"]]],[11,"clone","","",231,[[["self"]],["exprreturn"]]],[11,"clone","","",225,[[["self"]],["exprmacro"]]],[11,"clone","","",232,[[["self"]],["exprstruct"]]],[11,"clone","","",230,[[["self"]],["exprrepeat"]]],[11,"clone","","",16,[[["self"]],["exprparen"]]],[11,"clone","","",220,[[["self"]],["exprgroup"]]],[11,"clone","","",233,[[["self"]],["exprtry"]]],[11,"clone","","",213,[[["self"]],["exprasync"]]],[11,"clone","","",234,[[["self"]],["exprtryblock"]]],[11,"clone","","",239,[[["self"]],["expryield"]]],[11,"clone","","",19,[[["self"]],["exprverbatim"]]],[11,"clone","","",69,[[["self"]],["member"]]],[11,"clone","","",20,[[["self"]],["index"]]],[11,"clone","","",23,[[["self"]],["generics"]]],[11,"clone","","",70,[[["self"]],["genericparam"]]],[11,"clone","","",29,[[["self"]],["typeparam"]]],[11,"clone","","",24,[[["self"]],["lifetimedef"]]],[11,"clone","","",22,[[["self"]],["constparam"]]],[11,"clone","","",240,[[["self"]],["implgenerics"]]],[11,"clone","","",190,[[["self"]],["typegenerics"]]],[11,"clone","","",241,[[["self"]],["turbofish"]]],[11,"clone","","",21,[[["self"]],["boundlifetimes"]]],[11,"clone","","",72,[[["self"]],["typeparambound"]]],[11,"clone","","",28,[[["self"]],["traitbound"]]],[11,"clone","","",71,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",30,[[["self"]],["whereclause"]]],[11,"clone","","",73,[[["self"]],["wherepredicate"]]],[11,"clone","","",27,[[["self"]],["predicatetype"]]],[11,"clone","","",26,[[["self"]],["predicatelifetime"]]],[11,"clone","","",25,[[["self"]],["predicateeq"]]],[11,"clone","","",31,[[["self"]],["lifetime"]]],[11,"clone","","",76,[[["self"]],["lit"]]],[11,"clone","","",191,[[["self"]],["litstr"]]],[11,"clone","","",192,[[["self"]],["litbytestr"]]],[11,"clone","","",193,[[["self"]],["litbyte"]]],[11,"clone","","",194,[[["self"]],["litchar"]]],[11,"clone","","",195,[[["self"]],["litint"]]],[11,"clone","","",196,[[["self"]],["litfloat"]]],[11,"clone","","",32,[[["self"]],["litbool"]]],[11,"clone","","",33,[[["self"]],["litverbatim"]]],[11,"clone","","",77,[[["self"]],["strstyle"]]],[11,"clone","","",75,[[["self"]],["intsuffix"]]],[11,"clone","","",74,[[["self"]],["floatsuffix"]]],[11,"clone","","",34,[[["self"]],["macro"]]],[11,"clone","","",78,[[["self"]],["macrodelimiter"]]],[11,"clone","","",38,[[["self"]],["deriveinput"]]],[11,"clone","","",79,[[["self"]],["data"]]],[11,"clone","","",36,[[["self"]],["datastruct"]]],[11,"clone","","",35,[[["self"]],["dataenum"]]],[11,"clone","","",37,[[["self"]],["dataunion"]]],[11,"clone","","",80,[[["self"]],["binop"]]],[11,"clone","","",81,[[["self"]],["unop"]]],[11,"clone","","",84,[[["self"]],["type"]]],[11,"clone","","",52,[[["self"]],["typeslice"]]],[11,"clone","","",41,[[["self"]],["typearray"]]],[11,"clone","","",50,[[["self"]],["typeptr"]]],[11,"clone","","",51,[[["self"]],["typereference"]]],[11,"clone","","",42,[[["self"]],["typebarefn"]]],[11,"clone","","",47,[[["self"]],["typenever"]]],[11,"clone","","",54,[[["self"]],["typetuple"]]],[11,"clone","","",49,[[["self"]],["typepath"]]],[11,"clone","","",53,[[["self"]],["typetraitobject"]]],[11,"clone","","",44,[[["self"]],["typeimpltrait"]]],[11,"clone","","",48,[[["self"]],["typeparen"]]],[11,"clone","","",43,[[["self"]],["typegroup"]]],[11,"clone","","",45,[[["self"]],["typeinfer"]]],[11,"clone","","",46,[[["self"]],["typemacro"]]],[11,"clone","","",55,[[["self"]],["typeverbatim"]]],[11,"clone","","",39,[[["self"]],["abi"]]],[11,"clone","","",40,[[["self"]],["barefnarg"]]],[11,"clone","","",82,[[["self"]],["barefnargname"]]],[11,"clone","","",83,[[["self"]],["returntype"]]],[11,"clone","","",60,[[["self"]],["path"]]],[11,"clone","","",61,[[["self"]],["pathsegment"]]],[11,"clone","","",86,[[["self"]],["patharguments"]]],[11,"clone","","",85,[[["self"]],["genericargument"]]],[11,"clone","","",56,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",57,[[["self"]],["binding"]]],[11,"clone","","",58,[[["self"]],["constraint"]]],[11,"clone","","",59,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",62,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",198,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",201,[[["self"]],["punctuated"]]],[11,"clone","syn::parse","",206,[[["self"]],["stepcursor"]]],[11,"clone","","",208,[[["self"]],["error"]]],[11,"extend","syn::punctuated","",201,[[["self"],["i"]]]],[11,"extend","","",201,[[["self"],["i"]]]],[11,"from","syn","",209,[[["self_"]],["ident"]]],[11,"from","","",209,[[["capself"]],["ident"]]],[11,"from","","",209,[[["super"]],["ident"]]],[11,"from","","",209,[[["crate"]],["ident"]]],[11,"from","","",209,[[["extern"]],["ident"]]],[11,"from","","",209,[[["underscore"]],["ident"]]],[11,"from","","",64,[[["ident"]],["meta"]]],[11,"from","","",64,[[["metalist"]],["meta"]]],[11,"from","","",64,[[["metanamevalue"]],["meta"]]],[11,"from","","",65,[[["meta"]],["nestedmeta"]]],[11,"from","","",65,[[["lit"]],["nestedmeta"]]],[11,"from","","",66,[[["fieldsnamed"]],["fields"]]],[11,"from","","",66,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",67,[[["vispublic"]],["visibility"]]],[11,"from","","",67,[[["viscrate"]],["visibility"]]],[11,"from","","",67,[[["visrestricted"]],["visibility"]]],[11,"from","","",68,[[["exprbox"]],["expr"]]],[11,"from","","",68,[[["exprinplace"]],["expr"]]],[11,"from","","",68,[[["exprarray"]],["expr"]]],[11,"from","","",68,[[["exprcall"]],["expr"]]],[11,"from","","",68,[[["exprmethodcall"]],["expr"]]],[11,"from","","",68,[[["exprtuple"]],["expr"]]],[11,"from","","",68,[[["exprbinary"]],["expr"]]],[11,"from","","",68,[[["exprunary"]],["expr"]]],[11,"from","","",68,[[["exprlit"]],["expr"]]],[11,"from","","",68,[[["exprcast"]],["expr"]]],[11,"from","","",68,[[["exprtype"]],["expr"]]],[11,"from","","",68,[[["exprlet"]],["expr"]]],[11,"from","","",68,[[["exprif"]],["expr"]]],[11,"from","","",68,[[["exprwhile"]],["expr"]]],[11,"from","","",68,[[["exprforloop"]],["expr"]]],[11,"from","","",68,[[["exprloop"]],["expr"]]],[11,"from","","",68,[[["exprmatch"]],["expr"]]],[11,"from","","",68,[[["exprclosure"]],["expr"]]],[11,"from","","",68,[[["exprunsafe"]],["expr"]]],[11,"from","","",68,[[["exprblock"]],["expr"]]],[11,"from","","",68,[[["exprassign"]],["expr"]]],[11,"from","","",68,[[["exprassignop"]],["expr"]]],[11,"from","","",68,[[["exprfield"]],["expr"]]],[11,"from","","",68,[[["exprindex"]],["expr"]]],[11,"from","","",68,[[["exprrange"]],["expr"]]],[11,"from","","",68,[[["exprpath"]],["expr"]]],[11,"from","","",68,[[["exprreference"]],["expr"]]],[11,"from","","",68,[[["exprbreak"]],["expr"]]],[11,"from","","",68,[[["exprcontinue"]],["expr"]]],[11,"from","","",68,[[["exprreturn"]],["expr"]]],[11,"from","","",68,[[["exprmacro"]],["expr"]]],[11,"from","","",68,[[["exprstruct"]],["expr"]]],[11,"from","","",68,[[["exprrepeat"]],["expr"]]],[11,"from","","",68,[[["exprparen"]],["expr"]]],[11,"from","","",68,[[["exprgroup"]],["expr"]]],[11,"from","","",68,[[["exprtry"]],["expr"]]],[11,"from","","",68,[[["exprasync"]],["expr"]]],[11,"from","","",68,[[["exprtryblock"]],["expr"]]],[11,"from","","",68,[[["expryield"]],["expr"]]],[11,"from","","",68,[[["exprverbatim"]],["expr"]]],[11,"from","","",20,[[["usize"]],["index"]]],[11,"from","","",70,[[["typeparam"]],["genericparam"]]],[11,"from","","",70,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",70,[[["constparam"]],["genericparam"]]],[11,"from","","",29,[[["ident"]],["self"]]],[11,"from","","",72,[[["traitbound"]],["typeparambound"]]],[11,"from","","",72,[[["lifetime"]],["typeparambound"]]],[11,"from","","",73,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",73,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",73,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",76,[[["litstr"]],["lit"]]],[11,"from","","",76,[[["litbytestr"]],["lit"]]],[11,"from","","",76,[[["litbyte"]],["lit"]]],[11,"from","","",76,[[["litchar"]],["lit"]]],[11,"from","","",76,[[["litint"]],["lit"]]],[11,"from","","",76,[[["litfloat"]],["lit"]]],[11,"from","","",76,[[["litbool"]],["lit"]]],[11,"from","","",76,[[["litverbatim"]],["lit"]]],[11,"from","","",79,[[["datastruct"]],["data"]]],[11,"from","","",79,[[["dataenum"]],["data"]]],[11,"from","","",79,[[["dataunion"]],["data"]]],[11,"from","","",84,[[["typeslice"]],["type"]]],[11,"from","","",84,[[["typearray"]],["type"]]],[11,"from","","",84,[[["typeptr"]],["type"]]],[11,"from","","",84,[[["typereference"]],["type"]]],[11,"from","","",84,[[["typebarefn"]],["type"]]],[11,"from","","",84,[[["typenever"]],["type"]]],[11,"from","","",84,[[["typetuple"]],["type"]]],[11,"from","","",84,[[["typepath"]],["type"]]],[11,"from","","",84,[[["typetraitobject"]],["type"]]],[11,"from","","",84,[[["typeimpltrait"]],["type"]]],[11,"from","","",84,[[["typeparen"]],["type"]]],[11,"from","","",84,[[["typegroup"]],["type"]]],[11,"from","","",84,[[["typeinfer"]],["type"]]],[11,"from","","",84,[[["typemacro"]],["type"]]],[11,"from","","",84,[[["typeverbatim"]],["type"]]],[11,"from","","",60,[[["t"]],["self"]]],[11,"from","","",61,[[["t"]],["self"]]],[11,"from","syn::parse","",208,[[["lexerror"]],["self"]]],[11,"drop","","",207,[[["self"]]]],[11,"partial_cmp","syn","",31,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"fmt","syn::token","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",156,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",159,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",165,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",167,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",169,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",171,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",172,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",173,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",174,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",175,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",176,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",177,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",178,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",179,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",180,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",181,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",182,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",183,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",184,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",185,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",186,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",187,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",188,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",189,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",222,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",210,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",227,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",235,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",223,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",221,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",238,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",219,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",224,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",226,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",217,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",237,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",211,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",212,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",228,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",229,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",216,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",218,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",231,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",225,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",232,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",233,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",213,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",234,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",239,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",190,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",191,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",192,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",193,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::punctuated","",201,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",208,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","syn::parse","",208,[[["self"],["formatter"]],["result"]]],[11,"hash","syn::token","",87,[[["self"],["h"]]]],[11,"hash","","",88,[[["self"],["h"]]]],[11,"hash","","",89,[[["self"],["h"]]]],[11,"hash","","",90,[[["self"],["h"]]]],[11,"hash","","",91,[[["self"],["h"]]]],[11,"hash","","",92,[[["self"],["h"]]]],[11,"hash","","",93,[[["self"],["h"]]]],[11,"hash","","",94,[[["self"],["h"]]]],[11,"hash","","",95,[[["self"],["h"]]]],[11,"hash","","",96,[[["self"],["h"]]]],[11,"hash","","",97,[[["self"],["h"]]]],[11,"hash","","",98,[[["self"],["h"]]]],[11,"hash","","",99,[[["self"],["h"]]]],[11,"hash","","",100,[[["self"],["h"]]]],[11,"hash","","",101,[[["self"],["h"]]]],[11,"hash","","",102,[[["self"],["h"]]]],[11,"hash","","",103,[[["self"],["h"]]]],[11,"hash","","",104,[[["self"],["h"]]]],[11,"hash","","",105,[[["self"],["h"]]]],[11,"hash","","",106,[[["self"],["h"]]]],[11,"hash","","",107,[[["self"],["h"]]]],[11,"hash","","",108,[[["self"],["h"]]]],[11,"hash","","",109,[[["self"],["h"]]]],[11,"hash","","",110,[[["self"],["h"]]]],[11,"hash","","",111,[[["self"],["h"]]]],[11,"hash","","",112,[[["self"],["h"]]]],[11,"hash","","",113,[[["self"],["h"]]]],[11,"hash","","",114,[[["self"],["h"]]]],[11,"hash","","",115,[[["self"],["h"]]]],[11,"hash","","",116,[[["self"],["h"]]]],[11,"hash","","",117,[[["self"],["h"]]]],[11,"hash","","",118,[[["self"],["h"]]]],[11,"hash","","",119,[[["self"],["h"]]]],[11,"hash","","",120,[[["self"],["h"]]]],[11,"hash","","",121,[[["self"],["h"]]]],[11,"hash","","",122,[[["self"],["h"]]]],[11,"hash","","",123,[[["self"],["h"]]]],[11,"hash","","",124,[[["self"],["h"]]]],[11,"hash","","",125,[[["self"],["h"]]]],[11,"hash","","",126,[[["self"],["h"]]]],[11,"hash","","",127,[[["self"],["h"]]]],[11,"hash","","",128,[[["self"],["h"]]]],[11,"hash","","",129,[[["self"],["h"]]]],[11,"hash","","",130,[[["self"],["h"]]]],[11,"hash","","",131,[[["self"],["h"]]]],[11,"hash","","",132,[[["self"],["h"]]]],[11,"hash","","",133,[[["self"],["h"]]]],[11,"hash","","",134,[[["self"],["h"]]]],[11,"hash","","",135,[[["self"],["h"]]]],[11,"hash","","",136,[[["self"],["h"]]]],[11,"hash","","",137,[[["self"],["h"]]]],[11,"hash","","",138,[[["self"],["h"]]]],[11,"hash","","",139,[[["self"],["h"]]]],[11,"hash","","",140,[[["self"],["h"]]]],[11,"hash","","",141,[[["self"],["h"]]]],[11,"hash","","",142,[[["self"],["h"]]]],[11,"hash","","",143,[[["self"],["h"]]]],[11,"hash","","",144,[[["self"],["h"]]]],[11,"hash","","",145,[[["self"],["h"]]]],[11,"hash","","",146,[[["self"],["h"]]]],[11,"hash","","",147,[[["self"],["h"]]]],[11,"hash","","",148,[[["self"],["h"]]]],[11,"hash","","",149,[[["self"],["h"]]]],[11,"hash","","",150,[[["self"],["h"]]]],[11,"hash","","",151,[[["self"],["h"]]]],[11,"hash","","",152,[[["self"],["h"]]]],[11,"hash","","",153,[[["self"],["h"]]]],[11,"hash","","",154,[[["self"],["h"]]]],[11,"hash","","",155,[[["self"],["h"]]]],[11,"hash","","",156,[[["self"],["h"]]]],[11,"hash","","",157,[[["self"],["h"]]]],[11,"hash","","",158,[[["self"],["h"]]]],[11,"hash","","",159,[[["self"],["h"]]]],[11,"hash","","",160,[[["self"],["h"]]]],[11,"hash","","",161,[[["self"],["h"]]]],[11,"hash","","",162,[[["self"],["h"]]]],[11,"hash","","",163,[[["self"],["h"]]]],[11,"hash","","",164,[[["self"],["h"]]]],[11,"hash","","",165,[[["self"],["h"]]]],[11,"hash","","",166,[[["self"],["h"]]]],[11,"hash","","",167,[[["self"],["h"]]]],[11,"hash","","",168,[[["self"],["h"]]]],[11,"hash","","",169,[[["self"],["h"]]]],[11,"hash","","",170,[[["self"],["h"]]]],[11,"hash","","",171,[[["self"],["h"]]]],[11,"hash","","",172,[[["self"],["h"]]]],[11,"hash","","",173,[[["self"],["h"]]]],[11,"hash","","",174,[[["self"],["h"]]]],[11,"hash","","",175,[[["self"],["h"]]]],[11,"hash","","",176,[[["self"],["h"]]]],[11,"hash","","",177,[[["self"],["h"]]]],[11,"hash","","",178,[[["self"],["h"]]]],[11,"hash","","",179,[[["self"],["h"]]]],[11,"hash","","",180,[[["self"],["h"]]]],[11,"hash","","",181,[[["self"],["h"]]]],[11,"hash","","",182,[[["self"],["h"]]]],[11,"hash","","",183,[[["self"],["h"]]]],[11,"hash","","",184,[[["self"],["h"]]]],[11,"hash","","",185,[[["self"],["h"]]]],[11,"hash","","",186,[[["self"],["h"]]]],[11,"hash","","",187,[[["self"],["h"]]]],[11,"hash","","",188,[[["self"],["h"]]]],[11,"hash","","",189,[[["self"],["h"]]]],[11,"hash","syn","",0,[[["self"],["h"]]]],[11,"hash","","",63,N],[11,"hash","","",64,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",65,N],[11,"hash","","",6,N],[11,"hash","","",66,N],[11,"hash","","",4,N],[11,"hash","","",5,N],[11,"hash","","",3,N],[11,"hash","","",67,N],[11,"hash","","",8,N],[11,"hash","","",7,N],[11,"hash","","",9,N],[11,"hash","","",68,N],[11,"hash","","",215,N],[11,"hash","","",222,N],[11,"hash","","",210,N],[11,"hash","","",11,N],[11,"hash","","",227,N],[11,"hash","","",235,N],[11,"hash","","",10,N],[11,"hash","","",18,N],[11,"hash","","",15,N],[11,"hash","","",12,N],[11,"hash","","",236,N],[11,"hash","","",223,N],[11,"hash","","",221,N],[11,"hash","","",238,N],[11,"hash","","",219,N],[11,"hash","","",224,N],[11,"hash","","",226,N],[11,"hash","","",217,N],[11,"hash","","",237,N],[11,"hash","","",214,N],[11,"hash","","",211,N],[11,"hash","","",212,N],[11,"hash","","",13,N],[11,"hash","","",14,N],[11,"hash","","",228,N],[11,"hash","","",17,N],[11,"hash","","",229,N],[11,"hash","","",216,N],[11,"hash","","",218,N],[11,"hash","","",231,N],[11,"hash","","",225,N],[11,"hash","","",232,N],[11,"hash","","",230,N],[11,"hash","","",16,N],[11,"hash","","",220,N],[11,"hash","","",233,N],[11,"hash","","",213,N],[11,"hash","","",234,N],[11,"hash","","",239,N],[11,"hash","","",19,[[["self"],["h"]]]],[11,"hash","","",69,N],[11,"hash","","",20,[[["self"],["h"]]]],[11,"hash","","",23,N],[11,"hash","","",70,N],[11,"hash","","",29,N],[11,"hash","","",24,N],[11,"hash","","",22,N],[11,"hash","","",240,N],[11,"hash","","",190,N],[11,"hash","","",241,N],[11,"hash","","",21,N],[11,"hash","","",72,N],[11,"hash","","",28,N],[11,"hash","","",71,N],[11,"hash","","",30,N],[11,"hash","","",73,N],[11,"hash","","",27,N],[11,"hash","","",26,N],[11,"hash","","",25,N],[11,"hash","","",31,[[["self"],["h"]]]],[11,"hash","","",76,N],[11,"hash","","",191,[[["self"],["h"]]]],[11,"hash","","",192,[[["self"],["h"]]]],[11,"hash","","",193,[[["self"],["h"]]]],[11,"hash","","",194,[[["self"],["h"]]]],[11,"hash","","",195,[[["self"],["h"]]]],[11,"hash","","",196,[[["self"],["h"]]]],[11,"hash","","",32,[[["self"],["h"]]]],[11,"hash","","",33,[[["self"],["h"]]]],[11,"hash","","",77,N],[11,"hash","","",75,N],[11,"hash","","",74,N],[11,"hash","","",78,N],[11,"hash","","",34,[[["self"],["h"]]]],[11,"hash","","",38,N],[11,"hash","","",79,N],[11,"hash","","",36,N],[11,"hash","","",35,N],[11,"hash","","",37,N],[11,"hash","","",80,N],[11,"hash","","",81,N],[11,"hash","","",84,N],[11,"hash","","",52,N],[11,"hash","","",41,N],[11,"hash","","",50,N],[11,"hash","","",51,N],[11,"hash","","",42,N],[11,"hash","","",47,N],[11,"hash","","",54,N],[11,"hash","","",49,N],[11,"hash","","",53,N],[11,"hash","","",44,N],[11,"hash","","",48,N],[11,"hash","","",43,N],[11,"hash","","",45,N],[11,"hash","","",46,N],[11,"hash","","",55,[[["self"],["h"]]]],[11,"hash","","",39,N],[11,"hash","","",40,N],[11,"hash","","",82,N],[11,"hash","","",83,N],[11,"hash","","",60,N],[11,"hash","","",61,N],[11,"hash","","",86,N],[11,"hash","","",85,N],[11,"hash","","",56,N],[11,"hash","","",57,N],[11,"hash","","",58,N],[11,"hash","","",59,N],[11,"hash","","",62,N],[11,"hash","syn::punctuated","",201,N],[11,"deref","syn::parse","",206,N],[11,"index","syn::punctuated","",201,N],[11,"index_mut","","",201,N],[11,"from_iter","","",201,[[["i"]],["self"]]],[11,"from_iter","","",201,[[["i"]],["self"]]],[11,"description","syn::parse","",208,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",87,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",88,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",89,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",90,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",91,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",92,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",93,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",94,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",95,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",96,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",97,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",98,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",99,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",100,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",101,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",102,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",103,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",104,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",105,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",106,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",107,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",108,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",109,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",110,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",111,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",112,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",113,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",114,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",115,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",116,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",117,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",118,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",119,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",120,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",121,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",122,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",123,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",124,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",125,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",126,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",127,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",128,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",129,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",130,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",131,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",132,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",133,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",134,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",135,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",136,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",137,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",138,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",139,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",140,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",141,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",142,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",143,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",144,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",145,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",146,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",147,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",148,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",149,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",150,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",151,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",152,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",153,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",154,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",155,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",156,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",157,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",158,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",159,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",164,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",165,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",167,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",168,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",170,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",179,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",180,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",181,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",182,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",183,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",184,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",185,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn","",64,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",65,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",66,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",67,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",6,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",5,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",7,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",9,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",68,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",11,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",10,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",18,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",15,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",12,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",69,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",20,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",17,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",16,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",19,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",70,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",72,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",73,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",23,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",240,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",190,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",241,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",21,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",24,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",29,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",28,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",71,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",22,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",30,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",27,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",26,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",25,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",31,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",76,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",191,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",192,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",193,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",194,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",195,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",196,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",32,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",33,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",34,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",38,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",80,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",81,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",84,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",52,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",41,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",50,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",51,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",42,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",47,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",54,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",49,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",53,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",44,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",43,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",48,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",45,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",46,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",55,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",83,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",40,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",82,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",39,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",60,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",61,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",86,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",85,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",56,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",57,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",58,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",59,[[["self"],["tokenstream"]]]],[11,"to_tokens","syn::punctuated","",201,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",200,[[["self"],["tokenstream"]]]],[11,"new","syn","Creates a new `Ident` with the given `string` as well as…",209,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",209,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",209,N],[11,"visit_abi","syn::visit","",203,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",203,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",203,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",203,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",203,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",203,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",203,[[["self"],["binop"]]]],[11,"visit_binding","","",203,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",203,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",203,[[["self"],["constparam"]]]],[11,"visit_constraint","","",203,[[["self"],["constraint"]]]],[11,"visit_data","","",203,[[["self"],["data"]]]],[11,"visit_data_enum","","",203,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",203,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",203,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",203,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",203,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",203,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",203,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",203,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",203,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",203,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",203,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",203,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",203,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",203,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",203,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",203,[[["self"],["field"]]]],[11,"visit_fields","","",203,[[["self"],["fields"]]]],[11,"visit_fields_named","","",203,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",203,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",203,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",203,[[["self"],["genericparam"]]]],[11,"visit_generics","","",203,[[["self"],["generics"]]]],[11,"visit_ident","","",203,[[["self"],["ident"]]]],[11,"visit_index","","",203,[[["self"],["index"]]]],[11,"visit_lifetime","","",203,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",203,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",203,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",203,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",203,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",203,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",203,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",203,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",203,[[["self"],["litint"]]]],[11,"visit_lit_str","","",203,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",203,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",203,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",203,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",203,[[["self"],["member"]]]],[11,"visit_meta","","",203,[[["self"],["meta"]]]],[11,"visit_meta_list","","",203,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",203,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",203,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",203,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",203,[[["self"],["path"]]]],[11,"visit_path_arguments","","",203,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",203,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",203,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",203,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",203,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",203,[[["self"],["qself"]]]],[11,"visit_return_type","","",203,[[["self"],["returntype"]]]],[11,"visit_span","","",203,[[["self"],["span"]]]],[11,"visit_trait_bound","","",203,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",203,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",203,[[["self"],["type"]]]],[11,"visit_type_array","","",203,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",203,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",203,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",203,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",203,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",203,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",203,[[["self"],["typenever"]]]],[11,"visit_type_param","","",203,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",203,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",203,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",203,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",203,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",203,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",203,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",203,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",203,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",203,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",203,[[["self"],["unop"]]]],[11,"visit_variant","","",203,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",203,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",203,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",203,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",203,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",203,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",203,[[["self"],["wherepredicate"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",248,[[["self"],["t"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",248,[[["self"]],["error"]]]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"ExprVerbatim"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"CapSelf"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Self_"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprInPlace"],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["synom"]={"doc":"Adapted from `nom` by removing the `IResult::Incomplete`…","items":[[4,"IResult","synom","The result of a parser.",N,N],[13,"Done","","Parsing succeeded. The first field contains the rest of…",0,N],[13,"Error","","Parsing failed.",0,N],[11,"expect","","Unwraps the result, asserting the the parse is complete.…",0,[[["self"],["str"]],["o"]]],[14,"punct","","Parse a piece of punctuation like \"+\" or \"+=\".",N,N],[14,"keyword","","Parse a keyword like \"fn\" or \"struct\".",N,N],[14,"option","","Turn a failed parse into `None` and a successful parse…",N,N],[14,"opt_vec","","Turn a failed parse into an empty vector. The argument…",N,N],[14,"epsilon","","Parses nothing and always succeeds.",N,N],[14,"separated_list","","Zero or more values separated by some separator. Does not…",N,N],[14,"terminated_list","","Zero or more values separated by some separator. A…",N,N],[14,"named","","Define a function from a parser combination.",N,N],[14,"call","","Invoke the given parser function with the passed in…",N,N],[14,"map","","Transform the result of a parser by applying a function or…",N,N],[14,"not","","Parses successfully if the given parser fails to parse.…",N,N],[14,"cond","","Conditionally execute the given parser.",N,N],[14,"cond_reduce","","Fail to parse if condition is false, otherwise parse the…",N,N],[14,"preceded","","Parse two things, returning the value of the second.",N,N],[14,"terminated","","Parse two things, returning the value of the first.",N,N],[14,"many0","","Parse zero or more values using the given parser.",N,N],[14,"peek","","Parse a value without consuming it from the input data.",N,N],[14,"take_until","","Parse the part of the input up to but not including the…",N,N],[14,"tag","","Parse the given string from exactly the current position…",N,N],[14,"switch","","Pattern-match the result of a parser to select which other…",N,N],[14,"value","","Produce the given value without parsing anything. Useful…",N,N],[14,"delimited","","Value surrounded by a pair of delimiters.",N,N],[14,"separated_nonempty_list","","One or more values separated by some separator. Does not…",N,N],[14,"tuple","","Run a series of parsers and produce all of the results in…",N,N],[14,"alt","","Run a series of parsers, returning the result of the first…",N,N],[14,"do_parse","","Run a series of parsers, one after another, optionally…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["iresult"]],["bool"]]],[11,"ne","","",0,[[["self"],["iresult"]],["bool"]]],[11,"clone","","",0,[[["self"]],["iresult"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"IResult"]]};
searchIndex["synstructure"]={"doc":"This crate provides helper types for matching against enum…","items":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both…",N,N],[12,"binding","","The name which this BindingInfo will bind to.",0,N],[12,"style","","The type of binding which this BindingInfo will create.",0,N],[3,"VariantAst","","This type is similar to `syn`'s `Variant` type, however…",N,N],[12,"attrs","","",1,N],[12,"ident","","",1,N],[12,"fields","","",1,N],[12,"discriminant","","",1,N],[3,"VariantInfo","","A wrapper around a `syn::DeriveInput`'s variant which…",N,N],[12,"prefix","","",2,N],[3,"Structure","","A wrapper around a `syn::DeriveInput` which provides…",N,N],[4,"BindStyle","","The type of binding to use when generating a pattern.",N,N],[13,"Move","","`x`",3,N],[13,"MoveMut","","`mut x`",3,N],[13,"Ref","","`ref x`",3,N],[13,"RefMut","","`ref mut x`",3,N],[5,"unpretty_print","","Dumps an unpretty version of a tokenstream. Takes any type…",N,[[["t"]],["string"]]],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",0,[[["self"]],["field"]]],[11,"pat","","Generates the pattern fragment for this field binding.",0,[[["self"]],["tokenstream"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",0,[[["self"]],["vec",["ident"]]]],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,N],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,N],[11,"ast","","Returns a `VariantAst` object which contains references to…",2,[[["self"]],["variantast"]]],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat","","Generates the match-arm pattern which could be used to…",2,[[["self"]],["tokenstream"]]],[11,"construct","","Generates the token stream required to construct the…",2,[[["self"],["f"]],["tokenstream"]]],[11,"each","","Runs the passed-in function once for each bound field,…",2,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",2,[[["self"],["i"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Variant` object. This…",2,[[["self"],["f"]],["self"]]],[11,"remove_binding","","Remove the binding at the given index.",2,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",2,[[["self"]],["vec",["ident"]]]],[11,"new","","Create a new `Structure` with the variants and fields from…",4,[[["deriveinput"]],["self"]]],[11,"variants","","Returns a slice of the variants in this Structure.",4,N],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",4,N],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",4,[[["self"]],["deriveinput"]]],[11,"omitted_variants","","True if any variants were omitted due to a…",4,[[["self"]],["bool"]]],[11,"each","","Runs the passed-in function once for each bound field,…",4,[[["self"],["f"]],["tokenstream"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",4,[[["self"],["i"],["f"]],["tokenstream"]]],[11,"each_variant","","Runs the passed-in function once for each variant, passing…",4,[[["self"],["f"]],["tokenstream"]]],[11,"filter","","Filter the bindings created by this `Structure` object.…",4,[[["self"],["f"]],["self"]]],[11,"filter_variants","","Filter the variants matched by this `Structure` object.…",4,[[["self"],["f"]],["self"]]],[11,"remove_variant","","Remove the variant at the given index.",4,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",4,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",4,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced…",4,[[["self"]],["vec",["ident"]]]],[11,"add_impl_generic","","Adds an `impl<>` generic parameter. This can be used when…",4,[[["self"],["genericparam"]],["self"]]],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each…",4,[[["self"],["traitbound"],["option"]]]],[11,"bound_impl","","NOTE: This methods' features are superceded by…",4,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unsafe_bound_impl","","NOTE: This methods' features are superceded by…",4,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unbound_impl","","NOTE: This methods' features are superceded by…",4,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"unsafe_unbound_impl","","NOTE: This methods' features are superceded by…",4,[[["self"],["p"],["b"]],["tokenstream"]]],[11,"gen_impl","","Generate an impl block for the given struct. This impl…",4,[[["self"],["tokenstream"]],["tokenstream"]]],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper.…",N,N],[14,"test_derive","","Run a test on a custom derive. This macro expands both the…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"eq","","",3,[[["self"],["bindstyle"]],["bool"]]],[11,"eq","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"eq","","",1,[[["self"],["variantast"]],["bool"]]],[11,"ne","","",1,[[["self"],["variantast"]],["bool"]]],[11,"eq","","",2,[[["self"],["variantinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["variantinfo"]],["bool"]]],[11,"eq","","",4,[[["self"],["structure"]],["bool"]]],[11,"ne","","",4,[[["self"],["structure"]],["bool"]]],[11,"clone","","",3,[[["self"]],["bindstyle"]]],[11,"clone","","",0,[[["self"]],["bindinginfo"]]],[11,"clone","","",1,[[["self"]],["variantast"]]],[11,"clone","","",2,[[["self"]],["variantinfo"]]],[11,"clone","","",4,[[["self"]],["structure"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",4,N],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]]],"paths":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"BindStyle"],[3,"Structure"]]};
searchIndex["tempfile"]={"doc":"Temporary files and directories.","items":[[3,"TempDir","tempfile","A directory in the filesystem that is automatically…",N,N],[3,"NamedTempFile","","A named temporary file.",N,N],[3,"PersistError","","Error returned when persisting a temporary file fails.",N,N],[12,"error","","The underlying IO error.",0,N],[12,"file","","The temporary file that couldn't be persisted.",0,N],[3,"TempPath","","A path to a named temporary file without an open file…",N,N],[3,"Builder","","Create a new temporary file or directory with custom…",N,N],[5,"tempdir","","Create a new temporary directory.",N,[[],["result",["tempdir"]]]],[5,"tempdir_in","","Create a new temporary directory.",N,[[["p"]],["result",["tempdir"]]]],[5,"tempfile","","Create a new temporary file.",N,[[],["result",["file"]]]],[5,"tempfile_in","","Create a new temporary file in the specified directory.",N,[[["p"]],["result",["file"]]]],[11,"new","","Attempts to make a temporary directory inside of…",1,[[],["result",["tempdir"]]]],[11,"new_in","","Attempts to make a temporary directory inside of `dir`.…",1,[[["p"]],["result",["tempdir"]]]],[11,"path","","Accesses the [`Path`] to the temporary directory.",1,[[["self"]],["path"]]],[11,"into_path","","Persist the temporary directory to disk, returning the…",1,[[["self"]],["pathbuf"]]],[11,"close","","Closes and removes the temporary directory, returing a…",1,[[["self"]],["result"]]],[11,"close","","Close and remove the temporary file.",2,[[["self"]],["result"]]],[11,"persist","","Persist the temporary file at the target path.",2,[[["self"],["p"]],["result",["pathpersisterror"]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file…",2,[[["self"],["p"]],["result",["pathpersisterror"]]]],[11,"new","","Create a new named temporary file.",3,[[],["result",["namedtempfile"]]]],[11,"new_in","","Create a new named temporary file in the specified…",3,[[["p"]],["result",["namedtempfile"]]]],[11,"path","","Get the temporary file's path.",3,[[["self"]],["path"]]],[11,"close","","Close and remove the temporary file.",3,[[["self"]],["result"]]],[11,"persist","","Persist the temporary file at the target path.",3,[[["self"],["p"]],["result",["file","persisterror"]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file…",3,[[["self"],["p"]],["result",["file","persisterror"]]]],[11,"reopen","","Reopen the temporary file.",3,[[["self"]],["result",["file"]]]],[11,"as_file","","Get a reference to the underlying file.",3,[[["self"]],["file"]]],[11,"as_file_mut","","Get a mutable reference to the underlying file.",3,[[["self"]],["file"]]],[11,"into_file","","Convert the temporary file into a `std::fs::File`.",3,[[["self"]],["file"]]],[11,"into_temp_path","","Closes the file, leaving only the temporary file path.",3,[[["self"]],["temppath"]]],[11,"new","","Create a new `Builder`.",4,[[],["self"]]],[11,"prefix","","Set a custom filename prefix.",4,[[["self"],["str"]],["self"]]],[11,"suffix","","Set a custom filename suffix.",4,[[["self"],["str"]],["self"]]],[11,"rand_bytes","","Set the number of random bytes.",4,[[["self"],["usize"]],["self"]]],[11,"tempfile","","Create the named temporary file.",4,[[["self"]],["result",["namedtempfile"]]]],[11,"tempfile_in","","Create the named temporary file in the specified directory.",4,[[["self"],["p"]],["result",["namedtempfile"]]]],[11,"tempdir","","Attempts to make a temporary directory inside of…",4,[[["self"]],["result",["tempdir"]]]],[11,"tempdir_in","","Attempts to make a temporary directory inside of `dir`.…",4,[[["self"],["p"]],["result",["tempdir"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"eq","","",4,[[["self"],["builder"]],["bool"]]],[11,"ne","","",4,[[["self"],["builder"]],["bool"]]],[11,"as_ref","","",1,[[["self"]],["path"]]],[11,"as_ref","","",2,[[["self"]],["path"]]],[11,"as_ref","","",2,[[["self"]],["osstr"]]],[11,"as_ref","","",3,[[["self"]],["path"]]],[11,"default","","",4,[[],["self"]]],[11,"clone","","",4,[[["self"]],["builder"]]],[11,"from","","",3,[[["persisterror"]],["namedtempfile"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"deref","","",2,[[["self"]],["path"]]],[11,"as_raw_fd","","",3,[[["self"]],["rawfd"]]],[11,"seek","","",3,[[["self"],["seekfrom"]],["result",["u64"]]]],[11,"read","","",3,N],[11,"write","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]]],"paths":[[3,"PersistError"],[3,"TempDir"],[3,"TempPath"],[3,"NamedTempFile"],[3,"Builder"]]};
searchIndex["termcolor"]={"doc":"This crate provides a cross platform abstraction for…","items":[[3,"StandardStream","termcolor","Satisfies `io::Write` and `WriteColor`, and supports…",N,N],[3,"StandardStreamLock","","`StandardStreamLock` is a locked reference to a…",N,N],[3,"BufferedStandardStream","","Like `StandardStream`, but does buffered writing.",N,N],[3,"BufferWriter","","Writes colored buffers to stdout or stderr.",N,N],[3,"Buffer","","Write colored text to memory.",N,N],[3,"NoColor","","Satisfies `WriteColor` but ignores all color options.",N,N],[3,"Ansi","","Satisfies `WriteColor` using standard ANSI escape sequences.",N,N],[3,"ColorSpec","","A color specification.",N,N],[3,"ParseColorError","","An error from parsing an invalid color specification.",N,N],[4,"ColorChoice","","ColorChoice represents the color preferences of an end user.",N,N],[13,"Always","","Try very hard to emit colors. This includes emitting ANSI…",0,N],[13,"AlwaysAnsi","","AlwaysAnsi is like Always, except it never tries to use…",0,N],[13,"Auto","","Try to use colors, but don't force the issue. If the…",0,N],[13,"Never","","Never emit colors.",0,N],[4,"Color","","The set of available colors for the terminal…",N,N],[13,"Black","","",1,N],[13,"Blue","","",1,N],[13,"Green","","",1,N],[13,"Red","","",1,N],[13,"Cyan","","",1,N],[13,"Magenta","","",1,N],[13,"Yellow","","",1,N],[13,"White","","",1,N],[13,"Ansi256","","",1,N],[13,"Rgb","","",1,N],[8,"WriteColor","","This trait describes the behavior of writers that support…",N,N],[10,"supports_color","","Returns true if and only if the underlying writer supports…",2,[[["self"]],["bool"]]],[10,"set_color","","Set the color settings of the writer.",2,[[["self"],["colorspec"]],["result"]]],[10,"reset","","Reset the current color settings to their original settings.",2,[[["self"]],["result"]]],[11,"is_synchronous","","Returns true if and only if the underlying writer must…",2,[[["self"]],["bool"]]],[11,"stdout","","Create a new `StandardStream` with the given color…",3,[[["colorchoice"]],["standardstream"]]],[11,"stderr","","Create a new `StandardStream` with the given color…",3,[[["colorchoice"]],["standardstream"]]],[11,"lock","","Lock the underlying writer.",3,[[["self"]],["standardstreamlock"]]],[11,"stdout","","Create a new `BufferedStandardStream` with the given color…",4,[[["colorchoice"]],["bufferedstandardstream"]]],[11,"stderr","","Create a new `BufferedStandardStream` with the given color…",4,[[["colorchoice"]],["bufferedstandardstream"]]],[11,"stdout","","Create a new `BufferWriter` that writes to stdout with the…",5,[[["colorchoice"]],["bufferwriter"]]],[11,"stderr","","Create a new `BufferWriter` that writes to stderr with the…",5,[[["colorchoice"]],["bufferwriter"]]],[11,"separator","","If set, the separator given is printed between buffers. By…",5,[[["self"],["option",["vec"]]]]],[11,"buffer","","Creates a new `Buffer` with the current color preferences.",5,[[["self"]],["buffer"]]],[11,"print","","Prints the contents of the given buffer.",5,[[["self"],["buffer"]],["result"]]],[11,"no_color","","Create a buffer that drops all color information.",6,[[],["buffer"]]],[11,"ansi","","Create a buffer that uses ANSI escape sequences.",6,[[],["buffer"]]],[11,"is_empty","","Returns true if and only if this buffer is empty.",6,[[["self"]],["bool"]]],[11,"len","","Returns the length of this buffer in bytes.",6,[[["self"]],["usize"]]],[11,"clear","","Clears this buffer.",6,[[["self"]]]],[11,"into_inner","","Consume this buffer and return the underlying raw data.",6,[[["self"]],["vec",["u8"]]]],[11,"as_slice","","Return the underlying data of the buffer.",6,N],[11,"as_mut_slice","","Return the underlying data of the buffer as a mutable slice.",6,N],[11,"new","","Create a new writer that satisfies `WriteColor` but drops…",7,[[["w"]],["nocolor"]]],[11,"into_inner","","Consume this `NoColor` value and return the inner writer.",7,[[["self"]],["w"]]],[11,"get_ref","","Return a reference to the inner writer.",7,[[["self"]],["w"]]],[11,"get_mut","","Return a mutable reference to the inner writer.",7,[[["self"]],["w"]]],[11,"new","","Create a new writer that satisfies `WriteColor` using…",8,[[["w"]],["ansi"]]],[11,"into_inner","","Consume this `Ansi` value and return the inner writer.",8,[[["self"]],["w"]]],[11,"get_ref","","Return a reference to the inner writer.",8,[[["self"]],["w"]]],[11,"get_mut","","Return a mutable reference to the inner writer.",8,[[["self"]],["w"]]],[11,"new","","Create a new color specification that has no colors or…",9,[[],["colorspec"]]],[11,"fg","","Get the foreground color.",9,[[["self"]],["option",["color"]]]],[11,"set_fg","","Set the foreground color.",9,[[["self"],["option",["color"]]],["colorspec"]]],[11,"bg","","Get the background color.",9,[[["self"]],["option",["color"]]]],[11,"set_bg","","Set the background color.",9,[[["self"],["option",["color"]]],["colorspec"]]],[11,"bold","","Get whether this is bold or not.",9,[[["self"]],["bool"]]],[11,"set_bold","","Set whether the text is bolded or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"underline","","Get whether this is underline or not.",9,[[["self"]],["bool"]]],[11,"set_underline","","Set whether the text is underlined or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"intense","","Get whether this is intense or not.",9,[[["self"]],["bool"]]],[11,"set_intense","","Set whether the text is intense or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"is_none","","Returns true if this color specification has no colors or…",9,[[["self"]],["bool"]]],[11,"clear","","Clears this color specification so that it has no…",9,[[["self"]]]],[11,"invalid","","Return the string that couldn't be parsed as a valid color.",10,[[["self"]],["str"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"supports_color","","",3,[[["self"]],["bool"]]],[11,"set_color","","",3,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",3,[[["self"]],["result"]]],[11,"is_synchronous","","",3,[[["self"]],["bool"]]],[11,"supports_color","","",11,[[["self"]],["bool"]]],[11,"set_color","","",11,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",11,[[["self"]],["result"]]],[11,"is_synchronous","","",11,[[["self"]],["bool"]]],[11,"supports_color","","",4,[[["self"]],["bool"]]],[11,"set_color","","",4,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",4,[[["self"]],["result"]]],[11,"is_synchronous","","",4,[[["self"]],["bool"]]],[11,"supports_color","","",6,[[["self"]],["bool"]]],[11,"set_color","","",6,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",6,[[["self"]],["result"]]],[11,"is_synchronous","","",6,[[["self"]],["bool"]]],[11,"supports_color","","",7,[[["self"]],["bool"]]],[11,"set_color","","",7,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",7,[[["self"]],["result"]]],[11,"is_synchronous","","",7,[[["self"]],["bool"]]],[11,"supports_color","","",8,[[["self"]],["bool"]]],[11,"set_color","","",8,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",8,[[["self"]],["result"]]],[11,"is_synchronous","","",8,[[["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["colorchoice"]],["bool"]]],[11,"eq","","",9,[[["self"],["colorspec"]],["bool"]]],[11,"ne","","",9,[[["self"],["colorspec"]],["bool"]]],[11,"eq","","",1,[[["self"],["color"]],["bool"]]],[11,"ne","","",1,[[["self"],["color"]],["bool"]]],[11,"eq","","",10,[[["self"],["parsecolorerror"]],["bool"]]],[11,"ne","","",10,[[["self"],["parsecolorerror"]],["bool"]]],[11,"default","","",9,[[],["colorspec"]]],[11,"clone","","",0,[[["self"]],["colorchoice"]]],[11,"clone","","",9,[[["self"]],["colorspec"]]],[11,"clone","","",1,[[["self"]],["color"]]],[11,"clone","","",10,[[["self"]],["parsecolorerror"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result",["color","parsecolorerror"]]]],[11,"write","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"write","","",11,N],[11,"flush","","",11,[[["self"]],["result"]]],[11,"write","","",4,N],[11,"flush","","",4,[[["self"]],["result"]]],[11,"write","","",6,N],[11,"flush","","",6,[[["self"]],["result"]]],[11,"write","","",7,N],[11,"flush","","",7,[[["self"]],["result"]]],[11,"write","","",8,N],[11,"flush","","",8,[[["self"]],["result"]]],[11,"description","","",10,[[["self"]],["str"]]]],"paths":[[4,"ColorChoice"],[4,"Color"],[8,"WriteColor"],[3,"StandardStream"],[3,"BufferedStandardStream"],[3,"BufferWriter"],[3,"Buffer"],[3,"NoColor"],[3,"Ansi"],[3,"ColorSpec"],[3,"ParseColorError"],[3,"StandardStreamLock"]]};
searchIndex["textwrap"]={"doc":"`textwrap` provides functions for word wrapping and…","items":[[3,"NoHyphenation","textwrap","Use this as a [`Wrapper.splitter`] to avoid any kind of…",N,N],[3,"HyphenSplitter","","Simple and default way to split words: splitting on…",N,N],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text.…",N,N],[12,"width","","The width in columns at which the text will be wrapped.",0,N],[12,"initial_indent","","Indentation used for the first line of output.",0,N],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,N],[12,"break_words","","Allow long words to be broken if they cannot fit on a…",0,N],[12,"splitter","","The method for splitting words. If the `hyphenation`…",0,N],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns…",N,N],[3,"WrapIter","","An iterator over the lines of the input string which…",N,N],[5,"fill","","Fill a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],["string"]]],[5,"wrap","","Wrap a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],["vec",["cow"]]]],[5,"wrap_iter","","Lazily wrap a line of text at `width` characters. Strings…",N,[[["str"],["usize"]],["intowrapiter",["hyphensplitter"]]]],[5,"indent","","Add prefix to each non-empty line.",N,[[["str"],["str"]],["string"]]],[5,"dedent","","Removes common leading whitespace from each line.",N,[[["str"]],["string"]]],[8,"WordSplitter","","An interface for splitting words.",N,N],[10,"split","","Return all possible splits of word. Each split is a triple…",1,[[["self"],["str"]],["vec"]]],[11,"new","","Create a new Wrapper for wrapping at the specified width.…",0,[[["usize"]],["wrapper",["hyphensplitter"]]]],[11,"with_splitter","","Use the given [`WordSplitter`] to create a new Wrapper for…",0,[[["usize"],["s"]],["wrapper"]]],[11,"initial_indent","","Change [`self.initial_indent`]. The initial indentation is…",0,[[["self"],["str"]],["wrapper"]]],[11,"subsequent_indent","","Change [`self.subsequent_indent`]. The subsequent…",0,[[["self"],["str"]],["wrapper"]]],[11,"break_words","","Change [`self.break_words`]. This controls if words longer…",0,[[["self"],["bool"]],["wrapper"]]],[11,"fill","","Fill a line of text at `self.width` characters. Strings…",0,[[["self"],["str"]],["string"]]],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings…",0,[[["self"],["str"]],["vec",["cow"]]]],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[["self"],["str"]],["wrapiter"]]],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[["self"],["str"]],["intowrapiter"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"split","","",2,[[["self"],["str"]],["vec"]]],[11,"split","","",3,[[["self"],["str"]],["vec"]]],[11,"next","","",4,[[["self"]],["option",["cow"]]]],[11,"next","","",5,[[["self"]],["option",["cow"]]]],[11,"clone","","",2,[[["self"]],["nohyphenation"]]],[11,"clone","","",3,[[["self"]],["hyphensplitter"]]],[11,"clone","","",0,[[["self"]],["wrapper"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Wrapper"],[8,"WordSplitter"],[3,"NoHyphenation"],[3,"HyphenSplitter"],[3,"IntoWrapIter"],[3,"WrapIter"]]};
searchIndex["thread_local"]={"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",N,N],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",N,N],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",N,N],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a…",N,N],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",N,N],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",N,N],[11,"new","","Creates a new empty `ThreadLocal`.",0,[[],["threadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[["self"]],["option"]]],[11,"get_or","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],["result"]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",0,[[["self"]],["itermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",0,[[["self"]]]],[11,"get_default","","Returns the element for the current thread, or creates a…",0,[[["self"]],["t"]]],[11,"new","","Creates a new empty `CachedThreadLocal`.",1,[[],["cachedthreadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[["self"]],["option"]]],[11,"get_or","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],["result"]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",1,[[["self"]],["cacheditermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",1,[[["self"]]]],[11,"get_default","","Returns the element for the current thread, or creates a…",1,[[["self"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option",["box"]]]],[11,"size_hint","","",2,N],[11,"next","","",3,[[["self"]],["option",["box"]]]],[11,"size_hint","","",3,N],[11,"into_iter","","",0,[[["self"]],["intoiter"]]],[11,"into_iter","","",1,[[["self"]],["cachedintoiter"]]],[11,"default","","",0,[[],["threadlocal"]]],[11,"default","","",1,[[],["cachedthreadlocal"]]],[11,"drop","","",0,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ThreadLocal"],[3,"CachedThreadLocal"],[3,"IterMut"],[3,"IntoIter"]]};
searchIndex["time"]={"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision. This…",N,N],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a…",N,N],[3,"Timespec","","A record specifying a time value in seconds and…",N,N],[12,"sec","","",0,N],[12,"nsec","","",0,N],[3,"PreciseTime","","An opaque structure representing a moment in time.",N,N],[3,"SteadyTime","","A structure representing a moment in time.",N,N],[3,"Tm","","Holds a calendar date and time broken down into its…",N,N],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,N],[12,"tm_min","","Minutes after the hour - [0, 59]",1,N],[12,"tm_hour","","Hours after midnight - [0, 23]",1,N],[12,"tm_mday","","Day of the month - [1, 31]",1,N],[12,"tm_mon","","Months since January - [0, 11]",1,N],[12,"tm_year","","Years since 1900",1,N],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6…",1,N],[12,"tm_yday","","Days since January 1 - [0, 365]",1,N],[12,"tm_isdst","","Daylight Saving Time flag.",1,N],[12,"tm_utcoff","","Identifies the time zone that was used to compute this…",1,N],[12,"tm_nsec","","Nanoseconds after the second - [0, 109 - 1]",1,N],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements…",N,N],[4,"ParseError","","",N,N],[13,"InvalidSecond","","",2,N],[13,"InvalidMinute","","",2,N],[13,"InvalidHour","","",2,N],[13,"InvalidDay","","",2,N],[13,"InvalidMonth","","",2,N],[13,"InvalidYear","","",2,N],[13,"InvalidDayOfWeek","","",2,N],[13,"InvalidDayOfMonth","","",2,N],[13,"InvalidDayOfYear","","",2,N],[13,"InvalidZoneOffset","","",2,N],[13,"InvalidTime","","",2,N],[13,"InvalidSecondsSinceEpoch","","",2,N],[13,"MissingFormatConverter","","",2,N],[13,"InvalidFormatSpecifier","","",2,N],[13,"UnexpectedCharacter","","",2,N],[5,"strptime","","Parses the time from the string according to the format…",N,[[["str"],["str"]],["result",["tm","parseerror"]]]],[5,"get_time","","Returns the current time as a `timespec` containing the…",N,[[],["timespec"]]],[5,"precise_time_ns","","Returns the current value of a high-resolution performance…",N,[[],["u64"]]],[5,"precise_time_s","","Returns the current value of a high-resolution performance…",N,[[],["f64"]]],[5,"tzset","","",N,[[]]],[5,"empty_tm","","",N,[[],["tm"]]],[5,"at_utc","","Returns the specified time in UTC",N,[[["timespec"]],["tm"]]],[5,"now_utc","","Returns the current time in UTC",N,[[],["tm"]]],[5,"at","","Returns the specified time in the local timezone",N,[[["timespec"]],["tm"]]],[5,"now","","Returns the current time in the local timezone",N,[[],["tm"]]],[5,"strftime","","Formats the time according to the format string.",N,[[["str"],["tm"]],["result",["string","parseerror"]]]],[11,"weeks","","Makes a new `Duration` with given number of weeks.…",3,[[["i64"]],["duration"]]],[11,"days","","Makes a new `Duration` with given number of days.…",3,[[["i64"]],["duration"]]],[11,"hours","","Makes a new `Duration` with given number of hours.…",3,[[["i64"]],["duration"]]],[11,"minutes","","Makes a new `Duration` with given number of minutes.…",3,[[["i64"]],["duration"]]],[11,"seconds","","Makes a new `Duration` with given number of seconds.…",3,[[["i64"]],["duration"]]],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",3,[[["i64"]],["duration"]]],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",3,[[["i64"]],["duration"]]],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",3,[[["i64"]],["duration"]]],[11,"span","","Runs a closure, returning the duration of time it took to…",3,[[["f"]],["duration"]]],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",3,[[["self"]],["i64"]]],[11,"num_days","","Returns the total number of whole days in the duration.",3,[[["self"]],["i64"]]],[11,"num_hours","","Returns the total number of whole hours in the duration.",3,[[["self"]],["i64"]]],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",3,[[["self"]],["i64"]]],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",3,[[["self"]],["i64"]]],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the…",3,[[["self"]],["i64"]]],[11,"num_microseconds","","Returns the total number of whole microseconds in the…",3,[[["self"]],["option",["i64"]]]],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the…",3,[[["self"]],["option",["i64"]]]],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",3,[[["self"],["duration"]],["option",["duration"]]]],[11,"checked_sub","","Subtract two durations, returning `None` if overflow…",3,[[["self"],["duration"]],["option",["duration"]]]],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",3,[[],["duration"]]],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",3,[[],["duration"]]],[11,"zero","","A duration where the stored seconds and nanoseconds are…",3,[[],["duration"]]],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",3,[[["self"]],["bool"]]],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",3,[[["stdduration"]],["result",["duration","outofrangeerror"]]]],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",3,[[["self"]],["result",["stdduration","outofrangeerror"]]]],[11,"new","","",0,[[["i64"],["i32"]],["timespec"]]],[11,"now","","Returns a `PreciseTime` representing the current moment in…",4,[[],["precisetime"]]],[11,"to","","Returns a `Duration` representing the span of time from…",4,[[["self"],["precisetime"]],["duration"]]],[11,"now","","Returns a `SteadyTime` representing the current moment in…",5,[[],["steadytime"]]],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,[[["self"]],["timespec"]]],[11,"to_local","","Convert time to the local timezone",1,[[["self"]],["tm"]]],[11,"to_utc","","Convert time to the UTC",1,[[["self"]],["tm"]]],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime`…",1,[[["self"]],["tmfmt"]]],[11,"strftime","","Formats the time according to the format string.",1,[[["self"],["str"]],["result",["tmfmt","parseerror"]]]],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,[[["self"]],["tmfmt"]]],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with…",1,[[["self"]],["tmfmt"]]],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC…",1,[[["self"]],["tmfmt"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"eq","","",3,[[["self"],["duration"]],["bool"]]],[11,"ne","","",3,[[["self"],["duration"]],["bool"]]],[11,"eq","","",6,[[["self"],["outofrangeerror"]],["bool"]]],[11,"ne","","",6,[[["self"],["outofrangeerror"]],["bool"]]],[11,"eq","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ne","","",0,[[["self"],["timespec"]],["bool"]]],[11,"eq","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ne","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"eq","","",1,[[["self"],["tm"]],["bool"]]],[11,"ne","","",1,[[["self"],["tm"]],["bool"]]],[11,"eq","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"cmp","","",3,[[["self"],["duration"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["timespec"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["steadytime"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["tm"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["duration"]]],[11,"clone","","",6,[[["self"]],["outofrangeerror"]]],[11,"clone","","",0,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["precisetime"]]],[11,"clone","","",5,[[["self"]],["steadytime"]]],[11,"clone","","",1,[[["self"]],["tm"]]],[11,"clone","","",2,[[["self"]],["parseerror"]]],[11,"partial_cmp","","",3,[[["self"],["duration"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["duration"]],["bool"]]],[11,"le","","",3,[[["self"],["duration"]],["bool"]]],[11,"gt","","",3,[[["self"],["duration"]],["bool"]]],[11,"ge","","",3,[[["self"],["duration"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["timespec"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"le","","",0,[[["self"],["timespec"]],["bool"]]],[11,"gt","","",0,[[["self"],["timespec"]],["bool"]]],[11,"ge","","",0,[[["self"],["timespec"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["steadytime"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"le","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"gt","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"ge","","",5,[[["self"],["steadytime"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["tm"]],["option",["ordering"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"add","","",3,[[["self"],["duration"]],["duration"]]],[11,"add","","",0,[[["self"],["duration"]],["timespec"]]],[11,"add","","",5,[[["self"],["duration"]],["steadytime"]]],[11,"add","","The resulting Tm is in UTC.",1,[[["self"],["duration"]],["tm"]]],[11,"sub","","",3,[[["self"],["duration"]],["duration"]]],[11,"sub","","",0,[[["self"],["duration"]],["timespec"]]],[11,"sub","","",0,[[["self"],["timespec"]],["duration"]]],[11,"sub","","",5,[[["self"],["steadytime"]],["duration"]]],[11,"sub","","",5,[[["self"],["duration"]],["steadytime"]]],[11,"sub","","The resulting Tm is in UTC.",1,[[["self"],["duration"]],["tm"]]],[11,"sub","","",1,[[["self"],["tm"]],["duration"]]],[11,"mul","","",3,[[["self"],["i32"]],["duration"]]],[11,"div","","",3,[[["self"],["i32"]],["duration"]]],[11,"neg","","",3,[[["self"]],["duration"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"],[3,"OutOfRangeError"],[3,"TmFmt"]]};
searchIndex["tokio"]={"doc":"A runtime for writing reliable, asynchronous, and slim…","items":[[0,"clock","tokio","A configurable source of time.",N,N],[5,"now","tokio::clock","Returns an `Instant` corresponding to \"now\".",N,[[],["instant"]]],[0,"codec","tokio","Utilities for encoding and decoding frames.",N,N],[8,"Decoder","tokio::codec","Decoding of frames via buffers.",N,N],[16,"Item","","The type of decoded frames.",0,N],[16,"Error","","The type of unrecoverable frame decoding errors.",0,N],[10,"decode","","Attempts to decode a frame from the provided buffer of…",0,[[["self"],["bytesmut"]],["result",["option"]]]],[11,"decode_eof","","A default method available to be called when there are no…",0,[[["self"],["bytesmut"]],["result",["option"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",0,[[["self"],["t"]],["framed"]]],[8,"Encoder","","Trait of helper objects to write out messages as bytes,…",N,N],[16,"Item","","The type of items consumed by the `Encoder`",1,N],[16,"Error","","The type of encoding errors.",1,N],[10,"encode","","Encodes a frame into the buffer provided.",1,N],[3,"Framed","","A unified `Stream` and `Sink` interface to an underlying…",N,N],[3,"FramedParts","","`FramedParts` contains an export of the data of a Framed…",N,N],[12,"io","","The inner transport used to read bytes to and write bytes to",2,N],[12,"codec","","The codec",2,N],[12,"read_buf","","The buffer with read but unprocessed data.",2,N],[12,"write_buf","","A buffer with unprocessed data which are not written yet.",2,N],[3,"FramedRead","","A `Stream` of messages decoded from an `AsyncRead`.",N,N],[3,"FramedWrite","","A `Sink` of frames encoded to an `AsyncWrite`.",N,N],[3,"BytesCodec","","A simple `Codec` implementation that just ships bytes…",N,N],[3,"LinesCodec","","A simple `Codec` implementation that splits up data into…",N,N],[0,"length_delimited","","Frame a stream of bytes based on a length prefix",N,N],[3,"Builder","tokio::codec::length_delimited","Configure length delimited `LengthDelimitedCodec`s.",N,N],[3,"FrameTooBig","","An error when the number of bytes read is more than max…",N,N],[3,"LengthDelimitedCodec","","A codec for frames delimited by a frame head specifying…",N,N],[11,"new","","Creates a new `LengthDelimitedCodec` with the default…",3,[[],["self"]]],[11,"max_frame_length","","Returns the current max frame setting",3,[[["self"]],["usize"]]],[11,"set_max_frame_length","","Updates the max frame setting.",3,[[["self"],["usize"]]]],[11,"new","","Creates a new length delimited codec builder with default…",4,[[],["builder"]]],[11,"big_endian","","Read the length field as a big endian integer",4,[[["self"]],["self"]]],[11,"little_endian","","Read the length field as a little endian integer",4,[[["self"]],["self"]]],[11,"native_endian","","Read the length field as a native endian integer",4,[[["self"]],["self"]]],[11,"max_frame_length","","Sets the max frame length",4,[[["self"],["usize"]],["self"]]],[11,"length_field_length","","Sets the number of bytes used to represent the length field",4,[[["self"],["usize"]],["self"]]],[11,"length_field_offset","","Sets the number of bytes in the header before the length…",4,[[["self"],["usize"]],["self"]]],[11,"length_adjustment","","Delta between the payload length specified in the header…",4,[[["self"],["isize"]],["self"]]],[11,"num_skip","","Sets the number of bytes to skip before reading the payload",4,[[["self"],["usize"]],["self"]]],[11,"new_codec","","Create a configured length delimited `LengthDelimitedCodec`",4,[[["self"]],["lengthdelimitedcodec"]]],[11,"new_read","","Create a configured length delimited `FramedRead`",4,[[["self"],["t"]],["framedread",["lengthdelimitedcodec"]]]],[11,"new_write","","Create a configured length delimited `FramedWrite`",4,[[["self"],["t"]],["framedwrite",["lengthdelimitedcodec"]]]],[11,"new_framed","","Create a configured length delimited `Framed`",4,[[["self"],["t"]],["framed",["lengthdelimitedcodec"]]]],[0,"executor","tokio","Task execution utilities.",N,N],[8,"Executor","tokio::executor","A value that executes futures.",N,N],[10,"spawn","","Spawns a future object to run on this executor.",5,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",5,[[["self"]],["result",["spawnerror"]]]],[3,"DefaultExecutor","","Executes futures on the default executor for the current…",N,N],[3,"SpawnError","","Errors returned by `Executor::spawn`.",N,N],[3,"Spawn","","Return value from the `spawn` function.",N,N],[5,"spawn","","Spawns a future on the default executor.",N,[[["f"]],["spawn"]]],[0,"fs","tokio","Asynchronous filesystem manipulation operations.",N,N],[5,"create_dir","tokio::fs","Creates a new, empty directory at the provided path",N,[[["p"]],["createdirfuture"]]],[5,"create_dir_all","","Recursively create a directory and all of its parent…",N,[[["p"]],["createdirallfuture"]]],[0,"file","","Types for working with [`File`].",N,N],[3,"File","tokio::fs::file","A reference to an open file on the filesystem.",N,N],[3,"CreateFuture","","Future returned by `File::create` and resolves to a `File`…",N,N],[3,"SeekFuture","","Future returned by `File::seek`.",N,N],[3,"OpenOptions","","Options and flags which can be used to configure how a…",N,N],[3,"OpenFuture","","Future returned by `File::open` and resolves to a `File`…",N,N],[3,"MetadataFuture","","Future returned by `File::metadata` and resolves to a…",N,N],[5,"hard_link","tokio::fs","Creates a new hard link on the filesystem.",N,[[["p"],["q"]],["hardlinkfuture"]]],[5,"metadata","","Queries the file system metadata for a path.",N,[[["p"]],["metadatafuture"]]],[0,"os","","OS-specific functionality.",N,N],[0,"unix","tokio::fs::os","Unix-specific extensions to primitives in the `tokio_fs`…",N,N],[5,"symlink","tokio::fs::os::unix","Creates a new symbolic link on the filesystem.",N,[[["p"],["q"]],["symlinkfuture"]]],[3,"SymlinkFuture","","Future returned by `symlink`.",N,N],[5,"read_dir","tokio::fs","Returns a stream over the entries within a directory.",N,[[["p"]],["readdirfuture"]]],[5,"read_link","","Reads a symbolic link, returning the file that the link…",N,[[["p"]],["readlinkfuture"]]],[5,"remove_dir","","Removes an existing, empty directory.",N,[[["p"]],["removedirfuture"]]],[5,"remove_file","","Removes a file from the filesystem.",N,[[["p"]],["removefilefuture"]]],[5,"rename","","Rename a file or directory to a new name, replacing the…",N,[[["p"],["q"]],["renamefuture"]]],[5,"set_permissions","","Changes the permissions found on a file or a directory.",N,[[["p"],["permissions"]],["setpermissionsfuture"]]],[5,"symlink_metadata","","Queries the file system metadata for a path.",N,[[["p"]],["symlinkmetadatafuture"]]],[3,"File","","A reference to an open file on the filesystem.",N,N],[3,"OpenOptions","","Options and flags which can be used to configure how a…",N,N],[0,"io","tokio","Asynchronous I/O.",N,N],[8,"AsyncRead","tokio::io","Read bytes asynchronously.",N,N],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",6,N],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",6,N],[11,"read_buf","","Pull some bytes from this source into the specified `Buf`,…",6,[[["self"],["b"]],["result",["async","error"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",6,[[["self"],["t"]],["framed"]]],[11,"split","","Helper method for splitting this read/write object into…",6,N],[8,"AsyncWrite","","Writes bytes asynchronously.",N,N],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",7,N],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",7,[[["self"]],["result",["async","error"]]]],[10,"shutdown","","Initiates or attempts to shut down this writer, returning…",7,[[["self"]],["result",["async","error"]]]],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes…",7,[[["self"],["b"]],["result",["async","error"]]]],[5,"stdin","","Constructs a new handle to the standard input of the…",N,[[],["stdin"]]],[3,"Stdin","","A handle to the standard input stream of a process.",N,N],[5,"stdout","","Constructs a new handle to the standard output of the…",N,[[],["stdout"]]],[3,"Stdout","","A handle to the standard output stream of a process.",N,N],[5,"stderr","","Constructs a new handle to the standard error of the…",N,[[],["stderr"]]],[3,"Stderr","","A handle to the standard error stream of a process.",N,N],[5,"copy","","Creates a future which represents copying all the bytes…",N,[[["r"],["w"]],["copy"]]],[3,"Copy","","A future which will copy all data from a reader into a…",N,N],[5,"flush","","Creates a future which will entirely flush an I/O object…",N,[[["a"]],["flush"]]],[3,"Flush","","A future used to fully flush an I/O object.",N,N],[5,"lines","","Creates a new stream from the I/O object given…",N,[[["a"]],["lines"]]],[3,"Lines","","Combinator created by the top-level `lines` method which…",N,N],[5,"read_exact","","Creates a future which will read exactly enough bytes to…",N,[[["a"],["t"]],["readexact"]]],[3,"ReadExact","","A future which can be used to easily read exactly enough…",N,N],[5,"read_to_end","","Creates a future which will read all the bytes associated…",N,[[["a"],["vec",["u8"]]],["readtoend"]]],[3,"ReadToEnd","","A future which can be used to easily read the entire…",N,N],[5,"read_until","","Creates a future which will read all the bytes associated…",N,[[["a"],["u8"],["vec",["u8"]]],["readuntil"]]],[3,"ReadUntil","","A future which can be used to easily read the contents of…",N,N],[3,"ReadHalf","","The readable half of an object returned from…",N,N],[5,"shutdown","","Creates a future which will entirely shutdown an I/O…",N,[[["a"]],["shutdown"]]],[3,"Shutdown","","A future used to fully shutdown an I/O object.",N,N],[5,"write_all","","Creates a future that will write the entire contents of…",N,[[["a"],["t"]],["writeall"]]],[3,"WriteAll","","A future used to write the entire contents of some data to…",N,N],[3,"WriteHalf","","The writable half of an object returned from…",N,N],[3,"Error","","The error type for I/O operations of the [`Read`],…",N,N],[4,"ErrorKind","","A list specifying general categories of I/O error.",N,N],[13,"NotFound","","An entity was not found, often a file.",8,N],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",8,N],[13,"ConnectionRefused","","The connection was refused by the remote server.",8,N],[13,"ConnectionReset","","The connection was reset by the remote server.",8,N],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",8,N],[13,"NotConnected","","The network operation failed because it was not connected…",8,N],[13,"AddrInUse","","A socket address could not be bound because the address is…",8,N],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",8,N],[13,"BrokenPipe","","The operation failed because a pipe was closed.",8,N],[13,"AlreadyExists","","An entity already exists, often a file.",8,N],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",8,N],[13,"InvalidInput","","A parameter was incorrect.",8,N],[13,"InvalidData","","Data not valid for the operation were encountered.",8,N],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be…",8,N],[13,"WriteZero","","An error returned when an operation could not be completed…",8,N],[13,"Interrupted","","This operation was interrupted.",8,N],[13,"Other","","Any I/O error not part of this list.",8,N],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",8,N],[6,"Result","","A specialized `Result` type for I/O operations.",N,N],[8,"Read","","The `Read` trait allows for reading bytes from a source.",N,N],[10,"read","","Pull some bytes from this source into the specified…",9,N],[11,"initializer","","Determines if this `Read`er can work with buffers of…",9,[[["self"]],["initializer"]]],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into…",9,[[["self"],["vec"]],["result",["usize","error"]]]],[11,"read_to_string","","Read all bytes until EOF in this source, appending them to…",9,[[["self"],["string"]],["result",["usize","error"]]]],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",9,N],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",9,[[["self"]],["self"]]],[11,"bytes","","Transforms this `Read` instance to an [`Iterator`] over…",9,[[["self"]],["bytes"]]],[11,"chain","","Creates an adaptor which will chain this stream with…",9,[[["self"],["r"]],["chain"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",9,[[["self"],["u64"]],["take"]]],[8,"Write","","A trait for objects which are byte-oriented sinks.",N,N],[10,"write","","Write a buffer into this writer, returning how many bytes…",10,N],[10,"flush","","Flush this output stream, ensuring that all intermediately…",10,[[["self"]],["result",["error"]]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",10,N],[11,"write_fmt","","Writes a formatted string into this writer, returning any…",10,[[["self"],["arguments"]],["result",["error"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",10,[[["self"]],["self"]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",N,N],[3,"TcpListener","tokio::net","An I/O object representing a TCP socket listening for…",N,N],[3,"TcpStream","","An I/O object representing a TCP stream connected to a…",N,N],[3,"UdpFramed","","A unified `Stream` and `Sink` interface to an underlying…",N,N],[3,"UdpSocket","","An I/O object representing a UDP socket.",N,N],[3,"UnixListener","","A Unix socket which can accept connections from other Unix…",N,N],[3,"UnixStream","","A structure representing a connected Unix socket.",N,N],[0,"tcp","","TCP bindings for `tokio`.",N,N],[3,"ConnectFuture","tokio::net::tcp","Future returned by `TcpStream::connect` which will resolve…",N,N],[3,"Incoming","","Stream returned by the `TcpListener::incoming` function…",N,N],[3,"TcpListener","","An I/O object representing a TCP socket listening for…",N,N],[3,"TcpStream","","An I/O object representing a TCP stream connected to a…",N,N],[0,"udp","tokio::net","UDP bindings for `tokio`.",N,N],[3,"RecvDgram","tokio::net::udp","A future used to receive a datagram from a UDP socket.",N,N],[3,"SendDgram","","A future used to write the entire contents of some data to…",N,N],[3,"UdpFramed","","A unified `Stream` and `Sink` interface to an underlying…",N,N],[3,"UdpSocket","","An I/O object representing a UDP socket.",N,N],[0,"unix","tokio::net","Unix domain socket bindings for `tokio` (only available on…",N,N],[3,"ConnectFuture","tokio::net::unix","Future returned by `UnixStream::connect` which will…",N,N],[3,"Incoming","","Stream of listeners",N,N],[3,"RecvDgram","","A future for receiving datagrams from a Unix datagram…",N,N],[3,"SendDgram","","A future for writing a buffer to a Unix datagram socket.",N,N],[3,"UCred","","Credentials of a process",N,N],[12,"uid","","UID (user ID) of the process",11,N],[12,"gid","","GID (group ID) of the process",11,N],[3,"UnixDatagram","","An I/O object representing a Unix datagram socket.",N,N],[3,"UnixListener","","A Unix socket which can accept connections from other Unix…",N,N],[3,"UnixStream","","A structure representing a connected Unix socket.",N,N],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",N,N],[8,"AsyncRead","tokio::prelude","Read bytes asynchronously.",N,N],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",6,N],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",6,N],[11,"read_buf","","Pull some bytes from this source into the specified `Buf`,…",6,[[["self"],["b"]],["result",["async","error"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",6,[[["self"],["t"]],["framed"]]],[11,"split","","Helper method for splitting this read/write object into…",6,N],[8,"AsyncWrite","","Writes bytes asynchronously.",N,N],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",7,N],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",7,[[["self"]],["result",["async","error"]]]],[10,"shutdown","","Initiates or attempts to shut down this writer, returning…",7,[[["self"]],["result",["async","error"]]]],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes…",7,[[["self"],["b"]],["result",["async","error"]]]],[8,"Read","","The `Read` trait allows for reading bytes from a source.",N,N],[10,"read","","Pull some bytes from this source into the specified…",9,N],[11,"initializer","","Determines if this `Read`er can work with buffers of…",9,[[["self"]],["initializer"]]],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into…",9,[[["self"],["vec"]],["result",["usize","error"]]]],[11,"read_to_string","","Read all bytes until EOF in this source, appending them to…",9,[[["self"],["string"]],["result",["usize","error"]]]],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",9,N],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",9,[[["self"]],["self"]]],[11,"bytes","","Transforms this `Read` instance to an [`Iterator`] over…",9,[[["self"]],["bytes"]]],[11,"chain","","Creates an adaptor which will chain this stream with…",9,[[["self"],["r"]],["chain"]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",9,[[["self"],["u64"]],["take"]]],[8,"Write","","A trait for objects which are byte-oriented sinks.",N,N],[10,"write","","Write a buffer into this writer, returning how many bytes…",10,N],[10,"flush","","Flush this output stream, ensuring that all intermediately…",10,[[["self"]],["result",["error"]]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",10,N],[11,"write_fmt","","Writes a formatted string into this writer, returning any…",10,[[["self"],["arguments"]],["result",["error"]]]],[11,"by_ref","","Creates a \"by reference\" adaptor for this instance of…",10,[[["self"]],["self"]]],[8,"Future","","Trait for types which are a placeholder of a value that…",N,N],[16,"Item","","The type of value that this future will resolved with if…",12,N],[16,"Error","","The type of error that this future will resolve with if it…",12,N],[10,"poll","","Query this future to see if its value has become…",12,[[["self"]],["result",["async"]]]],[11,"wait","","Block the current thread until this future is resolved.",12,[[["self"]],["result"]]],[11,"map","","Map this future's result to a different type, returning a…",12,[[["self"],["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a…",12,[[["self"],["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From`…",12,[[["self"]],["fromerr"]]],[11,"then","","Chain on a computation for when a future finished, passing…",12,[[["self"],["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved…",12,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",12,[[["self"],["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",12,[[["self"],["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to…",12,[[["self"],["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to…",12,[[["self"],["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",12,[[["self"],["b"],["c"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",12,[[["self"],["b"],["c"],["d"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",12,[[["self"],["b"],["c"],["d"],["e"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",12,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful…",12,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",12,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",12,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",12,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",12,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",12,[[["self"]],["shared"]]],[0,"future","","Futures",N,N],[8,"Future","tokio::prelude::future","Trait for types which are a placeholder of a value that…",N,N],[16,"Item","","The type of value that this future will resolved with if…",12,N],[16,"Error","","The type of error that this future will resolve with if it…",12,N],[10,"poll","","Query this future to see if its value has become…",12,[[["self"]],["result",["async"]]]],[11,"wait","","Block the current thread until this future is resolved.",12,[[["self"]],["result"]]],[11,"map","","Map this future's result to a different type, returning a…",12,[[["self"],["f"]],["map"]]],[11,"map_err","","Map this future's error to a different error, returning a…",12,[[["self"],["f"]],["maperr"]]],[11,"from_err","","Map this future's error to any error implementing `From`…",12,[[["self"]],["fromerr"]]],[11,"then","","Chain on a computation for when a future finished, passing…",12,[[["self"],["f"]],["then"]]],[11,"and_then","","Execute another future after this one has resolved…",12,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Execute another future if this one resolves with an error.",12,[[["self"],["f"]],["orelse"]]],[11,"select","","Waits for either one of two futures to complete.",12,[[["self"],["b"]],["select"]]],[11,"select2","","Waits for either one of two differently-typed futures to…",12,[[["self"],["b"]],["select2"]]],[11,"join","","Joins the result of two futures, waiting for them both to…",12,[[["self"],["b"]],["join"]]],[11,"join3","","Same as `join`, but with more futures.",12,[[["self"],["b"],["c"]],["join3"]]],[11,"join4","","Same as `join`, but with more futures.",12,[[["self"],["b"],["c"],["d"]],["join4"]]],[11,"join5","","Same as `join`, but with more futures.",12,[[["self"],["b"],["c"],["d"],["e"]],["join5"]]],[11,"into_stream","","Convert this future into a single element stream.",12,[[["self"]],["intostream"]]],[11,"flatten","","Flatten the execution of this future when the successful…",12,[[["self"]],["flatten"]]],[11,"flatten_stream","","Flatten the execution of this future when the successful…",12,[[["self"]],["flattenstream"]]],[11,"fuse","","Fuse a future such that `poll` will never again be called…",12,[[["self"]],["fuse"]]],[11,"inspect","","Do something with the item of a future, passing it on.",12,[[["self"],["f"]],["inspect"]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",12,[[["self"]],["catchunwind"]]],[11,"shared","","Create a cloneable handle to this future where all handles…",12,[[["self"]],["shared"]]],[8,"IntoFuture","","Class of types which can be converted into a future.",N,N],[16,"Future","","The future that this type can be converted into.",13,N],[16,"Item","","The item that the future may resolve with.",13,N],[16,"Error","","The error that the future may resolve with.",13,N],[10,"into_future","","Consumes this object and produces a future.",13,N],[8,"FutureFrom","","Asynchronous conversion from a type `T`.",N,N],[16,"Future","","The future for the conversion.",14,N],[16,"Error","","Possible errors during conversion.",14,N],[10,"future_from","","Consume the given value, beginning the conversion.",14,N],[8,"Executor","","A trait for types which can spawn fresh futures.",N,N],[10,"execute","","Spawns a future to run on this `Executor`, typically in…",15,[[["self"],["f"]],["result",["executeerror"]]]],[3,"ExecuteError","","Errors returned from the `Spawn::spawn` function.",N,N],[4,"ExecuteErrorKind","","Kinds of errors that can be returned from the…",N,N],[13,"Shutdown","","This executor has shut down and will no longer accept new…",16,N],[13,"NoCapacity","","This executor has no more capacity to run more futures.…",16,N],[3,"AndThen","","Future for the `and_then` combinator, chaining a…",N,N],[5,"poll_fn","","Creates a new future wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[3,"Join4","","Future for the `join4` combinator, waiting for four…",N,N],[3,"Err","","A future representing a value that is immediately ready.",N,N],[3,"Inspect","","Do something with the item of a future, passing it on.",N,N],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",N,N],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",N,N],[3,"LoopFn","","A future implementing a tail-recursive loop.",N,N],[3,"MapErr","","Future for the `map_err` combinator, changing the error…",N,N],[3,"Then","","Future for the `then` combinator, chaining computations on…",N,N],[5,"join_all","","Creates a future which represents a collection of the…",N,[[["i"]],["joinall"]]],[3,"PollFn","","A future which adapts a function returning `Poll`.",N,N],[4,"Loop","","The status of a `loop_fn` loop.",N,N],[13,"Break","","Indicates that the loop has completed with output `T`.",17,N],[13,"Continue","","Indicates that the loop function should be called again…",17,N],[3,"SharedItem","","A wrapped item of the original future that is cloneable…",N,N],[3,"SelectNext","","Future yielded as the second result in a `Select` future.",N,N],[3,"Shared","","A future that is cloneable and can be polled in multiple…",N,N],[3,"Join5","","Future for the `join5` combinator, waiting for five…",N,N],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",N,[[["s"],["f"]],["loopfn"]]],[5,"select_all","","Creates a new future which will select over a list of…",N,[[["i"]],["selectall"]]],[3,"Empty","","A future which is never resolved.",N,N],[5,"failed","","Creates a \"leaf future\" from an immediate value of a…",N,[[["e"]],["futureresult"]]],[3,"Collect","","A future which takes a list of futures and resolves with a…",N,N],[3,"OrElse","","Future for the `or_else` combinator, chaining a…",N,N],[5,"empty","","Creates a future which never resolves, representing a…",N,[[],["empty"]]],[5,"lazy","","Creates a new future which will eventually be the same as…",N,[[["f"]],["lazy"]]],[5,"done","","Creates a new \"leaf future\" which will resolve with the…",N,[[["result"]],["futureresult"]]],[3,"Lazy","","A future which defers creation of the actual future until…",N,N],[3,"Join3","","Future for the `join3` combinator, waiting for three…",N,N],[4,"Either","","Combines two different futures yielding the same item and…",N,N],[13,"A","","First branch of the type",18,N],[13,"B","","Second branch of the type",18,N],[5,"ok","","Creates a \"leaf future\" from an immediate value of a…",N,[[["t"]],["futureresult"]]],[3,"SharedError","","A wrapped error of the original future that is cloneable…",N,N],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a…",N,N],[3,"Map","","Future for the `map` combinator, changing the type of a…",N,N],[3,"Flatten","","Future for the `flatten` combinator, flattening a…",N,N],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of…",N,N],[5,"select_ok","","Creates a new future which will select the first…",N,[[["i"]],["selectok"]]],[3,"Select2","","Future for the `select2` combinator, waiting for one of…",N,N],[3,"Join","","Future for the `join` combinator, waiting for two futures…",N,N],[3,"Select","","Future for the `select` combinator, waiting for one of two…",N,N],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of…",N,N],[3,"FromErr","","Future for the `from_err` combinator, changing the error…",N,N],[3,"IntoStream","","Future that forwards one element from the underlying…",N,N],[8,"Stream","tokio::prelude","A stream of values, not all of which may have been…",N,N],[16,"Item","","The type of item this stream will yield on success.",19,N],[16,"Error","","The type of error this stream may generate.",19,N],[10,"poll","","Attempt to pull out the next value of this stream,…",19,[[["self"]],["result",["async"]]]],[11,"wait","","Creates an iterator which blocks the current thread until…",19,[[["self"]],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",19,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",19,[[["self"],["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error…",19,[[["self"],["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to…",19,[[["self"],["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",19,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing…",19,[[["self"],["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",19,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",19,[[["self"],["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector,…",19,[[["self"]],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single…",19,[[["self"]],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single…",19,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream,…",19,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",19,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided…",19,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate…",19,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",19,[[["self"],["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From`…",19,[[["self"]],["fromerr"]]],[11,"take","","Creates a new stream of at most `amt` items of the…",19,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the…",19,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called…",19,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",19,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",19,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",19,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",19,[[["self"],["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",19,[[["self"],["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",19,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",19,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",19,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",19,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either…",19,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been…",19,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",19,N],[11,"inspect","","Do something with each item of this stream, afterwards…",19,[[["self"],["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards…",19,[[["self"],["f"]],["inspecterr"]]],[0,"stream","","Asynchronous streams",N,N],[0,"futures_unordered","tokio::prelude::stream","An unbounded set of futures.",N,N],[3,"FuturesUnordered","tokio::prelude::stream::futures_unordered","An unbounded set of futures.",N,N],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",N,N],[8,"Stream","tokio::prelude::stream","A stream of values, not all of which may have been…",N,N],[16,"Item","","The type of item this stream will yield on success.",19,N],[16,"Error","","The type of error this stream may generate.",19,N],[10,"poll","","Attempt to pull out the next value of this stream,…",19,[[["self"]],["result",["async"]]]],[11,"wait","","Creates an iterator which blocks the current thread until…",19,[[["self"]],["wait"]]],[11,"into_future","","Converts this stream into a `Future`.",19,[[["self"]],["streamfuture"]]],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",19,[[["self"],["f"]],["map"]]],[11,"map_err","","Converts a stream of error type `T` to a stream of error…",19,[[["self"],["f"]],["maperr"]]],[11,"filter","","Filters the values produced by this stream according to…",19,[[["self"],["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",19,[[["self"],["f"]],["filtermap"]]],[11,"then","","Chain on a computation for when a value is ready, passing…",19,[[["self"],["f"]],["then"]]],[11,"and_then","","Chain on a computation for when a value is ready, passing…",19,[[["self"],["f"]],["andthen"]]],[11,"or_else","","Chain on a computation for when an error happens, passing…",19,[[["self"],["f"]],["orelse"]]],[11,"collect","","Collect all of the values of this stream into a vector,…",19,[[["self"]],["collect"]]],[11,"concat2","","Concatenate all results of a stream into a single…",19,[[["self"]],["concat2"]]],[11,"concat","","Concatenate all results of a stream into a single…",19,[[["self"]],["concat"]]],[11,"fold","","Execute an accumulating computation over a stream,…",19,[[["self"],["t"],["f"]],["fold"]]],[11,"flatten","","Flattens a stream of streams into just one continuous…",19,[[["self"]],["flatten"]]],[11,"skip_while","","Skip elements on this stream while the predicate provided…",19,[[["self"],["p"]],["skipwhile"]]],[11,"take_while","","Take elements from this stream while the predicate…",19,[[["self"],["p"]],["takewhile"]]],[11,"for_each","","Runs this stream to completion, executing the provided…",19,[[["self"],["f"]],["foreach"]]],[11,"from_err","","Map this stream's error to any error implementing `From`…",19,[[["self"]],["fromerr"]]],[11,"take","","Creates a new stream of at most `amt` items of the…",19,[[["self"],["u64"]],["take"]]],[11,"skip","","Creates a new stream which skips `amt` items of the…",19,[[["self"],["u64"]],["skip"]]],[11,"fuse","","Fuse a stream such that `poll` will never again be called…",19,[[["self"]],["fuse"]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",19,[[["self"]],["self"]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",19,[[["self"]],["catchunwind"]]],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",19,[[["self"],["usize"]],["buffered"]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures…",19,[[["self"],["usize"]],["bufferunordered"]]],[11,"merge","","An adapter for merging the output of two streams.",19,[[["self"],["s"]],["merge"]]],[11,"zip","","An adapter for zipping two streams together.",19,[[["self"],["s"]],["zip"]]],[11,"chain","","Adapter for chaining two stream.",19,[[["self"],["s"]],["chain"]]],[11,"peekable","","Creates a new stream which exposes a `peek` method.",19,[[["self"]],["peekable"]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a…",19,[[["self"],["usize"]],["chunks"]]],[11,"select","","Creates a stream that selects the next element from either…",19,[[["self"],["s"]],["select"]]],[11,"forward","","A future that completes after the given stream has been…",19,[[["self"],["s"]],["forward"]]],[11,"split","","Splits this `Stream + Sink` object into separate `Stream`…",19,N],[11,"inspect","","Do something with each item of this stream, afterwards…",19,[[["self"],["f"]],["inspect"]]],[11,"inspect_err","","Do something with the error of this stream, afterwards…",19,[[["self"],["f"]],["inspecterr"]]],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from…",N,[[["i"]],["futuresunordered"]]],[3,"Skip","","A stream combinator which skips a number of elements…",N,N],[5,"poll_fn","","Creates a new stream wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[3,"FilterMap","","A combinator used to filter the results of a stream and…",N,N],[3,"FuturesOrdered","","An unbounded queue of futures.",N,N],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",N,N],[3,"IterResult","","A stream which is just a shim over an underlying instance…",N,N],[3,"MapErr","","A stream combinator which will change the error type of a…",N,N],[3,"Filter","","A stream combinator used to filter the results of a stream…",N,N],[3,"Zip","","An adapter for merging the output of two streams.",N,N],[3,"PollFn","","A stream which adapts a function returning `Poll`.",N,N],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures…",N,N],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always…",N,[[["i"]],["iterok"]]],[3,"Iter","","A stream which is just a shim over an underlying instance…",N,N],[3,"Fold","","A future used to collect all the results of a stream into…",N,N],[5,"channel","","Creates an in-memory channel implementation of the…",N,N],[3,"SplitStream","","A `Stream` part of the split pair",N,N],[3,"OrElse","","A stream combinator which chains a computation onto errors…",N,N],[3,"Concat","","A stream combinator to concatenate the results of a stream…",N,N],[5,"iter","","Converts an `Iterator` over `Result`s into a `Stream`…",N,[[["j"]],["iter"]]],[3,"InspectErr","","Do something with the error of a stream, passing it on.",N,N],[5,"empty","","Creates a stream which contains no elements.",N,[[],["empty"]]],[3,"Peekable","","A `Stream` that implements a `peek` method.",N,N],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a…",N,N],[3,"Receiver","","The receiving end of a channel which implements the…",N,N],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a…",N,N],[3,"Take","","A stream combinator which returns a maximum number of…",N,N],[3,"Chunks","","An adaptor that chunks up elements in a vector.",N,N],[3,"Sender","","The transmission end of a channel which is used to send…",N,N],[3,"SplitSink","","A `Sink` part of the split pair",N,N],[3,"FromErr","","A stream combinator to change the error type of a stream.",N,N],[3,"Unfold","","A stream which creates futures, polls them and return…",N,N],[3,"AndThen","","A stream combinator which chains a computation onto values…",N,N],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from…",N,[[["i"]],["futuresordered"]]],[3,"Inspect","","Do something with the items of a stream, passing it on.",N,N],[3,"Wait","","A stream combinator which converts an asynchronous stream…",N,N],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",N,N],[3,"TakeWhile","","A stream combinator which takes elements from a stream…",N,N],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>`…",N,N],[12,"0","","",20,N],[12,"1","","",20,N],[3,"Then","","A stream combinator which chains a computation onto each…",N,N],[3,"Concat2","","A stream combinator to concatenate the results of a stream…",N,N],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a…",N,[[["t"],["f"]],["unfold"]]],[3,"ForEach","","A stream combinator which executes a unit closure over…",N,N],[3,"Empty","","A stream which contains no elements.",N,N],[3,"Repeat","","Stream that produces the same element repeatedly.",N,N],[3,"Merge","","An adapter for merging the output of two streams.",N,N],[3,"Collect","","A future which collects all of the values of a stream into…",N,N],[5,"once","","Creates a stream of single element",N,[[["result"]],["once"]]],[5,"repeat","","Create a stream which produces the same item repeatedly.",N,[[["t"]],["repeat"]]],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream`…",N,[[["j"]],["iterresult"]]],[3,"Once","","A stream which emits single element and then EOF.",N,N],[3,"SendError","","Error type for sending, used when the receiving end of the…",N,N],[3,"Map","","A stream combinator which will change the type of a stream…",N,N],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one…",N,N],[3,"Chain","","An adapter for chaining the output of two streams.",N,N],[3,"SkipWhile","","A stream combinator which skips elements of a stream while…",N,N],[3,"IterOk","","A stream which is just a shim over an underlying instance…",N,N],[4,"MergedItem","","An item returned from a merge stream, which represents an…",N,N],[13,"First","","An item from the first stream",21,N],[13,"Second","","An item from the second stream",21,N],[13,"Both","","Items from both streams",21,N],[3,"Select","","An adapter for merging the output of two streams.",N,N],[3,"FutureSender","","Future returned by `Sender::send`.",N,N],[3,"Buffered","","An adaptor for a stream of futures to execute the futures…",N,N],[8,"Sink","tokio::prelude","A `Sink` is a value into which other values can be sent,…",N,N],[16,"SinkItem","","The type of value that the sink accepts.",22,N],[16,"SinkError","","The type of value produced by the sink when an error occurs.",22,N],[10,"start_send","","Begin the process of sending a value to the sink.",22,N],[10,"poll_complete","","Flush all output from this sink, if necessary.",22,[[["self"]],["result",["async"]]]],[11,"close","","A method to indicate that no more values will ever be…",22,[[["self"]],["result",["async"]]]],[11,"wait","","Creates a new object which will produce a synchronous sink.",22,[[["self"]],["wait"]]],[11,"with","","Composes a function in front of the sink.",22,[[["self"],["f"]],["with"]]],[11,"with_flat_map","","Composes a function in front of the sink.",22,[[["self"],["f"]],["withflatmap"]]],[11,"sink_map_err","","Transforms the error returned by the sink.",22,[[["self"],["f"]],["sinkmaperr"]]],[11,"sink_from_err","","Map this sink's error to any error implementing `From` for…",22,[[["self"]],["sinkfromerr"]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",22,[[["self"],["usize"]],["buffer"]]],[11,"fanout","","Fanout items to multiple sinks.",22,[[["self"],["s"]],["fanout"]]],[11,"flush","","A future that completes when the sink has finished…",22,[[["self"]],["flush"]]],[11,"send","","A future that completes after the given item has been…",22,N],[11,"send_all","","A future that completes after the given stream has been…",22,[[["self"],["s"]],["sendall"]]],[8,"IntoFuture","","Class of types which can be converted into a future.",N,N],[16,"Future","","The future that this type can be converted into.",13,N],[16,"Item","","The item that the future may resolve with.",13,N],[16,"Error","","The error that the future may resolve with.",13,N],[10,"into_future","","Consumes this object and produces a future.",13,N],[4,"Async","","Return type of future, indicating whether a value is ready…",N,N],[13,"Ready","","Represents that a value is immediately ready.",23,N],[13,"NotReady","","Represents that a value is not ready yet, but may be so…",23,N],[4,"AsyncSink","","The result of an asynchronous attempt to send a value to a…",N,N],[13,"Ready","","The `start_send` attempt succeeded, so the sending process…",24,N],[13,"NotReady","","The `start_send` attempt failed due to the sink being…",24,N],[6,"Poll","","Return type of the `Future::poll` method, indicates…",N,N],[0,"task","","Tasks used to drive a future computation",N,N],[5,"spawn","tokio::prelude::task","Spawns a future or stream, returning it and the new task…",N,[[["t"]],["spawn"]]],[8,"Executor","","A trait representing requests to poll futures.",N,N],[10,"execute","","Requests that `Run` is executed soon on the given executor.",25,N],[3,"AtomicTask","","A synchronization primitive for task notification.",N,N],[8,"EventSet","","A concurrent set which allows for the insertion of `usize`…",N,N],[10,"insert","","Insert the given ID into the set",26,N],[3,"Run","","Units of work submitted to an `Executor`, currently only…",N,N],[3,"UnparkEvent","","A set insertion to trigger upon `unpark`.",N,N],[3,"Task","","A handle to a \"task\", which represents a single…",N,N],[3,"TaskRc","","A reference to a piece of data that's accessible only…",N,N],[3,"Spawn","","Representation of a spawned future/stream.",N,N],[5,"current","","Returns a handle to the current task to call `notify` at a…",N,[[],["task"]]],[3,"LocalKey","","A key for task-local data stored in a future's task.",N,N],[5,"with_unpark_event","","For the duration of the given callback, add an \"unpark…",N,[[["unparkevent"],["f"]],["r"]]],[5,"init","","Initialize the `futures` task system.",N,N],[8,"Unpark","","A trait which represents a sink of notifications that a…",N,N],[10,"unpark","","Indicates that an associated future and/or task are ready…",27,N],[8,"FutureExt","tokio::prelude","An extension trait for `Future` that provides a variety of…",N,N],[11,"timeout","","Creates a new future which allows `self` until `timeout`.",28,[[["self"],["duration"]],["timeout"]]],[8,"StreamExt","","An extension trait for `Stream` that provides a variety of…",N,N],[11,"timeout","","Creates a new stream which allows `self` until `timeout`.",29,[[["self"],["duration"]],["timeout"]]],[0,"reactor","tokio","Event loop that drives Tokio I/O resources.",N,N],[3,"Reactor","tokio::reactor","The core reactor, or event loop.",N,N],[3,"Handle","","A reference to a reactor.",N,N],[3,"Background","","Handle to the reactor running on a background thread.",N,N],[3,"Turn","","Return value from the `turn` method on `Reactor`.",N,N],[3,"Registration","","Associates an I/O resource with the reactor instance that…",N,N],[3,"PollEvented2","","Associates an I/O resource that implements the…",N,N],[0,"runtime","tokio","A batteries included runtime for applications using Tokio.",N,N],[3,"Builder","tokio::runtime","Builds Tokio Runtime with custom configuration values.",N,N],[3,"Shutdown","","A future that resolves when the Tokio `Runtime` is shut…",N,N],[3,"TaskExecutor","","Executes futures on the runtime",N,N],[3,"Runtime","","Handle to the Tokio runtime.",N,N],[5,"run","","Start the Tokio runtime using the supplied future to…",N,[[["f"]]]],[11,"new","","Returns a new runtime builder initialized with default…",30,[[],["builder"]]],[11,"clock","","Set the `Clock` instance that will be used by the runtime.",30,[[["self"],["clock"]],["self"]]],[11,"core_threads","","Set the maximum number of worker threads for the…",30,[[["self"],["usize"]],["self"]]],[11,"blocking_threads","","Set the maximum number of concurrent blocking sections in…",30,[[["self"],["usize"]],["self"]]],[11,"name_prefix","","Set name prefix of threads spawned by the `Runtime`'s…",30,[[["self"],["s"]],["self"]]],[11,"stack_size","","Set the stack size (in bytes) for worker threads.",30,[[["self"],["usize"]],["self"]]],[11,"build","","Create the configured `Runtime`.",30,[[["self"]],["result",["runtime"]]]],[0,"current_thread","","A runtime implementation that runs everything on the…",N,N],[5,"spawn","tokio::runtime::current_thread","Executes a future on the current thread.",N,N],[3,"TaskExecutor","","Executes futures on the current thread.",N,N],[3,"Builder","","Builds a Single-threaded runtime with custom configuration…",N,N],[3,"Runtime","","Single-threaded runtime provides a way to start reactor…",N,N],[3,"Handle","","Handle to spawn a future on the corresponding…",N,N],[5,"block_on_all","","Run the provided future to completion using a runtime…",N,[[["f"]],["result"]]],[11,"new","","Returns a new runtime builder initialized with default…",31,[[],["builder"]]],[11,"clock","","Set the `Clock` instance that will be used by the runtime.",31,[[["self"],["clock"]],["self"]]],[11,"build","","Create the configured `Runtime`.",31,[[["self"]],["result",["runtime"]]]],[11,"spawn","","Spawn a future onto the `CurrentThread` runtime instance…",32,[[["self"],["f"]],["result",["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",32,[[["self"]],["result",["spawnerror"]]]],[11,"new","","Returns a new runtime initialized with default…",33,[[],["result",["runtime"]]]],[11,"handle","","Get a new handle to spawn futures on the single-threaded…",33,[[["self"]],["handle"]]],[11,"spawn","","Spawn a future onto the single-threaded Tokio runtime.",33,[[["self"],["f"]],["self"]]],[11,"block_on","","Runs the provided future, blocking the current thread…",33,[[["self"],["f"]],["result"]]],[11,"run","","Run the executor to completion, blocking the thread until…",33,[[["self"]],["result",["runerror"]]]],[11,"spawn","tokio::runtime","Spawn a future onto the Tokio runtime.",34,[[["self"],["f"]]]],[11,"new","","Create a new runtime instance with default configuration…",35,[[],["result"]]],[11,"reactor","","Return a reference to the reactor handle for this runtime…",35,[[["self"]],["handle"]]],[11,"executor","","Return a handle to the runtime's executor.",35,[[["self"]],["taskexecutor"]]],[11,"spawn","","Spawn a future onto the Tokio runtime.",35,[[["self"],["f"]],["self"]]],[11,"block_on","","Run a future to completion on the Tokio runtime.",35,[[["self"],["f"]],["result"]]],[11,"block_on_all","","Run a future to completion on the Tokio runtime, then wait…",35,[[["self"],["f"]],["result"]]],[11,"shutdown_on_idle","","Signals the runtime to shutdown once it becomes idle.",35,[[["self"]],["shutdown"]]],[11,"shutdown_now","","Signals the runtime to shutdown immediately.",35,[[["self"]],["shutdown"]]],[0,"timer","tokio","Utilities for tracking time.",N,N],[0,"delay_queue","tokio::timer","A queue of delayed elements.",N,N],[3,"DelayQueue","tokio::timer::delay_queue","A queue of delayed elements.",N,N],[3,"Expired","","An entry in `DelayQueue` that has expired and removed.",N,N],[3,"Key","","Token to a value stored in a `DelayQueue`.",N,N],[3,"DelayQueue","tokio::timer","A queue of delayed elements.",N,N],[3,"Error","","Errors encountered by the timer implementation.",N,N],[3,"Interval","","A stream representing notifications at fixed interval",N,N],[3,"Delay","","A future that completes at a specified instant in time.",N,N],[3,"Timeout","","Allows a `Future` or `Stream` to execute for a limited…",N,N],[0,"timeout","","Allows a future or stream to execute for a maximum amount…",N,N],[3,"Timeout","tokio::timer::timeout","Allows a `Future` or `Stream` to execute for a limited…",N,N],[3,"Error","","Error returned by `Timeout`.",N,N],[0,"util","tokio","Utilities for working with Tokio.",N,N],[11,"timeout","tokio::prelude","Creates a new future which allows `self` until `timeout`.",28,[[["self"],["duration"]],["timeout"]]],[11,"timeout","","Creates a new stream which allows `self` until `timeout`.",29,[[["self"],["duration"]],["timeout"]]],[8,"FutureExt","tokio::util","An extension trait for `Future` that provides a variety of…",N,N],[11,"timeout","tokio::prelude","Creates a new future which allows `self` until `timeout`.",28,[[["self"],["duration"]],["timeout"]]],[8,"StreamExt","tokio::util","An extension trait for `Stream` that provides a variety of…",N,N],[11,"timeout","tokio::prelude","Creates a new stream which allows `self` until `timeout`.",29,[[["self"],["duration"]],["timeout"]]],[11,"from","tokio::codec","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","tokio::codec::length_delimited","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","tokio::executor","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into_future","","",44,[[["self"]],["f"]]],[11,"from","tokio::runtime::current_thread","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","tokio::fs","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","tokio::fs::file","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into_future","","",47,[[["self"]],["f"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into_future","","",48,[[["self"]],["f"]]],[11,"from","tokio::fs","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","tokio::fs::file","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into_future","","",50,[[["self"]],["f"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into_future","","",51,[[["self"]],["f"]]],[11,"from","tokio::fs::os::unix","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into_future","","",52,[[["self"]],["f"]]],[11,"from","tokio::io","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into_future","","",56,[[["self"]],["f"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into_future","","",57,[[["self"]],["f"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into_future","","",59,[[["self"]],["f"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into_future","","",60,[[["self"]],["f"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into_future","","",61,[[["self"]],["f"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into_future","","",63,[[["self"]],["f"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into_future","","",64,[[["self"]],["f"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_string","","",66,[[["self"]],["string"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","tokio::net::tcp","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","tokio::net::udp","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","tokio::net::unix","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","tokio::net::tcp","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_future","","",73,[[["self"]],["f"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","tokio::net::udp","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into_future","","",75,[[["self"]],["f"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into_future","","",76,[[["self"]],["f"]]],[11,"from","tokio::net::unix","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into_future","","",77,[[["self"]],["f"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into_future","","",79,[[["self"]],["f"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into_future","","",80,[[["self"]],["f"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","tokio::prelude::future","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into_future","","",83,[[["self"]],["f"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into_future","","",84,[[["self"]],["f"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into_future","","",85,[[["self"]],["f"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into_future","","",86,[[["self"]],["f"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into_future","","",87,[[["self"]],["f"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into_future","","",88,[[["self"]],["f"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into_future","","",89,[[["self"]],["f"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into_future","","",90,[[["self"]],["f"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into_future","","",91,[[["self"]],["f"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"into_future","","",92,[[["self"]],["f"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into_future","","",94,[[["self"]],["f"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into_future","","",95,[[["self"]],["f"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into_future","","",96,[[["self"]],["f"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into_future","","",97,[[["self"]],["f"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into_future","","",98,[[["self"]],["f"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"into_future","","",99,[[["self"]],["f"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"into_future","","",100,[[["self"]],["f"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"into_future","","",101,[[["self"]],["f"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_future","","",18,[[["self"]],["f"]]],[11,"to_string","","",102,[[["self"]],["string"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into_future","","",104,[[["self"]],["f"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into_future","","",105,[[["self"]],["f"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"into_future","","",106,[[["self"]],["f"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"into_future","","",107,[[["self"]],["f"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"into_future","","",108,[[["self"]],["f"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"into_future","","",109,[[["self"]],["f"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"into_future","","",110,[[["self"]],["f"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"into_future","","",111,[[["self"]],["f"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","tokio::prelude::stream::futures_unordered","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"into_iter","","",114,[[["self"]],["i"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","tokio::prelude::stream","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"into_future","","",126,[[["self"]],["f"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"into_future","","",129,[[["self"]],["f"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"into_future","","",132,[[["self"]],["f"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into_future","","",134,[[["self"]],["f"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"into_iter","","",143,[[["self"]],["i"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"into_future","","",147,[[["self"]],["f"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"into_future","","",148,[[["self"]],["f"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"into_future","","",152,[[["self"]],["f"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"to_string","","",154,[[["self"]],["string"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"into_future","","",161,[[["self"]],["f"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"from","tokio::prelude","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","tokio::prelude::task","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"from","tokio::reactor","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"from","tokio::runtime","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"into_future","","",176,[[["self"]],["f"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","tokio::runtime::current_thread","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","tokio::timer","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"from","tokio::timer::delay_queue","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"to_string","tokio::timer","",180,[[["self"]],["string"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"into_future","","",182,[[["self"]],["f"]]],[11,"from","tokio::timer::timeout","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"into_future","","",183,[[["self"]],["f"]]],[11,"to_string","","",184,[[["self"]],["string"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"eq","tokio::io","",8,[[["self"],["errorkind"]],["bool"]]],[11,"description","","",66,[[["self"]],["str"]]],[11,"cause","","",66,[[["self"]],["option",["error"]]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result",["error"]]]],[11,"partial_cmp","","",8,[[["self"],["errorkind"]],["option",["ordering"]]]],[11,"cmp","","",8,[[["self"],["errorkind"]],["ordering"]]],[11,"from","","Converts a [`NulError`] into a [`io::Error`].",66,[[["nulerror"]],["error"]]],[11,"from","","",66,[[["intoinnererror"]],["error"]]],[11,"from","","Converts an [`ErrorKind`] into an [`Error`].",66,[[["errorkind"]],["error"]]],[11,"hash","","",8,N],[11,"fmt","","",66,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",8,[[["self"]],["errorkind"]]],[11,"drop","tokio::prelude::stream::futures_unordered","",113,N],[11,"drop","tokio::prelude::future","",95,N],[11,"next","tokio::prelude::stream::futures_unordered","",114,[[["self"]],["option"]]],[11,"size_hint","","",114,N],[11,"next","tokio::prelude::stream","",143,[[["self"]],["option"]]],[11,"eq","tokio::prelude","",24,[[["self"],["asyncsink"]],["bool"]]],[11,"ne","","",24,[[["self"],["asyncsink"]],["bool"]]],[11,"eq","tokio::prelude::future","",16,[[["self"],["executeerrorkind"]],["bool"]]],[11,"eq","tokio::prelude","",23,[[["self"],["async"]],["bool"]]],[11,"ne","","",23,[[["self"],["async"]],["bool"]]],[11,"description","tokio::prelude::future","",102,[[["self"]],["str"]]],[11,"cause","","",102,[[["self"]],["option",["error"]]]],[11,"description","tokio::prelude::stream","",20,[[["self"]],["str"]]],[11,"description","","",154,[[["self"]],["str"]]],[11,"poll","tokio::prelude::future","",111,[[["self"]],["result",["async"]]]],[11,"poll","","",83,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",161,[[["self"]],["result",["async"]]]],[11,"poll","","",152,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",84,[[["self"]],["result",["async"]]]],[11,"poll","","",89,[[["self"]],["result",["async"]]]],[11,"poll","","",101,[[["self"]],["result",["async"]]]],[11,"poll","","",110,[[["self"]],["result",["async"]]]],[11,"poll","","",86,[[["self"]],["result",["async"]]]],[11,"poll","","",98,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",129,[[["self"]],["result",["async"]]]],[11,"poll","","",126,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",91,[[["self"]],["result",["async"]]]],[11,"poll","","",95,[[["self"]],["result",["async"]]]],[11,"poll","","",97,[[["self"]],["result",["async"]]]],[11,"poll","","",87,[[["self"]],["result",["async"]]]],[11,"poll","","",18,[[["self"]],["result",["async"]]]],[11,"poll","","",96,[[["self"]],["result",["async"]]]],[11,"poll","","",92,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",147,[[["self"]],["result",["async"]]]],[11,"poll","","",132,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",88,[[["self"]],["result",["async"]]]],[11,"poll","","",90,[[["self"]],["result",["async"]]]],[11,"poll","","",105,[[["self"]],["result",["async"]]]],[11,"poll","","",94,[[["self"]],["result",["async"]]]],[11,"poll","","",85,[[["self"]],["result",["async"]]]],[11,"poll","","",107,[[["self"]],["result",["async"]]]],[11,"poll","","",108,[[["self"]],["result",["async"]]]],[11,"poll","","",109,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",148,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",104,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",134,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",106,[[["self"]],["result",["async"]]]],[11,"poll","","",100,[[["self"]],["result",["async"]]]],[11,"poll","","",99,[[["self"]],["result",["async"]]]],[11,"from","","",85,[[["result"]],["futureresult"]]],[11,"from","tokio::prelude","",23,[[["t"]],["async"]]],[11,"start_send","tokio::prelude::stream","",144,N],[11,"poll_complete","","",144,[[["self"]],["result",["async"]]]],[11,"close","","",144,[[["self"]],["result",["async"]]]],[11,"start_send","","",115,N],[11,"poll_complete","","",115,[[["self"]],["result",["async"]]]],[11,"close","","",115,[[["self"]],["result",["async"]]]],[11,"start_send","","",156,N],[11,"poll_complete","","",156,[[["self"]],["result",["async"]]]],[11,"close","","",156,[[["self"]],["result",["async"]]]],[11,"start_send","","",138,N],[11,"poll_complete","","",138,[[["self"]],["result",["async"]]]],[11,"close","","",138,[[["self"]],["result",["async"]]]],[11,"start_send","","",142,N],[11,"poll_complete","","",142,[[["self"]],["result",["async"]]]],[11,"close","","",142,[[["self"]],["result",["async"]]]],[11,"start_send","","",128,N],[11,"poll_complete","","",128,[[["self"]],["result",["async"]]]],[11,"close","","",128,[[["self"]],["result",["async"]]]],[11,"start_send","","",130,N],[11,"poll_complete","","",130,[[["self"]],["result",["async"]]]],[11,"close","","",130,[[["self"]],["result",["async"]]]],[11,"start_send","","",136,N],[11,"poll_complete","","",136,[[["self"]],["result",["async"]]]],[11,"close","","",136,[[["self"]],["result",["async"]]]],[11,"start_send","","",120,N],[11,"poll_complete","","",120,[[["self"]],["result",["async"]]]],[11,"close","","",120,[[["self"]],["result",["async"]]]],[11,"start_send","","",121,N],[11,"poll_complete","","",121,[[["self"]],["result",["async"]]]],[11,"close","","",121,[[["self"]],["result",["async"]]]],[11,"start_send","","",141,N],[11,"poll_complete","","",141,[[["self"]],["result",["async"]]]],[11,"close","","",141,[[["self"]],["result",["async"]]]],[11,"start_send","","",116,N],[11,"poll_complete","","",116,[[["self"]],["result",["async"]]]],[11,"close","","",116,[[["self"]],["result",["async"]]]],[11,"start_send","","",131,N],[11,"poll_complete","","",131,[[["self"]],["result",["async"]]]],[11,"close","","",131,[[["self"]],["result",["async"]]]],[11,"start_send","","",124,N],[11,"poll_complete","","",124,[[["self"]],["result",["async"]]]],[11,"close","","",124,[[["self"]],["result",["async"]]]],[11,"start_send","","",146,N],[11,"poll_complete","","",146,[[["self"]],["result",["async"]]]],[11,"close","","",146,[[["self"]],["result",["async"]]]],[11,"start_send","","",155,N],[11,"poll_complete","","",155,[[["self"]],["result",["async"]]]],[11,"close","","",155,[[["self"]],["result",["async"]]]],[11,"start_send","","",139,N],[11,"poll_complete","","",139,[[["self"]],["result",["async"]]]],[11,"close","","",139,[[["self"]],["result",["async"]]]],[11,"start_send","","",135,N],[11,"poll_complete","","",135,[[["self"]],["result",["async"]]]],[11,"close","","",135,[[["self"]],["result",["async"]]]],[11,"start_send","","",145,N],[11,"poll_complete","","",145,[[["self"]],["result",["async"]]]],[11,"close","","",145,[[["self"]],["result",["async"]]]],[11,"start_send","","",162,N],[11,"poll_complete","","",162,[[["self"]],["result",["async"]]]],[11,"close","","",162,[[["self"]],["result",["async"]]]],[11,"start_send","","",158,N],[11,"poll_complete","","",158,[[["self"]],["result",["async"]]]],[11,"close","","",158,[[["self"]],["result",["async"]]]],[11,"deref","tokio::prelude::future","",93,[[["self"]],["t"]]],[11,"deref","","",102,[[["self"]],["e"]]],[11,"default","tokio::prelude::task","",163,[[],["atomictask"]]],[11,"poll","tokio::prelude::stream","",120,[[["self"]],["result",["async"]]]],[11,"poll","","",121,[[["self"]],["result",["async"]]]],[11,"poll","","",123,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",112,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",116,[[["self"]],["result",["async"]]]],[11,"poll","","",140,[[["self"]],["result",["async"]]]],[11,"poll","","",146,[[["self"]],["result",["async"]]]],[11,"poll","","",119,[[["self"]],["result",["async"]]]],[11,"poll","","",151,[[["self"]],["result",["async"]]]],[11,"poll","","",136,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream::futures_unordered","",113,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",155,[[["self"]],["result",["async"]]]],[11,"poll","","",124,[[["self"]],["result",["async"]]]],[11,"poll","","",128,[[["self"]],["result",["async"]]]],[11,"poll","","",139,[[["self"]],["result",["async"]]]],[11,"poll","","",117,[[["self"]],["result",["async"]]]],[11,"poll","","",145,[[["self"]],["result",["async"]]]],[11,"poll","","",115,[[["self"]],["result",["async"]]]],[11,"poll","","",142,[[["self"]],["result",["async"]]]],[11,"poll","","",131,[[["self"]],["result",["async"]]]],[11,"poll","","",159,[[["self"]],["result",["async"]]]],[11,"poll","","",149,[[["self"]],["result",["async"]]]],[11,"poll","","",150,[[["self"]],["result",["async"]]]],[11,"poll","","",127,[[["self"]],["result",["async"]]]],[11,"poll","","",133,[[["self"]],["result",["async"]]]],[11,"poll","","",130,[[["self"]],["result",["async"]]]],[11,"poll","","",122,[[["self"]],["result",["async"]]]],[11,"poll","","",156,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::future","",103,[[["self"]],["result",["async"]]]],[11,"poll","tokio::prelude::stream","",158,[[["self"]],["result",["async"]]]],[11,"poll","","",157,[[["self"]],["result",["async"]]]],[11,"poll","","",153,[[["self"]],["result",["async"]]]],[11,"poll","","",144,[[["self"]],["result",["async"]]]],[11,"poll","","",135,[[["self"]],["result",["async"]]]],[11,"poll","","",160,[[["self"]],["result",["async"]]]],[11,"poll","","",141,[[["self"]],["result",["async"]]]],[11,"poll","","",125,[[["self"]],["result",["async"]]]],[11,"poll","","",118,[[["self"]],["result",["async"]]]],[11,"poll","","",162,[[["self"]],["result",["async"]]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",88,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",135,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",163,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream::futures_unordered","",113,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",97,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",130,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",168,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",118,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",93,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",141,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",100,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",160,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",165,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",159,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",92,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",122,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",111,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",115,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",99,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",169,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream::futures_unordered","",114,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",91,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",161,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",98,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",140,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",166,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",94,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",129,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",107,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",156,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",112,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",167,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",162,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",102,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",150,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",109,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",119,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::task","",164,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",152,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",89,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",128,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",90,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",126,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",139,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",85,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",123,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",84,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",154,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",106,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",117,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","tokio::prelude::future","",85,[[["self"]],["futureresult"]]],[11,"clone","tokio::prelude","",24,[[["self"]],["asyncsink"]]],[11,"clone","tokio::prelude::task","",165,[[["self"]],["unparkevent"]]],[11,"clone","tokio::prelude::future","",16,[[["self"]],["executeerrorkind"]]],[11,"clone","tokio::prelude::task","",166,[[["self"]],["task"]]],[11,"clone","tokio::prelude","",23,[[["self"]],["async"]]],[11,"clone","tokio::prelude::future","",93,[[["self"]],["shareditem"]]],[11,"clone","","",95,[[["self"]],["shared"]]],[11,"clone","","",102,[[["self"]],["sharederror"]]],[11,"clone","tokio::prelude::task","",167,[[["self"]],["taskrc"]]],[11,"fmt","tokio::prelude::stream","",154,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::future","",102,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::prelude::stream","",20,[[["self"],["formatter"]],["result",["error"]]]],[11,"from_iter","","",117,[[["t"]],["futuresordered"]]],[11,"from_iter","tokio::prelude::stream::futures_unordered","",113,[[["t"]],["futuresunordered"]]],[11,"spawn","tokio::runtime::current_thread","",45,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"execute","","",45,[[["self"],["f"]],["result",["executeerror"]]]],[11,"clone","","",45,[[["self"]],["taskexecutor"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"spawn","tokio::executor","",42,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"status","","",42,[[["self"]],["result",["spawnerror"]]]],[11,"execute","","",42,[[["self"],["t"]],["result",["executeerror"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",42,[[["self"]],["defaultexecutor"]]],[11,"description","","",43,[[["self"]],["str"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result",["error"]]]],[11,"poll","tokio::codec","",38,[[["self"]],["result",["async"]]]],[11,"poll","","",37,[[["self"]],["result",["async"]]]],[11,"poll","tokio::io","",58,[[["self"]],["result",["async","error"]]]],[11,"poll","tokio::codec","",36,[[["self"]],["result",["async"]]]],[11,"read","tokio::io","",62,N],[11,"shutdown","","",65,[[["self"]],["result",["async","error"]]]],[11,"write_buf","","",65,[[["self"],["b"]],["result",["async","error"]]]],[11,"read_buf","","",62,[[["self"],["b"]],["result",["async","error"]]]],[11,"write","","",65,N],[11,"flush","","",65,[[["self"]],["result",["error"]]]],[11,"poll","","",59,[[["self"]],["result",["async","error"]]]],[11,"poll","","",63,[[["self"]],["result",["async","error"]]]],[11,"poll","","",56,[[["self"]],["result",["async","error"]]]],[11,"poll","","",64,[[["self"]],["result",["async","error"]]]],[11,"poll","","",61,[[["self"]],["result",["async","error"]]]],[11,"poll","","",57,[[["self"]],["result",["async","error"]]]],[11,"poll","","",60,[[["self"]],["result",["async","error"]]]],[11,"start_send","tokio::codec","",36,N],[11,"poll_complete","","",36,[[["self"]],["result",["async"]]]],[11,"close","","",36,[[["self"]],["result",["async"]]]],[11,"start_send","","",38,N],[11,"poll_complete","","",38,[[["self"]],["result",["async"]]]],[11,"close","","",38,[[["self"]],["result",["async"]]]],[11,"start_send","","",37,N],[11,"poll_complete","","",37,[[["self"]],["result",["async"]]]],[11,"close","","",37,[[["self"]],["result",["async"]]]],[11,"fmt","tokio::io","",63,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::codec","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::io","",62,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::codec","",36,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::io","",61,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::codec","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::io","",56,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::codec","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"decode","","",39,[[["self"],["bytesmut"]],["result",["option","error"]]]],[11,"decode","","",40,[[["self"],["bytesmut"]],["result",["option","error"]]]],[11,"decode_eof","","",40,[[["self"],["bytesmut"]],["result",["option","error"]]]],[11,"hash","","",40,N],[11,"hash","","",39,N],[11,"eq","","",40,[[["self"],["linescodec"]],["bool"]]],[11,"ne","","",40,[[["self"],["linescodec"]],["bool"]]],[11,"eq","","",39,[[["self"],["bytescodec"]],["bool"]]],[11,"ne","","",39,[[["self"],["bytescodec"]],["bool"]]],[11,"clone","","",39,[[["self"]],["bytescodec"]]],[11,"clone","","",40,[[["self"]],["linescodec"]]],[11,"cmp","","",40,[[["self"],["linescodec"]],["ordering"]]],[11,"cmp","","",39,[[["self"],["bytescodec"]],["ordering"]]],[11,"encode","","",39,[[["self"],["bytes"],["bytesmut"]],["result",["error"]]]],[11,"encode","","",40,[[["self"],["string"],["bytesmut"]],["result",["error"]]]],[11,"partial_cmp","","",40,[[["self"],["linescodec"]],["option",["ordering"]]]],[11,"lt","","",40,[[["self"],["linescodec"]],["bool"]]],[11,"le","","",40,[[["self"],["linescodec"]],["bool"]]],[11,"gt","","",40,[[["self"],["linescodec"]],["bool"]]],[11,"ge","","",40,[[["self"],["linescodec"]],["bool"]]],[11,"partial_cmp","","",39,[[["self"],["bytescodec"]],["option",["ordering"]]]],[11,"lt","","",39,[[["self"],["bytescodec"]],["bool"]]],[11,"le","","",39,[[["self"],["bytescodec"]],["bool"]]],[11,"gt","","",39,[[["self"],["bytescodec"]],["bool"]]],[11,"ge","","",39,[[["self"],["bytescodec"]],["bool"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result",["error"]]]],[11,"shutdown","tokio::io","",54,[[["self"]],["result",["async","error"]]]],[11,"shutdown","tokio::fs","",46,[[["self"]],["result",["async","error"]]]],[11,"shutdown","tokio::io","",55,[[["self"]],["result",["async","error"]]]],[11,"read","","",53,N],[11,"read","tokio::fs","",46,N],[11,"from","","",49,[[["openoptions"]],["openoptions"]]],[11,"write","tokio::io","",54,N],[11,"flush","","",54,[[["self"]],["result",["error"]]]],[11,"write","","",55,N],[11,"flush","","",55,[[["self"]],["result",["error"]]]],[11,"write","tokio::fs","",46,N],[11,"flush","","",46,[[["self"]],["result",["error"]]]],[11,"clone","","",49,[[["self"]],["openoptions"]]],[11,"drop","","",46,N],[11,"prepare_uninitialized_buffer","tokio::io","",53,N],[11,"prepare_uninitialized_buffer","tokio::fs","",46,N],[11,"poll","tokio::fs::file","",47,[[["self"]],["result",["async"]]]],[11,"poll","","",48,[[["self"]],["result",["async"]]]],[11,"poll","tokio::fs::os::unix","",52,[[["self"]],["result",["async"]]]],[11,"poll","tokio::fs::file","",51,[[["self"]],["result",["async"]]]],[11,"poll","","",50,[[["self"]],["result",["async"]]]],[11,"fmt","tokio::fs","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::io","",54,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::fs::os::unix","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::fs","",49,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::fs::file","",51,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::io","",55,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::fs::file","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::io","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",66,[[["error"]],["error"]]],[11,"default","tokio::reactor","Returns a \"default\" handle, i.e., a handle that lazily…",171,[[],["handle"]]],[11,"read","","",175,N],[11,"write","","",175,N],[11,"flush","","",175,[[["self"]],["result",["error"]]]],[11,"unpark","","",171,N],[11,"clone","","",171,[[["self"]],["handle"]]],[11,"drop","","",172,N],[11,"drop","","",175,N],[11,"shutdown","","",175,[[["self"]],["result",["async","error"]]]],[11,"unpark","","",170,N],[11,"park","","",170,[[["self"]],["result",["error"]]]],[11,"park_timeout","","",170,[[["self"],["duration"]],["result",["error"]]]],[11,"fmt","","",171,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",175,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",174,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",172,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",173,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer","",180,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer::timeout","",184,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",184,[[["self"]],["str"]]],[11,"description","tokio::timer","",180,[[["self"]],["str"]]],[11,"poll","","",177,[[["self"]],["result",["async","error"]]]],[11,"poll","tokio::timer::timeout","",183,[[["self"]],["result",["async"]]]],[11,"poll","tokio::timer","",181,[[["self"]],["result",["async"]]]],[11,"poll","","",182,[[["self"]],["result",["async"]]]],[11,"poll","tokio::timer::timeout","",183,[[["self"]],["result",["async"]]]],[11,"fmt","tokio::timer","",180,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer::delay_queue","",178,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer","",181,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer::timeout","",183,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer::delay_queue","",179,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer::timeout","",184,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","tokio::timer","",177,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",182,[[["self"],["formatter"]],["result",["error"]]]],[11,"read","tokio::net::tcp","",68,N],[11,"shutdown","","",68,[[["self"]],["result",["async","error"]]]],[11,"write_buf","","",68,[[["self"],["b"]],["result",["async","error"]]]],[11,"prepare_uninitialized_buffer","","",68,N],[11,"read_buf","","",68,[[["self"],["b"]],["result",["async","error"]]]],[11,"as_raw_fd","","",68,[[["self"]],["i32"]]],[11,"as_raw_fd","","",67,[[["self"]],["i32"]]],[11,"write","","",68,N],[11,"flush","","",68,[[["self"]],["result",["error"]]]],[11,"poll","","",73,[[["self"]],["result",["async","error"]]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result",["error"]]]],[11,"poll","","",74,[[["self"]],["result",["async","error"]]]],[11,"as_raw_fd","tokio::net::udp","",70,[[["self"]],["i32"]]],[11,"poll","","",76,[[["self"]],["result",["async","error"]]]],[11,"poll","","",75,[[["self"]],["result",["async","error"]]]],[11,"start_send","","",69,N],[11,"poll_complete","","",69,[[["self"]],["result",["async"]]]],[11,"close","","",69,[[["self"]],["result",["async"]]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result",["error"]]]],[11,"poll","","",69,[[["self"]],["result",["async"]]]],[11,"hash","tokio::net::unix","",11,N],[11,"read","","",72,N],[11,"prepare_uninitialized_buffer","","",72,N],[11,"read_buf","","",72,[[["self"],["b"]],["result",["async","error"]]]],[11,"eq","","",11,[[["self"],["ucred"]],["bool"]]],[11,"ne","","",11,[[["self"],["ucred"]],["bool"]]],[11,"as_raw_fd","","",81,[[["self"]],["i32"]]],[11,"as_raw_fd","","",71,[[["self"]],["i32"]]],[11,"as_raw_fd","","",72,[[["self"]],["i32"]]],[11,"shutdown","","",72,[[["self"]],["result",["async","error"]]]],[11,"write_buf","","",72,[[["self"],["b"]],["result",["async","error"]]]],[11,"write","","",72,N],[11,"flush","","",72,[[["self"]],["result",["error"]]]],[11,"clone","","",11,[[["self"]],["ucred"]]],[11,"poll","","",79,[[["self"]],["result",["async"]]]],[11,"poll","","",80,[[["self"]],["result",["async"]]]],[11,"poll","","",77,[[["self"]],["result",["async","error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result",["error"]]]],[11,"poll","","",78,[[["self"]],["result",["async","error"]]]],[11,"clone","tokio::codec::length_delimited","",4,[[["self"]],["builder"]]],[11,"clone","tokio::runtime::current_thread","",32,[[["self"]],["handle"]]],[11,"clone","tokio::runtime","",34,[[["self"]],["taskexecutor"]]],[11,"drop","","",35,[[["self"]]]],[11,"fmt","tokio::codec::length_delimited","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio::executor","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio::runtime","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio::runtime::current_thread","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio::runtime","",176,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio::codec::length_delimited","",41,[[["self"],["formatter"]],["result"]]],[11,"description","","",41,[[["self"]],["str"]]],[11,"poll","tokio::runtime","",176,[[["self"]],["poll"]]],[11,"into_future","tokio::executor","",44,N],[11,"execute","tokio::runtime::current_thread","",32,[[["self"],["t"]],["result",["executeerror"]]]],[11,"execute","tokio::runtime","",34,[[["self"],["t"]],["result",["executeerror"]]]],[11,"spawn","","",34,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"decode","tokio::codec::length_delimited","",3,[[["self"],["bytesmut"]],["result",["option"]]]],[11,"encode","","",3,[[["self"],["bytes"],["bytesmut"]],["result",["error"]]]],[11,"new","tokio::codec","Provides a `Stream` and `Sink` interface for reading and…",36,[[["t"],["u"]],["framed"]]],[11,"from_parts","","Provides a `Stream` and `Sink` interface for reading and…",36,[[["framedparts"]],["framed"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",36,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",36,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `Frame`, returning its underlying I/O stream.",36,[[["self"]],["t"]]],[11,"into_parts","","Consumes the `Frame`, returning its underlying I/O stream,…",36,[[["self"]],["framedparts"]]],[11,"new","","Create a new, default, `FramedParts`",2,[[["t"],["u"]],["framedparts"]]],[11,"new","","Creates a new `FramedRead` with the given `decoder`.",37,[[["t"],["d"]],["framedread"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",37,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",37,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `FramedRead`, returning its underlying I/O…",37,[[["self"]],["t"]]],[11,"decoder","","Returns a reference to the underlying decoder.",37,[[["self"]],["d"]]],[11,"decoder_mut","","Returns a mutable reference to the underlying decoder.",37,[[["self"]],["d"]]],[11,"new","","Creates a new `FramedWrite` with the given `encoder`.",38,[[["t"],["e"]],["framedwrite"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",38,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",38,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `FramedWrite`, returning its underlying I/O…",38,[[["self"]],["t"]]],[11,"encoder","","Returns a reference to the underlying decoder.",38,[[["self"]],["e"]]],[11,"encoder_mut","","Returns a mutable reference to the underlying decoder.",38,[[["self"]],["e"]]],[11,"new","","Creates a new `BytesCodec` for shipping around raw bytes.",39,[[],["bytescodec"]]],[11,"new","","Returns a `LinesCodec` for splitting up data into lines.",40,[[],["linescodec"]]],[11,"new_with_max_length","","Returns a `LinesCodec` with a maximum line length limit.",40,[[["usize"]],["linescodec"]]],[11,"max_length","","Returns the maximum line length when decoding.",40,[[["self"]],["usize"]]],[11,"current","tokio::executor","Returns a handle to the default executor for the current…",42,[[],["defaultexecutor"]]],[11,"shutdown","","Return a new `SpawnError` reflecting a shutdown executor…",43,[[],["spawnerror"]]],[11,"at_capacity","","Return a new `SpawnError` reflecting an executor at…",43,[[],["spawnerror"]]],[11,"is_shutdown","","Returns `true` if the error reflects a shutdown executor…",43,[[["self"]],["bool"]]],[11,"is_at_capacity","","Returns `true` if the error reflects an executor at…",43,[[["self"]],["bool"]]],[11,"current","tokio::runtime::current_thread","Returns an executor that executes futures on the current…",45,[[],["taskexecutor"]]],[11,"spawn_local","","Spawn a future onto the current `CurrentThread` instance.",45,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"open","tokio::fs","Attempts to open a file in read-only mode.",46,[[["p"]],["openfuture"]]],[11,"create","","Opens a file in write-only mode.",46,[[["p"]],["createfuture"]]],[11,"poll_seek","","Seek to an offset, in bytes, in a stream.",46,[[["self"],["seekfrom"]],["result",["async","error"]]]],[11,"seek","","Seek to an offset, in bytes, in a stream.",46,[[["self"],["seekfrom"]],["seekfuture"]]],[11,"poll_sync_all","","Attempts to sync all OS-internal metadata to disk.",46,[[["self"]],["result",["async","error"]]]],[11,"poll_sync_data","","This function is similar to `poll_sync_all`, except that…",46,[[["self"]],["result",["async","error"]]]],[11,"poll_set_len","","Truncates or extends the underlying file, updating the…",46,[[["self"],["u64"]],["result",["async","error"]]]],[11,"metadata","","Queries metadata about the underlying file.",46,[[["self"]],["metadatafuture"]]],[11,"poll_metadata","","Queries metadata about the underlying file.",46,[[["self"]],["result",["async","error"]]]],[11,"poll_try_clone","","Create a new `File` instance that shares the same…",46,[[["self"]],["result",["async","error"]]]],[11,"poll_set_permissions","","Changes the permissions on the underlying file.",46,[[["self"],["permissions"]],["result",["async","error"]]]],[11,"into_std","","Destructures the `tokio_fs::File` into a…",46,[[["self"]],["file"]]],[11,"new","","Creates a blank new set of options ready for configuration.",49,[[],["openoptions"]]],[11,"read","","See the underlying [`read`] call for details.",49,[[["self"],["bool"]],["openoptions"]]],[11,"write","","See the underlying [`write`] call for details.",49,[[["self"],["bool"]],["openoptions"]]],[11,"append","","See the underlying [`append`] call for details.",49,[[["self"],["bool"]],["openoptions"]]],[11,"truncate","","See the underlying [`truncate`] call for details.",49,[[["self"],["bool"]],["openoptions"]]],[11,"create","","See the underlying [`create`] call for details.",49,[[["self"],["bool"]],["openoptions"]]],[11,"create_new","","See the underlying [`create_new`] call for details.",49,[[["self"],["bool"]],["openoptions"]]],[11,"open","","Opens a file at `path` with the options specified by `self`.",49,[[["self"],["p"]],["openfuture"]]],[11,"into_inner","tokio::io","Returns the underlying I/O object.",58,[[["self"]],["a"]]],[11,"new","","Creates a new I/O error from a known kind of error as well…",66,[[["errorkind"],["e"]],["error"]]],[11,"last_os_error","","Returns an error representing the last OS error which…",66,[[],["error"]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS…",66,[[["i32"]],["error"]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",66,[[["self"]],["option",["i32"]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this…",66,[[["self"]],["option",["error"]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by…",66,[[["self"]],["option",["error"]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",66,[[["self"]],["option",["box"]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",66,[[["self"]],["errorkind"]]],[11,"bind","tokio::net::tcp","Create a new TCP listener associated with this event loop.",67,[[["socketaddr"]],["result",["tcplistener","error"]]]],[11,"poll_accept","","Attempt to accept a connection and create a new connected…",67,[[["self"]],["result",["async","error"]]]],[11,"poll_accept_std","","Attempt to accept a connection and create a new connected…",67,[[["self"]],["result",["async","error"]]]],[11,"from_std","","Create a new TCP listener from the standard library's TCP…",67,[[["tcplistener"],["handle"]],["result",["tcplistener","error"]]]],[11,"local_addr","","Returns the local address that this listener is bound to.",67,[[["self"]],["result",["socketaddr","error"]]]],[11,"incoming","","Consumes this listener, returning a stream of the sockets…",67,[[["self"]],["incoming"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",67,[[["self"]],["result",["u32","error"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",67,[[["self"],["u32"]],["result",["error"]]]],[11,"connect","","Create a new TCP stream connected to the specified address.",68,[[["socketaddr"]],["connectfuture"]]],[11,"from_std","","Create a new `TcpStream` from a `net::TcpStream`.",68,[[["tcpstream"],["handle"]],["result",["tcpstream","error"]]]],[11,"connect_std","","Creates a new `TcpStream` from the pending socket inside…",68,[[["tcpstream"],["socketaddr"],["handle"]],["connectfuture"]]],[11,"poll_read_ready","","Check the TCP stream's read readiness state.",68,[[["self"],["ready"]],["result",["async","error"]]]],[11,"poll_write_ready","","Check the TCP stream's write readiness state.",68,[[["self"]],["result",["async","error"]]]],[11,"local_addr","","Returns the local address that this stream is bound to.",68,[[["self"]],["result",["socketaddr","error"]]]],[11,"peer_addr","","Returns the remote address that this stream is connected to.",68,[[["self"]],["result",["socketaddr","error"]]]],[11,"poll_peek","","Receives data on the socket from the remote address to…",68,N],[11,"shutdown","","Shuts down the read, write, or both halves of this…",68,[[["self"],["shutdown"]],["result",["error"]]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",68,[[["self"]],["result",["bool","error"]]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",68,[[["self"],["bool"]],["result",["error"]]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",68,[[["self"]],["result",["usize","error"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",68,[[["self"],["usize"]],["result",["error"]]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",68,[[["self"]],["result",["usize","error"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",68,[[["self"],["usize"]],["result",["error"]]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",68,[[["self"]],["result",["option","error"]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",68,[[["self"],["option",["duration"]]],["result",["error"]]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",68,[[["self"]],["result",["u32","error"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",68,[[["self"],["u32"]],["result",["error"]]]],[11,"linger","","Reads the linger duration for this socket by getting the…",68,[[["self"]],["result",["option","error"]]]],[11,"set_linger","","Sets the linger duration of this socket by setting the…",68,[[["self"],["option",["duration"]]],["result",["error"]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",68,[[["self"]],["result",["tcpstream","error"]]]],[11,"new","tokio::net::udp","Create a new `UdpFramed` backed by the given socket and…",69,[[["udpsocket"],["c"]],["udpframed"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",69,[[["self"]],["udpsocket"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",69,[[["self"]],["udpsocket"]]],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",69,[[["self"]],["udpsocket"]]],[11,"bind","","This function will create a new UDP socket and attempt to…",70,[[["socketaddr"]],["result",["udpsocket","error"]]]],[11,"from_std","","Creates a new `UdpSocket` from the previously bound socket…",70,[[["udpsocket"],["handle"]],["result",["udpsocket","error"]]]],[11,"local_addr","","Returns the local address that this socket is bound to.",70,[[["self"]],["result",["socketaddr","error"]]]],[11,"connect","","Connects the UDP socket setting the default destination…",70,[[["self"],["socketaddr"]],["result",["error"]]]],[11,"poll_send","","Sends data on the socket to the remote address to which it…",70,N],[11,"poll_recv","","Receives a single datagram message on the socket from the…",70,N],[11,"poll_send_to","","Sends data on the socket to the given address. On success,…",70,N],[11,"send_dgram","","Creates a future that will write the entire contents of…",70,[[["self"],["t"],["socketaddr"]],["senddgram"]]],[11,"poll_recv_from","","Receives data from the socket. On success, returns the…",70,N],[11,"recv_dgram","","Creates a future that receive a datagram to be written to…",70,[[["self"],["t"]],["recvdgram"]]],[11,"poll_read_ready","","Check the UDP socket's read readiness state.",70,[[["self"],["ready"]],["result",["async","error"]]]],[11,"poll_write_ready","","Check the UDP socket's write readiness state.",70,[[["self"]],["result",["async","error"]]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",70,[[["self"]],["result",["bool","error"]]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",70,[[["self"],["bool"]],["result",["error"]]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",70,[[["self"]],["result",["bool","error"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",70,[[["self"],["bool"]],["result",["error"]]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",70,[[["self"]],["result",["u32","error"]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",70,[[["self"],["u32"]],["result",["error"]]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",70,[[["self"]],["result",["bool","error"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",70,[[["self"],["bool"]],["result",["error"]]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",70,[[["self"]],["result",["u32","error"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",70,[[["self"],["u32"]],["result",["error"]]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",70,[[["self"],["ipv4addr"],["ipv4addr"]],["result",["error"]]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",70,[[["self"],["ipv6addr"],["u32"]],["result",["error"]]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",70,[[["self"],["ipv4addr"],["ipv4addr"]],["result",["error"]]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",70,[[["self"],["ipv6addr"],["u32"]],["result",["error"]]]],[11,"bind","tokio::net::unix","Creates a new `UnixListener` bound to the specified path.",71,[[["p"]],["result",["unixlistener","error"]]]],[11,"from_std","","Consumes a `UnixListener` in the standard library and…",71,[[["unixlistener"],["handle"]],["result",["unixlistener","error"]]]],[11,"local_addr","","Returns the local socket address of this listener.",71,[[["self"]],["result",["socketaddr","error"]]]],[11,"poll_read_ready","","Test whether this socket is ready to be read or not.",71,[[["self"],["ready"]],["result",["async","error"]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",71,[[["self"]],["result",["option","error"]]]],[11,"poll_accept","","Attempt to accept a connection and create a new connected…",71,[[["self"]],["result",["async","error"]]]],[11,"poll_accept_std","","Attempt to accept a connection and create a new connected…",71,[[["self"]],["result",["async","error"]]]],[11,"incoming","","Consumes this listener, returning a stream of the sockets…",71,[[["self"]],["incoming"]]],[11,"connect","","Connects to the socket named by `path`.",72,[[["p"]],["connectfuture"]]],[11,"from_std","","Consumes a `UnixStream` in the standard library and…",72,[[["unixstream"],["handle"]],["result",["unixstream","error"]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",72,[[],["result",["error"]]]],[11,"poll_read_ready","","Test whether this socket is ready to be read or not.",72,[[["self"],["ready"]],["result",["async","error"]]]],[11,"poll_write_ready","","Test whether this socket is ready to be written to or not.",72,[[["self"]],["result",["async","error"]]]],[11,"local_addr","","Returns the socket address of the local half of this…",72,[[["self"]],["result",["socketaddr","error"]]]],[11,"peer_addr","","Returns the socket address of the remote half of this…",72,[[["self"]],["result",["socketaddr","error"]]]],[11,"peer_cred","","Returns effective credentials of the process which called…",72,[[["self"]],["result",["ucred","error"]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",72,[[["self"]],["result",["option","error"]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",72,[[["self"],["shutdown"]],["result",["error"]]]],[11,"bind","","Creates a new `UnixDatagram` bound to the specified path.",81,[[["p"]],["result",["unixdatagram","error"]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",81,[[],["result",["error"]]]],[11,"from_std","","Consumes a `UnixDatagram` in the standard library and…",81,[[["unixdatagram"],["handle"]],["result",["unixdatagram","error"]]]],[11,"unbound","","Creates a new `UnixDatagram` which is not bound to any…",81,[[],["result",["unixdatagram","error"]]]],[11,"connect","","Connects the socket to the specified address.",81,[[["self"],["p"]],["result",["error"]]]],[11,"poll_read_ready","","Test whether this socket is ready to be read or not.",81,[[["self"],["ready"]],["result",["async","error"]]]],[11,"poll_write_ready","","Test whether this socket is ready to be written to or not.",81,[[["self"]],["result",["async","error"]]]],[11,"local_addr","","Returns the local address that this socket is bound to.",81,[[["self"]],["result",["socketaddr","error"]]]],[11,"peer_addr","","Returns the address of this socket's peer.",81,[[["self"]],["result",["socketaddr","error"]]]],[11,"poll_recv_from","","Receives data from the socket.",81,N],[11,"poll_recv","","Receives data from the socket.",81,N],[11,"recv_dgram","","Returns a future for receiving a datagram. See the…",81,[[["self"],["t"]],["recvdgram"]]],[11,"poll_send_to","","Sends data on the socket to the specified address.",81,N],[11,"poll_send","","Sends data on the socket to the socket's peer.",81,N],[11,"send_dgram","","Returns a future sending the data in buf to the socket at…",81,[[["self"],["t"],["p"]],["senddgram"]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",81,[[["self"]],["result",["option","error"]]]],[11,"shutdown","","Shut down the read, write, or both halves of this…",81,[[["self"],["shutdown"]],["result",["error"]]]],[11,"new","tokio::prelude::future","Create a new `ExecuteError`",82,[[["executeerrorkind"],["f"]],["executeerror"]]],[11,"kind","","Returns the associated reason for the error",82,[[["self"]],["executeerrorkind"]]],[11,"into_future","","Consumes self and returns the original future that was…",82,[[["self"]],["f"]]],[11,"is_done","","Returns whether the underlying future has finished or not.",88,[[["self"]],["bool"]]],[11,"peek","","If any clone of this `Shared` has completed execution,…",95,[[["self"]],["option",["result"]]]],[11,"split","","Splits out the homogeneous type from an either of tuples.",18,N],[11,"new","tokio::prelude::stream::futures_unordered","Constructs a new, empty `FuturesUnordered`",113,[[],["futuresunordered"]]],[11,"len","","Returns the number of futures contained in the set.",113,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no futures",113,[[["self"]],["bool"]]],[11,"push","","Push a future into the set.",113,N],[11,"iter_mut","","Returns an iterator that allows modifying each future in…",113,[[["self"]],["itermut"]]],[11,"get_ref","tokio::prelude::stream","Acquires a reference to the underlying stream that this…",115,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",115,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",115,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",116,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",116,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",116,[[["self"]],["s"]]],[11,"new","","Constructs a new, empty `FuturesOrdered`",117,[[],["futuresordered"]]],[11,"len","","Returns the number of futures contained in the queue.",117,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue contains no futures",117,[[["self"]],["bool"]]],[11,"push","","Push a future into the queue.",117,N],[11,"get_ref","","Acquires a reference to the underlying stream that this…",120,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",120,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",120,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",121,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",121,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",121,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",124,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",124,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",124,[[["self"]],["s"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",127,[[["self"],["splitsink"]],["result",["reuniteerror"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",130,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",130,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",130,[[["self"]],["s"]]],[11,"peek","","Peek retrieves a reference to the next item in the stream.",131,[[["self"]],["result",["async"]]]],[11,"sink_ref","","Get a shared reference to the inner sink. If this…",132,[[["self"]],["option"]]],[11,"sink_mut","","Get a mutable reference to the inner sink. If this…",132,[[["self"]],["option"]]],[11,"stream_ref","","Get a shared reference to the inner stream. If this…",132,[[["self"]],["option"]]],[11,"stream_mut","","Get a mutable reference to the inner stream. If this…",132,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",134,[[["self"]],["option"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",134,[[["self"]],["option"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",134,[[["self"]],["option"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",135,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",135,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",135,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",136,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",136,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",136,[[["self"]],["s"]]],[11,"send","","Sends a new value along this channel to the receiver.",137,[[["self"],["result"]],["futuresender"]]],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream +…",138,[[["self"],["splitstream"]],["result",["reuniteerror"]]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",139,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",139,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",139,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",141,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",141,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",141,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",142,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",142,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",142,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",143,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",143,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",143,[[["self"]],["s"]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",144,[[["self"]],["bool"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",144,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",144,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",144,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",145,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",145,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",145,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",155,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",155,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",155,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",156,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",156,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",156,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",158,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",158,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",158,[[["self"]],["s"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",162,[[["self"]],["s"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",162,[[["self"]],["s"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",162,[[["self"]],["s"]]],[11,"map","tokio::prelude","Change the success value of this `Async` with the closure…",23,[[["self"],["f"]],["async"]]],[11,"is_ready","","Returns whether this is `Async::Ready`",23,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `Async::NotReady`",23,[[["self"]],["bool"]]],[11,"map","","Change the NotReady value of this `AsyncSink` with the…",24,[[["self"],["f"]],["asyncsink"]]],[11,"is_ready","","Returns whether this is `AsyncSink::Ready`",24,[[["self"]],["bool"]]],[11,"is_not_ready","","Returns whether this is `AsyncSink::NotReady`",24,[[["self"]],["bool"]]],[11,"new","tokio::prelude::task","Create an `AtomicTask` initialized with the given `Task`",163,[[],["atomictask"]]],[11,"register","","Registers the current task to be notified on calls to…",163,N],[11,"register_task","","Registers the provided task to be notified on calls to…",163,N],[11,"notify","","Notifies the task that last called `register`.",163,N],[11,"run","","Actually run the task (invoking `poll` on its future) on…",164,N],[11,"new","","Construct an unpark event that will insert `id` into `set`…",165,[[["arc",["eventset"]],["usize"]],["unparkevent"]]],[11,"notify","","Indicate that the task should attempt to poll its future…",166,N],[11,"is_current","","Returns `true` when called from within the context of the…",166,[[["self"]],["bool"]]],[11,"will_notify_current","","This function is intended as a performance optimization…",166,[[["self"]],["bool"]]],[11,"new","","Inserts a new piece of task-local data into this task,…",167,[[["a"]],["taskrc"]]],[11,"with","","Operate with a reference to the underlying data.",167,[[["self"],["f"]],["r"]]],[11,"wait_future","","Waits for the internal future to complete, blocking this…",168,[[["self"]],["result"]]],[11,"wait_stream","","Like `wait_future`, except only waits for the next element…",168,[[["self"]],["option",["result"]]]],[11,"wait_send","","Blocks the current thread until it's able to send `value`…",168,N],[11,"wait_flush","","Blocks the current thread until it's able to flush this…",168,[[["self"]],["result"]]],[11,"wait_close","","Blocks the current thread until it's able to close this…",168,[[["self"]],["result"]]],[11,"get_ref","","Get a shared reference to the object the Spawn is wrapping.",168,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the object the Spawn is wrapping.",168,[[["self"]],["t"]]],[11,"into_inner","","Consume the Spawn, returning its inner object",168,[[["self"]],["t"]]],[11,"poll_fn_notify","","Calls the provided closure, scheduling notifications to be…",168,[[["self"],["n"],["usize"],["f"]],["r"]]],[11,"poll_future_notify","","Polls the internal future, scheduling notifications to be…",168,[[["self"],["n"],["usize"]],["result",["async"]]]],[11,"poll_stream_notify","","Like `poll_future_notify`, except polls the underlying…",168,[[["self"],["n"],["usize"]],["result",["async"]]]],[11,"start_send_notify","","Invokes the underlying `start_send` method with this task…",168,N],[11,"poll_flush_notify","","Invokes the underlying `poll_complete` method with this…",168,[[["self"],["n"],["usize"]],["result",["async"]]]],[11,"close_notify","","Invokes the underlying `close` method with this task in…",168,[[["self"],["n"],["usize"]],["result",["async"]]]],[11,"with","","Access this task-local key, running the provided closure…",169,[[["self"],["f"]],["r"]]],[11,"new","tokio::reactor","Creates a new event loop, returning any error that…",170,[[],["result",["reactor","error"]]]],[11,"handle","","Returns a handle to this event loop which can be sent…",170,[[["self"]],["handle"]]],[11,"set_fallback","","Configures the fallback handle to be returned from…",170,[[["self"]],["result",["setfallbackerror"]]]],[11,"turn","","Performs one iteration of the event loop, blocking on…",170,[[["self"],["option",["duration"]]],["result",["turn","error"]]]],[11,"is_idle","","Returns true if the reactor is currently idle.",170,[[["self"]],["bool"]]],[11,"background","","Run this reactor on a background thread.",170,[[["self"]],["result",["background","error"]]]],[11,"current","","Returns a handle to the current reactor.",171,[[],["handle"]]],[11,"handle","","Returns a reference to the reactor handle.",172,[[["self"]],["handle"]]],[11,"shutdown_on_idle","","Shutdown the reactor on idle.",172,[[["self"]],["shutdown"]]],[11,"shutdown_now","","Shutdown the reactor immediately",172,[[["self"]],["shutdown"]]],[11,"forget","","Run the reactor on its thread until the process terminates.",172,N],[11,"new","","Create a new `Registration`.",174,[[],["registration"]]],[11,"register","","Register the I/O resource with the default reactor.",174,[[["self"],["t"]],["result",["bool","error"]]]],[11,"deregister","","Deregister the I/O resource from the reactor it is…",174,[[["self"],["t"]],["result",["error"]]]],[11,"register_with","","Register the I/O resource with the specified reactor.",174,[[["self"],["t"],["handle"]],["result",["bool","error"]]]],[11,"poll_read_ready","","Poll for events on the I/O resource's read readiness stream.",174,[[["self"]],["result",["async","error"]]]],[11,"take_read_ready","","Consume any pending read readiness event.",174,[[["self"]],["result",["option","error"]]]],[11,"poll_write_ready","","Poll for events on the I/O resource's write readiness…",174,[[["self"]],["result",["async","error"]]]],[11,"take_write_ready","","Consume any pending write readiness event.",174,[[["self"]],["result",["option","error"]]]],[11,"new","","Creates a new `PollEvented` associated with the default…",175,[[["e"]],["pollevented"]]],[11,"new_with_handle","","Creates a new `PollEvented` associated with the specified…",175,[[["e"],["handle"]],["result",["pollevented","error"]]]],[11,"get_ref","","Returns a shared reference to the underlying I/O object…",175,[[["self"]],["e"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O object…",175,[[["self"]],["e"]]],[11,"into_inner","","Consumes self, returning the inner I/O object",175,[[["self"]],["result",["error"]]]],[11,"poll_read_ready","","Check the I/O resource's read readiness state.",175,[[["self"],["ready"]],["result",["async","error"]]]],[11,"clear_read_ready","","Clears the I/O resource's read readiness state and…",175,[[["self"],["ready"]],["result",["error"]]]],[11,"poll_write_ready","","Check the I/O resource's write readiness state.",175,[[["self"]],["result",["async","error"]]]],[11,"clear_write_ready","","Resets the I/O resource's write readiness state and…",175,[[["self"]],["result",["error"]]]],[11,"new","tokio::timer","Create a new, empty, `DelayQueue`",177,[[],["delayqueue"]]],[11,"with_capacity_and_handle","","Create a new, empty, `DelayQueue` backed by the specified…",177,[[["usize"],["handle"]],["delayqueue"]]],[11,"with_capacity","","Create a new, empty, `DelayQueue` with the specified…",177,[[["usize"]],["delayqueue"]]],[11,"insert_at","","Insert `value` into the queue set to expire at a specific…",177,[[["self"],["t"],["instant"]],["key"]]],[11,"insert","","Insert `value` into the queue set to expire after the…",177,[[["self"],["t"],["duration"]],["key"]]],[11,"remove","","Remove the item associated with `key` from the queue.",177,[[["self"],["key"]],["expired"]]],[11,"reset_at","","Sets the delay of the item associated with `key` to expire…",177,N],[11,"reset","","Sets the delay of the item associated with `key` to expire…",177,N],[11,"clear","","Clears the queue, removing all items.",177,N],[11,"capacity","","Returns the number of elements the queue can hold without…",177,[[["self"]],["usize"]]],[11,"reserve","","Reserve capacity for at least `additional` more items to…",177,N],[11,"is_empty","","Returns `true` if there are no items in the queue.",177,[[["self"]],["bool"]]],[11,"get_ref","tokio::timer::delay_queue","Returns a reference to the inner value.",178,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the inner value.",178,[[["self"]],["t"]]],[11,"into_inner","","Consumes `self` and returns the inner value.",178,[[["self"]],["t"]]],[11,"shutdown","tokio::timer","Create an error representing a shutdown timer.",180,[[],["error"]]],[11,"is_shutdown","","Returns `true` if the error was caused by the timer being…",180,[[["self"]],["bool"]]],[11,"at_capacity","","Create an error representing a timer at capacity.",180,[[],["error"]]],[11,"is_at_capacity","","Returns `true` if the error was caused by the timer being…",180,[[["self"]],["bool"]]],[11,"new","","Create a new `Interval` that starts at `at` and yields…",181,[[["instant"],["duration"]],["interval"]]],[11,"new_interval","","Creates new `Interval` that yields with interval of…",181,[[["duration"]],["interval"]]],[11,"new","","Create a new `Delay` instance that elapses at `deadline`.",182,[[["instant"]],["delay"]]],[11,"deadline","","Returns the instant at which the future will complete.",182,[[["self"]],["instant"]]],[11,"is_elapsed","","Returns true if the `Delay` has elapsed",182,[[["self"]],["bool"]]],[11,"reset","","Reset the `Delay` instance to a new deadline.",182,N],[11,"new","tokio::timer::timeout","Create a new `Timeout` that allows `value` to execute for…",183,[[["t"],["duration"]],["timeout"]]],[11,"get_ref","","Gets a reference to the underlying value in this timeout.",183,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",183,[[["self"]],["t"]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",183,[[["self"]],["t"]]],[11,"new_at","","Create a new `Timeout` that completes when `future`…",183,[[["t"],["instant"]],["timeout"]]],[11,"inner","","Create a new `Error` representing the inner value…",184,[[["t"]],["error"]]],[11,"is_inner","","Returns `true` if the error was caused by the inner value…",184,[[["self"]],["bool"]]],[11,"into_inner","","Consumes `self`, returning the inner future error.",184,[[["self"]],["option"]]],[11,"elapsed","","Create a new `Error` representing the inner value not…",184,[[],["error"]]],[11,"is_elapsed","","Returns `true` if the error was caused by the inner value…",184,[[["self"]],["bool"]]],[11,"timer","","Creates a new `Error` representing an error encountered by…",184,[[["error"]],["error"]]],[11,"is_timer","","Returns `true` if the error was caused by the timer.",184,[[["self"]],["bool"]]],[11,"into_timer","","Consumes `self`, returning the error raised by the timer…",184,[[["self"]],["option",["error"]]]]],"paths":[[8,"Decoder"],[8,"Encoder"],[3,"FramedParts"],[3,"LengthDelimitedCodec"],[3,"Builder"],[8,"Executor"],[8,"AsyncRead"],[8,"AsyncWrite"],[4,"ErrorKind"],[8,"Read"],[8,"Write"],[3,"UCred"],[8,"Future"],[8,"IntoFuture"],[8,"FutureFrom"],[8,"Executor"],[4,"ExecuteErrorKind"],[4,"Loop"],[4,"Either"],[8,"Stream"],[3,"ReuniteError"],[4,"MergedItem"],[8,"Sink"],[4,"Async"],[4,"AsyncSink"],[8,"Executor"],[8,"EventSet"],[8,"Unpark"],[8,"FutureExt"],[8,"StreamExt"],[3,"Builder"],[3,"Builder"],[3,"Handle"],[3,"Runtime"],[3,"TaskExecutor"],[3,"Runtime"],[3,"Framed"],[3,"FramedRead"],[3,"FramedWrite"],[3,"BytesCodec"],[3,"LinesCodec"],[3,"FrameTooBig"],[3,"DefaultExecutor"],[3,"SpawnError"],[3,"Spawn"],[3,"TaskExecutor"],[3,"File"],[3,"CreateFuture"],[3,"SeekFuture"],[3,"OpenOptions"],[3,"OpenFuture"],[3,"MetadataFuture"],[3,"SymlinkFuture"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[3,"Copy"],[3,"Flush"],[3,"Lines"],[3,"ReadExact"],[3,"ReadToEnd"],[3,"ReadUntil"],[3,"ReadHalf"],[3,"Shutdown"],[3,"WriteAll"],[3,"WriteHalf"],[3,"Error"],[3,"TcpListener"],[3,"TcpStream"],[3,"UdpFramed"],[3,"UdpSocket"],[3,"UnixListener"],[3,"UnixStream"],[3,"ConnectFuture"],[3,"Incoming"],[3,"RecvDgram"],[3,"SendDgram"],[3,"ConnectFuture"],[3,"Incoming"],[3,"RecvDgram"],[3,"SendDgram"],[3,"UnixDatagram"],[3,"ExecuteError"],[3,"AndThen"],[3,"Join4"],[3,"Err"],[3,"Inspect"],[3,"CatchUnwind"],[3,"Fuse"],[3,"LoopFn"],[3,"MapErr"],[3,"Then"],[3,"PollFn"],[3,"SharedItem"],[3,"SelectNext"],[3,"Shared"],[3,"Join5"],[3,"Empty"],[3,"Collect"],[3,"OrElse"],[3,"Lazy"],[3,"Join3"],[3,"SharedError"],[3,"FlattenStream"],[3,"Map"],[3,"Flatten"],[3,"SelectAll"],[3,"Select2"],[3,"Join"],[3,"Select"],[3,"SelectOk"],[3,"FromErr"],[3,"IntoStream"],[3,"FuturesUnordered"],[3,"IterMut"],[3,"Skip"],[3,"FilterMap"],[3,"FuturesOrdered"],[3,"CatchUnwind"],[3,"IterResult"],[3,"MapErr"],[3,"Filter"],[3,"Zip"],[3,"PollFn"],[3,"BufferUnordered"],[3,"Iter"],[3,"Fold"],[3,"SplitStream"],[3,"OrElse"],[3,"Concat"],[3,"InspectErr"],[3,"Peekable"],[3,"Forward"],[3,"Receiver"],[3,"StreamFuture"],[3,"Take"],[3,"Chunks"],[3,"Sender"],[3,"SplitSink"],[3,"FromErr"],[3,"Unfold"],[3,"AndThen"],[3,"Inspect"],[3,"Wait"],[3,"Fuse"],[3,"TakeWhile"],[3,"Then"],[3,"Concat2"],[3,"ForEach"],[3,"Empty"],[3,"Repeat"],[3,"Merge"],[3,"Collect"],[3,"Once"],[3,"SendError"],[3,"Map"],[3,"Flatten"],[3,"Chain"],[3,"SkipWhile"],[3,"IterOk"],[3,"Select"],[3,"FutureSender"],[3,"Buffered"],[3,"AtomicTask"],[3,"Run"],[3,"UnparkEvent"],[3,"Task"],[3,"TaskRc"],[3,"Spawn"],[3,"LocalKey"],[3,"Reactor"],[3,"Handle"],[3,"Background"],[3,"Turn"],[3,"Registration"],[3,"PollEvented2"],[3,"Shutdown"],[3,"DelayQueue"],[3,"Expired"],[3,"Key"],[3,"Error"],[3,"Interval"],[3,"Delay"],[3,"Timeout"],[3,"Error"]]};
searchIndex["tokio_codec"]={"doc":"Utilities for encoding and decoding frames.","items":[[8,"Decoder","tokio_codec","Decoding of frames via buffers.",N,N],[16,"Item","","The type of decoded frames.",0,N],[16,"Error","","The type of unrecoverable frame decoding errors.",0,N],[10,"decode","","Attempts to decode a frame from the provided buffer of…",0,[[["self"],["bytesmut"]],["result",["option"]]]],[11,"decode_eof","","A default method available to be called when there are no…",0,[[["self"],["bytesmut"]],["result",["option"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",0,[[["self"],["t"]],["framed"]]],[8,"Encoder","","Trait of helper objects to write out messages as bytes,…",N,N],[16,"Item","","The type of items consumed by the `Encoder`",1,N],[16,"Error","","The type of encoding errors.",1,N],[10,"encode","","Encodes a frame into the buffer provided.",1,N],[3,"Framed","","A unified `Stream` and `Sink` interface to an underlying…",N,N],[3,"FramedParts","","`FramedParts` contains an export of the data of a Framed…",N,N],[12,"io","","The inner transport used to read bytes to and write bytes to",2,N],[12,"codec","","The codec",2,N],[12,"read_buf","","The buffer with read but unprocessed data.",2,N],[12,"write_buf","","A buffer with unprocessed data which are not written yet.",2,N],[3,"FramedRead","","A `Stream` of messages decoded from an `AsyncRead`.",N,N],[3,"FramedWrite","","A `Sink` of frames encoded to an `AsyncWrite`.",N,N],[3,"BytesCodec","","A simple `Codec` implementation that just ships bytes…",N,N],[3,"LinesCodec","","A simple `Codec` implementation that splits up data into…",N,N],[11,"new","","Creates a new `BytesCodec` for shipping around raw bytes.",3,[[],["bytescodec"]]],[11,"new","","Returns a `LinesCodec` for splitting up data into lines.",4,[[],["linescodec"]]],[11,"new_with_max_length","","Returns a `LinesCodec` with a maximum line length limit.",4,[[["usize"]],["self"]]],[11,"max_length","","Returns the maximum line length when decoding.",4,[[["self"]],["usize"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"poll","","",7,[[["self"]],["result",["async"]]]],[11,"poll","","",6,[[["self"]],["result",["async"]]]],[11,"poll","","",5,[[["self"]],["result",["async"]]]],[11,"start_send","","",5,N],[11,"poll_complete","","",5,[[["self"]],["result",["async"]]]],[11,"close","","",5,[[["self"]],["result",["async"]]]],[11,"start_send","","",7,N],[11,"poll_complete","","",7,[[["self"]],["result",["async"]]]],[11,"close","","",7,[[["self"]],["result",["async"]]]],[11,"start_send","","",6,N],[11,"poll_complete","","",6,[[["self"]],["result",["async"]]]],[11,"close","","",6,[[["self"]],["result",["async"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",3,[[["self"],["bytescodec"]],["bool"]]],[11,"ne","","",3,[[["self"],["bytescodec"]],["bool"]]],[11,"eq","","",4,[[["self"],["linescodec"]],["bool"]]],[11,"ne","","",4,[[["self"],["linescodec"]],["bool"]]],[11,"cmp","","",3,[[["self"],["bytescodec"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["linescodec"]],["ordering"]]],[11,"clone","","",3,[[["self"]],["bytescodec"]]],[11,"clone","","",4,[[["self"]],["linescodec"]]],[11,"partial_cmp","","",3,[[["self"],["bytescodec"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["bytescodec"]],["bool"]]],[11,"le","","",3,[[["self"],["bytescodec"]],["bool"]]],[11,"gt","","",3,[[["self"],["bytescodec"]],["bool"]]],[11,"ge","","",3,[[["self"],["bytescodec"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["linescodec"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["linescodec"]],["bool"]]],[11,"le","","",4,[[["self"],["linescodec"]],["bool"]]],[11,"gt","","",4,[[["self"],["linescodec"]],["bool"]]],[11,"ge","","",4,[[["self"],["linescodec"]],["bool"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"decode","","",3,[[["self"],["bytesmut"]],["result",["option","error"]]]],[11,"decode","","",4,[[["self"],["bytesmut"]],["result",["option","error"]]]],[11,"decode_eof","","",4,[[["self"],["bytesmut"]],["result",["option","error"]]]],[11,"encode","","",3,[[["self"],["bytes"],["bytesmut"]],["result",["error"]]]],[11,"encode","","",4,[[["self"],["string"],["bytesmut"]],["result",["error"]]]],[11,"new","","Provides a `Stream` and `Sink` interface for reading and…",5,[[["t"],["u"]],["framed"]]],[11,"from_parts","","Provides a `Stream` and `Sink` interface for reading and…",5,[[["framedparts"]],["framed"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",5,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",5,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `Frame`, returning its underlying I/O stream.",5,[[["self"]],["t"]]],[11,"into_parts","","Consumes the `Frame`, returning its underlying I/O stream,…",5,[[["self"]],["framedparts"]]],[11,"new","","Create a new, default, `FramedParts`",2,[[["t"],["u"]],["framedparts"]]],[11,"new","","Creates a new `FramedRead` with the given `decoder`.",6,[[["t"],["d"]],["framedread"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",6,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",6,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `FramedRead`, returning its underlying I/O…",6,[[["self"]],["t"]]],[11,"decoder","","Returns a reference to the underlying decoder.",6,[[["self"]],["d"]]],[11,"decoder_mut","","Returns a mutable reference to the underlying decoder.",6,[[["self"]],["d"]]],[11,"new","","Creates a new `FramedWrite` with the given `encoder`.",7,[[["t"],["e"]],["framedwrite"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",7,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",7,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `FramedWrite`, returning its underlying I/O…",7,[[["self"]],["t"]]],[11,"encoder","","Returns a reference to the underlying decoder.",7,[[["self"]],["e"]]],[11,"encoder_mut","","Returns a mutable reference to the underlying decoder.",7,[[["self"]],["e"]]]],"paths":[[8,"Decoder"],[8,"Encoder"],[3,"FramedParts"],[3,"BytesCodec"],[3,"LinesCodec"],[3,"Framed"],[3,"FramedRead"],[3,"FramedWrite"]]};
searchIndex["tokio_current_thread"]={"doc":"A single-threaded executor which executes tasks on the…","items":[[3,"CurrentThread","tokio_current_thread","Executes tasks on the current thread",N,N],[3,"TaskExecutor","","Executes futures on the current thread.",N,N],[3,"Turn","","Returned by the `turn` function.",N,N],[3,"Entered","","A `CurrentThread` instance bound to a supplied execution…",N,N],[3,"RunError","","Error returned by the `run` function.",N,N],[3,"RunTimeoutError","","Error returned by the `run_timeout` function.",N,N],[3,"TurnError","","Error returned by the `turn` function.",N,N],[3,"BlockError","","Error returned by the `block_on` function.",N,N],[3,"Handle","","Handle to spawn a future on the corresponding…",N,N],[5,"block_on_all","","Run the executor bootstrapping the execution with the…",N,[[["f"]],["result"]]],[5,"spawn","","Executes a future on the current thread.",N,[[["f"]]]],[11,"has_polled","","`true` if any futures were polled at all and `false`…",0,[[["self"]],["bool"]]],[11,"new","","Create a new instance of `CurrentThread`.",1,[[],["self"]]],[11,"new_with_park","","Create a new instance of `CurrentThread` backed by the…",1,[[["p"]],["self"]]],[11,"is_idle","","Returns `true` if the executor is currently idle.",1,[[["self"]],["bool"]]],[11,"spawn","","Spawn the future on the executor.",1,[[["self"],["f"]],["self"]]],[11,"block_on","","Synchronously waits for the provided `future` to complete.",1,[[["self"],["f"]],["result",["blockerror"]]]],[11,"run","","Run the executor to completion, blocking the thread until…",1,[[["self"]],["result",["runerror"]]]],[11,"run_timeout","","Run the executor to completion, blocking the thread until…",1,[[["self"],["duration"]],["result",["runtimeouterror"]]]],[11,"turn","","Perform a single iteration of the event loop.",1,[[["self"],["option",["duration"]]],["result",["turn","turnerror"]]]],[11,"enter","","Bind `CurrentThread` instance with an execution context.",1,[[["self"],["enter"]],["entered"]]],[11,"get_park","","Returns a reference to the underlying `Park` instance.",1,[[["self"]],["p"]]],[11,"get_park_mut","","Returns a mutable reference to the underlying `Park`…",1,[[["self"]],["p"]]],[11,"handle","","Get a new handle to spawn futures on the executor",1,[[["self"]],["handle"]]],[11,"spawn","","Spawn the future on the executor.",2,[[["self"],["f"]],["self"]]],[11,"block_on","","Synchronously waits for the provided `future` to complete.",2,[[["self"],["f"]],["result",["blockerror"]]]],[11,"run","","Run the executor to completion, blocking the thread until…",2,[[["self"]],["result",["runerror"]]]],[11,"run_timeout","","Run the executor to completion, blocking the thread until…",2,[[["self"],["duration"]],["result",["runtimeouterror"]]]],[11,"turn","","Perform a single iteration of the event loop.",2,[[["self"],["option",["duration"]]],["result",["turn","turnerror"]]]],[11,"get_park","","Returns a reference to the underlying `Park` instance.",2,[[["self"]],["p"]]],[11,"get_park_mut","","Returns a mutable reference to the underlying `Park`…",2,[[["self"]],["p"]]],[11,"spawn","","Spawn a future onto the `CurrentThread` instance…",3,[[["self"],["f"]],["result",["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",3,[[["self"]],["result",["spawnerror"]]]],[11,"current","","Returns an executor that executes futures on the current…",4,[[],["taskexecutor"]]],[11,"spawn_local","","Spawn a future onto the current `CurrentThread` instance.",4,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"is_timeout","","Returns `true` if the error was caused by the operation…",5,[[["self"]],["bool"]]],[11,"into_inner","","Returns the error yielded by the future being blocked on",6,[[["self"]],["option"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","","",4,[[["self"]],["taskexecutor"]]],[11,"clone","","",3,[[["self"]],["handle"]]],[11,"from","","",5,[[["entererror"]],["self"]]],[11,"from","","",6,[[["entererror"]],["self"]]],[11,"drop","","",1,[[["self"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"execute","","",4,[[["self"],["f"]],["result",["executeerror"]]]],[11,"spawn","","",1,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"spawn","","",4,[[["self"],["box",["future"]]],["result",["spawnerror"]]]]],"paths":[[3,"Turn"],[3,"CurrentThread"],[3,"Entered"],[3,"Handle"],[3,"TaskExecutor"],[3,"RunTimeoutError"],[3,"BlockError"],[3,"RunError"],[3,"TurnError"]]};
searchIndex["tokio_executor"]={"doc":"Task execution related traits and utilities.","items":[[3,"Enter","tokio_executor","Represents an executor context.",N,N],[3,"EnterError","","An error returned by `enter` if an execution scope has…",N,N],[3,"DefaultExecutor","","Executes futures on the default executor for the current…",N,N],[3,"SpawnError","","Errors returned by `Executor::spawn`.",N,N],[5,"enter","","Marks the current thread as being within the dynamic…",N,[[],["result",["enter","entererror"]]]],[5,"spawn","","Submits a future for execution on the default executor --…",N,[[["t"]]]],[5,"with_default","","Set the default executor for the duration of the closure",N,[[["t"],["enter"],["f"]],["r"]]],[11,"on_exit","","Register a callback to be invoked if and when the thread…",0,[[["self"],["f"]]]],[11,"make_permanent","","Treat the remainder of execution on this thread as part of…",0,[[["self"]]]],[11,"block_on","","Blocks the thread on the specified future, returning the…",0,[[["self"],["f"]],["result"]]],[11,"current","","Returns a handle to the default executor for the current…",1,[[],["defaultexecutor"]]],[0,"park","","Abstraction over blocking and unblocking the current thread.",N,N],[3,"ParkThread","tokio_executor::park","Blocks the current thread using a condition variable.",N,N],[3,"ParkError","","Error returned by [`ParkThread`]",N,N],[3,"UnparkThread","","Unblocks a thread that was blocked by `ParkThread`.",N,N],[8,"Park","","Block the current thread.",N,N],[16,"Unpark","","Unpark handle type for the `Park` implementation.",2,N],[16,"Error","","Error returned by `park`",2,N],[10,"unpark","","Get a new `Unpark` handle associated with this `Park`…",2,N],[10,"park","","Block the current thread unless or until the token is…",2,[[["self"]],["result"]]],[10,"park_timeout","","Park the current thread for at most `duration`.",2,[[["self"],["duration"]],["result"]]],[8,"Unpark","","Unblock a thread blocked by the associated [`Park`]…",N,N],[10,"unpark","","Unblock a thread that is blocked by the associated `Park`…",3,[[["self"]]]],[11,"new","","Create a new `ParkThread` handle for the current thread.",4,[[],["parkthread"]]],[8,"Executor","tokio_executor","A value that executes futures.",N,N],[10,"spawn","","Spawns a future object to run on this executor.",5,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"status","","Provides a best effort hint to whether or not `spawn` will…",5,[[["self"]],["result",["spawnerror"]]]],[11,"shutdown","","Return a new `SpawnError` reflecting a shutdown executor…",6,[[],["self"]]],[11,"at_capacity","","Return a new `SpawnError` reflecting an executor at…",6,[[],["self"]]],[11,"is_shutdown","","Returns `true` if the error reflects a shutdown executor…",6,[[["self"]],["bool"]]],[11,"is_at_capacity","","Returns `true` if the error reflects an executor at…",6,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","tokio_executor::park","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"unpark","","",4,N],[11,"park","","",4,[[["self"]],["result"]]],[11,"park_timeout","","",4,[[["self"],["duration"]],["result"]]],[11,"unpark","","",9,[[["self"]]]],[11,"spawn","tokio_executor","",1,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"status","","",1,[[["self"]],["result",["spawnerror"]]]],[11,"clone","","",1,[[["self"]],["defaultexecutor"]]],[11,"clone","tokio_executor::park","",9,[[["self"]],["unparkthread"]]],[11,"drop","tokio_executor","",0,[[["self"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_executor::park","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_executor","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"execute","","",1,[[["self"],["t"]],["result",["executeerror"]]]]],"paths":[[3,"Enter"],[3,"DefaultExecutor"],[8,"Park"],[8,"Unpark"],[3,"ParkThread"],[8,"Executor"],[3,"SpawnError"],[3,"EnterError"],[3,"ParkError"],[3,"UnparkThread"]]};
searchIndex["tokio_fs"]={"doc":"Asynchronous file and standard stream adaptation.","items":[[3,"CreateDirFuture","tokio_fs","Future returned by `create_dir`.",N,N],[3,"CreateDirAllFuture","","Future returned by `create_dir_all`.",N,N],[3,"OpenOptions","","Options and flags which can be used to configure how a…",N,N],[3,"HardLinkFuture","","Future returned by `hard_link`.",N,N],[3,"MetadataFuture","","Future returned by `metadata`.",N,N],[3,"ReadDirFuture","","Future returned by `read_dir`.",N,N],[3,"ReadDir","","Stream of the entries in a directory.",N,N],[3,"DirEntry","","Entries returned by the [`ReadDir`] stream.",N,N],[3,"ReadLinkFuture","","Future returned by `read_link`.",N,N],[3,"RemoveDirFuture","","Future returned by `remove_dir`.",N,N],[3,"RemoveFileFuture","","Future returned by `remove_file`.",N,N],[3,"RenameFuture","","Future returned by `rename`.",N,N],[3,"SetPermissionsFuture","","Future returned by `set_permissions`.",N,N],[3,"Stdin","","A handle to the standard input stream of a process.",N,N],[3,"Stdout","","A handle to the standard output stream of a process.",N,N],[3,"Stderr","","A handle to the standard error stream of a process.",N,N],[3,"SymlinkMetadataFuture","","Future returned by `symlink_metadata`.",N,N],[5,"create_dir","","Creates a new, empty directory at the provided path",N,[[["p"]],["createdirfuture"]]],[5,"create_dir_all","","Recursively create a directory and all of its parent…",N,[[["p"]],["createdirallfuture"]]],[5,"hard_link","","Creates a new hard link on the filesystem.",N,[[["p"],["q"]],["hardlinkfuture"]]],[5,"metadata","","Queries the file system metadata for a path.",N,[[["p"]],["metadatafuture"]]],[5,"read_dir","","Returns a stream over the entries within a directory.",N,[[["p"]],["readdirfuture"]]],[5,"read_link","","Reads a symbolic link, returning the file that the link…",N,[[["p"]],["readlinkfuture"]]],[5,"remove_dir","","Removes an existing, empty directory.",N,[[["p"]],["removedirfuture"]]],[5,"remove_file","","Removes a file from the filesystem.",N,[[["p"]],["removefilefuture"]]],[5,"rename","","Rename a file or directory to a new name, replacing the…",N,[[["p"],["q"]],["renamefuture"]]],[5,"set_permissions","","Changes the permissions found on a file or a directory.",N,[[["p"],["permissions"]],["setpermissionsfuture"]]],[5,"stdin","","Constructs a new handle to the standard input of the…",N,[[],["stdin"]]],[5,"stdout","","Constructs a new handle to the standard output of the…",N,[[],["stdout"]]],[5,"stderr","","Constructs a new handle to the standard error of the…",N,[[],["stderr"]]],[5,"symlink_metadata","","Queries the file system metadata for a path.",N,[[["p"]],["symlinkmetadatafuture"]]],[0,"file","","Types for working with [`File`].",N,N],[3,"CreateFuture","tokio_fs::file","Future returned by `File::create` and resolves to a `File`…",N,N],[3,"MetadataFuture","","Future returned by `File::metadata` and resolves to a…",N,N],[3,"OpenFuture","","Future returned by `File::open` and resolves to a `File`…",N,N],[3,"OpenOptions","","Options and flags which can be used to configure how a…",N,N],[3,"SeekFuture","","Future returned by `File::seek`.",N,N],[3,"File","","A reference to an open file on the filesystem.",N,N],[11,"new","tokio_fs","Creates a blank new set of options ready for configuration.",0,[[],["openoptions"]]],[11,"read","","See the underlying [`read`] call for details.",0,[[["self"],["bool"]],["openoptions"]]],[11,"write","","See the underlying [`write`] call for details.",0,[[["self"],["bool"]],["openoptions"]]],[11,"append","","See the underlying [`append`] call for details.",0,[[["self"],["bool"]],["openoptions"]]],[11,"truncate","","See the underlying [`truncate`] call for details.",0,[[["self"],["bool"]],["openoptions"]]],[11,"create","","See the underlying [`create`] call for details.",0,[[["self"],["bool"]],["openoptions"]]],[11,"create_new","","See the underlying [`create_new`] call for details.",0,[[["self"],["bool"]],["openoptions"]]],[11,"open","","Opens a file at `path` with the options specified by `self`.",0,[[["self"],["p"]],["openfuture"]]],[11,"open","tokio_fs::file","Attempts to open a file in read-only mode.",1,[[["p"]],["openfuture"]]],[11,"create","","Opens a file in write-only mode.",1,[[["p"]],["createfuture"]]],[11,"poll_seek","","Seek to an offset, in bytes, in a stream.",1,[[["self"],["seekfrom"]],["poll",["u64","error"]]]],[11,"seek","","Seek to an offset, in bytes, in a stream.",1,[[["self"],["seekfrom"]],["seekfuture"]]],[11,"poll_sync_all","","Attempts to sync all OS-internal metadata to disk.",1,[[["self"]],["poll",["error"]]]],[11,"poll_sync_data","","This function is similar to `poll_sync_all`, except that…",1,[[["self"]],["poll",["error"]]]],[11,"poll_set_len","","Truncates or extends the underlying file, updating the…",1,[[["self"],["u64"]],["poll",["error"]]]],[11,"metadata","","Queries metadata about the underlying file.",1,[[["self"]],["metadatafuture"]]],[11,"poll_metadata","","Queries metadata about the underlying file.",1,[[["self"]],["poll",["metadata","error"]]]],[11,"poll_try_clone","","Create a new `File` instance that shares the same…",1,[[["self"]],["poll",["file","error"]]]],[11,"poll_set_permissions","","Changes the permissions on the underlying file.",1,[[["self"],["permissions"]],["poll",["error"]]]],[11,"into_std","","Destructures the `tokio_fs::File` into a…",1,[[["self"]],["stdfile"]]],[0,"os","tokio_fs","OS-specific functionality.",N,N],[0,"unix","tokio_fs::os","Unix-specific extensions to primitives in the `tokio_fs`…",N,N],[3,"SymlinkFuture","tokio_fs::os::unix","Future returned by `symlink`.",N,N],[5,"symlink","","Creates a new symbolic link on the filesystem.",N,[[["p"],["q"]],["symlinkfuture"]]],[11,"into_std","tokio_fs","Destructures the `tokio_fs::DirEntry` into a…",2,[[["self"]],["stddirentry"]]],[11,"path","","Returns the full path to the file that this entry…",2,[[["self"]],["pathbuf"]]],[11,"file_name","","Returns the bare file name of this directory entry without…",2,[[["self"]],["osstring"]]],[11,"poll_metadata","","Return the metadata for the file that this entry points at.",2,[[["self"]],["poll",["metadata","error"]]]],[11,"poll_file_type","","Return the file type for the file that this entry points at.",2,[[["self"]],["poll",["filetype","error"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[["self"]],["f"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_future","","",4,[[["self"]],["f"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_future","","",9,[[["self"]],["f"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_future","","",10,[[["self"]],["f"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_future","","",11,[[["self"]],["f"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into_future","","",12,[[["self"]],["f"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into_future","","",13,[[["self"]],["f"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into_future","","",17,[[["self"]],["f"]]],[11,"from","tokio_fs::file","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into_future","","",18,[[["self"]],["f"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into_future","","",19,[[["self"]],["f"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into_future","","",20,[[["self"]],["f"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into_future","","",21,[[["self"]],["f"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","tokio_fs::os::unix","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into_future","","",22,[[["self"]],["f"]]],[11,"clone","tokio_fs","",0,[[["self"]],["openoptions"]]],[11,"from","","",0,[[["stdopenoptions"]],["openoptions"]]],[11,"drop","tokio_fs::file","",1,[[["self"]]]],[11,"fmt","tokio_fs","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_fs::file","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_fs","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_fs::file","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_fs","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_fs::os::unix","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_fs","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"read","tokio_fs::file","",1,N],[11,"read","tokio_fs","",14,N],[11,"write","tokio_fs::file","",1,N],[11,"flush","","",1,[[["self"]],["result"]]],[11,"write","tokio_fs","",15,N],[11,"flush","","",15,[[["self"]],["result"]]],[11,"write","","",16,N],[11,"flush","","",16,[[["self"]],["result"]]],[11,"ino","","",2,[[["self"]],["u64"]]],[11,"poll","","",3,[[["self"]],["poll"]]],[11,"poll","","",4,[[["self"]],["poll"]]],[11,"poll","tokio_fs::file","",18,[[["self"]],["poll"]]],[11,"poll","","",19,[[["self"]],["poll"]]],[11,"poll","","",20,[[["self"]],["poll"]]],[11,"poll","","",21,[[["self"]],["poll"]]],[11,"poll","tokio_fs","",5,[[["self"]],["poll"]]],[11,"poll","","",6,[[["self"]],["poll"]]],[11,"poll","tokio_fs::os::unix","",22,[[["self"]],["poll"]]],[11,"poll","tokio_fs","",7,[[["self"]],["poll",["error"]]]],[11,"poll","","",9,[[["self"]],["poll"]]],[11,"poll","","",10,[[["self"]],["poll"]]],[11,"poll","","",11,[[["self"]],["poll"]]],[11,"poll","","",12,[[["self"]],["poll"]]],[11,"poll","","",13,[[["self"]],["poll"]]],[11,"poll","","",17,[[["self"]],["poll"]]],[11,"poll","","",8,[[["self"]],["poll",["option"]]]],[11,"shutdown","tokio_fs::file","",1,[[["self"]],["poll",["error"]]]],[11,"shutdown","tokio_fs","",15,[[["self"]],["poll",["error"]]]],[11,"shutdown","","",16,[[["self"]],["poll",["error"]]]],[11,"prepare_uninitialized_buffer","tokio_fs::file","",1,N],[11,"prepare_uninitialized_buffer","tokio_fs","",14,N]],"paths":[[3,"OpenOptions"],[3,"File"],[3,"DirEntry"],[3,"CreateDirFuture"],[3,"CreateDirAllFuture"],[3,"HardLinkFuture"],[3,"MetadataFuture"],[3,"ReadDirFuture"],[3,"ReadDir"],[3,"ReadLinkFuture"],[3,"RemoveDirFuture"],[3,"RemoveFileFuture"],[3,"RenameFuture"],[3,"SetPermissionsFuture"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[3,"SymlinkMetadataFuture"],[3,"CreateFuture"],[3,"MetadataFuture"],[3,"OpenFuture"],[3,"SeekFuture"],[3,"SymlinkFuture"]]};
searchIndex["tokio_io"]={"doc":"Core I/O traits and combinators when working with Tokio.","items":[[0,"io","tokio_io","I/O conveniences when working with primitives in…",N,N],[3,"AllowStdIo","tokio_io::io","A simple wrapper type which allows types that only…",N,N],[3,"Copy","","A future which will copy all data from a reader into a…",N,N],[3,"Flush","","A future used to fully flush an I/O object.",N,N],[3,"Lines","","Combinator created by the top-level `lines` method which…",N,N],[3,"Read","","A future which can be used to easily read available number…",N,N],[3,"ReadExact","","A future which can be used to easily read exactly enough…",N,N],[3,"ReadToEnd","","A future which can be used to easily read the entire…",N,N],[3,"ReadUntil","","A future which can be used to easily read the contents of…",N,N],[3,"Shutdown","","A future used to fully shutdown an I/O object.",N,N],[3,"ReadHalf","","The readable half of an object returned from…",N,N],[3,"WriteHalf","","The writable half of an object returned from…",N,N],[3,"Window","","A owned window around an underlying buffer.",N,N],[3,"WriteAll","","A future used to write the entire contents of some data to…",N,N],[5,"copy","","Creates a future which represents copying all the bytes…",N,[[["r"],["w"]],["copy"]]],[5,"flush","","Creates a future which will entirely flush an I/O object…",N,[[["a"]],["flush"]]],[5,"lines","","Creates a new stream from the I/O object given…",N,[[["a"]],["lines"]]],[5,"read","","Tries to read some bytes directly into the given `buf` in…",N,[[["r"],["t"]],["read"]]],[5,"read_exact","","Creates a future which will read exactly enough bytes to…",N,[[["a"],["t"]],["readexact"]]],[5,"read_to_end","","Creates a future which will read all the bytes associated…",N,[[["a"],["vec",["u8"]]],["readtoend"]]],[5,"read_until","","Creates a future which will read all the bytes associated…",N,[[["a"],["u8"],["vec",["u8"]]],["readuntil"]]],[5,"shutdown","","Creates a future which will entirely shutdown an I/O…",N,[[["a"]],["shutdown"]]],[5,"write_all","","Creates a future that will write the entire contents of…",N,[[["a"],["t"]],["writeall"]]],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",0,[[["t"]],["self"]]],[11,"get_ref","","Returns a reference to the contained IO object.",0,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",0,[[["self"]],["t"]]],[11,"into_inner","","Consumes self and returns the contained IO object.",0,[[["self"]],["t"]]],[11,"into_inner","","Returns the underlying I/O object.",1,[[["self"]],["a"]]],[11,"new","","Creates a new window around the buffer `t` defaulting to…",2,[[["t"]],["window"]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of…",2,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside…",2,[[["self"]],["t"]]],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",2,[[["self"]],["t"]]],[11,"start","","Returns the starting index of this window into the…",2,[[["self"]],["usize"]]],[11,"end","","Returns the end index of this window into the underlying…",2,[[["self"]],["usize"]]],[11,"set_start","","Changes the starting index of this window to the index…",2,[[["self"],["usize"]],["window"]]],[11,"set_end","","Changes the end index of this window to the index specified.",2,[[["self"],["usize"]],["window"]]],[6,"IoFuture","tokio_io","A convenience typedef around a `Future` whose error…",N,N],[6,"IoStream","","A convenience typedef around a `Stream` whose error…",N,N],[8,"AsyncRead","","Read bytes asynchronously.",N,N],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",3,N],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",3,N],[11,"read_buf","","Pull some bytes from this source into the specified `Buf`,…",3,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",3,[[["self"],["t"]],["framed"]]],[11,"split","","Helper method for splitting this read/write object into…",3,N],[8,"AsyncWrite","","Writes bytes asynchronously.",N,N],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",4,N],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",4,[[["self"]],["poll",["error"]]]],[10,"shutdown","","Initiates or attempts to shut down this writer, returning…",4,[[["self"]],["poll",["error"]]]],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes…",4,[[["self"],["b"]],["poll",["usize","error"]]]],[14,"try_nb","","A convenience macro for working with `io::Result<T>` from…",N,N],[11,"from","tokio_io::io","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_future","","",8,[[["self"]],["f"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_future","","",9,[[["self"]],["f"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into_future","","",10,[[["self"]],["f"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_future","","",11,[[["self"]],["f"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into_future","","",14,[[["self"]],["f"]]],[11,"read_buf","","",12,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"shutdown","","",0,[[["self"]],["poll",["error"]]]],[11,"shutdown","","",13,[[["self"]],["poll",["error"]]]],[11,"write_buf","","",13,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"as_mut","","",2,N],[11,"eq","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"ne","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"as_ref","","",2,N],[11,"cmp","","",0,[[["self"],["allowstdio"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["allowstdio"]]],[11,"partial_cmp","","",0,[[["self"],["allowstdio"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"le","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"gt","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"ge","","",0,[[["self"],["allowstdio"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"read","","",0,N],[11,"read_to_end","","",0,[[["self"],["vec"]],["result",["usize"]]]],[11,"read_to_string","","",0,[[["self"],["string"]],["result",["usize"]]]],[11,"read_exact","","",0,N],[11,"read","","",12,N],[11,"write","","",0,N],[11,"flush","","",0,[[["self"]],["result"]]],[11,"write_all","","",0,N],[11,"write_fmt","","",0,[[["self"],["arguments"]],["result"]]],[11,"write","","",13,N],[11,"flush","","",13,[[["self"]],["result"]]],[11,"poll","","",5,[[["self"]],["poll",["error"]]]],[11,"poll","","",6,[[["self"]],["poll",["error"]]]],[11,"poll","","",7,[[["self"]],["poll",["error"]]]],[11,"poll","","",8,[[["self"]],["poll",["error"]]]],[11,"poll","","",9,[[["self"]],["poll",["error"]]]],[11,"poll","","",10,[[["self"]],["poll",["error"]]]],[11,"poll","","",11,[[["self"]],["poll",["error"]]]],[11,"poll","","",14,[[["self"]],["poll",["error"]]]],[11,"poll","","",1,[[["self"]],["poll",["option","error"]]]],[11,"prepare_uninitialized_buffer","tokio_io","Prepares an uninitialized buffer to be safe to pass to…",3,N],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",3,N],[11,"read_buf","","Pull some bytes from this source into the specified `Buf`,…",3,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"framed","","Provides a `Stream` and `Sink` interface for reading and…",3,[[["self"],["t"]],["framed"]]],[11,"split","","Helper method for splitting this read/write object into…",3,N],[11,"poll_write","","Attempt to write bytes from `buf` into the object.",4,N],[11,"poll_flush","","Attempt to flush the object, ensuring that any buffered…",4,[[["self"]],["poll",["error"]]]],[11,"write_buf","","Write a `Buf` into this value, returning how many bytes…",4,[[["self"],["b"]],["poll",["usize","error"]]]]],"paths":[[3,"AllowStdIo"],[3,"Lines"],[3,"Window"],[8,"AsyncRead"],[8,"AsyncWrite"],[3,"Copy"],[3,"Flush"],[3,"Read"],[3,"ReadExact"],[3,"ReadToEnd"],[3,"ReadUntil"],[3,"Shutdown"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"WriteAll"]]};
searchIndex["tokio_reactor"]={"doc":"Event loop that drives Tokio I/O resources.","items":[[3,"Background","tokio_reactor","Handle to the reactor running on a background thread.",N,N],[3,"Shutdown","","Future that resolves when the reactor thread has shutdown.",N,N],[3,"Registration","","Associates an I/O resource with the reactor instance that…",N,N],[3,"PollEvented","","Associates an I/O resource that implements the…",N,N],[3,"Reactor","","The core reactor, or event loop.",N,N],[3,"Handle","","A reference to a reactor.",N,N],[3,"Turn","","Return value from the `turn` method on `Reactor`.",N,N],[3,"SetFallbackError","","Error returned from `Handle::set_fallback`.",N,N],[5,"with_default","","Set the default reactor for the duration of the closure",N,[[["handle"],["enter"],["f"]],["r"]]],[11,"handle","","Returns a reference to the reactor handle.",0,[[["self"]],["handle"]]],[11,"shutdown_on_idle","","Shutdown the reactor on idle.",0,[[["self"]],["shutdown"]]],[11,"shutdown_now","","Shutdown the reactor immediately",0,[[["self"]],["shutdown"]]],[11,"forget","","Run the reactor on its thread until the process terminates.",0,[[["self"]]]],[11,"new","","Creates a new `PollEvented` associated with the default…",1,[[["e"]],["pollevented"]]],[11,"new_with_handle","","Creates a new `PollEvented` associated with the specified…",1,[[["e"],["handle"]],["result"]]],[11,"get_ref","","Returns a shared reference to the underlying I/O object…",1,[[["self"]],["e"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O object…",1,[[["self"]],["e"]]],[11,"into_inner","","Consumes self, returning the inner I/O object",1,[[["self"]],["result"]]],[11,"poll_read_ready","","Check the I/O resource's read readiness state.",1,[[["self"],["ready"]],["poll",["ready","error"]]]],[11,"clear_read_ready","","Clears the I/O resource's read readiness state and…",1,[[["self"],["ready"]],["result"]]],[11,"poll_write_ready","","Check the I/O resource's write readiness state.",1,[[["self"]],["poll",["ready","error"]]]],[11,"clear_write_ready","","Resets the I/O resource's write readiness state and…",1,[[["self"]],["result"]]],[11,"new","","Create a new `Registration`.",2,[[],["registration"]]],[11,"register","","Register the I/O resource with the default reactor.",2,[[["self"],["t"]],["result",["bool"]]]],[11,"deregister","","Deregister the I/O resource from the reactor it is…",2,[[["self"],["t"]],["result"]]],[11,"register_with","","Register the I/O resource with the specified reactor.",2,[[["self"],["t"],["handle"]],["result",["bool"]]]],[11,"poll_read_ready","","Poll for events on the I/O resource's read readiness stream.",2,[[["self"]],["poll",["ready","error"]]]],[11,"take_read_ready","","Consume any pending read readiness event.",2,[[["self"]],["result",["option"]]]],[11,"poll_write_ready","","Poll for events on the I/O resource's write readiness…",2,[[["self"]],["poll",["ready","error"]]]],[11,"take_write_ready","","Consume any pending write readiness event.",2,[[["self"]],["result",["option"]]]],[11,"new","","Creates a new event loop, returning any error that…",3,[[],["result",["reactor"]]]],[11,"handle","","Returns a handle to this event loop which can be sent…",3,[[["self"]],["handle"]]],[11,"set_fallback","","Configures the fallback handle to be returned from…",3,[[["self"]],["result",["setfallbackerror"]]]],[11,"turn","","Performs one iteration of the event loop, blocking on…",3,[[["self"],["option",["duration"]]],["result",["turn"]]]],[11,"is_idle","","Returns true if the reactor is currently idle.",3,[[["self"]],["bool"]]],[11,"background","","Run this reactor on a background thread.",3,[[["self"]],["result",["background"]]]],[11,"current","","Returns a handle to the current reactor.",4,[[],["handle"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"default","","Returns a \"default\" handle, i.e., a handle that lazily…",4,[[],["handle"]]],[11,"clone","","",4,[[["self"]],["handle"]]],[11,"clone","","",7,[[["self"]],["setfallbackerror"]]],[11,"drop","","",0,[[["self"]]]],[11,"drop","","",1,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"read","","",1,N],[11,"write","","",1,N],[11,"flush","","",1,[[["self"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"poll","","",5,[[["self"]],["poll"]]],[11,"unpark","","",3,N],[11,"park","","",3,[[["self"]],["result"]]],[11,"park_timeout","","",3,[[["self"],["duration"]],["result"]]],[11,"unpark","","",4,[[["self"]]]],[11,"shutdown","","",1,[[["self"]],["poll",["error"]]]]],"paths":[[3,"Background"],[3,"PollEvented"],[3,"Registration"],[3,"Reactor"],[3,"Handle"],[3,"Shutdown"],[3,"Turn"],[3,"SetFallbackError"]]};
searchIndex["tokio_tcp"]={"doc":"TCP bindings for `tokio`.","items":[[3,"Incoming","tokio_tcp","Stream returned by the `TcpListener::incoming` function…",N,N],[3,"TcpListener","","An I/O object representing a TCP socket listening for…",N,N],[3,"TcpStream","","An I/O object representing a TCP stream connected to a…",N,N],[3,"ConnectFuture","","Future returned by `TcpStream::connect` which will resolve…",N,N],[11,"bind","","Create a new TCP listener associated with this event loop.",0,[[["socketaddr"]],["result",["tcplistener"]]]],[11,"poll_accept","","Attempt to accept a connection and create a new connected…",0,[[["self"]],["poll",["error"]]]],[11,"poll_accept_std","","Attempt to accept a connection and create a new connected…",0,[[["self"]],["poll",["error"]]]],[11,"from_std","","Create a new TCP listener from the standard library's TCP…",0,[[["tcplistener"],["handle"]],["result",["tcplistener"]]]],[11,"local_addr","","Returns the local address that this listener is bound to.",0,[[["self"]],["result",["socketaddr"]]]],[11,"incoming","","Consumes this listener, returning a stream of the sockets…",0,[[["self"]],["incoming"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",0,[[["self"]],["result",["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",0,[[["self"],["u32"]],["result"]]],[11,"connect","","Create a new TCP stream connected to the specified address.",1,[[["socketaddr"]],["connectfuture"]]],[11,"from_std","","Create a new `TcpStream` from a `net::TcpStream`.",1,[[["tcpstream"],["handle"]],["result",["tcpstream"]]]],[11,"connect_std","","Creates a new `TcpStream` from the pending socket inside…",1,[[["tcpstream"],["socketaddr"],["handle"]],["connectfuture"]]],[11,"poll_read_ready","","Check the TCP stream's read readiness state.",1,[[["self"],["ready"]],["poll",["ready","error"]]]],[11,"poll_write_ready","","Check the TCP stream's write readiness state.",1,[[["self"]],["poll",["ready","error"]]]],[11,"local_addr","","Returns the local address that this stream is bound to.",1,[[["self"]],["result",["socketaddr"]]]],[11,"peer_addr","","Returns the remote address that this stream is connected to.",1,[[["self"]],["result",["socketaddr"]]]],[11,"poll_peek","","Receives data on the socket from the remote address to…",1,N],[11,"shutdown","","Shuts down the read, write, or both halves of this…",1,[[["self"],["shutdown"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",1,[[["self"]],["result",["bool"]]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",1,[[["self"]],["result",["usize"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",1,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",1,[[["self"]],["result",["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",1,[[["self"],["usize"]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",1,[[["self"]],["result",["option"]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",1,[[["self"],["option",["duration"]]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",1,[[["self"]],["result",["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",1,[[["self"],["u32"]],["result"]]],[11,"linger","","Reads the linger duration for this socket by getting the…",1,[[["self"]],["result",["option"]]]],[11,"set_linger","","Sets the linger duration of this socket by setting the…",1,[[["self"],["option",["duration"]]],["result"]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",1,[[["self"]],["result",["tcpstream"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[["self"]],["f"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"as_raw_fd","","",0,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",1,[[["self"]],["rawfd"]]],[11,"read","","",1,N],[11,"write","","",1,N],[11,"flush","","",1,[[["self"]],["result"]]],[11,"poll","","",3,[[["self"]],["poll",["tcpstream","error"]]]],[11,"poll","","",2,[[["self"]],["poll",["option","error"]]]],[11,"shutdown","","",1,[[["self"]],["poll",["error"]]]],[11,"write_buf","","",1,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"prepare_uninitialized_buffer","","",1,N],[11,"read_buf","","",1,[[["self"],["b"]],["poll",["usize","error"]]]]],"paths":[[3,"TcpListener"],[3,"TcpStream"],[3,"Incoming"],[3,"ConnectFuture"]]};
searchIndex["tokio_threadpool"]={"doc":"A work-stealing based thread pool for executing futures.","items":[[3,"BlockingError","tokio_threadpool","Error raised by `blocking`.",N,N],[3,"Builder","","Builds a thread pool with custom configuration values.",N,N],[3,"Sender","","Submit futures to the associated thread pool for execution.",N,N],[3,"Shutdown","","Future that resolves when the thread pool is shutdown.",N,N],[3,"ThreadPool","","Work-stealing based thread pool for executing futures.",N,N],[3,"SpawnHandle","","Handle returned from ThreadPool::spawn_handle.",N,N],[3,"Worker","","Thread worker",N,N],[3,"WorkerId","","Identifies a thread pool worker.",N,N],[5,"blocking","","Enter a blocking section of code.",N,[[["f"]],["poll",["blockingerror"]]]],[0,"park","","Thread parking utilities.",N,N],[3,"DefaultPark","tokio_threadpool::park","Parks the thread.",N,N],[3,"DefaultUnpark","","Unparks threads that were parked by `DefaultPark`.",N,N],[3,"ParkError","","Error returned by [`ParkThread`]",N,N],[11,"new","","Creates a new `DefaultPark` instance.",0,[[],["defaultpark"]]],[11,"new","tokio_threadpool","Returns a new thread pool builder initialized with default…",1,[[],["builder"]]],[11,"pool_size","","Set the maximum number of worker threads for the thread…",1,[[["self"],["usize"]],["self"]]],[11,"max_blocking","","Set the maximum number of concurrent blocking sections.",1,[[["self"],["usize"]],["self"]]],[11,"keep_alive","","Set the worker thread keep alive duration",1,[[["self"],["option",["duration"]]],["self"]]],[11,"name_prefix","","Set name prefix of threads spawned by the scheduler",1,[[["self"],["s"]],["self"]]],[11,"stack_size","","Set the stack size (in bytes) for worker threads.",1,[[["self"],["usize"]],["self"]]],[11,"around_worker","","Execute function `f` on each worker thread.",1,[[["self"],["f"]],["self"]]],[11,"after_start","","Execute function `f` after each thread is started but…",1,[[["self"],["f"]],["self"]]],[11,"before_stop","","Execute function `f` before each thread stops.",1,[[["self"],["f"]],["self"]]],[11,"custom_park","","Customize the `park` instance used by each worker thread.",1,[[["self"],["f"]],["self"]]],[11,"build","","Create the configured `ThreadPool`.",1,[[["self"]],["threadpool"]]],[11,"spawn","","Spawn a future onto the thread pool",2,[[["self"],["f"]],["result",["spawnerror"]]]],[11,"new","","Create a new `ThreadPool` with default values.",3,[[],["threadpool"]]],[11,"spawn","","Spawn a future onto the thread pool.",3,[[["self"],["f"]]]],[11,"spawn_handle","","Spawn a future on to the thread pool, return a future…",3,[[["self"],["f"]],["spawnhandle"]]],[11,"sender","","Return a reference to the sender handle",3,[[["self"]],["sender"]]],[11,"sender_mut","","Return a mutable reference to the sender handle",3,[[["self"]],["sender"]]],[11,"shutdown_on_idle","","Shutdown the pool once it becomes idle.",3,[[["self"]],["shutdown"]]],[11,"shutdown","","Shutdown the pool",3,[[["self"]],["shutdown"]]],[11,"shutdown_now","","Shutdown the pool immediately",3,[[["self"]],["shutdown"]]],[11,"id","","Returns a reference to the worker's identifier.",4,[[["self"]],["workerid"]]],[11,"run","","Run the worker",4,[[["self"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","tokio_threadpool::park","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"eq","tokio_threadpool","",8,[[["self"],["workerid"]],["bool"]]],[11,"ne","","",8,[[["self"],["workerid"]],["bool"]]],[11,"clone","","",2,[[["self"]],["sender"]]],[11,"clone","","",8,[[["self"]],["workerid"]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"fmt","tokio_threadpool::park","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_threadpool","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_threadpool::park","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_threadpool","",5,[[["self"],["formatter"]],["result"]]],[11,"hash","","",8,N],[11,"description","tokio_threadpool::park","",10,[[["self"]],["str"]]],[11,"description","tokio_threadpool","",5,[[["self"]],["str"]]],[11,"poll","","",6,[[["self"]],["poll"]]],[11,"poll","","",7,[[["self"]],["poll"]]],[11,"execute","","",2,[[["self"],["t"]],["result",["executeerror"]]]],[11,"status","","",2,[[["self"]],["result",["spawnerror"]]]],[11,"spawn","","",2,[[["self"],["box",["future"]]],["result",["spawnerror"]]]],[11,"unpark","tokio_threadpool::park","",0,N],[11,"park","","",0,[[["self"]],["result"]]],[11,"park_timeout","","",0,[[["self"],["duration"]],["result"]]],[11,"unpark","","",9,[[["self"]]]]],"paths":[[3,"DefaultPark"],[3,"Builder"],[3,"Sender"],[3,"ThreadPool"],[3,"Worker"],[3,"BlockingError"],[3,"Shutdown"],[3,"SpawnHandle"],[3,"WorkerId"],[3,"DefaultUnpark"],[3,"ParkError"]]};
searchIndex["tokio_timer"]={"doc":"Utilities for tracking time.","items":[[3,"DelayQueue","tokio_timer","A queue of delayed elements.",N,N],[3,"Delay","","A future that completes at a specified instant in time.",N,N],[3,"Error","","Errors encountered by the timer implementation.",N,N],[3,"Interval","","A stream representing notifications at fixed interval",N,N],[3,"Timeout","","Allows a `Future` or `Stream` to execute for a limited…",N,N],[5,"with_default","","Set the default timer for the duration of the closure.",N,[[["handle"],["enter"],["f"]],["r"]]],[5,"sleep","","Create a Future that completes in `duration` from now.",N,[[["duration"]],["delay"]]],[0,"clock","","A configurable source of time.",N,N],[3,"Clock","tokio_timer::clock","A handle to a source of time.",N,N],[5,"now","","Returns an `Instant` corresponding to \"now\".",N,[[],["instant"]]],[5,"with_default","","Set the default clock for the duration of the closure.",N,[[["clock"],["enter"],["f"]],["r"]]],[11,"new","","Return a new `Clock` instance that uses the current…",0,[[],["clock"]]],[11,"new_with_now","","Return a new `Clock` instance that uses `now` as the…",0,[[["t"]],["clock"]]],[11,"system","","Return a new `Clock` instance that uses `Instant::now()`…",0,[[],["clock"]]],[11,"now","","Returns an instant corresponding to \"now\" by using the…",0,[[["self"]],["instant"]]],[8,"Now","","Returns `Instant` values representing the current instant…",N,N],[10,"now","","Returns an instant corresponding to \"now\".",1,[[["self"]],["instant"]]],[0,"delay_queue","tokio_timer","A queue of delayed elements.",N,N],[3,"DelayQueue","tokio_timer::delay_queue","A queue of delayed elements.",N,N],[3,"Expired","","An entry in `DelayQueue` that has expired and removed.",N,N],[3,"Key","","Token to a value stored in a `DelayQueue`.",N,N],[11,"new","","Create a new, empty, `DelayQueue`",2,[[],["delayqueue"]]],[11,"with_capacity_and_handle","","Create a new, empty, `DelayQueue` backed by the specified…",2,[[["usize"],["handle"]],["delayqueue"]]],[11,"with_capacity","","Create a new, empty, `DelayQueue` with the specified…",2,[[["usize"]],["delayqueue"]]],[11,"insert_at","","Insert `value` into the queue set to expire at a specific…",2,[[["self"],["t"],["instant"]],["key"]]],[11,"insert","","Insert `value` into the queue set to expire after the…",2,[[["self"],["t"],["duration"]],["key"]]],[11,"remove","","Remove the item associated with `key` from the queue.",2,[[["self"],["key"]],["expired"]]],[11,"reset_at","","Sets the delay of the item associated with `key` to expire…",2,[[["self"],["key"],["instant"]]]],[11,"reset","","Sets the delay of the item associated with `key` to expire…",2,[[["self"],["key"],["duration"]]]],[11,"clear","","Clears the queue, removing all items.",2,[[["self"]]]],[11,"capacity","","Returns the number of elements the queue can hold without…",2,[[["self"]],["usize"]]],[11,"reserve","","Reserve capacity for at least `additional` more items to…",2,[[["self"],["usize"]]]],[11,"is_empty","","Returns `true` if there are no items in the queue.",2,[[["self"]],["bool"]]],[11,"get_ref","","Returns a reference to the inner value.",3,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the inner value.",3,[[["self"]],["t"]]],[11,"into_inner","","Consumes `self` and returns the inner value.",3,[[["self"]],["t"]]],[0,"timeout","tokio_timer","Allows a future or stream to execute for a maximum amount…",N,N],[3,"Timeout","tokio_timer::timeout","Allows a `Future` or `Stream` to execute for a limited…",N,N],[3,"Error","","Error returned by `Timeout`.",N,N],[11,"new","","Create a new `Timeout` that allows `value` to execute for…",4,[[["t"],["duration"]],["timeout"]]],[11,"get_ref","","Gets a reference to the underlying value in this timeout.",4,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",4,[[["self"]],["t"]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",4,[[["self"]],["t"]]],[11,"new_at","","Create a new `Timeout` that completes when `future`…",4,[[["t"],["instant"]],["timeout"]]],[11,"inner","","Create a new `Error` representing the inner value…",5,[[["t"]],["error"]]],[11,"is_inner","","Returns `true` if the error was caused by the inner value…",5,[[["self"]],["bool"]]],[11,"into_inner","","Consumes `self`, returning the inner future error.",5,[[["self"]],["option"]]],[11,"elapsed","","Create a new `Error` representing the inner value not…",5,[[],["error"]]],[11,"is_elapsed","","Returns `true` if the error was caused by the inner value…",5,[[["self"]],["bool"]]],[11,"timer","","Creates a new `Error` representing an error encountered by…",5,[[["error"]],["error"]]],[11,"is_timer","","Returns `true` if the error was caused by the timer.",5,[[["self"]],["bool"]]],[11,"into_timer","","Consumes `self`, returning the error raised by the timer…",5,[[["self"]],["option",["error"]]]],[0,"timer","tokio_timer","Timer implementation.",N,N],[3,"Handle","tokio_timer::timer","Handle to timer instance.",N,N],[3,"SystemNow","","A handle to a source of time.",N,N],[3,"Timer","","Timer implementation that drives [`Delay`], [`Interval`],…",N,N],[3,"Turn","","Return value from the `turn` method on `Timer`.",N,N],[5,"with_default","","Set the default timer for the duration of the closure.",N,[[["handle"],["enter"],["f"]],["r"]]],[11,"current","","Returns a handle to the current timer.",6,[[],["handle"]]],[11,"delay","","Create a `Delay` driven by this handle's associated `Timer`.",6,[[["self"],["instant"]],["delay"]]],[11,"deadline","","Create a `Deadline` driven by this handle's associated…",6,[[["self"],["t"],["instant"]],["deadline"]]],[11,"interval","","Create a new `Interval` that starts at `at` and yields…",6,[[["self"],["instant"],["duration"]],["interval"]]],[11,"new","","Create a new `Timer` instance that uses `park` to block…",7,[[["t"]],["self"]]],[11,"get_park","","Returns a reference to the underlying `Park` instance.",7,[[["self"]],["t"]]],[11,"get_park_mut","","Returns a mutable reference to the underlying `Park`…",7,[[["self"]],["t"]]],[11,"new_with_now","","Create a new `Timer` instance that uses `park` to block…",7,[[["t"],["n"]],["self"]]],[11,"handle","","Returns a handle to the timer.",7,[[["self"]],["handle"]]],[11,"turn","","Performs one iteration of the timer loop.",7,[[["self"],["option",["duration"]]],["result",["turn"]]]],[11,"new","tokio_timer","Create a new `Delay` instance that elapses at `deadline`.",8,[[["instant"]],["delay"]]],[11,"deadline","","Returns the instant at which the future will complete.",8,[[["self"]],["instant"]]],[11,"is_elapsed","","Returns true if the `Delay` has elapsed",8,[[["self"]],["bool"]]],[11,"reset","","Reset the `Delay` instance to a new deadline.",8,[[["self"],["instant"]]]],[11,"shutdown","","Create an error representing a shutdown timer.",9,[[],["error"]]],[11,"is_shutdown","","Returns `true` if the error was caused by the timer being…",9,[[["self"]],["bool"]]],[11,"at_capacity","","Create an error representing a timer at capacity.",9,[[],["error"]]],[11,"is_at_capacity","","Returns `true` if the error was caused by the timer being…",9,[[["self"]],["bool"]]],[11,"new","","Create a new `Interval` that starts at `at` and yields…",10,[[["instant"],["duration"]],["interval"]]],[11,"new_interval","","Creates new `Interval` that yields with interval of…",10,[[["duration"]],["interval"]]],[11,"from","tokio_timer::delay_queue","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","tokio_timer","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_future","","",8,[[["self"]],["f"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","tokio_timer::timeout","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_future","","",4,[[["self"]],["f"]]],[11,"from","tokio_timer::clock","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","tokio_timer::delay_queue","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_string","tokio_timer::timeout","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","tokio_timer::timer","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"default","tokio_timer::clock","",0,[[],["clock"]]],[11,"default","tokio_timer::timer","",6,[[],["handle"]]],[11,"default","","",7,[[],["self"]]],[11,"clone","tokio_timer::clock","",0,[[["self"]],["clock"]]],[11,"clone","tokio_timer::timer","",6,[[["self"]],["handle"]]],[11,"drop","","",7,[[["self"]]]],[11,"fmt","tokio_timer::clock","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::delay_queue","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::timeout","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::timer","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer::timeout","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","tokio_timer","",9,[[["self"],["formatter"]],["result"]]],[11,"description","tokio_timer::timeout","",5,[[["self"]],["str"]]],[11,"description","tokio_timer","",9,[[["self"]],["str"]]],[11,"poll","tokio_timer::timeout","",4,[[["self"]],["poll"]]],[11,"poll","tokio_timer","",8,[[["self"]],["poll"]]],[11,"poll","tokio_timer::delay_queue","",2,[[["self"]],["poll",["option","error"]]]],[11,"poll","tokio_timer::timeout","",4,[[["self"]],["poll",["option"]]]],[11,"poll","tokio_timer","",10,[[["self"]],["poll",["option"]]]],[11,"unpark","tokio_timer::timer","",7,N],[11,"park","","",7,[[["self"]],["result"]]],[11,"park_timeout","","",7,[[["self"],["duration"]],["result"]]]],"paths":[[3,"Clock"],[8,"Now"],[3,"DelayQueue"],[3,"Expired"],[3,"Timeout"],[3,"Error"],[3,"Handle"],[3,"Timer"],[3,"Delay"],[3,"Error"],[3,"Interval"],[3,"Key"],[3,"Turn"]]};
searchIndex["tokio_udp"]={"doc":"UDP bindings for `tokio`.","items":[[3,"UdpFramed","tokio_udp","A unified `Stream` and `Sink` interface to an underlying…",N,N],[3,"UdpSocket","","An I/O object representing a UDP socket.",N,N],[3,"SendDgram","","A future used to write the entire contents of some data to…",N,N],[3,"RecvDgram","","A future used to receive a datagram from a UDP socket.",N,N],[11,"new","","Create a new `UdpFramed` backed by the given socket and…",0,[[["udpsocket"],["c"]],["udpframed"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",0,[[["self"]],["udpsocket"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",0,[[["self"]],["udpsocket"]]],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",0,[[["self"]],["udpsocket"]]],[11,"bind","","This function will create a new UDP socket and attempt to…",1,[[["socketaddr"]],["result",["udpsocket"]]]],[11,"from_std","","Creates a new `UdpSocket` from the previously bound socket…",1,[[["udpsocket"],["handle"]],["result",["udpsocket"]]]],[11,"local_addr","","Returns the local address that this socket is bound to.",1,[[["self"]],["result",["socketaddr"]]]],[11,"connect","","Connects the UDP socket setting the default destination…",1,[[["self"],["socketaddr"]],["result"]]],[11,"poll_send","","Sends data on the socket to the remote address to which it…",1,N],[11,"poll_recv","","Receives a single datagram message on the socket from the…",1,N],[11,"poll_send_to","","Sends data on the socket to the given address. On success,…",1,N],[11,"send_dgram","","Creates a future that will write the entire contents of…",1,[[["self"],["t"],["socketaddr"]],["senddgram"]]],[11,"poll_recv_from","","Receives data from the socket. On success, returns the…",1,N],[11,"recv_dgram","","Creates a future that receive a datagram to be written to…",1,[[["self"],["t"]],["recvdgram"]]],[11,"poll_read_ready","","Check the UDP socket's read readiness state.",1,[[["self"],["ready"]],["poll",["ready","error"]]]],[11,"poll_write_ready","","Check the UDP socket's write readiness state.",1,[[["self"]],["poll",["ready","error"]]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",1,[[["self"]],["result",["bool"]]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",1,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",1,[[["self"]],["result",["bool"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",1,[[["self"],["bool"]],["result"]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",1,[[["self"]],["result",["u32"]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",1,[[["self"],["u32"]],["result"]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",1,[[["self"]],["result",["bool"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",1,[[["self"],["bool"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",1,[[["self"]],["result",["u32"]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",1,[[["self"],["u32"]],["result"]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",1,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",1,[[["self"],["ipv6addr"],["u32"]],["result"]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",1,[[["self"],["ipv4addr"],["ipv4addr"]],["result"]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",1,[[["self"],["ipv6addr"],["u32"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_future","","",2,[[["self"]],["f"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_future","","",3,[[["self"]],["f"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"as_raw_fd","","",1,[[["self"]],["rawfd"]]],[11,"poll","","",2,[[["self"]],["poll",["error"]]]],[11,"poll","","",3,[[["self"]],["poll",["error"]]]],[11,"poll","","",0,[[["self"]],["poll",["option"]]]],[11,"start_send","","",0,N],[11,"poll_complete","","",0,[[["self"]],["poll"]]],[11,"close","","",0,[[["self"]],["poll"]]]],"paths":[[3,"UdpFramed"],[3,"UdpSocket"],[3,"SendDgram"],[3,"RecvDgram"]]};
searchIndex["tokio_uds"]={"doc":"Unix Domain Sockets for Tokio.","items":[[3,"UnixDatagram","tokio_uds","An I/O object representing a Unix datagram socket.",N,N],[3,"Incoming","","Stream of listeners",N,N],[3,"UnixListener","","A Unix socket which can accept connections from other Unix…",N,N],[3,"RecvDgram","","A future for receiving datagrams from a Unix datagram…",N,N],[3,"SendDgram","","A future for writing a buffer to a Unix datagram socket.",N,N],[3,"UnixStream","","A structure representing a connected Unix socket.",N,N],[3,"ConnectFuture","","Future returned by `UnixStream::connect` which will…",N,N],[3,"UCred","","Credentials of a process",N,N],[12,"uid","","UID (user ID) of the process",0,N],[12,"gid","","GID (group ID) of the process",0,N],[11,"bind","","Creates a new `UnixDatagram` bound to the specified path.",1,[[["p"]],["result",["unixdatagram"]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",1,[[],["result"]]],[11,"from_std","","Consumes a `UnixDatagram` in the standard library and…",1,[[["unixdatagram"],["handle"]],["result",["unixdatagram"]]]],[11,"unbound","","Creates a new `UnixDatagram` which is not bound to any…",1,[[],["result",["unixdatagram"]]]],[11,"connect","","Connects the socket to the specified address.",1,[[["self"],["p"]],["result"]]],[11,"poll_read_ready","","Test whether this socket is ready to be read or not.",1,[[["self"],["ready"]],["poll",["ready","error"]]]],[11,"poll_write_ready","","Test whether this socket is ready to be written to or not.",1,[[["self"]],["poll",["ready","error"]]]],[11,"local_addr","","Returns the local address that this socket is bound to.",1,[[["self"]],["result",["socketaddr"]]]],[11,"peer_addr","","Returns the address of this socket's peer.",1,[[["self"]],["result",["socketaddr"]]]],[11,"poll_recv_from","","Receives data from the socket.",1,N],[11,"poll_recv","","Receives data from the socket.",1,N],[11,"recv_dgram","","Returns a future for receiving a datagram. See the…",1,[[["self"],["t"]],["recvdgram"]]],[11,"poll_send_to","","Sends data on the socket to the specified address.",1,N],[11,"poll_send","","Sends data on the socket to the socket's peer.",1,N],[11,"send_dgram","","Returns a future sending the data in buf to the socket at…",1,[[["self"],["t"],["p"]],["senddgram"]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",1,[[["self"]],["result",["option"]]]],[11,"shutdown","","Shut down the read, write, or both halves of this…",1,[[["self"],["shutdown"]],["result"]]],[11,"bind","","Creates a new `UnixListener` bound to the specified path.",2,[[["p"]],["result",["unixlistener"]]]],[11,"from_std","","Consumes a `UnixListener` in the standard library and…",2,[[["unixlistener"],["handle"]],["result",["unixlistener"]]]],[11,"local_addr","","Returns the local socket address of this listener.",2,[[["self"]],["result",["socketaddr"]]]],[11,"poll_read_ready","","Test whether this socket is ready to be read or not.",2,[[["self"],["ready"]],["poll",["ready","error"]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",2,[[["self"]],["result",["option"]]]],[11,"poll_accept","","Attempt to accept a connection and create a new connected…",2,[[["self"]],["poll",["error"]]]],[11,"poll_accept_std","","Attempt to accept a connection and create a new connected…",2,[[["self"]],["poll",["error"]]]],[11,"incoming","","Consumes this listener, returning a stream of the sockets…",2,[[["self"]],["incoming"]]],[11,"connect","","Connects to the socket named by `path`.",3,[[["p"]],["connectfuture"]]],[11,"from_std","","Consumes a `UnixStream` in the standard library and…",3,[[["unixstream"],["handle"]],["result",["unixstream"]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",3,[[],["result"]]],[11,"poll_read_ready","","Test whether this socket is ready to be read or not.",3,[[["self"],["ready"]],["poll",["ready","error"]]]],[11,"poll_write_ready","","Test whether this socket is ready to be written to or not.",3,[[["self"]],["poll",["ready","error"]]]],[11,"local_addr","","Returns the socket address of the local half of this…",3,[[["self"]],["result",["socketaddr"]]]],[11,"peer_addr","","Returns the socket address of the remote half of this…",3,[[["self"]],["result",["socketaddr"]]]],[11,"peer_cred","","Returns effective credentials of the process which called…",3,[[["self"]],["result",["ucred"]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",3,[[["self"]],["result",["option"]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",3,[[["self"],["shutdown"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_future","","",5,[[["self"]],["f"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_future","","",6,[[["self"]],["f"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_future","","",7,[[["self"]],["f"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["ucred"]],["bool"]]],[11,"ne","","",0,[[["self"],["ucred"]],["bool"]]],[11,"clone","","",0,[[["self"]],["ucred"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"as_raw_fd","","",1,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",2,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",3,[[["self"]],["rawfd"]]],[11,"read","","",3,N],[11,"write","","",3,N],[11,"flush","","",3,[[["self"]],["result"]]],[11,"poll","","",5,[[["self"]],["poll"]]],[11,"poll","","",6,[[["self"]],["poll"]]],[11,"poll","","",7,[[["self"]],["poll",["unixstream","error"]]]],[11,"poll","","",4,[[["self"]],["poll",["option","error"]]]],[11,"shutdown","","",3,[[["self"]],["poll",["error"]]]],[11,"write_buf","","",3,[[["self"],["b"]],["poll",["usize","error"]]]],[11,"prepare_uninitialized_buffer","","",3,N],[11,"read_buf","","",3,[[["self"],["b"]],["poll",["usize","error"]]]]],"paths":[[3,"UCred"],[3,"UnixDatagram"],[3,"UnixListener"],[3,"UnixStream"],[3,"Incoming"],[3,"RecvDgram"],[3,"SendDgram"],[3,"ConnectFuture"]]};
searchIndex["toml"]={"doc":"A [TOML]-parsing library","items":[[0,"value","toml","Definition of a TOML value",N,N],[3,"Datetime","toml::value","A parsed TOML datetime value",N,N],[3,"DatetimeParseError","","Error returned from parsing a `Datetime` in the `FromStr`…",N,N],[4,"Value","","Representation of a TOML value.",N,N],[13,"String","","Represents a TOML string",0,N],[13,"Integer","","Represents a TOML integer",0,N],[13,"Float","","Represents a TOML float",0,N],[13,"Boolean","","Represents a TOML boolean",0,N],[13,"Datetime","","Represents a TOML datetime",0,N],[13,"Array","","Represents a TOML array",0,N],[13,"Table","","Represents a TOML table",0,N],[6,"Array","","Type representing a TOML array, payload of the…",N,N],[6,"Table","","Type representing a TOML table, payload of the…",N,N],[8,"Index","","Types that can be used to index a `toml::Value`",N,N],[11,"try_from","","Convert a `T` into `toml::Value` which is an enum that can…",0,[[["t"]],["result",["value","error"]]]],[11,"try_into","","Interpret a `toml::Value` as an instance of type `T`.",0,[[["self"]],["result",["error"]]]],[11,"get","","Index into a TOML array or map. A string index can be used…",0,[[["self"],["i"]],["option",["value"]]]],[11,"get_mut","","Mutably index into a TOML array or map. A string index can…",0,[[["self"],["i"]],["option",["value"]]]],[11,"as_integer","","Extracts the integer value if it is an integer.",0,[[["self"]],["option",["i64"]]]],[11,"is_integer","","Tests whether this value is an integer.",0,[[["self"]],["bool"]]],[11,"as_float","","Extracts the float value if it is a float.",0,[[["self"]],["option",["f64"]]]],[11,"is_float","","Tests whether this value is a float.",0,[[["self"]],["bool"]]],[11,"as_bool","","Extracts the boolean value if it is a boolean.",0,[[["self"]],["option",["bool"]]]],[11,"is_bool","","Tests whether this value is a boolean.",0,[[["self"]],["bool"]]],[11,"as_str","","Extracts the string of this value if it is a string.",0,[[["self"]],["option",["str"]]]],[11,"is_str","","Tests if this value is a string.",0,[[["self"]],["bool"]]],[11,"as_datetime","","Extracts the datetime value if it is a datetime.",0,[[["self"]],["option",["datetime"]]]],[11,"is_datetime","","Tests whether this value is a datetime.",0,[[["self"]],["bool"]]],[11,"as_array","","Extracts the array value if it is an array.",0,[[["self"]],["option",["vec"]]]],[11,"as_array_mut","","Extracts the array value if it is an array.",0,[[["self"]],["option",["vec"]]]],[11,"is_array","","Tests whether this value is an array.",0,[[["self"]],["bool"]]],[11,"as_table","","Extracts the table value if it is a table.",0,[[["self"]],["option",["table"]]]],[11,"as_table_mut","","Extracts the table value if it is a table.",0,[[["self"]],["option",["table"]]]],[11,"is_table","","Tests whether this value is a table.",0,[[["self"]],["bool"]]],[11,"same_type","","Tests whether this and another value have the same type.",0,[[["self"],["value"]],["bool"]]],[11,"type_str","","Returns a human-readable representation of the type of…",0,[[["self"]],["str"]]],[0,"ser","toml","Serializing Rust structures into TOML.",N,N],[3,"Serializer","toml::ser","Serialization implementation for TOML.",N,N],[4,"Error","","Errors that can occur when serializing a type.",N,N],[13,"UnsupportedType","","Indicates that a Rust type was requested to be serialized…",1,N],[13,"KeyNotString","","The key of all TOML maps must be strings, but…",1,N],[13,"ArrayMixedType","","Arrays in TOML must have a homogenous type, but a…",1,N],[13,"ValueAfterTable","","All values in a TOML table must be emitted before further…",1,N],[13,"DateInvalid","","A serialized date was invalid.",1,N],[13,"NumberInvalid","","A serialized number was invalid.",1,N],[13,"UnsupportedNone","","None was attempted to be serialized, but it's not supported.",1,N],[13,"Custom","","A custom error which could be generated when serializing a…",1,N],[5,"to_vec","","Serialize the given data structure as a TOML byte vector.",N,[[["t"]],["result",["vec","error"]]]],[5,"to_string","","Serialize the given data structure as a String of TOML.",N,[[["t"]],["result",["string","error"]]]],[5,"to_string_pretty","","Serialize the given data structure as a \"pretty\" String of…",N,[[["t"]],["result",["string","error"]]]],[5,"tables_last","","Convenience function to serialize items in a map in an…",N,[[["i"],["s"]],["result"]]],[11,"new","","Creates a new serializer which will emit TOML into the…",2,[[["string"]],["serializer"]]],[11,"pretty","","Instantiate a \"pretty\" formatter",2,[[["string"]],["serializer"]]],[11,"pretty_string","","Enable or Disable pretty strings",2,[[["self"],["bool"]],["self"]]],[11,"pretty_string_literal","","Enable or Disable Literal strings for pretty strings",2,[[["self"],["bool"]],["self"]]],[11,"pretty_array","","Enable or Disable pretty arrays",2,[[["self"],["bool"]],["self"]]],[11,"pretty_array_indent","","Set the indent for pretty arrays",2,[[["self"],["usize"]],["self"]]],[11,"pretty_array_trailing_comma","","Specify whether to use a trailing comma when serializing…",2,[[["self"],["bool"]],["self"]]],[0,"de","toml","Deserializing TOML into Rust structures.",N,N],[3,"Error","toml::de","Errors that can occur when deserializing a type.",N,N],[3,"Deserializer","","Deserialization implementation for TOML.",N,N],[5,"from_slice","","Deserializes a byte slice into a type.",N,N],[5,"from_str","","Deserializes a string into a type.",N,[[["str"]],["result",["error"]]]],[11,"new","","Creates a new deserializer which will be deserializing the…",3,[[["str"]],["deserializer"]]],[11,"end","","The `Deserializer::end` method should be called after a…",3,[[["self"]],["result",["error"]]]],[11,"set_require_newline_after_table","","Historical versions of toml-rs accidentally allowed a…",3,[[["self"],["bool"]]]],[11,"line_col","","Produces a (line, column) pair of the position of the…",4,[[["self"]],["option"]]],[14,"toml","toml","Construct a [`toml::Value`] from TOML syntax.",N,N],[11,"to_string","toml::value","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","toml::ser","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","toml::de","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"eq","toml::value","",0,[[["self"],["value"]],["bool"]]],[11,"ne","","",0,[[["self"],["value"]],["bool"]]],[11,"eq","","",5,[[["self"],["datetime"]],["bool"]]],[11,"ne","","",5,[[["self"],["datetime"]],["bool"]]],[11,"eq","toml::ser","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"clone","toml::value","",0,[[["self"]],["value"]]],[11,"clone","","",5,[[["self"]],["datetime"]]],[11,"clone","","",6,[[["self"]],["datetimeparseerror"]]],[11,"clone","toml::ser","",1,[[["self"]],["error"]]],[11,"clone","toml::de","",4,[[["self"]],["error"]]],[11,"from","toml::value","",0,[[["str"]],["value"]]],[11,"from","","",0,[[["vec"]],["value"]]],[11,"from","","",0,[[["btreemap"]],["value"]]],[11,"from","","",0,[[["hashmap"]],["value"]]],[11,"from","","",0,[[["string"]],["value"]]],[11,"from","","",0,[[["i64"]],["value"]]],[11,"from","","",0,[[["i32"]],["value"]]],[11,"from","","",0,[[["i8"]],["value"]]],[11,"from","","",0,[[["u8"]],["value"]]],[11,"from","","",0,[[["u32"]],["value"]]],[11,"from","","",0,[[["f64"]],["value"]]],[11,"from","","",0,[[["f32"]],["value"]]],[11,"from","","",0,[[["bool"]],["value"]]],[11,"from","","",0,[[["datetime"]],["value"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","toml::ser","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","toml::de","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","toml::value","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","toml::ser","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","toml::de","",4,[[["self"],["formatter"]],["result"]]],[11,"index","toml::value","",0,[[["self"],["i"]],["value"]]],[11,"index_mut","","",0,[[["self"],["i"]],["value"]]],[11,"from_str","","",0,[[["str"]],["result",["value"]]]],[11,"from_str","","",5,[[["str"]],["result",["datetime","datetimeparseerror"]]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"description","toml::ser","",1,[[["self"]],["str"]]],[11,"description","toml::de","",4,[[["self"]],["str"]]],[11,"into_deserializer","toml::value","",0,[[["self"]],["self"]]],[11,"serialize","","",0,[[["self"],["s"]],["result"]]],[11,"serialize","","",5,[[["self"],["s"]],["result"]]],[11,"custom","toml::ser","",1,[[["t"]],["error"]]],[11,"deserialize","toml::value","",0,[[["d"]],["result",["value"]]]],[11,"deserialize","","",5,[[["d"]],["result",["datetime"]]]],[11,"deserialize_any","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_enum","","",0,N],[11,"deserialize_option","","",0,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_newtype_struct","","",0,[[["self"],["str"],["v"]],["result",["error"]]]],[11,"deserialize_bool","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_map","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",0,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",0,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_struct","","",0,N],[11,"deserialize_tuple","","",0,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",0,[[["self"],["v"]],["result"]]],[11,"deserialize_identifier","","",0,[[["self"],["v"]],["result"]]],[11,"custom","toml::de","",4,[[["t"]],["error"]]]],"paths":[[4,"Value"],[4,"Error"],[3,"Serializer"],[3,"Deserializer"],[3,"Error"],[3,"Datetime"],[3,"DatetimeParseError"]]};
searchIndex["toml_query"]={"doc":"","items":[[0,"log","toml_query","If logging is not compiled into the library, this module…",N,N],[0,"error","","",N,N],[3,"Error","toml_query::error","The Error type.",N,N],[12,"0","","The kind of the error.",0,N],[4,"ErrorKind","","The kind of an error.",N,N],[13,"Msg","","A convenient variant for String.",1,N],[13,"QueryParsingError","","",1,N],[13,"EmptyQueryError","","",1,N],[13,"EmptyIdentifier","","",1,N],[13,"ArrayAccessWithoutIndex","","",1,N],[13,"ArrayAccessWithInvalidIndex","","",1,N],[13,"IdentifierNotFoundInDocument","","",1,N],[13,"NoIndexInTable","","",1,N],[13,"NoIdentifierInArray","","",1,N],[13,"QueryingValueAsTable","","",1,N],[13,"QueryingValueAsArray","","",1,N],[13,"CannotDeleteNonEmptyTable","","",1,N],[13,"CannotDeleteNonEmptyArray","","",1,N],[13,"CannotAccessBecauseTypeMismatch","","",1,N],[13,"ArrayIndexOutOfBounds","","",1,N],[13,"TypeError","","",1,N],[13,"NotAvailable","","",1,N],[6,"Result","","Convenient wrapper around `std::Result`.",N,N],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",N,N],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",2,[[["self"],["f"]],["result",["error"]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,[[["errorkind"]],["error"]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",0,[[["e"],["k"]],["error"]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",0,[[["box",["error"]],["k"]],["error"]]],[11,"kind","","Returns the kind of the error.",0,[[["self"]],["errorkind"]]],[11,"iter","","Iterates over the error chain.",0,[[["self"]],["iter"]]],[11,"backtrace","","Returns the backtrace associated with this error.",0,[[["self"]],["option",["backtrace"]]]],[11,"chain_err","","Extends the error chain with a new entry.",0,[[["self"],["f"]],["error"]]],[11,"description","","A short description of the error. This method is identical…",0,[[["self"]],["str"]]],[11,"description","","A string describing the error kind.",1,[[["self"]],["str"]]],[0,"read","toml_query","",N,N],[8,"TomlValueReadExt","toml_query::read","",N,N],[10,"read_with_seperator","","Extension function for reading a value from the current…",3,[[["self"],["str"],["char"]],["result",["option"]]]],[10,"read_mut_with_seperator","","Extension function for reading a value from the current…",3,[[["self"],["str"],["char"]],["result",["option"]]]],[11,"read","","Extension function for reading a value from the current…",3,[[["self"],["str"]],["result",["option"]]]],[11,"read_mut","","Extension function for reading a value from the current…",3,[[["self"],["str"]],["result",["option"]]]],[8,"TomlValueReadTypeExt","","",N,N],[10,"read_string","","",4,[[["self"],["str"]],["result",["option"]]]],[10,"read_int","","",4,[[["self"],["str"]],["result",["option"]]]],[10,"read_float","","",4,[[["self"],["str"]],["result",["option"]]]],[10,"read_bool","","",4,[[["self"],["str"]],["result",["option"]]]],[0,"set","toml_query","",N,N],[8,"TomlValueSetExt","toml_query::set","",N,N],[10,"set_with_seperator","","Extension function for setting a value in the current…",5,[[["self"],["str"],["char"],["value"]],["result",["option"]]]],[11,"set","","Extension function for setting a value from the current…",5,[[["self"],["str"],["value"]],["result",["option"]]]],[0,"insert","toml_query","",N,N],[8,"TomlValueInsertExt","toml_query::insert","",N,N],[10,"insert_with_seperator","","Extension function for inserting a value in the current…",6,[[["self"],["str"],["char"],["value"]],["result",["option"]]]],[11,"insert","","Extension function for inserting a value from the current…",6,[[["self"],["str"],["value"]],["result",["option"]]]],[0,"delete","toml_query","",N,N],[8,"TomlValueDeleteExt","toml_query::delete","",N,N],[10,"delete_with_seperator","","Extension function for deleting a value in the current…",7,[[["self"],["str"],["char"]],["result",["option"]]]],[11,"delete","","Extension function for inserting a value from the current…",7,[[["self"],["str"]],["result",["option"]]]],[0,"value","toml_query","",N,N],[8,"TomlValueExt","toml_query::value","Conveniance trait over",N,N],[11,"read_with_seperator","","See documentation of `TomlValueReadExt`",8,[[["self"],["str"],["char"]],["result",["option"]]]],[11,"read_mut_with_seperator","","See documentation of `TomlValueReadExt`",8,[[["self"],["str"],["char"]],["result",["option"]]]],[11,"read","","See documentation of `TomlValueReadExt`",8,[[["self"],["str"]],["result",["option"]]]],[11,"read_mut","","See documentation of `TomlValueReadExt`",8,[[["self"],["str"]],["result",["option"]]]],[11,"set_with_seperator","","See documentation of `TomlValueSetExt`",8,[[["self"],["str"],["char"],["value"]],["result",["option"]]]],[11,"set","","See documentation of `TomlValueSetExt`",8,[[["self"],["str"],["value"]],["result",["option"]]]],[11,"delete_with_seperator","","See documentation of `TomlValueDeleteExt`",8,[[["self"],["str"],["char"]],["result",["option"]]]],[11,"delete","","See documentation of `TomlValueDeleteExt`",8,[[["self"],["str"]],["result",["option"]]]],[11,"insert_with_seperator","","See documentation of `TomlValueInsertExt`",8,[[["self"],["str"],["char"],["value"]],["result",["option"]]]],[11,"insert","","See documentation of `TomlValueInsertExt`",8,[[["self"],["str"],["value"]],["result",["option"]]]],[14,"debug","toml_query","This macro is defined if the `logging` feature is not…",N,N],[14,"error","","This macro is defined if the `logging` feature is not…",N,N],[14,"info","","This macro is defined if the `logging` feature is not…",N,N],[14,"log","","This macro is defined if the `logging` feature is not…",N,N],[14,"trace","","This macro is defined if the `logging` feature is not…",N,N],[14,"warn","","This macro is defined if the `logging` feature is not…",N,N],[11,"to_string","toml_query::error","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["errorkind"]],["self"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"from","","",0,[[["string"]],["self"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"new","","",0,[[["errorkind"],["state"]],["error"]]],[11,"from_kind","","",0,N],[11,"with_chain","","",0,[[["e"],["k"]],["self"]]],[11,"kind","","",0,N],[11,"iter","","",0,[[["self"]],["iter"]]],[11,"chain_err","","",0,[[["self"],["f"]],["self"]]],[11,"backtrace","","",0,[[["self"]],["option",["backtrace"]]]],[11,"extract_backtrace","","",0,[[["error"]],["option",["internalbacktrace"]]]]],"paths":[[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[8,"TomlValueReadExt"],[8,"TomlValueReadTypeExt"],[8,"TomlValueSetExt"],[8,"TomlValueInsertExt"],[8,"TomlValueDeleteExt"],[8,"TomlValueExt"]]};
searchIndex["try_lock"]={"doc":"A light-weight lock guarded by an atomic boolean.","items":[[3,"TryLock","try_lock","A light-weight lock guarded by an atomic boolean.",N,N],[3,"Locked","","A locked value acquired from a `TryLock`.",N,N],[11,"new","","Create a `TryLock` around the value.",0,[[["t"]],["trylock"]]],[11,"try_lock","","Try to acquire the lock of this value.",0,[[["self"]],["option",["locked"]]]],[11,"try_lock_order","","Try to acquire the lock of this value using the lock and…",0,[[["self"],["ordering"],["ordering"]],["option",["locked"]]]],[11,"into_inner","","Take the value back out of the lock when this is the sole…",0,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["trylock"]]],[11,"drop","","",1,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"deref","","",1,[[["self"]],["t"]]]],"paths":[[3,"TryLock"],[3,"Locked"]]};
searchIndex["ucd_util"]={"doc":"The `ucd-util` crate contains a smattering of utility…","items":[[5,"hangul_name","ucd_util","Return the character name of the given precomposed Hangul…",N,[[["u32"]],["option",["string"]]]],[5,"hangul_full_canonical_decomposition","","Return the full canonical decomposition of the given…",N,[[["u32"]],["option"]]],[5,"ideograph_name","","Return the character name of the given ideograph codepoint.",N,[[["u32"]],["option",["string"]]]],[5,"character_name_normalize","","Normalize the given character name in place according to…",N,[[["string"]]]],[5,"symbolic_name_normalize","","Normalize the given symbolic name in place according to…",N,[[["string"]]]],[5,"canonical_property_name","","Find the canonical property name for the given normalized…",N,[[["propertytable"],["str"]],["option",["str"]]]],[5,"property_values","","Find the set of possible property values for a given…",N,[[["propertyvaluetable"],["str"]],["option",["propertyvalues"]]]],[5,"canonical_property_value","","Find the canonical property value for the given normalized…",N,[[["propertyvalues"],["str"]],["option",["str"]]]],[6,"PropertyTable","","The type of a property name table.",N,N],[6,"PropertyValueTable","","Type of a property value table.",N,N],[6,"PropertyValues","","A mapping of property values for a specific property.",N,N],[17,"RANGE_HANGUL_SYLLABLE","","A set of ranges that corresponds to the set of all Hangul…",N,N],[17,"RANGE_IDEOGRAPH","","A set of ranges that corresponds to the set of all…",N,N]],"paths":[]};
searchIndex["unicase"]={"doc":"UniCase","items":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",N,N],[3,"Ascii","","Case Insensitive wrapper of Ascii strings.",N,N],[5,"eq","","Compare two string-like types for case-less equality,…",N,[[["s"],["s"]],["bool"]]],[5,"eq_ascii","","Compare two string-like types for case-less equality,…",N,[[["s"],["s"]],["bool"]]],[11,"new","","",0,[[["s"]],["ascii"]]],[11,"new","","Creates a new `UniCase`.",1,[[["s"]],["unicase"]]],[11,"unicode","","Creates a new `UniCase`, skipping the ASCII check.",1,[[["s"]],["unicase"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["s2"]],["bool"]]],[11,"eq","","",1,[[["self"],["unicase"]],["bool"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",1,[[["self"]],["str"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["self"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["unicase"]]],[11,"clone","","",0,[[["self"]],["ascii"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"into","","",1,[[["self"]],["str"]]],[11,"into","","",1,[[["self"]],["string"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["self"]],["option",["ordering"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","","",0,[[["self"]],["s"]]],[11,"deref_mut","","",1,[[["self"]],["s"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"deref","","",0,[[["self"]],["s"]]],[11,"deref","","",1,[[["self"]],["s"]]],[11,"from_str","","",0,[[["str"]],["result",["ascii"]]]],[11,"from_str","","",1,[[["str"]],["result",["unicase"]]]]],"paths":[[3,"Ascii"],[3,"UniCase"]]};
searchIndex["unicode_bidi"]={"doc":"This crate implements the [Unicode Bidirectional…","items":[[3,"ParagraphInfo","unicode_bidi","Bidi information about a single paragraph",N,N],[12,"range","","The paragraphs boundaries within the text, as byte indices.",0,N],[12,"level","","The paragraph embedding level.",0,N],[3,"InitialInfo","","Initial bidi information of the text.",N,N],[12,"text","","The text",1,N],[12,"original_classes","","The BidiClass of the character at each byte in the text.…",1,N],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",1,N],[3,"BidiInfo","","Bidi information of the text.",N,N],[12,"text","","The text",2,N],[12,"original_classes","","The BidiClass of the character at each byte in the text.",2,N],[12,"levels","","The directional embedding level of each byte in the text.",2,N],[12,"paragraphs","","The boundaries and paragraph embedding level of each…",2,N],[4,"BidiClass","","Represents values of the Unicode character property…",N,N],[13,"AL","","",3,N],[13,"AN","","",3,N],[13,"B","","",3,N],[13,"BN","","",3,N],[13,"CS","","",3,N],[13,"EN","","",3,N],[13,"ES","","",3,N],[13,"ET","","",3,N],[13,"FSI","","",3,N],[13,"L","","",3,N],[13,"LRE","","",3,N],[13,"LRI","","",3,N],[13,"LRO","","",3,N],[13,"NSM","","",3,N],[13,"ON","","",3,N],[13,"PDF","","",3,N],[13,"PDI","","",3,N],[13,"R","","",3,N],[13,"RLE","","",3,N],[13,"RLI","","",3,N],[13,"RLO","","",3,N],[13,"S","","",3,N],[13,"WS","","",3,N],[5,"bidi_class","","Find the `BidiClass` of a single char.",N,[[["char"]],["bidiclass"]]],[0,"deprecated","","This module holds deprecated assets only.",N,N],[5,"visual_runs","unicode_bidi::deprecated","Find the level runs within a line and return them in…",N,N],[0,"format_chars","unicode_bidi","Directional Formatting Characters",N,N],[17,"ALM","unicode_bidi::format_chars","ARABIC LETTER MARK",N,N],[17,"LRM","","LEFT-TO-RIGHT MARK",N,N],[17,"RLM","","RIGHT-TO-LEFT MARK",N,N],[17,"LRI","","LEFT‑TO‑RIGHT ISOLATE",N,N],[17,"RLI","","RIGHT‑TO‑LEFT ISOLATE",N,N],[17,"FSI","","FIRST STRONG ISOLATE",N,N],[17,"PDI","","POP DIRECTIONAL ISOLATE",N,N],[17,"LRE","","LEFT-TO-RIGHT EMBEDDING",N,N],[17,"RLE","","RIGHT-TO-LEFT EMBEDDING",N,N],[17,"PDF","","POP DIRECTIONAL FORMATTING",N,N],[17,"LRO","","LEFT-TO-RIGHT OVERRIDE",N,N],[17,"RLO","","RIGHT-TO-LEFT OVERRIDE",N,N],[0,"level","unicode_bidi","Bidi Embedding Level",N,N],[3,"Level","unicode_bidi::level","Embedding Level",N,N],[4,"Error","","Errors that can occur on Level creation or mutation",N,N],[13,"OutOfRangeNumber","","Out-of-range (invalid) embedding level number.",4,N],[5,"has_rtl","","If levels has any RTL (odd) level",N,N],[17,"LTR_LEVEL","","",N,N],[17,"RTL_LEVEL","","",N,N],[17,"MAX_EXPLICIT_DEPTH","","During explicit level resolution, embedding level can go…",N,N],[17,"MAX_IMPLICIT_DEPTH","","During implicit level resolution, embedding level can go…",N,N],[11,"ltr","","New LTR level with smallest number value (0).",5,[[],["level"]]],[11,"rtl","","New RTL level with smallest number value (1).",5,[[],["level"]]],[11,"max_implicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"max_explicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"new","","Create new level, fail if number is larger than `max_depth…",5,[[["u8"]],["result",["level","error"]]]],[11,"new_explicit","","Create new level, fail if number is larger than `max_depth`.",5,[[["u8"]],["result",["level","error"]]]],[11,"number","","The level number.",5,[[["self"]],["u8"]]],[11,"is_ltr","","If this level is left-to-right.",5,[[["self"]],["bool"]]],[11,"is_rtl","","If this level is right-to-left.",5,[[["self"]],["bool"]]],[11,"raise","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],["result",["error"]]]],[11,"raise_explicit","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],["result",["error"]]]],[11,"lower","","Lower level by `amount`, fail if number goes below zero.",5,[[["self"],["u8"]],["result",["error"]]]],[11,"new_explicit_next_ltr","","The next LTR (even) level greater than this, or fail if…",5,[[["self"]],["result",["level","error"]]]],[11,"new_explicit_next_rtl","","The next RTL (odd) level greater than this, or fail if…",5,[[["self"]],["result",["level","error"]]]],[11,"new_lowest_ge_rtl","","The lowest RTL (odd) level greater than or equal to this,…",5,[[["self"]],["result",["level","error"]]]],[11,"bidi_class","","Generate a character type based on a level (as specified…",5,[[["self"]],["bidiclass"]]],[11,"vec","","",5,N],[6,"LevelRun","unicode_bidi","A maximal substring of characters with the same embedding…",N,N],[17,"UNICODE_VERSION","","The Unicode version of data",N,N],[11,"new","","Find the paragraphs and BidiClasses in a string of text.",1,[[["str"],["option",["level"]]],["initialinfo"]]],[11,"new","","Split the text into paragraphs and determine the bidi…",2,[[["str"],["option",["level"]]],["bidiinfo"]]],[11,"reordered_levels","","Re-order a line based on resolved levels and return only…",2,[[["self"],["paragraphinfo"],["range",["usize"]]],["vec",["level"]]]],[11,"reordered_levels_per_char","","Re-order a line based on resolved levels and return only…",2,[[["self"],["paragraphinfo"],["range",["usize"]]],["vec",["level"]]]],[11,"reorder_line","","Re-order a line based on resolved levels and return the…",2,[[["self"],["paragraphinfo"],["range",["usize"]]],["cow",["str"]]]],[11,"visual_runs","","Find the level runs within a line and return them in…",2,N],[11,"has_rtl","","If processed text has any computed RTL levels",2,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","unicode_bidi::level","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"eq","","",5,[[["self"],["level"]],["bool"]]],[11,"ne","","",5,[[["self"],["level"]],["bool"]]],[11,"eq","","",4,[[["self"],["error"]],["bool"]]],[11,"eq","","",5,[[["self"],["str"]],["bool"]]],[11,"eq","","",5,[[["self"],["string"]],["bool"]]],[11,"eq","unicode_bidi","",3,[[["self"],["bidiclass"]],["bool"]]],[11,"eq","","",0,[[["self"],["paragraphinfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["paragraphinfo"]],["bool"]]],[11,"eq","","",1,[[["self"],["initialinfo"]],["bool"]]],[11,"ne","","",1,[[["self"],["initialinfo"]],["bool"]]],[11,"eq","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"cmp","unicode_bidi::level","",5,[[["self"],["level"]],["ordering"]]],[11,"clone","","",5,[[["self"]],["level"]]],[11,"clone","unicode_bidi","",3,[[["self"]],["bidiclass"]]],[11,"from","unicode_bidi::level","Create level by number",5,[[["u8"]],["level"]]],[11,"into","","Convert to the level number",5,[[["self"]],["u8"]]],[11,"partial_cmp","","",5,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["level"]],["bool"]]],[11,"le","","",5,[[["self"],["level"]],["bool"]]],[11,"gt","","",5,[[["self"],["level"]],["bool"]]],[11,"ge","","",5,[[["self"],["level"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","unicode_bidi","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"],[4,"BidiClass"],[4,"Error"],[3,"Level"]]};
searchIndex["unicode_normalization"]={"doc":"Unicode character composition and decomposition utilities…","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",N,N],[3,"Recompositions","","External iterator for a string recomposition's characters.",N,N],[3,"StreamSafe","","UAX15-D4: This iterator keeps track of how many…",N,N],[4,"IsNormalized","","The QuickCheck algorithm can quickly determine if a text…",N,N],[13,"Yes","","The text is definitely normalized.",0,N],[13,"No","","The text is definitely not normalized.",0,N],[13,"Maybe","","The text may be normalized.",0,N],[5,"is_nfc","","Authoritatively check if a string is in NFC.",N,[[["str"]],["bool"]]],[5,"is_nfc_quick","","Quickly check if a string is in NFC, potentially returning…",N,[[["i"]],["isnormalized"]]],[5,"is_nfc_stream_safe","","Authoritatively check if a string is Stream-Safe NFC.",N,[[["str"]],["bool"]]],[5,"is_nfc_stream_safe_quick","","Quickly check if a string is Stream-Safe NFC.",N,[[["i"]],["isnormalized"]]],[5,"is_nfd","","Authoritatively check if a string is in NFD.",N,[[["str"]],["bool"]]],[5,"is_nfd_quick","","Quickly check if a string is in NFD.",N,[[["i"]],["isnormalized"]]],[5,"is_nfd_stream_safe","","Authoritatively check if a string is Stream-Safe NFD.",N,[[["str"]],["bool"]]],[5,"is_nfd_stream_safe_quick","","Quickly check if a string is Stream-Safe NFD.",N,[[["i"]],["isnormalized"]]],[0,"char","","Methods for composing and decomposing characters.",N,N],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See…",N,[[["char"],["f"]]]],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for…",N,[[["char"],["f"]]]],[5,"compose","","Compose two characters into a single character, if…",N,[[["char"],["char"]],["option",["char"]]]],[5,"canonical_combining_class","","",N,[[["char"]],["u8"]]],[5,"is_combining_mark","","",N,[[["char"]],["bool"]]],[17,"UNICODE_VERSION","unicode_normalization","",N,N],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode…",N,N],[10,"nfd","","Returns an iterator over the string in Unicode…",1,[[["self"]],["decompositions"]]],[10,"nfkd","","Returns an iterator over the string in Unicode…",1,[[["self"]],["decompositions"]]],[10,"nfc","","An Iterator over the string in Unicode Normalization Form…",1,[[["self"]],["recompositions"]]],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form…",1,[[["self"]],["recompositions"]]],[10,"stream_safe","","An Iterator over the string with Conjoining Grapheme…",1,[[["self"]],["streamsafe"]]],[11,"nfd","","",2,[[["self"]],["decompositions"]]],[11,"nfkd","","",2,[[["self"]],["decompositions"]]],[11,"nfc","","",2,[[["self"]],["recompositions"]]],[11,"nfkc","","",2,[[["self"]],["recompositions"]]],[11,"stream_safe","","",2,[[["self"]],["streamsafe"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"nfd","","",3,[[["self"]],["decompositions"]]],[11,"nfkd","","",3,[[["self"]],["decompositions"]]],[11,"nfc","","",3,[[["self"]],["recompositions"]]],[11,"nfkc","","",3,[[["self"]],["recompositions"]]],[11,"stream_safe","","",3,[[["self"]],["streamsafe"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"nfd","","",4,[[["self"]],["decompositions"]]],[11,"nfkd","","",4,[[["self"]],["decompositions"]]],[11,"nfc","","",4,[[["self"]],["recompositions"]]],[11,"nfkc","","",4,[[["self"]],["recompositions"]]],[11,"stream_safe","","",4,[[["self"]],["streamsafe"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option",["char"]]]],[11,"size_hint","","",2,N],[11,"next","","",3,[[["self"]],["option",["char"]]]],[11,"next","","",4,[[["self"]],["option",["char"]]]],[11,"eq","","",0,[[["self"],["isnormalized"]],["bool"]]],[11,"clone","","",2,[[["self"]],["decompositions"]]],[11,"clone","","",3,[[["self"]],["recompositions"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"IsNormalized"],[8,"UnicodeNormalization"],[3,"Decompositions"],[3,"Recompositions"],[3,"StreamSafe"]]};
searchIndex["unicode_width"]={"doc":"Determine displayed width of `char` and `str` types…","items":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width…",N,N],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode…",N,N],[10,"width","","Returns the character's displayed width in columns, or…",0,[[["self"]],["option",["usize"]]]],[10,"width_cjk","","Returns the character's displayed width in columns, or…",0,[[["self"]],["option",["usize"]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",N,N],[10,"width","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]],[10,"width_cjk","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]]],"paths":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid…",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
searchIndex["unreachable"]={"doc":"unreachable","items":[[5,"unreachable","unreachable","Hint to the optimizer that any code path which calls this…",N,N],[8,"UncheckedOptionExt","","An extension trait for `Option<T>` providing unchecked…",N,N],[10,"unchecked_unwrap","","Get the value out of this Option without checking for None.",0,[[["self"]],["t"]]],[10,"unchecked_unwrap_none","","Assert that this Option is a None to the optimizer.",0,[[["self"]]]],[8,"UncheckedResultExt","","An extension trait for `Result<T, E>` providing unchecked…",N,N],[10,"unchecked_unwrap_ok","","Get the value out of this Result without checking for Err.",1,[[["self"]],["t"]]],[10,"unchecked_unwrap_err","","Get the error out of this Result without checking for Ok.",1,[[["self"]],["e"]]]],"paths":[[8,"UncheckedOptionExt"],[8,"UncheckedResultExt"]]};
searchIndex["url"]={"doc":"rust-url is an implementation of the URL Standard for the…","items":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",N,N],[3,"HostAndPort","","This mostly exists because coherence rules don’t allow us…",N,N],[12,"host","","",0,N],[12,"port","","",0,N],[3,"SocketAddrs","","Socket addresses for an URL.",N,N],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is…",N,N],[3,"Url","","A parsed URL record.",N,N],[3,"ParseOptions","","Full configuration for the URL parser.",N,N],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically…",N,N],[4,"Origin","","The origin of an URL",N,N],[13,"Opaque","","A globally unique identifier",1,N],[13,"Tuple","","Consists of the URL's scheme, host and port",1,N],[4,"Host","","The host name of an URL.",N,N],[13,"Domain","","A DNS domain name, as '.' dot-separated labels. Non-ASCII…",2,N],[13,"Ipv4","","An IPv4 address. `Url::host_str` returns the serialization…",2,N],[13,"Ipv6","","An IPv6 address. `Url::host_str` returns the serialization…",2,N],[4,"ParseError","","Errors that can occur during parsing.",N,N],[13,"EmptyHost","","",3,N],[13,"IdnaError","","",3,N],[13,"InvalidPort","","",3,N],[13,"InvalidIpv4Address","","",3,N],[13,"InvalidIpv6Address","","",3,N],[13,"InvalidDomainCharacter","","",3,N],[13,"RelativeUrlWithoutBase","","",3,N],[13,"RelativeUrlWithCannotBeABaseBase","","",3,N],[13,"SetHostOnCannotBeABaseUrl","","",3,N],[13,"Overflow","","",3,N],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",N,N],[13,"Backslash","","",4,N],[13,"C0SpaceIgnored","","",4,N],[13,"EmbeddedCredentials","","",4,N],[13,"ExpectedDoubleSlash","","",4,N],[13,"ExpectedFileDoubleSlash","","",4,N],[13,"FileWithHostAndWindowsDrive","","",4,N],[13,"NonUrlCodePoint","","",4,N],[13,"NullInFragment","","",4,N],[13,"PercentDecode","","",4,N],[13,"TabOrNewlineIgnored","","",4,N],[13,"UnencodedAtSign","","",4,N],[4,"Position","","Indicates a position within a URL based on its components.",N,N],[13,"BeforeScheme","","",5,N],[13,"AfterScheme","","",5,N],[13,"BeforeUsername","","",5,N],[13,"AfterUsername","","",5,N],[13,"BeforePassword","","",5,N],[13,"AfterPassword","","",5,N],[13,"BeforeHost","","",5,N],[13,"AfterHost","","",5,N],[13,"BeforePort","","",5,N],[13,"AfterPort","","",5,N],[13,"BeforePath","","",5,N],[13,"AfterPath","","",5,N],[13,"BeforeQuery","","",5,N],[13,"AfterQuery","","",5,N],[13,"BeforeFragment","","",5,N],[13,"AfterFragment","","",5,N],[11,"to_owned","","Return a copy of `self` that owns an allocated `String`…",2,[[["self"]],["host",["string"]]]],[11,"parse","","Parse a host: either an IPv6 address in [] square…",2,[[["str"]],["result",["parseerror"]]]],[11,"parse_opaque","","",2,[[["str"]],["result",["parseerror"]]]],[11,"to_owned","","Return a copy of `self` that owns an allocated `String`…",0,[[["self"]],["hostandport",["string"]]]],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,[[],["origin"]]],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple…",1,[[["self"]],["bool"]]],[11,"ascii_serialization","","…",1,[[["self"]],["string"]]],[11,"unicode_serialization","","…",1,[[["self"]],["string"]]],[11,"clear","","Remove all segments in the path, leaving the minimal…",6,[[["self"]],["self"]]],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty,…",6,[[["self"]],["self"]]],[11,"pop","","Remove the last segment of this URL’s path.",6,[[["self"]],["self"]]],[11,"push","","Append the given segment at the end of this URL’s path.",6,[[["self"],["str"]],["self"]]],[11,"extend","","Append each segment from the given iterator at the end of…",6,[[["self"],["i"]],["self"]]],[11,"description","","",4,[[["self"]],["str"]]],[0,"form_urlencoded","","Parser and serializer for the…",N,N],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",N,N],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of…",N,N],[3,"ByteSerialize","","Return value of `byte_serialize()`.",N,N],[3,"Serializer","","The `application/x-www-form-urlencoded` serializer.",N,N],[5,"parse","","Convert a byte string in the…",N,N],[5,"byte_serialize","","The `application/x-www-form-urlencoded` byte serializer.",N,N],[8,"Target","","",N,N],[10,"as_mut_string","","",7,[[["self"]],["string"]]],[10,"finish","","",7,N],[16,"Finished","","",7,N],[11,"into_owned","","Return a new iterator that yields pairs of `String`…",8,[[["self"]],["parseintoowned"]]],[11,"new","","Create a new `application/x-www-form-urlencoded`…",9,[[["t"]],["self"]]],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded`…",9,[[["t"],["usize"]],["self"]]],[11,"clear","","Remove any existing name/value pair.",9,[[["self"]],["self"]]],[11,"custom_encoding_override","","Set the character encoding to be used for names and values…",9,[[["self"],["f"]],["self"]]],[11,"append_pair","","Serialize and append a name/value pair.",9,[[["self"],["str"],["str"]],["self"]]],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",9,[[["self"],["i"]],["self"]]],[11,"finish","","If this serializer was constructed with a string, take and…",9,N],[11,"base_url","url","Change the base URL",10,[[["self"],["option",["url"]]],["self"]]],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse…",10,[[["self"],["option",["fn"]]],["self"]]],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal…",10,[[["self"],["option",["fn"]]],["self"]]],[11,"parse","","Parse an URL string with the configuration so far.",10,[[["self"],["str"]],["result",["url","parseerror"]]]],[11,"parse","","Parse an absolute URL from a string.",11,[[["str"]],["result",["url","parseerror"]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its…",11,[[["str"],["i"]],["result",["url","parseerror"]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",11,[[["self"],["str"]],["result",["url","parseerror"]]]],[11,"options","","Return a default `ParseOptions` that can fully configure…",11,[[],["parseoptions"]]],[11,"as_str","","Return the serialization of this URL.",11,[[["self"]],["str"]]],[11,"into_string","","Return the serialization of this URL.",11,[[["self"]],["string"]]],[11,"origin","","Return the origin of this URL…",11,[[["self"]],["origin"]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII…",11,[[["self"]],["str"]]],[11,"has_authority","","Return whether the URL has an 'authority', which can…",11,[[["self"]],["bool"]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning…",11,[[["self"]],["bool"]]],[11,"username","","Return the username for this URL (typically the empty…",11,[[["self"]],["str"]]],[11,"password","","Return the password for this URL, if any, as a…",11,[[["self"]],["option",["str"]]]],[11,"has_host","","Equivalent to `url.host().is_some()`.",11,[[["self"]],["bool"]]],[11,"host_str","","Return the string representation of the host (domain or IP…",11,[[["self"]],["option",["str"]]]],[11,"host","","Return the parsed representation of the host for this URL.…",11,[[["self"]],["option",["host"]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP…",11,[[["self"]],["option",["str"]]]],[11,"port","","Return the port number for this URL, if any.",11,[[["self"]],["option",["u16"]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port…",11,[[["self"]],["option",["u16"]]]],[11,"with_default_port","","If the URL has a host, return something that implements…",11,[[["self"],["f"]],["result",["hostandport"]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII…",11,[[["self"]],["str"]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of…",11,[[["self"]],["option",["split"]]]],[11,"query","","Return this URL’s query string, if any, as a…",11,[[["self"]],["option",["str"]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as…",11,[[["self"]],["parse"]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",11,[[["self"]],["option",["str"]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",11,[[["self"],["option",["str"]]]]],[11,"set_query","","Change this URL’s query string.",11,[[["self"],["option",["str"]]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence…",11,[[["self"]],["serializer",["urlquery"]]]],[11,"set_path","","Change this URL’s path.",11,[[["self"],["str"]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s…",11,[[["self"]],["result",["pathsegmentsmut"]]]],[11,"set_port","","Change this URL’s port number.",11,[[["self"],["option",["u16"]]],["result"]]],[11,"set_host","","Change this URL’s host.",11,[[["self"],["option",["str"]]],["result",["parseerror"]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",11,[[["self"],["ipaddr"]],["result"]]],[11,"set_password","","Change this URL’s password.",11,[[["self"],["option",["str"]]],["result"]]],[11,"set_username","","Change this URL’s username.",11,[[["self"],["str"]],["result"]]],[11,"set_scheme","","Change this URL’s scheme.",11,[[["self"],["str"]],["result"]]],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in…",11,[[["p"]],["result",["url"]]]],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL…",11,[[["p"]],["result",["url"]]]],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,…",11,[[["self"]],["result",["pathbuf"]]]],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait,…",N,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_iter","url::form_urlencoded","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"as_mut_string","url","",14,[[["self"]],["string"]]],[11,"finish","","",14,[[["self"]],["url"]]],[11,"next","","",13,[[["self"]],["option",["socketaddr"]]]],[11,"next","url::form_urlencoded","",8,[[["self"]],["option"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"next","","",16,[[["self"]],["option",["str"]]]],[11,"size_hint","","",16,N],[11,"eq","url","",2,[[["self"],["host"]],["bool"]]],[11,"ne","","",2,[[["self"],["host"]],["bool"]]],[11,"eq","","",1,[[["self"],["origin"]],["bool"]]],[11,"ne","","",1,[[["self"],["origin"]],["bool"]]],[11,"eq","","",12,[[["self"],["opaqueorigin"]],["bool"]]],[11,"ne","","",12,[[["self"],["opaqueorigin"]],["bool"]]],[11,"eq","","",3,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",4,[[["self"],["syntaxviolation"]],["bool"]]],[11,"eq","","",11,[[["self"],["self"]],["bool"]]],[11,"as_ref","","",11,[[["self"]],["str"]]],[11,"cmp","","",2,[[["self"],["host"]],["ordering"]]],[11,"cmp","","",11,[[["self"],["self"]],["ordering"]]],[11,"clone","","",2,[[["self"]],["host"]]],[11,"clone","","",0,[[["self"]],["hostandport"]]],[11,"clone","","",1,[[["self"]],["origin"]]],[11,"clone","","",12,[[["self"]],["opaqueorigin"]]],[11,"clone","","",3,[[["self"]],["parseerror"]]],[11,"clone","","",4,[[["self"]],["syntaxviolation"]]],[11,"clone","","",5,[[["self"]],["position"]]],[11,"clone","url::form_urlencoded","",8,[[["self"]],["parse"]]],[11,"clone","url","",11,[[["self"]],["url"]]],[11,"clone","","",10,[[["self"]],["parseoptions"]]],[11,"from","","",3,[[["errors"]],["parseerror"]]],[11,"drop","","",6,[[["self"]]]],[11,"drop","","",14,[[["self"]]]],[11,"partial_cmp","","",2,[[["self"],["host"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["host"]],["bool"]]],[11,"le","","",2,[[["self"],["host"]],["bool"]]],[11,"gt","","",2,[[["self"],["host"]],["bool"]]],[11,"ge","","",2,[[["self"],["host"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["self"]],["option",["ordering"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","url::form_urlencoded","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","url","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"hash","","",2,N],[11,"hash","","",1,N],[11,"hash","","",12,N],[11,"hash","","",11,[[["self"],["h"]]]],[11,"index","","",11,[[["self"],["rangefull"]],["str"]]],[11,"index","","",11,[[["self"],["rangefrom",["position"]]],["str"]]],[11,"index","","",11,[[["self"],["rangeto",["position"]]],["str"]]],[11,"index","","",11,[[["self"],["range",["position"]]],["str"]]],[11,"from_str","","",11,[[["str"]],["result",["url","parseerror"]]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"to_socket_addrs","","",0,[[["self"]],["result"]]],[11,"to_socket_addrs","","",11,[[["self"]],["result"]]]],"paths":[[3,"HostAndPort"],[4,"Origin"],[4,"Host"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[3,"PathSegmentsMut"],[8,"Target"],[3,"Parse"],[3,"Serializer"],[3,"ParseOptions"],[3,"Url"],[3,"OpaqueOrigin"],[3,"SocketAddrs"],[3,"UrlQuery"],[3,"ParseIntoOwned"],[3,"ByteSerialize"]]};
searchIndex["utf8_ranges"]={"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar…","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",N,N],[12,"start","","Start of byte range (inclusive).",0,N],[12,"end","","End of byte range (inclusive).",0,N],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",N,N],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",N,N],[13,"One","","One byte range.",1,N],[13,"Two","","Two successive byte ranges.",1,N],[13,"Three","","Three successive byte ranges.",1,N],[13,"Four","","Four successive byte ranges.",1,N],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,N],[11,"len","","Returns the number of byte ranges in this sequence.",1,[[["self"]],["usize"]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",1,N],[11,"matches","","Returns true if and only if the given byte is in this range.",0,[[["self"],["u8"]],["bool"]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",2,[[["char"],["char"]],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"eq","","",1,[[["self"],["utf8sequence"]],["bool"]]],[11,"ne","","",1,[[["self"],["utf8sequence"]],["bool"]]],[11,"eq","","",0,[[["self"],["utf8range"]],["bool"]]],[11,"ne","","",0,[[["self"],["utf8range"]],["bool"]]],[11,"clone","","",1,[[["self"]],["utf8sequence"]]],[11,"clone","","",0,[[["self"]],["utf8range"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["uuid"]={"doc":"Generate and parse UUIDs.","items":[[3,"BytesError","uuid","The error that can occur when creating a [`Uuid`].",N,N],[3,"Uuid","","A Universally Unique Identifier (UUID).",N,N],[4,"Version","","The version of the UUID, denoting the generating algorithm.",N,N],[13,"Nil","","Special case for `nil` [`Uuid`].",0,N],[13,"Mac","","Version 1: MAC address",0,N],[13,"Dce","","Version 2: DCE Security",0,N],[13,"Md5","","Version 3: MD5 hash",0,N],[13,"Random","","Version 4: Random",0,N],[13,"Sha1","","Version 5: SHA-1 hash",0,N],[4,"Variant","","The reserved variants of UUIDs.",N,N],[13,"NCS","","Reserved by the NCS for backward compatibility",1,N],[13,"RFC4122","","As described in the RFC4122 Specification (default)",1,N],[13,"Microsoft","","Reserved by Microsoft for backward compatibility",1,N],[13,"Future","","Reserved for future expansion",1,N],[0,"adapter","","Adapters for various formats for [`Uuid`]s",N,N],[3,"Hyphenated","uuid::adapter","An adaptor for formatting an [`Uuid`] as a hyphenated…",N,N],[3,"HyphenatedRef","","An adaptor for formatting an [`Uuid`] as a hyphenated…",N,N],[3,"Simple","","An adaptor for formatting an [`Uuid`] as a simple string.",N,N],[3,"SimpleRef","","An adaptor for formatting an [`Uuid`] as a simple string.",N,N],[3,"Urn","","An adaptor for formatting an [`Uuid`] as a URN string.",N,N],[3,"UrnRef","","An adaptor for formatting an [`Uuid`] as a URN string.",N,N],[11,"to_hyphenated","uuid","Creates a [`Hyphenated`] instance from a [`Uuid`].",2,[[["self"]],["hyphenated"]]],[11,"to_hyphenated_ref","","Creates a [`HyphenatedRef`] instance from a [`Uuid`]…",2,[[["self"]],["hyphenatedref"]]],[11,"to_simple","","Creates a [`Simple`] instance from a [`Uuid`].",2,[[["self"]],["simple"]]],[11,"to_simple_ref","","Creates a [`SimpleRef`] instance from a [`Uuid`] reference.",2,[[["self"]],["simpleref"]]],[11,"to_urn","","Creates a [`Urn`] instance from a [`Uuid`].",2,[[["self"]],["urn"]]],[11,"to_urn_ref","","Creates a [`UrnRef`] instance from a [`Uuid`] reference.",2,[[["self"]],["urnref"]]],[18,"LENGTH","uuid::adapter","The length of a hyphenated [`Uuid`] string.",3,N],[11,"from_uuid","","Creates a [`Hyphenated`] from a [`Uuid`].",3,[[["uuid"]],["self"]]],[18,"LENGTH","","The length of a hyphenated [`Uuid`] string.",4,N],[11,"from_uuid_ref","","Creates a [`HyphenatedRef`] from a [`Uuid`] reference.",4,[[["uuid"]],["self"]]],[18,"LENGTH","","The length of a simple [`Uuid`] string.",5,N],[11,"from_uuid","","Creates a [`Simple`] from a [`Uuid`].",5,[[["uuid"]],["self"]]],[18,"LENGTH","","The length of a simple [`Uuid`] string.",6,N],[11,"from_uuid_ref","","Creates a [`SimpleRef`] from a [`Uuid`] reference.",6,[[["uuid"]],["self"]]],[18,"LENGTH","","The length of a URN [`Uuid`] string.",7,N],[11,"from_uuid","","Creates a [`Urn`] from a [`Uuid`].",7,[[["uuid"]],["self"]]],[18,"LENGTH","","The length of a URN [`Uuid`] string.",8,N],[11,"from_uuid_ref","","Creates a [`UrnRef`] from a [`Uuid`] reference.",8,[[["uuid"]],["self"]]],[0,"parser","uuid","[`Uuid`] parsing constructs and utilities.",N,N],[4,"Expected","uuid::parser","The expected value.",N,N],[13,"Any","","Expected any one of the given values.",9,N],[13,"Exact","","Expected the given value.",9,N],[13,"Range","","Expected any values in the given range.",9,N],[12,"min","uuid::parser::Expected","The minimum expected value.",9,N],[12,"max","","The maximum expected value.",9,N],[4,"ParseError","uuid::parser","An error that can occur while parsing a [`Uuid`] string.",N,N],[13,"InvalidCharacter","","Invalid character in the [`Uuid`] string.",10,N],[12,"expected","uuid::parser::ParseError","The expected characters.",10,N],[12,"found","","The invalid character found.",10,N],[12,"index","","The invalid character position.",10,N],[13,"InvalidGroupCount","uuid::parser","Invalid number of segments in the [`Uuid`] string.",10,N],[12,"expected","uuid::parser::ParseError","The expected number of segments.",10,N],[12,"found","","The number of segments found.",10,N],[13,"InvalidGroupLength","uuid::parser","Invalid length of a segment in a [`Uuid`] string.",10,N],[12,"expected","uuid::parser::ParseError","The expected length of the segment.",10,N],[12,"found","","The length of segment found.",10,N],[12,"group","","The segment with invalid length.",10,N],[13,"InvalidLength","uuid::parser","Invalid length of the [`Uuid`] string.",10,N],[12,"expected","uuid::parser::ParseError","The expected length(s).",10,N],[12,"found","","The invalid length found.",10,N],[0,"prelude","uuid","The [`uuid`] prelude.",N,N],[11,"new_v4","","Creates a random [`Uuid`].",2,[[],["self"]]],[6,"Bytes","","A 128-bit (16 byte) buffer containing the ID.",N,N],[11,"expected","","The expected number of bytes.",11,[[["self"]],["usize"]]],[11,"found","","The number of bytes found.",11,[[["self"]],["usize"]]],[11,"new","","Create a new [`UuidError`].",11,[[["usize"],["usize"]],["self"]]],[18,"NAMESPACE_DNS","","[`Uuid`] namespace for Domain Name System (DNS).",2,N],[18,"NAMESPACE_OID","","[`Uuid`] namespace for ISO Object Identifiers (OIDs).",2,N],[18,"NAMESPACE_URL","","[`Uuid`] namespace for Uniform Resource Locators (URLs).",2,N],[18,"NAMESPACE_X500","","[`Uuid`] namespace for X.500 Distinguished Names (DNs).",2,N],[11,"nil","","The 'nil UUID'.",2,[[],["uuid"]]],[11,"from_fields","","Creates a `Uuid` from four field values.",2,N],[11,"from_slice","","Creates a `Uuid` using the supplied bytes.",2,N],[11,"from_bytes","","Creates a `Uuid` using the supplied bytes.",2,[[["bytes"]],["uuid"]]],[11,"from_random_bytes","","Creates a v4 Uuid from random bytes (e.g. bytes supplied…",2,[[["bytes"]],["uuid"]]],[11,"get_variant","","Returns the variant of the `Uuid` structure.",2,[[["self"]],["option",["variant"]]]],[11,"get_version_num","","Returns the version number of the `Uuid`.",2,[[["self"]],["usize"]]],[11,"get_version","","Returns the version of the `Uuid`.",2,[[["self"]],["option",["version"]]]],[11,"as_fields","","Returns the four field values of the UUID.",2,N],[11,"as_bytes","","Returns an array of 16 octets containing the UUID data.",2,[[["self"]],["bytes"]]],[11,"to_timestamp","","Returns an Optional Tuple of (u64, u16) representing the…",2,[[["self"]],["option"]]],[11,"parse_str","","Parses a `Uuid` from a string of hexadecimal digits with…",2,[[["str"]],["result",["uuid","parseerror"]]]],[11,"is_nil","","Tests if the UUID is nil",2,[[["self"]],["bool"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","uuid::adapter","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_string","uuid::parser","",9,[[["self"]],["string"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"eq","uuid::adapter","",3,[[["self"],["hyphenated"]],["bool"]]],[11,"ne","","",3,[[["self"],["hyphenated"]],["bool"]]],[11,"eq","","",4,[[["self"],["hyphenatedref"]],["bool"]]],[11,"ne","","",4,[[["self"],["hyphenatedref"]],["bool"]]],[11,"eq","","",5,[[["self"],["simple"]],["bool"]]],[11,"ne","","",5,[[["self"],["simple"]],["bool"]]],[11,"eq","","",6,[[["self"],["simpleref"]],["bool"]]],[11,"ne","","",6,[[["self"],["simpleref"]],["bool"]]],[11,"eq","","",7,[[["self"],["urn"]],["bool"]]],[11,"ne","","",7,[[["self"],["urn"]],["bool"]]],[11,"eq","","",8,[[["self"],["urnref"]],["bool"]]],[11,"ne","","",8,[[["self"],["urnref"]],["bool"]]],[11,"eq","uuid::parser","",9,[[["self"],["expected"]],["bool"]]],[11,"ne","","",9,[[["self"],["expected"]],["bool"]]],[11,"eq","","",10,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",10,[[["self"],["parseerror"]],["bool"]]],[11,"eq","uuid","",11,[[["self"],["byteserror"]],["bool"]]],[11,"ne","","",11,[[["self"],["byteserror"]],["bool"]]],[11,"eq","","",0,[[["self"],["version"]],["bool"]]],[11,"eq","","",1,[[["self"],["variant"]],["bool"]]],[11,"eq","","",2,[[["self"],["uuid"]],["bool"]]],[11,"ne","","",2,[[["self"],["uuid"]],["bool"]]],[11,"default","uuid::adapter","",3,[[],["hyphenated"]]],[11,"default","","",5,[[],["simple"]]],[11,"default","","",7,[[],["urn"]]],[11,"default","uuid","",2,[[],["self"]]],[11,"cmp","uuid::adapter","",3,[[["self"],["hyphenated"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["hyphenatedref"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["simple"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["simpleref"]],["ordering"]]],[11,"cmp","","",7,[[["self"],["urn"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["urnref"]],["ordering"]]],[11,"cmp","uuid::parser","",9,[[["self"],["expected"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["parseerror"]],["ordering"]]],[11,"cmp","uuid","",11,[[["self"],["byteserror"]],["ordering"]]],[11,"cmp","","",2,[[["self"],["uuid"]],["ordering"]]],[11,"clone","uuid::adapter","",3,[[["self"]],["hyphenated"]]],[11,"clone","","",4,[[["self"]],["hyphenatedref"]]],[11,"clone","","",5,[[["self"]],["simple"]]],[11,"clone","","",6,[[["self"]],["simpleref"]]],[11,"clone","","",7,[[["self"]],["urn"]]],[11,"clone","","",8,[[["self"]],["urnref"]]],[11,"clone","uuid::parser","",9,[[["self"]],["expected"]]],[11,"clone","","",10,[[["self"]],["parseerror"]]],[11,"clone","uuid","",11,[[["self"]],["byteserror"]]],[11,"clone","","",0,[[["self"]],["version"]]],[11,"clone","","",1,[[["self"]],["variant"]]],[11,"clone","","",2,[[["self"]],["uuid"]]],[11,"from","uuid::adapter","",3,[[["uuid"]],["self"]]],[11,"from","","",4,[[["uuid"]],["self"]]],[11,"from","","",5,[[["uuid"]],["self"]]],[11,"from","","",6,[[["uuid"]],["self"]]],[11,"from","","",7,[[["uuid"]],["self"]]],[11,"from","","",8,[[["uuid"]],["self"]]],[11,"partial_cmp","","",3,[[["self"],["hyphenated"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["hyphenated"]],["bool"]]],[11,"le","","",3,[[["self"],["hyphenated"]],["bool"]]],[11,"gt","","",3,[[["self"],["hyphenated"]],["bool"]]],[11,"ge","","",3,[[["self"],["hyphenated"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["hyphenatedref"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["hyphenatedref"]],["bool"]]],[11,"le","","",4,[[["self"],["hyphenatedref"]],["bool"]]],[11,"gt","","",4,[[["self"],["hyphenatedref"]],["bool"]]],[11,"ge","","",4,[[["self"],["hyphenatedref"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["simple"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["simple"]],["bool"]]],[11,"le","","",5,[[["self"],["simple"]],["bool"]]],[11,"gt","","",5,[[["self"],["simple"]],["bool"]]],[11,"ge","","",5,[[["self"],["simple"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["simpleref"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["simpleref"]],["bool"]]],[11,"le","","",6,[[["self"],["simpleref"]],["bool"]]],[11,"gt","","",6,[[["self"],["simpleref"]],["bool"]]],[11,"ge","","",6,[[["self"],["simpleref"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["urn"]],["option",["ordering"]]]],[11,"lt","","",7,[[["self"],["urn"]],["bool"]]],[11,"le","","",7,[[["self"],["urn"]],["bool"]]],[11,"gt","","",7,[[["self"],["urn"]],["bool"]]],[11,"ge","","",7,[[["self"],["urn"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["urnref"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["urnref"]],["bool"]]],[11,"le","","",8,[[["self"],["urnref"]],["bool"]]],[11,"gt","","",8,[[["self"],["urnref"]],["bool"]]],[11,"ge","","",8,[[["self"],["urnref"]],["bool"]]],[11,"partial_cmp","uuid::parser","",9,[[["self"],["expected"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["expected"]],["bool"]]],[11,"le","","",9,[[["self"],["expected"]],["bool"]]],[11,"gt","","",9,[[["self"],["expected"]],["bool"]]],[11,"ge","","",9,[[["self"],["expected"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["parseerror"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["parseerror"]],["bool"]]],[11,"le","","",10,[[["self"],["parseerror"]],["bool"]]],[11,"gt","","",10,[[["self"],["parseerror"]],["bool"]]],[11,"ge","","",10,[[["self"],["parseerror"]],["bool"]]],[11,"partial_cmp","uuid","",11,[[["self"],["byteserror"]],["option",["ordering"]]]],[11,"lt","","",11,[[["self"],["byteserror"]],["bool"]]],[11,"le","","",11,[[["self"],["byteserror"]],["bool"]]],[11,"gt","","",11,[[["self"],["byteserror"]],["bool"]]],[11,"ge","","",11,[[["self"],["byteserror"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["uuid"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["uuid"]],["bool"]]],[11,"le","","",2,[[["self"],["uuid"]],["bool"]]],[11,"gt","","",2,[[["self"],["uuid"]],["bool"]]],[11,"ge","","",2,[[["self"],["uuid"]],["bool"]]],[11,"fmt","uuid::adapter","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid::parser","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid::adapter","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid::parser","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid::adapter","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid::adapter","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","uuid","",2,[[["self"],["formatter"]],["result"]]],[11,"hash","uuid::adapter","",3,N],[11,"hash","","",4,N],[11,"hash","","",5,N],[11,"hash","","",6,N],[11,"hash","","",7,N],[11,"hash","","",8,N],[11,"hash","uuid::parser","",9,N],[11,"hash","","",10,N],[11,"hash","uuid","",11,N],[11,"hash","","",2,N],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"description","uuid::parser","",10,[[["self"]],["str"]]],[11,"description","uuid","",11,[[["self"]],["str"]]]],"paths":[[4,"Version"],[4,"Variant"],[3,"Uuid"],[3,"Hyphenated"],[3,"HyphenatedRef"],[3,"Simple"],[3,"SimpleRef"],[3,"Urn"],[3,"UrnRef"],[4,"Expected"],[4,"ParseError"],[3,"BytesError"]]};
searchIndex["vec_map"]={"doc":"A simple map based on a vector for small integer keys.…","items":[[3,"VecMap","vec_map","A map optimized for small integer keys.",N,N],[3,"VacantEntry","","A vacant Entry.",N,N],[3,"OccupiedEntry","","An occupied Entry.",N,N],[3,"Iter","","An iterator over the key-value pairs of a map.",N,N],[3,"IterMut","","An iterator over the key-value pairs of a map, with the…",N,N],[3,"Keys","","An iterator over the keys of a map.",N,N],[3,"Values","","An iterator over the values of a map.",N,N],[3,"ValuesMut","","An iterator over the values of a map.",N,N],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",N,N],[3,"Drain","","A draining iterator over the key-value pairs of a map.",N,N],[4,"Entry","","A view into a single entry in a map, which may either be…",N,N],[13,"Vacant","","A vacant Entry",0,N],[13,"Occupied","","An occupied Entry",0,N],[11,"new","","Creates an empty `VecMap`.",1,[[],["self"]]],[11,"with_capacity","","Creates an empty `VecMap` with space for at least…",1,[[["usize"]],["self"]]],[11,"capacity","","Returns the number of elements the `VecMap` can hold…",1,[[["self"]],["usize"]]],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len`…",1,[[["self"],["usize"]]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to…",1,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Trims the `VecMap` of any excess capacity.",1,[[["self"]]]],[11,"keys","","Returns an iterator visiting all keys in ascending order…",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator visiting all values in ascending order…",1,[[["self"]],["values"]]],[11,"values_mut","","Returns an iterator visiting all values in ascending order…",1,[[["self"]],["valuesmut"]]],[11,"iter","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["itermut"]]],[11,"append","","Moves all elements from `other` into the map while…",1,[[["self"],["self"]]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[["self"],["usize"]],["self"]]],[11,"drain","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["drain"]]],[11,"len","","Returns the number of elements in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["self"],["usize"]],["option"]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[["self"],["usize"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",1,[[["self"],["usize"]],["option"]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[["self"],["usize"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the value at the key…",1,[[["self"],["usize"]],["option"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["usize"]],["entry"]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[["self"],["f"]]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["self"],["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["self"],["f"]],["v"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",2,[[["self"],["v"]],["v"]]],[11,"get","","Gets a reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[["self"]],["v"]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,…",3,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[["self"]],["v"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,N],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",6,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",6,N],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"eq","","",1,[[["self"],["self"]],["bool"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option",["usize"]]]],[11,"next_back","","",7,[[["self"]],["option"]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["intoiter"]]],[11,"default","","",1,[[],["self"]]],[11,"cmp","","",1,[[["self"],["self"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone_from","","",1,[[["self"],["self"]]]],[11,"clone","","",4,[[["self"]],["iter"]]],[11,"clone","","",6,[[["self"]],["keys"]]],[11,"clone","","",7,[[["self"]],["values"]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"partial_cmp","","",1,[[["self"],["self"]],["option",["ordering"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"from_iter","","",1,[[["i"]],["self"]]]],"paths":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["void"]={"doc":"Void","items":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",N,N],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[["self"]],["t"]]],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[["self"]],["e"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["t"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["t"]],["option",["ordering"]]]],[11,"clone","","",2,[[["self"]],["void"]]]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["walkdir"]={"doc":"Crate `walkdir` provides an efficient and cross platform…","items":[[3,"WalkDir","walkdir","A builder to create an iterator for recursively walking a…",N,N],[3,"IntoIter","","An iterator for recursively descending into a directory.",N,N],[3,"DirEntry","","A directory entry.",N,N],[3,"FilterEntry","","A recursive directory iterator that skips entries.",N,N],[3,"Error","","An error produced by recursively walking a directory.",N,N],[6,"Result","","A result type for walkdir operations.",N,N],[8,"DirEntryExt","","Unix-specific extension methods for `walkdir::DirEntry`",N,N],[10,"ino","","Returns the underlying `d_ino` field in the contained…",0,[[["self"]],["u64"]]],[11,"new","","Create a builder for a recursive directory iterator…",1,[[["p"]],["self"]]],[11,"min_depth","","Set the minimum depth of entries yielded by the iterator.",1,[[["self"],["usize"]],["self"]]],[11,"max_depth","","Set the maximum depth of entries yield by the iterator.",1,[[["self"],["usize"]],["self"]]],[11,"follow_links","","Follow symbolic links. By default, this is disabled.",1,[[["self"],["bool"]],["self"]]],[11,"max_open","","Set the maximum number of simultaneously open file…",1,[[["self"],["usize"]],["self"]]],[11,"sort_by","","Set a function for sorting directory entries.",1,[[["self"],["f"]],["self"]]],[11,"contents_first","","Yield a directory's contents before the directory itself.…",1,[[["self"],["bool"]],["self"]]],[11,"same_file_system","","Do not cross file system boundaries.",1,[[["self"],["bool"]],["self"]]],[11,"skip_current_dir","","Skips the current directory.",2,[[["self"]]]],[11,"filter_entry","","Yields only entries which satisfy the given predicate and…",2,[[["self"],["p"]],["filterentry"]]],[11,"path","","The full path that this entry represents.",3,[[["self"]],["path"]]],[11,"into_path","","The full path that this entry represents.",3,[[["self"]],["pathbuf"]]],[11,"path_is_symlink","","Returns `true` if and only if this entry was created from…",3,[[["self"]],["bool"]]],[11,"metadata","","Return the metadata for the file that this entry points to.",3,[[["self"]],["result",["metadata"]]]],[11,"file_type","","Return the file type for the file that this entry points to.",3,[[["self"]],["filetype"]]],[11,"file_name","","Return the file name of this entry.",3,[[["self"]],["osstr"]]],[11,"depth","","Returns the depth at which this entry was created relative…",3,[[["self"]],["usize"]]],[11,"filter_entry","","Yields only entries which satisfy the given predicate and…",4,[[["self"],["p"]],["filterentry"]]],[11,"skip_current_dir","","Skips the current directory.",4,[[["self"]]]],[11,"path","","Returns the path associated with this error if one exists.",5,[[["self"]],["option",["path"]]]],[11,"loop_ancestor","","Returns the path at which a cycle was detected.",5,[[["self"]],["option",["path"]]]],[11,"depth","","Returns the depth at which this error occurred relative to…",5,[[["self"]],["usize"]]],[11,"io_error","","Inspect the original [`io::Error`] if there is one.",5,[[["self"]],["option",["error"]]]],[11,"into_io_error","","Similar to [`io_error`] except consumes self to convert to…",5,[[["self"]],["option",["error"]]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"ino","","Returns the underlying `d_ino` field in the contained…",3,[[["self"]],["u64"]]],[11,"next","","Advances the iterator and returns the next value.",2,[[["self"]],["option",["result"]]]],[11,"next","","Advances the iterator and returns the next value.",4,[[["self"]],["option",["result"]]]],[11,"into_iter","","",1,[[["self"]],["intoiter"]]],[11,"clone","","",3,[[["self"]],["direntry"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]]],"paths":[[8,"DirEntryExt"],[3,"WalkDir"],[3,"IntoIter"],[3,"DirEntry"],[3,"FilterEntry"],[3,"Error"]]};
searchIndex["want"]={"doc":"A Futures channel-like utility to signal when a value is…","items":[[3,"Giver","want","An entity that gives a value when wanted.",N,N],[3,"Taker","","An entity that wants a value.",N,N],[3,"SharedGiver","","A cloneable `Giver`.",N,N],[3,"Closed","","The `Taker` has canceled its interest in a value.",N,N],[5,"new","","Create a new `want` channel.",N,N],[11,"poll_want","","Poll whether the `Taker` has registered interest in…",0,[[["self"]],["poll",["closed"]]]],[11,"give","","Mark the state as idle, if the Taker currently is wanting.",0,[[["self"]],["bool"]]],[11,"is_wanting","","Check if the `Taker` has called `want()` without parking a…",0,[[["self"]],["bool"]]],[11,"is_canceled","","Check if the `Taker` has canceled interest without parking…",0,[[["self"]],["bool"]]],[11,"shared","","Converts this into a `SharedGiver`.",0,[[["self"]],["sharedgiver"]]],[11,"is_wanting","","Check if the `Taker` has called `want()` without parking a…",1,[[["self"]],["bool"]]],[11,"is_canceled","","Check if the `Taker` has canceled interest without parking…",1,[[["self"]],["bool"]]],[11,"cancel","","Signal to the `Giver` that the want is canceled.",2,[[["self"]]]],[11,"want","","Signal to the `Giver` that a value is wanted.",2,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["sharedgiver"]]],[11,"drop","","",2,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Giver"],[3,"SharedGiver"],[3,"Taker"],[3,"Closed"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
